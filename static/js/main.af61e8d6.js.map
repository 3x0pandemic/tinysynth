{"version":3,"sources":["webpack:///static/js/main.af61e8d6.js","webpack:///webpack/bootstrap 6365454d736a9c5a8092","webpack:///./~/fbjs/lib/invariant.js","webpack:///./~/react/lib/reactProdInvariant.js","webpack:///./~/fbjs/lib/warning.js","webpack:///./~/object-assign/index.js","webpack:///./~/react/lib/ReactDOMComponentTree.js","webpack:///./~/fbjs/lib/ExecutionEnvironment.js","webpack:///./~/fbjs/lib/emptyFunction.js","webpack:///./~/react/lib/ReactInstrumentation.js","webpack:///./~/react/lib/ReactElement.js","webpack:///./~/react/lib/ReactUpdates.js","webpack:///./~/react/lib/EventConstants.js","webpack:///./~/react/lib/SyntheticEvent.js","webpack:///./~/fbjs/lib/keyOf.js","webpack:///./~/react/lib/PooledClass.js","webpack:///./~/react/lib/ReactCurrentOwner.js","webpack:///./~/react/lib/DOMLazyTree.js","webpack:///./~/react/lib/DOMProperty.js","webpack:///./~/react/lib/ReactReconciler.js","webpack:///./~/fbjs/lib/emptyObject.js","webpack:///./~/react/lib/EventPluginHub.js","webpack:///./~/react/lib/EventPropagators.js","webpack:///./~/react/lib/ReactInstanceMap.js","webpack:///./~/react/lib/SyntheticUIEvent.js","webpack:///./~/react/lib/Transaction.js","webpack:///./~/fbjs/lib/keyMirror.js","webpack:///./~/react/lib/DisabledInputUtils.js","webpack:///./~/react/lib/ReactBrowserEventEmitter.js","webpack:///./~/react/lib/SyntheticMouseEvent.js","webpack:///./~/react/lib/escapeTextContentForBrowser.js","webpack:///./~/react/lib/setInnerHTML.js","webpack:///./~/fbjs/lib/shallowEqual.js","webpack:///./~/react-scripts/~/process/browser.js","webpack:///./~/react/lib/DOMChildrenOperations.js","webpack:///./~/react/lib/DOMNamespaces.js","webpack:///./~/react/lib/EventPluginRegistry.js","webpack:///./~/react/lib/EventPluginUtils.js","webpack:///./~/react/lib/KeyEscapeUtils.js","webpack:///./~/react/lib/LinkedValueUtils.js","webpack:///./~/react/lib/ReactComponent.js","webpack:///./~/react/lib/ReactComponentEnvironment.js","webpack:///./~/react/lib/ReactComponentTreeHook.js","webpack:///./~/react/lib/ReactErrorUtils.js","webpack:///./~/react/lib/ReactNoopUpdateQueue.js","webpack:///./~/react/lib/ReactPropTypeLocationNames.js","webpack:///./~/react/lib/ReactPropTypeLocations.js","webpack:///./~/react/lib/ReactPropTypesSecret.js","webpack:///./~/react/lib/ReactUpdateQueue.js","webpack:///./~/react/lib/createMicrosoftUnsafeLocalFunction.js","webpack:///./~/react/lib/getEventCharCode.js","webpack:///./~/react/lib/getEventModifierState.js","webpack:///./~/react/lib/getEventTarget.js","webpack:///./~/react/lib/isEventSupported.js","webpack:///./~/react/lib/shouldUpdateReactComponent.js","webpack:///./~/react/lib/traverseAllChildren.js","webpack:///./~/react/lib/validateDOMNesting.js","webpack:///./~/fbjs/lib/EventListener.js","webpack:///./~/fbjs/lib/focusNode.js","webpack:///./~/fbjs/lib/getActiveElement.js","webpack:///./~/react-scripts/~/promise/lib/core.js","webpack:///./~/react/lib/CSSProperty.js","webpack:///./~/react/lib/CallbackQueue.js","webpack:///./~/react/lib/DOMPropertyOperations.js","webpack:///./~/react/lib/ReactChildren.js","webpack:///./~/react/lib/ReactClass.js","webpack:///./~/react/lib/ReactDOMComponentFlags.js","webpack:///./~/react/lib/ReactDOMSelect.js","webpack:///./~/react/lib/ReactEmptyComponent.js","webpack:///./~/react/lib/ReactFeatureFlags.js","webpack:///./~/react/lib/ReactHostComponent.js","webpack:///./~/react/lib/ReactInputSelection.js","webpack:///./~/react/lib/ReactMount.js","webpack:///./~/react/lib/ReactMultiChildUpdateTypes.js","webpack:///./~/react/lib/ReactNodeTypes.js","webpack:///./~/react/lib/ReactPropTypes.js","webpack:///./~/react/lib/ReactVersion.js","webpack:///./~/react/lib/ViewportMetrics.js","webpack:///./~/react/lib/accumulateInto.js","webpack:///./~/react/lib/canDefineProperty.js","webpack:///./~/react/lib/forEachAccumulated.js","webpack:///./~/react/lib/getHostComponentFromComposite.js","webpack:///./~/react/lib/getIteratorFn.js","webpack:///./~/react/lib/getTextContentAccessor.js","webpack:///./~/react/lib/instantiateReactComponent.js","webpack:///./~/react/lib/isTextInputElement.js","webpack:///./~/react/lib/setTextContent.js","webpack:///./~/react/react.js","webpack:///./~/fbjs/lib/camelize.js","webpack:///./~/fbjs/lib/camelizeStyleName.js","webpack:///./~/fbjs/lib/containsNode.js","webpack:///./~/fbjs/lib/createArrayFromMixed.js","webpack:///./~/fbjs/lib/createNodesFromMarkup.js","webpack:///./~/fbjs/lib/getMarkupWrap.js","webpack:///./~/fbjs/lib/getUnboundedScrollPosition.js","webpack:///./~/fbjs/lib/hyphenate.js","webpack:///./~/fbjs/lib/hyphenateStyleName.js","webpack:///./~/fbjs/lib/isNode.js","webpack:///./~/fbjs/lib/isTextNode.js","webpack:///./~/fbjs/lib/memoizeStringOnly.js","webpack:///./~/react-dom/index.js","webpack:///./~/react-scripts/config/polyfills.js","webpack:///./~/react-scripts/~/asap/browser-raw.js","webpack:///./src/App.js","webpack:///./src/index.js","webpack:///./src/sequencer.js","webpack:///./~/react-scripts/~/promise/lib/es6-extensions.js","webpack:///./~/react-scripts/~/promise/lib/rejection-tracking.js","webpack:///./~/react-scripts/~/whatwg-fetch/fetch.js","webpack:///./~/react/lib/AutoFocusUtils.js","webpack:///./~/react/lib/BeforeInputEventPlugin.js","webpack:///./~/react/lib/CSSPropertyOperations.js","webpack:///./~/react/lib/ChangeEventPlugin.js","webpack:///./~/react/lib/Danger.js","webpack:///./~/react/lib/DefaultEventPluginOrder.js","webpack:///./~/react/lib/EnterLeaveEventPlugin.js","webpack:///./~/react/lib/FallbackCompositionState.js","webpack:///./~/react/lib/HTMLDOMPropertyConfig.js","webpack:///./~/react/lib/React.js","webpack:///./~/react/lib/ReactChildReconciler.js","webpack:///./~/react/lib/ReactComponentBrowserEnvironment.js","webpack:///./~/react/lib/ReactCompositeComponent.js","webpack:///./~/react/lib/ReactDOM.js","webpack:///./~/react/lib/ReactDOMButton.js","webpack:///./~/react/lib/ReactDOMComponent.js","webpack:///./~/react/lib/ReactDOMContainerInfo.js","webpack:///./~/react/lib/ReactDOMEmptyComponent.js","webpack:///./~/react/lib/ReactDOMFactories.js","webpack:///./~/react/lib/ReactDOMFeatureFlags.js","webpack:///./~/react/lib/ReactDOMIDOperations.js","webpack:///./~/react/lib/ReactDOMInput.js","webpack:///./~/react/lib/ReactDOMOption.js","webpack:///./~/react/lib/ReactDOMSelection.js","webpack:///./~/react/lib/ReactDOMTextComponent.js","webpack:///./~/react/lib/ReactDOMTextarea.js","webpack:///./~/react/lib/ReactDOMTreeTraversal.js","webpack:///./~/react/lib/ReactDefaultBatchingStrategy.js","webpack:///./~/react/lib/ReactDefaultInjection.js","webpack:///./~/react/lib/ReactEventEmitterMixin.js","webpack:///./~/react/lib/ReactEventListener.js","webpack:///./~/react/lib/ReactInjection.js","webpack:///./~/react/lib/ReactMarkupChecksum.js","webpack:///./~/react/lib/ReactMultiChild.js","webpack:///./~/react/lib/ReactOwner.js","webpack:///./~/react/lib/ReactPureComponent.js","webpack:///./~/react/lib/ReactReconcileTransaction.js","webpack:///./~/react/lib/ReactRef.js","webpack:///./~/react/lib/ReactServerRenderingTransaction.js","webpack:///./~/react/lib/ReactServerUpdateQueue.js","webpack:///./~/react/lib/SVGDOMPropertyConfig.js","webpack:///./~/react/lib/SelectEventPlugin.js","webpack:///./~/react/lib/SimpleEventPlugin.js","webpack:///./~/react/lib/SyntheticAnimationEvent.js","webpack:///./~/react/lib/SyntheticClipboardEvent.js","webpack:///./~/react/lib/SyntheticCompositionEvent.js","webpack:///./~/react/lib/SyntheticDragEvent.js","webpack:///./~/react/lib/SyntheticFocusEvent.js","webpack:///./~/react/lib/SyntheticInputEvent.js","webpack:///./~/react/lib/SyntheticKeyboardEvent.js","webpack:///./~/react/lib/SyntheticTouchEvent.js","webpack:///./~/react/lib/SyntheticTransitionEvent.js","webpack:///./~/react/lib/SyntheticWheelEvent.js","webpack:///./~/react/lib/adler32.js","webpack:///./~/react/lib/checkReactTypeSpec.js","webpack:///./~/react/lib/dangerousStyleValue.js","webpack:///./~/react/lib/findDOMNode.js","webpack:///./~/react/lib/flattenChildren.js","webpack:///./~/react/lib/getEventKey.js","webpack:///./~/react/lib/getNodeForCharacterOffset.js","webpack:///./~/react/lib/getVendorPrefixedEventName.js","webpack:///./~/react/lib/onlyChild.js","webpack:///./~/react/lib/quoteAttributeValueForBrowser.js","webpack:///./~/react/lib/renderSubtreeIntoContainer.js","webpack:///./~/tone/build/Tone.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","i","Object","prototype","hasOwnProperty","_m","args","slice","fn","a","b","apply","this","concat","invariant","condition","format","d","e","f","error","undefined","Error","argIndex","replace","name","framesToPop","reactProdInvariant","code","argCount","arguments","length","message","argIdx","encodeURIComponent","emptyFunction","warning","toObject","val","TypeError","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","order2","map","n","join","test3","split","forEach","letter","keys","propIsEnumerable","propertyIsEnumerable","target","source","from","symbols","to","s","key","getOwnPropertySymbols","getRenderedHostOrTextFromComponent","component","rendered","_renderedComponent","precacheNode","inst","node","hostInst","_hostNode","internalInstanceKey","uncacheNode","precacheChildNodes","_flags","Flags","hasCachedChildNodes","children","_renderedChildren","childNode","firstChild","outer","childInst","childID","_domID","nextSibling","nodeType","getAttribute","ATTR_NAME","nodeValue","_prodInvariant","getClosestInstanceFromNode","parents","push","parentNode","closest","pop","getInstanceFromNode","getNodeFromInstance","_hostParent","DOMProperty","ReactDOMComponentFlags","ID_ATTRIBUTE_NAME","Math","random","toString","ReactDOMComponentTree","canUseDOM","window","document","createElement","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","isInWorker","makeEmptyFunction","arg","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","debugTool","hasValidRef","config","ref","hasValidKey","_assign","ReactCurrentOwner","REACT_ELEMENT_TYPE","Symbol","RESERVED_PROPS","__self","__source","ReactElement","type","self","owner","props","element","$$typeof","_owner","propName","childrenLength","childArray","Array","defaultProps","current","createFactory","factory","bind","cloneAndReplaceKey","oldElement","newKey","newElement","_self","_source","cloneElement","isValidElement","object","ensureInjected","ReactUpdates","ReactReconcileTransaction","batchingStrategy","ReactUpdatesFlushTransaction","reinitializeTransaction","dirtyComponentsLength","callbackQueue","CallbackQueue","getPooled","reconcileTransaction","batchedUpdates","callback","mountOrderComparator","c1","c2","_mountOrder","runBatchedUpdates","transaction","len","dirtyComponents","sort","updateBatchNumber","callbacks","_pendingCallbacks","markerName","ReactFeatureFlags","logTopLevelRenders","namedComponent","_currentElement","getName","console","time","ReactReconciler","performUpdateIfNecessary","timeEnd","j","enqueue","getPublicInstance","enqueueUpdate","isBatchingUpdates","_updateBatchNumber","asap","context","asapCallbackQueue","asapEnqueued","PooledClass","Transaction","NESTED_UPDATES","initialize","close","splice","flushBatchedUpdates","UPDATE_QUEUEING","reset","notifyAll","TRANSACTION_WRAPPERS","Mixin","getTransactionWrappers","destructor","release","perform","method","scope","addPoolingTo","queue","ReactUpdatesInjection","injectReconcileTransaction","ReconcileTransaction","injectBatchingStrategy","_batchingStrategy","injection","keyMirror","PropagationPhases","bubbled","captured","topLevelTypes","topAbort","topAnimationEnd","topAnimationIteration","topAnimationStart","topBlur","topCanPlay","topCanPlayThrough","topChange","topClick","topCompositionEnd","topCompositionStart","topCompositionUpdate","topContextMenu","topCopy","topCut","topDoubleClick","topDrag","topDragEnd","topDragEnter","topDragExit","topDragLeave","topDragOver","topDragStart","topDrop","topDurationChange","topEmptied","topEncrypted","topEnded","topError","topFocus","topInput","topInvalid","topKeyDown","topKeyPress","topKeyUp","topLoad","topLoadedData","topLoadedMetadata","topLoadStart","topMouseDown","topMouseMove","topMouseOut","topMouseOver","topMouseUp","topPaste","topPause","topPlay","topPlaying","topProgress","topRateChange","topReset","topScroll","topSeeked","topSeeking","topSelectionChange","topStalled","topSubmit","topSuspend","topTextInput","topTimeUpdate","topTouchCancel","topTouchEnd","topTouchMove","topTouchStart","topTransitionEnd","topVolumeChange","topWaiting","topWheel","EventConstants","SyntheticEvent","dispatchConfig","targetInst","nativeEvent","nativeEventTarget","_targetInst","Interface","constructor","normalize","defaultPrevented","returnValue","isDefaultPrevented","isPropagationStopped","shouldBeReleasedProperties","Proxy","EventInterface","currentTarget","eventPhase","bubbles","cancelable","timeStamp","event","Date","now","isTrusted","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","augmentClass","Class","Super","E","fourArgumentPooler","keyOf","oneKeyObj","oneArgumentPooler","copyFieldsFrom","Klass","instancePool","instance","twoArgumentPooler","a1","a2","threeArgumentPooler","a3","a4","fiveArgumentPooler","a5","standardReleaser","poolSize","DEFAULT_POOL_SIZE","DEFAULT_POOLER","CopyConstructor","pooler","NewKlass","insertTreeChildren","tree","enableLazy","insertTreeBefore","html","setInnerHTML","text","setTextContent","replaceChildWithTree","oldNode","newTree","replaceChild","queueChild","parentTree","childTree","appendChild","queueHTML","queueText","nodeName","DOMLazyTree","DOMNamespaces","createMicrosoftUnsafeLocalFunction","ELEMENT_NODE_TYPE","DOCUMENT_FRAGMENT_NODE_TYPE","documentMode","navigator","userAgent","test","referenceNode","toLowerCase","namespaceURI","insertBefore","checkMask","value","bitmask","DOMPropertyInjection","MUST_USE_PROPERTY","HAS_BOOLEAN_VALUE","HAS_NUMERIC_VALUE","HAS_POSITIVE_NUMERIC_VALUE","HAS_OVERLOADED_BOOLEAN_VALUE","injectDOMPropertyConfig","domPropertyConfig","Injection","Properties","DOMAttributeNamespaces","DOMAttributeNames","DOMPropertyNames","DOMMutationMethods","isCustomAttribute","_isCustomAttributeFunctions","properties","lowerCased","propConfig","propertyInfo","attributeName","attributeNamespace","propertyName","mutationMethod","mustUseProperty","hasBooleanValue","hasNumericValue","hasPositiveNumericValue","hasOverloadedBooleanValue","ATTRIBUTE_NAME_START_CHAR","ROOT_ATTRIBUTE_NAME","ATTRIBUTE_NAME_CHAR","getPossibleStandardName","isCustomAttributeFn","attachRefs","ReactRef","mountComponent","internalInstance","hostParent","hostContainerInfo","parentDebugID","markup","getReactMountReady","getHostNode","unmountComponent","safely","detachRefs","receiveComponent","nextElement","prevElement","_context","refsChanged","shouldUpdateRefs","emptyObject","EventPluginRegistry","EventPluginUtils","ReactErrorUtils","accumulateInto","forEachAccumulated","listenerBank","eventQueue","executeDispatchesAndRelease","simulated","executeDispatchesInOrder","executeDispatchesAndReleaseSimulated","executeDispatchesAndReleaseTopLevel","getDictionaryKey","_rootNodeID","EventPluginHub","injectEventPluginOrder","injectEventPluginsByName","putListener","registrationName","listener","bankForRegistrationName","PluginModule","registrationNameModules","didPutListener","getListener","deleteListener","willDeleteListener","deleteAllListeners","extractEvents","topLevelType","events","plugins","possiblePlugin","extractedEvents","enqueueEvents","processEventQueue","processingEventQueue","rethrowCaughtError","__purge","__getListenerBank","listenerAtPhase","propagationPhase","phasedRegistrationNames","accumulateDirectionalDispatches","upwards","phase","_dispatchListeners","_dispatchInstances","accumulateTwoPhaseDispatchesSingle","traverseTwoPhase","accumulateTwoPhaseDispatchesSingleSkipTarget","parentInst","getParentInstance","accumulateDispatches","ignoredDirection","accumulateDirectDispatchesSingle","accumulateTwoPhaseDispatches","accumulateTwoPhaseDispatchesSkipTarget","accumulateEnterLeaveDispatches","leave","enter","traverseEnterLeave","accumulateDirectDispatches","EventPropagators","ReactInstanceMap","remove","_reactInternalInstance","get","has","set","SyntheticUIEvent","dispatchMarker","getEventTarget","UIEventInterface","view","doc","ownerDocument","defaultView","parentWindow","detail","transactionWrappers","wrapperInitData","_isInTransaction","isInTransaction","errorThrown","ret","initializeAll","closeAll","err","startIndex","wrapper","OBSERVED_ERROR","initData","obj","isArray","disableableMouseListenerNames","onClick","onDoubleClick","onMouseDown","onMouseMove","onMouseUp","onClickCapture","onDoubleClickCapture","onMouseDownCapture","onMouseMoveCapture","onMouseUpCapture","DisabledInputUtils","getHostProps","disabled","hostProps","getListeningForDocument","mountAt","topListenersIDKey","reactTopListenersCounter","alreadyListeningTo","hasEventPageXY","ReactEventEmitterMixin","ViewportMetrics","getVendorPrefixedEventName","isEventSupported","isMonitoringScrollValue","topEventMapping","ReactBrowserEventEmitter","ReactEventListener","injectReactEventListener","setHandleTopLevel","handleTopLevel","setEnabled","enabled","isEnabled","listenTo","contentDocumentHandle","isListening","dependencies","registrationNameDependencies","dependency","trapBubbledEvent","trapCapturedEvent","WINDOW_HANDLE","handlerBaseName","handle","supportsEventPageXY","createEvent","ev","ensureScrollValueMonitoring","refresh","refreshScrollValues","monitorScrollValue","SyntheticMouseEvent","getEventModifierState","MouseEventInterface","screenX","screenY","clientX","clientY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","button","buttons","relatedTarget","fromElement","srcElement","toElement","pageX","currentScrollLeft","pageY","currentScrollTop","escapeHtml","string","str","match","matchHtmlRegExp","exec","escape","index","lastIndex","charCodeAt","substring","escapeTextContentForBrowser","reusableSVGContainer","WHITESPACE_TEST","NONVISIBLE_TEST","svg","innerHTML","svgNode","testElement","textNode","data","removeChild","deleteData","is","x","y","shallowEqual","objA","objB","keysA","keysB","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","timeout","run","Item","array","noop","process","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","getNodeAfter","insertLazyTreeChildAt","moveChild","moveDelimitedText","insertChildAt","closingComment","removeDelimitedText","openingComment","nextNode","startNode","replaceDelimitedText","stringText","nodeAfterComment","createTextNode","Danger","ReactMultiChildUpdateTypes","dangerouslyReplaceNodeWithMarkup","DOMChildrenOperations","processUpdates","updates","k","update","INSERT_MARKUP","content","afterNode","MOVE_EXISTING","fromNode","SET_MARKUP","TEXT_CONTENT","REMOVE_NODE","mathml","recomputePluginOrdering","EventPluginOrder","pluginName","namesToPlugins","pluginIndex","indexOf","publishedEvents","eventTypes","eventName","publishEventForPlugin","eventNameDispatchConfigs","phaseName","phasedRegistrationName","publishRegistrationName","possibleRegistrationNames","InjectedEventPluginOrder","injectedNamesToPlugins","isOrderingDirty","getPluginModuleForEvent","_resetEventPlugins","isEndish","isMoveish","isStartish","executeDispatch","invokeGuardedCallbackWithCatch","invokeGuardedCallback","dispatchListeners","dispatchInstances","executeDispatchesInOrderStopAtTrueImpl","executeDispatchesInOrderStopAtTrue","executeDirectDispatch","dispatchListener","dispatchInstance","res","hasDispatches","ComponentTree","TreeTraversal","injectComponentTree","Injected","injectTreeTraversal","isAncestor","getLowestCommonAncestor","argFrom","argTo","escapeRegex","escaperLookup","=",":","escapedString","unescape","unescapeRegex","unescaperLookup","=0","=2","keySubstring","KeyEscapeUtils","_assertSingleLink","inputProps","checkedLink","valueLink","_assertValueLink","onChange","_assertCheckedLink","checked","getDeclarationErrorAddendum","ReactPropTypes","ReactPropTypeLocations","ReactPropTypesSecret","hasReadOnlyValue","checkbox","image","hidden","radio","submit","propTypes","componentName","readOnly","func","loggedTypeFailures","LinkedValueUtils","checkPropTypes","tagName","prop","getValue","getChecked","executeOnChange","requestChange","ReactComponent","updater","refs","ReactNoopUpdateQueue","isReactComponent","setState","partialState","enqueueSetState","enqueueCallback","forceUpdate","enqueueForceUpdate","injected","ReactComponentEnvironment","replaceNodeWithMarkup","processChildrenUpdates","injectEnvironment","environment","isNative","funcToString","Function","reIsNative","RegExp","getKeyFromID","getIDFromKey","parseInt","substr","canUseCollections","itemMap","itemByKey","create","parentID","item","childIDs","isMounted","updateCount","addRoot","rootIDSet","add","rootByKey","removeRoot","getRegisteredIDs","getRootIDs","purgeDeep","describeComponentFrame","ownerName","fileName","lineNumber","getDisplayName","displayName","describeID","ReactComponentTreeHook","getElement","ownerID","getOwnerID","Map","Set","unmountedIDs","onSetChildren","nextChildIDs","nextChildID","nextChild","onBeforeMountComponent","onBeforeUpdateComponent","onMountComponent","isRoot","onUpdateComponent","onUnmountComponent","purgeUnmountedComponents","_preventPurging","getCurrentStackAddendum","topElement","info","currentOwner","_debugID","getStackAddendumByID","getParentID","getChildIDs","getSource","getText","getUpdateCount","caughtError","warnNoop","publicInstance","callerName","enqueueReplaceState","completeState","ReactPropTypeLocationNames","childContext","formatUnexpectedArgument","getInternalInstanceReadyForUpdate","ReactUpdateQueue","validateCallback","enqueueCallbackInternal","_pendingForceUpdate","_pendingStateQueue","_pendingReplaceState","enqueueElementInternal","nextContext","_pendingElement","MSApp","execUnsafeLocalFunction","arg0","arg1","arg2","arg3","getEventCharCode","charCode","keyCode","modifierStateGetter","keyArg","syntheticEvent","keyProp","modifierKeyToProp","Alt","Control","Meta","Shift","correspondingUseElement","eventNameSuffix","capture","isSupported","setAttribute","useHasFeature","implementation","hasFeature","shouldUpdateReactComponent","prevEmpty","nextEmpty","prevType","nextType","getComponentKey","traverseAllChildrenImpl","nameSoFar","traverseContext","SEPARATOR","child","nextName","subtreeCount","nextNamePrefix","SUBSEPARATOR","iteratorFn","getIteratorFn","step","iterator","entries","ii","next","done","entry","addendum","childrenString","traverseAllChildren","validateDOMNesting","EventListener","listen","eventType","removeEventListener","detachEvent","registerDefault","focusNode","focus","getActiveElement","activeElement","body","getThen","then","ex","LAST_ERROR","IS_ERROR","tryCallOne","tryCallTwo","Promise","_45","_81","_65","_54","doResolve","safeThen","onFulfilled","onRejected","resolve","reject","Handler","deferred","_10","handleResolved","cb","promise","newValue","finale","_97","reason","_61","prefixKey","prefix","charAt","toUpperCase","isUnitlessNumber","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridColumn","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prefixes","shorthandPropertyExpansions","background","backgroundAttachment","backgroundColor","backgroundImage","backgroundPositionX","backgroundPositionY","backgroundRepeat","backgroundPosition","border","borderWidth","borderStyle","borderColor","borderBottom","borderBottomWidth","borderBottomStyle","borderBottomColor","borderLeft","borderLeftWidth","borderLeftStyle","borderLeftColor","borderRight","borderRightWidth","borderRightStyle","borderRightColor","borderTop","borderTopWidth","borderTopStyle","borderTopColor","font","fontStyle","fontVariant","fontSize","fontFamily","outline","outlineWidth","outlineStyle","outlineColor","CSSProperty","_callbacks","_contexts","contexts","checkpoint","rollback","isAttributeNameSafe","validatedAttributeNameCache","illegalAttributeNameCache","VALID_ATTRIBUTE_NAME_REGEX","shouldIgnoreValue","isNaN","quoteAttributeValueForBrowser","DOMPropertyOperations","createMarkupForID","setAttributeForID","createMarkupForRoot","setAttributeForRoot","createMarkupForProperty","createMarkupForCustomAttribute","setValueForProperty","deleteValueForProperty","namespace","setAttributeNS","setValueForAttribute","removeAttribute","deleteValueForAttribute","escapeUserProvidedKey","userProvidedKeyEscapeRegex","ForEachBookKeeping","forEachFunction","forEachContext","count","forEachSingleChild","bookKeeping","forEachChildren","forEachFunc","MapBookKeeping","mapResult","keyPrefix","mapFunction","mapContext","result","mapSingleChildIntoContext","childKey","mappedChild","mapIntoWithKeyPrefixInternal","escapedPrefix","mapChildren","forEachSingleChildDummy","countChildren","toArray","ReactChildren","validateMethodOverride","isAlreadyDefined","specPolicy","ReactClassInterface","ReactClassMixin","SpecPolicy","OVERRIDE_BASE","DEFINE_MANY","DEFINE_MANY_MERGED","mixSpecIntoComponent","Constructor","spec","proto","autoBindPairs","__reactAutoBindPairs","MIXINS_KEY","RESERVED_SPEC_KEYS","mixins","property","isReactClassMethod","isFunction","shouldAutoBind","autobind","createMergedResultFunction","createChainedFunction","mixStaticSpecIntoComponent","statics","isReserved","isInherited","mergeIntoWithNoDuplicateKeys","one","two","bindAutoBindMethod","boundMethod","bindAutoBindMethods","pairs","autoBindKey","DEFINE_ONCE","injectedMixins","contextTypes","childContextTypes","getDefaultProps","getInitialState","getChildContext","render","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","componentWillUnmount","updateComponent","replaceState","newState","ReactClassComponent","ReactClass","createClass","state","initialState","methodName","injectMixin","mixin","updateOptionsIfPendingUpdateAndMounted","_wrapperState","pendingUpdate","updateOptions","Boolean","multiple","propValue","selectedValue","options","selected","_handleChange","didWarnValueDefaultValue","ReactDOMSelect","mountWrapper","initialValue","defaultValue","listeners","wasMultiple","getSelectValueContext","postUpdateWrapper","emptyComponentFactory","ReactEmptyComponentInjection","injectEmptyComponentFactory","ReactEmptyComponent","instantiate","createInternalComponent","genericComponentClass","createInstanceForText","textComponentClass","isTextComponent","tagToComponentClass","ReactHostComponentInjection","injectGenericComponentClass","componentClass","injectTextComponentClass","injectComponentClasses","componentClasses","ReactHostComponent","isInDocument","containsNode","documentElement","ReactDOMSelection","ReactInputSelection","hasSelectionCapabilities","elem","contentEditable","getSelectionInformation","focusedElem","selectionRange","getSelection","restoreSelection","priorSelectionInformation","curFocusedElem","priorFocusedElem","priorSelectionRange","setSelection","input","selection","start","selectionStart","end","selectionEnd","range","createRange","parentElement","moveStart","moveEnd","getOffsets","offsets","min","createTextRange","collapse","select","setOffsets","firstDifferenceIndex","string1","string2","minLen","getReactRootElementInContainer","container","DOC_NODE_TYPE","internalGetID","mountComponentIntoNode","wrapperInstance","shouldReuseMarkup","wrappedElement","ReactDOMContainerInfo","_topLevelWrapper","ReactMount","_mountImageIntoNode","batchedMountComponentIntoNode","componentInstance","ReactDOMFeatureFlags","useCreateElement","unmountComponentFromNode","lastChild","hasNonRootReactChild","rootEl","isValidContainer","getHostRootInstanceInContainer","prevHostInstance","getTopLevelWrapperInContainer","root","_hostContainerInfo","ReactMarkupChecksum","instantiateReactComponent","ROOT_ATTR_NAME","instancesByReactRootID","topLevelRootCounter","TopLevelWrapper","rootID","_instancesByReactRootID","scrollMonitor","renderCallback","_updateRootComponent","prevComponent","_renderNewRootComponent","wrapperID","_instance","renderSubtreeIntoContainer","parentComponent","_renderSubtreeIntoContainer","nextWrappedElement","_processChildContext","prevWrappedElement","publicInst","updatedCallback","unmountComponentAtNode","reactRootElement","containerHasReactMarkup","containerHasNonRootReactChild","hasAttribute","rootElement","canReuseMarkup","checksum","CHECKSUM_ATTR_NAME","rootMarkup","outerHTML","normalizedMarkup","diffIndex","difference","ReactNodeTypes","HOST","COMPOSITE","EMPTY","getType","PropTypeError","stack","createChainableTypeChecker","validate","checkType","isRequired","location","propFullName","secret","ANONYMOUS","locationName","chainedCheckType","createPrimitiveTypeChecker","expectedType","propType","getPropType","preciseType","getPreciseType","createAnyTypeChecker","createArrayOfTypeChecker","typeChecker","createElementTypeChecker","createInstanceTypeChecker","expectedClass","expectedClassName","actualClassName","getClassName","createEnumTypeChecker","expectedValues","valuesString","JSON","stringify","createObjectOfTypeChecker","createUnionTypeChecker","arrayOfTypeCheckers","checker","createNodeChecker","isNode","createShapeTypeChecker","shapeTypes","every","isSymbol","bool","number","symbol","any","arrayOf","instanceOf","objectOf","oneOf","oneOfType","shape","scrollPosition","canDefineProperty","arr","getHostComponentFromComposite","_renderedNodeType","maybeIterable","ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","getTextContentAccessor","contentKey","isInternalComponentType","shouldHaveDebugID","getNativeNode","ReactCompositeComponentWrapper","_mountIndex","_mountImage","ReactCompositeComponent","construct","_instantiateReactComponent","isTextInputElement","supportedInputTypes","color","date","datetime","datetime-local","email","month","password","search","tel","url","week","textContent","camelize","_hyphenPattern","_","character","camelizeStyleName","msPattern","outerNode","innerNode","isTextNode","contains","compareDocumentPosition","callee","hasArrayNature","createArrayFromMixed","getNodeName","nodeNameMatch","nodeNamePattern","createNodesFromMarkup","handleScript","dummyNode","wrap","getMarkupWrap","wrapDepth","scripts","getElementsByTagName","nodes","childNodes","markupWrap","shouldWrap","selectWrap","tableWrap","trWrap","svgWrap","*","area","col","legend","param","tr","optgroup","option","caption","colgroup","tbody","tfoot","thead","td","th","svgElements","getUnboundedScrollPosition","scrollable","pageXOffset","scrollLeft","pageYOffset","scrollTop","hyphenate","_uppercasePattern","hyphenateStyleName","Node","memoizeStringOnly","cache","enable","global","rawAsap","task","requestFlush","flushing","flush","currentIndex","capacity","scan","newLength","makeRequestCallFromMutationObserver","toggle","observer","BrowserMutationObserver","observe","characterData","makeRequestCallFromTimer","handleTimer","timeoutHandle","clearInterval","intervalHandle","setInterval","MutationObserver","WebKitMutationObserver","_interopRequireWildcard","__esModule","newObj","default","_interopRequireDefault","_classCallCheck","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","enumerable","writable","configurable","setPrototypeOf","__proto__","initTracks","sample","vol","muted","beats","initBeats","fill","_toggleTrackBeat","tracks","beat","track","_extends","v","_setTrackVolume","_muteTrack","TrackView","_ref","currentBeat","toggleTrackBeat","setTrackVolume","muteTrack","_react2","className","max","parseFloat","beatClass","href","TrackListView","_ref2","Controls","_ref3","bpm","updateBPM","stop","defineProperty","_createClass","defineProperties","descriptor","protoProps","staticProps","_react","_sequencer","sequencer","App","_Component","_this","getPrototypeOf","_initialiseProps","loop","updateCurrentBeat","_state","Component","_this2","updateTracks","newTracks","newBpm","_reactDom","_reactDom2","_App","_App2","getElementById","_defineProperty","beatNotifier","_tone2","Sequence","loopProcessor","Transport","urls","reduce","acc","MultiPlayer","toMaster","velocities","_tone","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","remaining","race","values","disable","onUnhandled","allRejections","matchWhitelist","rejections","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","warn","_72","errStr","line","list","some","cls","RangeError","normalizeName","normalizeValue","iteratorFor","items","shift","support","iterable","Headers","headers","append","consumed","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","ArrayBuffer","rejected","decode","json","parse","normalizeMethod","upcased","methods","Request","credentials","mode","referrer","form","trim","bytes","decodeURIComponent","xhr","head","getAllResponseHeaders","header","Response","bodyInit","status","ok","statusText","fetch","getAll","thisArg","clone","response","redirectStatuses","redirect","init","responseURL","getResponseHeader","request","XMLHttpRequest","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","AutoFocusUtils","focusDOMComponent","isPresto","opera","isKeypressCommand","getCompositionEventType","compositionStart","compositionEnd","compositionUpdate","isFallbackCompositionStart","START_KEYCODE","isFallbackCompositionEnd","END_KEYCODES","getDataFromCustomEvent","extractCompositionEvent","fallbackData","canUseCompositionEvent","currentComposition","useFallbackCompositionData","getData","FallbackCompositionState","SyntheticCompositionEvent","customData","getNativeBeforeInputChars","which","SPACEBAR_CODE","hasSpaceKeypress","SPACEBAR_CHAR","chars","getFallbackBeforeInputChars","extractBeforeInputEvent","canUseTextInputEvent","SyntheticInputEvent","beforeInput","onBeforeInput","onBeforeInputCapture","onCompositionEnd","onCompositionEndCapture","onCompositionStart","onCompositionStartCapture","onCompositionUpdate","onCompositionUpdateCapture","BeforeInputEventPlugin","dangerousStyleValue","processStyleName","styleName","hasShorthandPropertyBug","styleFloatAccessor","tempStyle","style","cssFloat","CSSPropertyOperations","createMarkupForStyles","styles","serialized","styleValue","setValueForStyles","expansion","individualStyleName","shouldUseChangeEvent","manualDispatchChangeEvent","change","activeElementInst","runEventInBatch","startWatchingForChangeEventIE8","stopWatchingForChangeEventIE8","getTargetInstForChangeEvent","handleEventsForChangeEventIE8","startWatchingForValueChange","activeElementValue","activeElementValueProp","getOwnPropertyDescriptor","newValueProp","handlePropertyChange","stopWatchingForValueChange","getTargetInstForInputEvent","handleEventsForInputEventIE","getTargetInstForInputEventIE","shouldUseClickEvent","getTargetInstForClickEvent","onChangeCapture","doesChangeEventBubble","isInputEventSupported","ChangeEventPlugin","getTargetInstFunc","handleEventFunc","targetNode","oldChild","newChild","DefaultEventPluginOrder","ResponderEventPlugin","SimpleEventPlugin","TapEventPlugin","EnterLeaveEventPlugin","SelectEventPlugin","mouseEnter","onMouseEnter","mouseLeave","onMouseLeave","win","related","toNode","_root","_startText","_fallbackText","startValue","startLength","endValue","endLength","minEnd","sliceTail","HTMLDOMPropertyConfig","accept","acceptCharset","accessKey","action","allowFullScreen","allowTransparency","alt","as","async","autoComplete","autoPlay","cellPadding","cellSpacing","charSet","challenge","cite","classID","cols","colSpan","contextMenu","controls","coords","crossOrigin","dateTime","defer","download","draggable","encType","formAction","formEncType","formMethod","formNoValidate","formTarget","frameBorder","height","high","hrefLang","htmlFor","httpEquiv","icon","inputMode","integrity","keyParams","keyType","kind","label","lang","low","manifest","marginHeight","marginWidth","maxLength","media","mediaGroup","minLength","nonce","noValidate","optimum","pattern","placeholder","playsInline","poster","preload","profile","radioGroup","referrerPolicy","rel","required","reversed","role","rows","rowSpan","sandbox","scoped","scrolling","seamless","size","sizes","span","spellCheck","src","srcDoc","srcLang","srcSet","summary","tabIndex","useMap","width","wmode","about","datatype","inlist","resource","typeof","vocab","autoCapitalize","autoCorrect","autoSave","itemProp","itemScope","itemType","itemID","itemRef","results","security","unselectable","ReactPureComponent","ReactDOMFactories","ReactVersion","onlyChild","__spread","React","Children","only","PureComponent","PropTypes","createMixin","DOM","instantiateChild","childInstances","selfDebugID","keyUnique","ReactChildReconciler","instantiateChildren","nestedChildNodes","updateChildren","prevChildren","nextChildren","mountImages","removedNodes","prevChild","nextChildInstance","nextChildMountImage","unmountChildren","renderedChildren","renderedChild","ReactDOMIDOperations","ReactComponentBrowserEnvironment","dangerouslyProcessChildrenUpdates","StatelessComponent","warnIfInvalidElement","shouldConstruct","isPureComponent","isPureReactComponent","checkReactTypeSpec","CompositeTypes","ImpureClass","PureClass","StatelessFunctional","nextMountID","ReactCompositeComponentMixin","_compositeType","_calledComponentWillUnmount","renderedElement","publicProps","publicContext","_processContext","updateQueue","getUpdateQueue","doConstruct","_constructComponent","unstable_handleError","performInitialMountWithErrorHandling","performInitialMount","_constructComponentWithoutOwner","_processPendingState","debugID","_renderValidatedComponent","_maskContext","maskedContext","contextName","currentContext","_checkContextTypes","typeSpecs","prevContext","prevParentElement","nextParentElement","prevUnmaskedContext","nextUnmaskedContext","willReceive","prevProps","nextProps","nextState","shouldUpdate","_performComponentUpdate","partial","unmaskedContext","prevState","hasComponentDidUpdate","_updateRenderedComponent","prevComponentInstance","prevRenderedElement","nextRenderedElement","oldHostNode","nextMarkup","_replaceNodeWithMarkup","prevInstance","_renderValidatedComponentWithoutOwnerOrContext","renderedComponent","attachRef","publicComponentInstance","detachRef","ReactDefaultInjection","findDOMNode","inject","ReactDOM","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","__REACT_DEVTOOLS_GLOBAL_HOOK__","Mount","Reconciler","ReactDOMButton","assertValidProps","voidElementTags","_tag","dangerouslySetInnerHTML","HTML","enqueuePutListener","ReactServerRenderingTransaction","containerInfo","isDocumentFragment","_node","DOC_FRAGMENT_TYPE","_ownerDocument","listenerToPut","inputPostMount","ReactDOMInput","postMountWrapper","textareaPostMount","ReactDOMTextarea","optionPostMount","ReactDOMOption","trapBubbledEventsLocal","getNode","mediaEvents","postUpdateSelectWrapper","validateDangerousTag","tag","validatedTagCache","VALID_TAG_REGEX","isCustomComponent","ReactDOMComponent","_namespaceURI","_previousStyle","_previousStyleCopy","ReactMultiChild","CONTENT_TYPES","STYLE","__html","suppressContentEditableWarning","omittedCloseTags","base","br","embed","hr","img","keygen","link","meta","wbr","newlineEatingTags","listing","pre","textarea","menuitem","globalIdCounter","_idCounter","parentTag","mountImage","el","div","createElementNS","_updateDOMProperties","lazyTree","_createInitialChildren","tagOpen","_createOpenTagMarkupAndPutListeners","tagContent","_createContentMarkup","autoFocus","propKey","renderToStaticMarkup","contentToUse","childrenToUse","mountChildren","lastProps","_updateDOMChildren","updateWrapper","styleUpdates","lastStyle","nextProp","lastProp","lastContent","nextContent","lastHtml","nextHtml","lastChildren","lastHasContentOrHtml","nextHasContentOrHtml","updateTextContent","updateMarkup","topLevelWrapper","ReactDOMEmptyComponent","domID","createComment","createDOMFactory","abbr","address","article","aside","audio","bdi","bdo","big","blockquote","canvas","datalist","dd","del","details","dfn","dialog","dl","dt","em","fieldset","figcaption","figure","footer","h1","h2","h3","h4","h5","h6","hgroup","iframe","ins","kbd","li","main","mark","menu","meter","nav","noscript","ol","output","picture","progress","q","rp","rt","ruby","samp","script","section","small","strong","sub","sup","table","u","ul","var","video","circle","clipPath","defs","ellipse","g","linearGradient","mask","path","polygon","polyline","radialGradient","rect","tspan","forceUpdateIfMounted","rootNode","queryRoot","group","querySelectorAll","otherNode","otherInstance","defaultChecked","initialChecked","flattenChildren","didWarnInvalidOptionChildren","selectValue","selectParent","isCollapsed","anchorNode","anchorOffset","focusOffset","getIEOffsets","selectedRange","selectedLength","fromStart","duplicate","moveToElementText","setEndPoint","startOffset","endOffset","getModernOffsets","rangeCount","currentRange","getRangeAt","startContainer","endContainer","isSelectionCollapsed","rangeLength","tempRange","cloneRange","selectNodeContents","setEnd","isTempRangeCollapsed","detectionRange","setStart","isBackward","collapsed","setIEOffsets","setModernOffsets","extend","temp","startMarker","getNodeForCharacterOffset","endMarker","offset","removeAllRanges","addRange","useIEOffsets","ReactDOMTextComponent","_stringText","_closingComment","_commentNodes","openingValue","closingValue","createDocumentFragment","escapedText","nextText","nextStringText","commentNodes","hostNode","instA","instB","depthA","tempA","depthB","tempB","depth","common","pathFrom","pathTo","ReactDefaultBatchingStrategyTransaction","RESET_BATCHED_UPDATES","ReactDefaultBatchingStrategy","FLUSH_BATCHED_UPDATES","alreadyBatchingUpdates","alreadyInjected","ReactInjection","EventEmitter","ReactDOMTreeTraversal","HostComponent","SVGDOMPropertyConfig","EmptyComponent","Updates","runEventQueueInBatch","findParent","TopLevelCallbackBookKeeping","ancestors","handleTopLevelImpl","ancestor","_handleTopLevel","scrollValueMonitor","_enabled","dispatchEvent","adler32","TAG_END","COMMENT_START","addChecksumToMarkup","existingChecksum","markupChecksum","makeInsertMarkup","toIndex","fromIndex","makeMove","makeRemove","makeSetMarkup","makeTextContent","processQueue","_reconcilerInstantiateChildren","nestedChildren","_reconcilerUpdateChildren","nextNestedChildrenElements","_updateChildren","nextIndex","nextMountIndex","lastPlacedNode","_mountChildAtIndex","_unmountChild","createChild","ReactOwner","isValidOwner","addComponentAsRefTo","removeComponentAsRefFrom","ownerPublicInstance","ComponentDummy","reactMountReady","SELECTION_RESTORATION","EVENT_SUPPRESSION","currentlyEnabled","previouslyEnabled","ON_DOM_READY_QUEUEING","ReactServerUpdateQueue","noopCallbackQueue","NS","xlink","xml","ATTRS","accentHeight","accumulate","additive","alignmentBaseline","allowReorder","alphabetic","amplitude","arabicForm","ascent","attributeType","autoReverse","azimuth","baseFrequency","baseProfile","baselineShift","bbox","begin","bias","by","calcMode","capHeight","clip","clipRule","clipPathUnits","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","contentScriptType","contentStyleType","cursor","cx","cy","decelerate","descent","diffuseConstant","direction","display","divisor","dominantBaseline","dur","dx","dy","edgeMode","elevation","enableBackground","exponent","externalResourcesRequired","fillRule","filter","filterRes","filterUnits","floodColor","focusable","fontSizeAdjust","fontStretch","fx","fy","g1","g2","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","glyphRef","gradientTransform","gradientUnits","hanging","horizAdvX","horizOriginX","ideographic","imageRendering","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","kerning","keyPoints","keySplines","keyTimes","lengthAdjust","letterSpacing","lightingColor","limitingConeAngle","local","markerEnd","markerMid","markerStart","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","numOctaves","operator","orient","orientation","origin","overflow","overlinePosition","overlineThickness","paintOrder","panose1","pathLength","patternContentUnits","patternTransform","patternUnits","pointerEvents","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","r","radius","refX","refY","renderingIntent","repeatCount","repeatDur","requiredExtensions","requiredFeatures","restart","rotate","rx","ry","scale","seed","shapeRendering","slope","spacing","specularConstant","specularExponent","speed","spreadMethod","stdDeviation","stemh","stemv","stitchTiles","stopColor","strikethroughPosition","strikethroughThickness","stroke","strokeLinecap","strokeLinejoin","surfaceScale","systemLanguage","tableValues","targetX","targetY","textAnchor","textDecoration","textRendering","textLength","transform","u1","u2","underlinePosition","underlineThickness","unicode","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","viewBox","viewTarget","visibility","widths","wordSpacing","writingMode","xHeight","x1","x2","xChannelSelector","xlinkActuate","xlinkArcrole","xlinkHref","xlinkRole","xlinkShow","xlinkTitle","xlinkType","xmlBase","xmlns","xmlnsXlink","xmlLang","xmlSpace","y1","y2","yChannelSelector","z","zoomAndPan","top","boundingTop","left","boundingLeft","constructSelectEvent","mouseDown","currentSelection","lastSelection","skipSelectionChangeEvent","onSelect","onSelectCapture","hasListener","ON_SELECT_KEY","SyntheticAnimationEvent","SyntheticClipboardEvent","SyntheticFocusEvent","SyntheticKeyboardEvent","SyntheticDragEvent","SyntheticTouchEvent","SyntheticTransitionEvent","SyntheticWheelEvent","abort","onAbort","onAbortCapture","animationEnd","onAnimationEnd","onAnimationEndCapture","animationIteration","onAnimationIteration","onAnimationIterationCapture","animationStart","onAnimationStart","onAnimationStartCapture","blur","onBlur","onBlurCapture","canPlay","onCanPlay","onCanPlayCapture","canPlayThrough","onCanPlayThrough","onCanPlayThroughCapture","click","onContextMenu","onContextMenuCapture","copy","onCopy","onCopyCapture","cut","onCut","onCutCapture","doubleClick","drag","onDrag","onDragCapture","dragEnd","onDragEnd","onDragEndCapture","dragEnter","onDragEnter","onDragEnterCapture","dragExit","onDragExit","onDragExitCapture","dragLeave","onDragLeave","onDragLeaveCapture","dragOver","onDragOver","onDragOverCapture","dragStart","onDragStart","onDragStartCapture","drop","onDrop","onDropCapture","durationChange","onDurationChange","onDurationChangeCapture","emptied","onEmptied","onEmptiedCapture","encrypted","onEncrypted","onEncryptedCapture","ended","onEnded","onEndedCapture","onError","onErrorCapture","onFocus","onFocusCapture","onInput","onInputCapture","invalid","onInvalid","onInvalidCapture","keyDown","onKeyDown","onKeyDownCapture","keyPress","onKeyPress","onKeyPressCapture","keyUp","onKeyUp","onKeyUpCapture","load","onLoad","onLoadCapture","loadedData","onLoadedData","onLoadedDataCapture","loadedMetadata","onLoadedMetadata","onLoadedMetadataCapture","loadStart","onLoadStart","onLoadStartCapture","mouseMove","mouseOut","onMouseOut","onMouseOutCapture","mouseOver","onMouseOver","onMouseOverCapture","mouseUp","paste","onPaste","onPasteCapture","pause","onPause","onPauseCapture","play","onPlay","onPlayCapture","playing","onPlaying","onPlayingCapture","onProgress","onProgressCapture","rateChange","onRateChange","onRateChangeCapture","onReset","onResetCapture","scroll","onScroll","onScrollCapture","seeked","onSeeked","onSeekedCapture","seeking","onSeeking","onSeekingCapture","stalled","onStalled","onStalledCapture","onSubmit","onSubmitCapture","suspend","onSuspend","onSuspendCapture","timeUpdate","onTimeUpdate","onTimeUpdateCapture","touchCancel","onTouchCancel","onTouchCancelCapture","touchEnd","onTouchEnd","onTouchEndCapture","touchMove","onTouchMove","onTouchMoveCapture","touchStart","onTouchStart","onTouchStartCapture","transitionEnd","onTransitionEnd","onTransitionEndCapture","volumeChange","onVolumeChange","onVolumeChangeCapture","waiting","onWaiting","onWaitingCapture","wheel","onWheel","onWheelCapture","topLevelEventsToDispatchConfig","ON_CLICK_KEY","onClickListeners","EventConstructor","AnimationEventInterface","animationName","elapsedTime","pseudoElement","ClipboardEventInterface","clipboardData","CompositionEventInterface","DragEventInterface","dataTransfer","FocusEventInterface","InputEventInterface","getEventKey","KeyboardEventInterface","repeat","locale","TouchEventInterface","touches","targetTouches","changedTouches","TransitionEventInterface","WheelEventInterface","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","l","MOD","typeSpecName","isEmpty","isNonNumeric","componentOrElement","flattenSingleChildIntoContext","normalizeKey","translateToKey","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","getLeafNode","getSiblingNode","nodeStart","nodeEnd","makePrefixMap","styleProp","prefixedEventNames","vendorPrefixes","prefixMap","animationend","animationiteration","animationstart","transitionend","animation","transition","__WEBPACK_AMD_DEFINE_RESULT__","Main","Tone","Module","isUndef","audioContext","AudioContext","webkitAudioContext","OfflineAudioContext","webkitOfflineAudioContext","createGain","createGainNode","createDelay","createDelayNode","createPeriodicWave","createWaveTable","AudioBufferSourceNode","noteGrainOn","noteOff","OscillatorNode","noteOn","setPeriodicWave","setWaveTable","AudioNode","_nativeConnect","connect","B","outNum","inNum","inputs","outputs","params","rampTime","isObject","isString","tmpObj","attr","parent","attrSplit","Signal","Param","rampTo","AudioParam","_collectDefaults","subRet","subAttr","constr","defaults","_super","superDefs","isLetter","sameConstructor","bufferSize","blockTime","sampleRate","sampleTime","dispose","disconnect","_silentNode","noGC","unit","outputNum","inputNum","defaultArg","connectSeries","currentUnit","toUnit","chain","fan","given","fallback","givenProp","fallbackProp","optionsObject","isNumber","isBoolean","noOp","_readOnly","_writable","State","Started","Stopped","Paused","equalPowerScale","percent","piFactor","PI","sin","dbToGain","db","pow","gainToDb","gain","log","LN10","intervalToFrequencyRatio","interval","currentTime","TempConstructor","newContextCallbacks","_initAudioContext","setContext","ctx","destination","TONE_SILENCE_VERSION_LOGGING","SignalBase","outputNumber","inputNumber","TimelineSignal","_param","cancelScheduledValues","overridden","WaveShaper","mapping","bufferLen","_shaper","createWaveShaper","_curve","curve","isFinite","Float32Array","setMap","normalized","oversample","oversampling","TimeBase","units","_expr","_noOp","_defaultUnits","_primaryExpressions","_defaultExpr","exprString","_parseExprString","regexp","_beatsToUnits","_timeSignature","t","_ticksToUnits","hz","_frequencyToUnits","total","_secondsToUnits","samples","_binaryExpressions","+","precedence","lh","rh","-","/","_unaryExpressions","neg","_syntaxGlue","(",")","_tokenize","expr","getNextToken","expressions","opName","op","reg","SyntaxError","position","tokens","token","peek","_matchGroup","prec","_parseBinary","lexer","_parseUnary","_parsePrimary","matching","freq","seconds","ticks","PPQ","timeSignature","_pushExpr","mult","eval","Time","_plusNow","quantize","nextSubdivision","subdiv","subdivision","toSeconds","round","ideal","diff","addNow","toNotation","testNotations","retNotation","_toNotationHelper","testTripletNotations","retTripletNotation","threshold","_notationToUnits","notationTime","floatingPointError","floor","notation","primaryExprs","notationExprs","toBarsBeatsSixteenths","quarterTime","quarters","measures","sixteenths","toFixed","toTicks","toSamples","toFrequency","toMilliseconds","Frequency","midi","midiToFrequency","note","pitch","octave","noteToScaleIndex","noteNumber","transpose","harmonize","intervals","toMidi","frequencyToMidi","toNote","A4","LN2","noteName","scaleIndexToNote","cbb","c#","dbb","d#","ebb","eb","e#","fbb","fb","f#","gbb","gb","g#","gx","abb","ab","a#","ax","bbb","bb","b#","bx","frequency","TransportTime","_secondsToTicks","ceil","Type","Default","Ticks","NormalRange","AudioRange","Decibels","Interval","BPM","Positive","Cents","Degrees","MIDI","BarsBeatsSixteenths","Samples","Hertz","Note","Milliseconds","Seconds","Notation","convert","_lfo","lfo","_toUnits","LFO","convertedVal","_fromUnits","_minOutput","setValueAtTime","setRampPoint","currentVal","linearRampToValueAtTime","endTime","exponentialRampToValueAtTime","exponentialRampToValue","startTime","linearRampToValue","setTargetAtTime","timeConstant","setValueCurveAtTime","duration","Gain","_gainNode","createInsOuts","_gain","_constant","buffer","createBuffer","getChannelData","createBufferSource","channelCount","channelCountMode","Timeline","_timeline","_toRemove","_iterating","memory","Infinity","addEvent","_search","removeEvent","getEvent","getEventAfter","getEventBefore","cancel","after","cancelBefore","beginning","midPoint","nextEvent","testEvent","_iterate","lowerBound","upperBound","forEachBefore","forEachAfter","forEachFrom","forEachAtTime","_events","_initial","Linear","Exponential","Target","Curve","getValueAtTime","beforeEvent","_searchBefore","setValue","constant","scaling","floats","segmentTime","before","_searchAfter","linearRampToValueBetween","finish","exponentialRampToValueBetween","previouVal","previous","_exponentialApproach","_curveInterpolate","_linearInterpolate","_exponentialInterpolate","t0","v0","v1","exp","t1","lowerIndex","upperIndex","lowerVal","upperVal","Pow","_exp","_expScaler","_expFunc","abs","Envelope","attack","decay","sustain","_attackCurve","_releaseCurve","_sig","attackCurve","releaseCurve","In","curveDef","Out","triggerAttack","velocity","originalAttack","currentValue","attackRate","remainingDistance","percentComplete","sliceIndex","triggerRelease","triggerAttackRelease","invertCurve","out","reverseCurve","reverse","curveLen","cosineCurve","rippleCurve","rippleCurveFreq","sineWave","stairsCurve","steps","sineCurve","cos","bounceCurve","linear","exponential","bounce","cosine","ripple","sine","AmplitudeEnvelope","Analyser","_analyser","createAnalyser","_type","_returnType","returnType","_buffer","minDecibels","maxDecibels","smoothing","Waveform","FFT","ReturnType","Byte","Float","analyse","getByteFrequencyData","getFloatFrequencyData","getByteTimeDomainData","AnalyserNode","getFloatTimeDomainData","uint8","Uint8Array","frequencyBinCount","fftSize","smoothingTimeConstant","Compressor","_compressor","createDynamicsCompressor","knee","ratio","Add","_sum","Multiply","_mult","Negate","_multiply","Subtract","_neg","GreaterThanZero","_thresh","_scale","GreaterThan","_gtz","Abs","_abs","Modulo","modulus","_subtract","_modSignal","_setWaveShaper","mod","AudioToGain","_norm","applyBinary","_eval","applyUnary","getNumber","literalNumber","Expr","_replacements","inputCount","_parseInputs","_nodes","_parseTree","_disposeNodes","_Expressions","signal","sig","glue",",","a2g","binary","unary","!","NOT","inputArray","inputMax","matchSyntax","syn","matchGroup","groupName","parseExpression","parseUnary","parsePrimary","parseFunctionCall","parseArgumentList","EqualPowerGain","_eqPower","CrossFade","initialFade","fade","_equalPowerA","_equalPowerB","_invert","Filter","_filters","detune","Q","_rolloff","rolloff","types","possibilities","cascadingCount","createBiquadFilter","connectionChain","MultibandSplit","_lowMidFilter","mid","lowFrequency","highFrequency","EQ3","_multibandSplit","_lowGain","_midGain","_highGain","Scale","outputMin","outputMax","_outputMin","_outputMax","_add","_setRange","ScaleExp","Delay","_delayNode","maxDelay","delayTime","FeedbackCombFilter","_delay","_feedback","resonance","Follower","_filter","_frequencyValues","_sub","_attack","_release","_setAttackRelease","minTime","ScaledEnvelope","FrequencyEnvelope","_octaves","octaves","Gate","_follower","_gt","thresh","attackTime","releaseTime","TimelineState","initial","getStateAtTime","setStateAtTime","Emitter","eventList","functions","emitterFunc","Clock","_lookAhead","_computedLookAhead","UPDATE_RATE","_nextTick","_lastUpdate","_boundLoop","_loop","_worker","lookAhead","tickTime","URL","webkitURL","blobUrl","createObjectURL","IntervalTimeline","_length","IntervalNode","insert","updateHeight","updateMax","_rebalance","_removeNode","_setRoot","_replaceNodeInParent","replacement","isLeftChild","right","balance","getBalance","_rotateLeft","pivotNode","_rotateRight","allNodes","traverse","searchAfter","_left","_right","point","_loopStart","_loopEnd","_ppq","TransportConstructor","_clock","_processTick","_bindClockEvents","_scheduledEvents","_eventID","_repeatedEvents","_onceEvents","_syncedSignals","_swingTicks","_swingAmount","swing","swingSubdivision","loopStart","loopEnd","amount","schedule","timeline","scheduleRepeat","scheduleOnce","clear","eventId","timeSig","startPosition","endPosition","setLoopPoints","ppq","transportPos","remainingTime","syncSignal","ratioSignal","unsyncSignal","syncedSignal","prevSettings","Volume","volume","_unmutedVolume","_muted","mute","Master","_volume","MasterConstructor","Source","_synced","_scheduled","_start","_stop","sched","sync","stateEvent","unsync","Oscillator","_oscillator","_wave","_partials","partials","_phase","Sine","Triangle","Sawtooth","Square","Custom","createOscillator","syncFrequency","unsyncFrequency","coefs","_getRealImaginary","periodicWave","periodicWaveSize","real","imag","partialCount","_inverseFFT","sum","_getInitialValue","maxValue","twoPi","Zero","_zeros","_stoppedSignal","_stoppedValue","_a2g","_scaler","_units","currentMin","currentMax","Limiter","LowpassCombFilter","_lowpass","dampening","Merge","_merger","createChannelMerger","Meter","_lastValue","Level","rms","sqrt","unity","Split","_splitter","createChannelSplitter","MidSideSplit","_split","side","sqrtTwo","MidSideMerge","_merge","MidSideCompressor","_midSideSplit","_midSideMerge","Mono","MultibandCompressor","Panner","initialPan","_hasStereoPanner","_panner","createStereoPanner","pan","_crossFade","_zero","Panner3D","createPanner","panningModel","maxDistance","distanceModel","coneOuterGain","coneOuterAngle","coneInnerAngle","refDistance","rolloffFactor","_orientation","orientationX","orientationY","orientationZ","_position","positionX","positionY","positionZ","_rampTimeConstant","setPosition","setOrientation","pos","_aliasProperty","PanVol","CtrlInterpolate","lowerPosition","lower","upper","_interpolate","retArray","retObj","_toNumber","CtrlMarkov","distribution","_getProbDistribution","rand","dist","chosen","needsNormalizing","probability","CtrlPattern","_shuffled","_direction","UpDown","DownUp","AlternateUp","AlternateDown","Random","RandomWalk","RandomOnce","_shuffleValues","randVal","CtrlRandom","integer","Buffer","_reversed","_xhr","AudioBuffer","buff","_currentDownloads","numberOfChannels","fromArray","isMultidimensional","channels","copyToChannel","channel","channelArray","copyFromChannel","channelData","startSamples","endSamples","retBuffer","_reverse","rev","_downloadQueue","baseUrl","totalProgress","decodeAudioData","lengthComputable","supportsType","extension","canPlayType","Buffers","_buffers","_flattenUrls","_loadingCount","_bufferLoaded","isLoaded","buffName","ob","toReturn","flatObject","Buses","channelName","sendKnob","receive","Listener","ListenerConstructor","_listener","forwardX","forwardY","forwardZ","upX","upY","upZ","Effect","_dryWet","wet","effectSend","effectReturn","connectEffect","effect","AutoFilter","delay","oct","AutoPanner","AutoWah","follower","_sweepRange","_baseFrequency","_inputBoost","_bandpass","_peaking","_setSweepRange","sensitivity","baseFreq","sensitivy","BitCrusher","invStepSize","bits","_modulo","_bits","Chebyshev","_order","_getCoefficient","degree","memo","StereoEffect","effectSendL","effectSendR","effectReturnL","effectReturnR","FeedbackEffect","_feedbackGain","feedback","StereoXFeedbackEffect","_feedbackLR","_feedbackRL","Chorus","_depth","_delayTime","_lfoL","_lfoR","_delayNodeL","_delayNodeR","spread","deviation","Convolver","_convolver","createConvolver","Distortion","_distortion","distortion","deg","FeedbackDelay","combFilterTunings","allpassFilterFrequencies","Freeverb","roomSize","_combFilters","_allpassFiltersL","_allpassFiltersR","allpassL","allpassR","lfpf","al","ar","cf","combFilterDelayTimes","combFilterResonances","allpassFilterFreqs","JCReverb","_scaleRoomSize","_allpassFilters","_feedbackCombFilters","af","allpass","fbcf","apf","MidSideEffect","midSend","sideSend","midReturn","sideReturn","Phaser","_filtersL","_makeFilters","stages","_filtersR","connectToFreq","filters","PingPongDelay","_leftDelay","maxDelayTime","_rightDelay","_rightPreDelay","PitchShift","_frequency","_delayA","_lfoA","_delayB","_lfoB","_crossFadeLFO","_feedbackDelay","_pitch","_windowSize","windowSize","factor","StereoFeedbackEffect","_feedbackL","_feedbackR","StereoWidener","_midMult","_sideMult","_two","Tremolo","_amplitudeL","_amplitudeR","Vibrato","Event","_playbackRate","_startOffset","humanize","playbackRate","_rescheduleEvents","startTick","_getLoopDuration","_tick","previousEvent","reschedulTime","variation","rate","lastEvent","loopDuration","Loop","_event","iterations","prob","iters","Part","_probability","_humanize","_forEach","_startNote","at","_restartEvent","removeAll","_setAll","_testLoopBoundries","Pattern","_pattern","vals","_subdivision","_indexTime","subSubdivision","PulseOscillator","_widthGate","_sawtooth","PWMOscillator","_pulse","modulationFrequency","_modulator","FMOscillator","_carrier","modulationIndex","modulationType","harmonicity","_modulationNode","AMOscillator","_modulationScale","FatOscillator","_oscillators","_spread","osc","OmniOscillator","_sourceType","OmniOscType","Pulse","PWM","Osc","FM","AM","Fat","_createNewOscillator","oscType","OscillatorConstructor","oldOsc","mType","Instrument","Monophonic","portamento","_triggerEnvelopeAttack","setNote","_triggerEnvelopeRelease","currentNote","portTime","Synth","oscillator","envelope","AMSynth","modulation","modulationEnvelope","moduation","MonoSynth","filterEnvelope","DuoSynth","voice0","voice1","_vibrato","vibratoRate","_vibratoGain","vibratoAmount","FMSynth","carrier","modulator","MembraneSynth","pitchDecay","maxNote","inharmRatios","MetalSynth","_freqMultipliers","_amplitue","_highpass","_filterFreqScaler","vel","octs","Noise","_whiteNoise","_brownNoise","_pinkNoise","bufferLength","channelNum","b0","b1","b2","b3","b4","b5","b6","white","lastOut","NoiseSynth","noise","PluckSynth","_noise","attackNoise","_lfcf","delayAmount","PolySynth","polyphony","MAX_POLYPHONY","voices","_triggers","voice","notes","oldest","oldestIndex","stringified","desc","releaseAll","Player","autostart","_onload","retrigger","seek","Sampler","player","SimpleSynth","GainToAudio","Normalize","inputMin","_inputMin","_inputMax","_div","BufferSource","onended","_startTime","_onended","fadeIn","fadeOut","fadeInTime","fadeOutTime","playbackState","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","ExternalInput","_mediaStream","_stream","_constraints","_inputNum","_gate","_getUserMedia","supported","sources","optional","sourceId","stream","_onStream","createMediaStreamSource","getSources","getTracks","_canGetSources","MediaStreamTrack","media_sources","buffers","_activeSources","_getBuffer","startLoop","stopAll","GrainPlayer","_player","_grainSize","grainSize","_overlap","overlap","drift","_offset","bufferDuration","originalFadeIn","endSegmentDuration","scrub","Microphone"],"mappings":"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","file":"static/js/main.af61e8d6.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/tinysynth/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ((function(modules) {\n\t// Check all modules for deduplicated modules\n\tfor(var i in modules) {\n\t\tif(Object.prototype.hasOwnProperty.call(modules, i)) {\n\t\t\tswitch(typeof modules[i]) {\n\t\t\tcase \"function\": break;\n\t\t\tcase \"object\":\n\t\t\t\t// Module can be created from a template\n\t\t\t\tmodules[i] = (function(_m) {\n\t\t\t\t\tvar args = _m.slice(1), fn = modules[_m[0]];\n\t\t\t\t\treturn function (a,b,c) {\n\t\t\t\t\t\tfn.apply(this, [a,b,c].concat(args));\n\t\t\t\t\t};\n\t\t\t\t}(modules[i]));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// Module is a copy of another module\n\t\t\t\tmodules[i] = modules[modules[i]];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn modules;\n}([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(100);\n\tmodule.exports = __webpack_require__(103);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Use invariant() to assert state which your program assumes to be true.\n\t *\n\t * Provide sprintf-style format (only %s is supported) and arguments\n\t * to provide information about what broke and what you were\n\t * expecting.\n\t *\n\t * The invariant message will be stripped in production, but the invariant\n\t * will remain to ensure logic does not differ in production.\n\t */\n\t\n\tfunction invariant(condition, format, a, b, c, d, e, f) {\n\t  if (false) {\n\t    if (format === undefined) {\n\t      throw new Error('invariant requires an error message argument');\n\t    }\n\t  }\n\t\n\t  if (!condition) {\n\t    var error;\n\t    if (format === undefined) {\n\t      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n\t    } else {\n\t      var args = [a, b, c, d, e, f];\n\t      var argIndex = 0;\n\t      error = new Error(format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      }));\n\t      error.name = 'Invariant Violation';\n\t    }\n\t\n\t    error.framesToPop = 1; // we don't care about invariant's own frame\n\t    throw error;\n\t  }\n\t}\n\t\n\tmodule.exports = invariant;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule reactProdInvariant\n\t * \n\t */\n\t'use strict';\n\t\n\t/**\n\t * WARNING: DO NOT manually require this module.\n\t * This is a replacement for `invariant(...)` used by the error code system\n\t * and will _only_ be required by the corresponding babel pass.\n\t * It always throws.\n\t */\n\t\n\tfunction reactProdInvariant(code) {\n\t  var argCount = arguments.length - 1;\n\t\n\t  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;\n\t\n\t  for (var argIdx = 0; argIdx < argCount; argIdx++) {\n\t    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);\n\t  }\n\t\n\t  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';\n\t\n\t  var error = new Error(message);\n\t  error.name = 'Invariant Violation';\n\t  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame\n\t\n\t  throw error;\n\t}\n\t\n\tmodule.exports = reactProdInvariant;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyFunction = __webpack_require__(7);\n\t\n\t/**\n\t * Similar to invariant but only logs a warning if the condition is not met.\n\t * This can be used to log issues in development environments in critical\n\t * paths. Removing the logging code for production environments will keep the\n\t * same logic and follow the same code paths.\n\t */\n\t\n\tvar warning = emptyFunction;\n\t\n\tif (false) {\n\t  (function () {\n\t    var printWarning = function printWarning(format) {\n\t      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        args[_key - 1] = arguments[_key];\n\t      }\n\t\n\t      var argIndex = 0;\n\t      var message = 'Warning: ' + format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      });\n\t      if (typeof console !== 'undefined') {\n\t        console.error(message);\n\t      }\n\t      try {\n\t        // --- Welcome to debugging React ---\n\t        // This error was thrown as a convenience so that you can use this stack\n\t        // to find the callsite that caused this warning to fire.\n\t        throw new Error(message);\n\t      } catch (x) {}\n\t    };\n\t\n\t    warning = function warning(condition, format) {\n\t      if (format === undefined) {\n\t        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n\t      }\n\t\n\t      if (format.indexOf('Failed Composite propType: ') === 0) {\n\t        return; // Ignore CompositeComponent proptype check.\n\t      }\n\t\n\t      if (!condition) {\n\t        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n\t          args[_key2 - 2] = arguments[_key2];\n\t        }\n\t\n\t        printWarning.apply(undefined, [format].concat(args));\n\t      }\n\t    };\n\t  })();\n\t}\n\t\n\tmodule.exports = warning;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (Object.getOwnPropertySymbols) {\n\t\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMComponentTree\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar DOMProperty = __webpack_require__(17);\n\tvar ReactDOMComponentFlags = __webpack_require__(65);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\n\tvar Flags = ReactDOMComponentFlags;\n\t\n\tvar internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);\n\t\n\t/**\n\t * Drill down (through composites and empty components) until we get a host or\n\t * host text component.\n\t *\n\t * This is pretty polymorphic but unavoidable with the current structure we have\n\t * for `_renderedChildren`.\n\t */\n\tfunction getRenderedHostOrTextFromComponent(component) {\n\t  var rendered;\n\t  while (rendered = component._renderedComponent) {\n\t    component = rendered;\n\t  }\n\t  return component;\n\t}\n\t\n\t/**\n\t * Populate `_hostNode` on the rendered host/text component with the given\n\t * DOM node. The passed `inst` can be a composite.\n\t */\n\tfunction precacheNode(inst, node) {\n\t  var hostInst = getRenderedHostOrTextFromComponent(inst);\n\t  hostInst._hostNode = node;\n\t  node[internalInstanceKey] = hostInst;\n\t}\n\t\n\tfunction uncacheNode(inst) {\n\t  var node = inst._hostNode;\n\t  if (node) {\n\t    delete node[internalInstanceKey];\n\t    inst._hostNode = null;\n\t  }\n\t}\n\t\n\t/**\n\t * Populate `_hostNode` on each child of `inst`, assuming that the children\n\t * match up with the DOM (element) children of `node`.\n\t *\n\t * We cache entire levels at once to avoid an n^2 problem where we access the\n\t * children of a node sequentially and have to walk from the start to our target\n\t * node every time.\n\t *\n\t * Since we update `_renderedChildren` and the actual DOM at (slightly)\n\t * different times, we could race here and see a newer `_renderedChildren` than\n\t * the DOM nodes we see. To avoid this, ReactMultiChild calls\n\t * `prepareToManageChildren` before we change `_renderedChildren`, at which\n\t * time the container's child nodes are always cached (until it unmounts).\n\t */\n\tfunction precacheChildNodes(inst, node) {\n\t  if (inst._flags & Flags.hasCachedChildNodes) {\n\t    return;\n\t  }\n\t  var children = inst._renderedChildren;\n\t  var childNode = node.firstChild;\n\t  outer: for (var name in children) {\n\t    if (!children.hasOwnProperty(name)) {\n\t      continue;\n\t    }\n\t    var childInst = children[name];\n\t    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;\n\t    if (childID === 0) {\n\t      // We're currently unmounting this child in ReactMultiChild; skip it.\n\t      continue;\n\t    }\n\t    // We assume the child nodes are in the same order as the child instances.\n\t    for (; childNode !== null; childNode = childNode.nextSibling) {\n\t      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {\n\t        precacheNode(childInst, childNode);\n\t        continue outer;\n\t      }\n\t    }\n\t    // We reached the end of the DOM children without finding an ID match.\n\t     true ?  false ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;\n\t  }\n\t  inst._flags |= Flags.hasCachedChildNodes;\n\t}\n\t\n\t/**\n\t * Given a DOM node, return the closest ReactDOMComponent or\n\t * ReactDOMTextComponent instance ancestor.\n\t */\n\tfunction getClosestInstanceFromNode(node) {\n\t  if (node[internalInstanceKey]) {\n\t    return node[internalInstanceKey];\n\t  }\n\t\n\t  // Walk up the tree until we find an ancestor whose instance we have cached.\n\t  var parents = [];\n\t  while (!node[internalInstanceKey]) {\n\t    parents.push(node);\n\t    if (node.parentNode) {\n\t      node = node.parentNode;\n\t    } else {\n\t      // Top of the tree. This node must not be part of a React tree (or is\n\t      // unmounted, potentially).\n\t      return null;\n\t    }\n\t  }\n\t\n\t  var closest;\n\t  var inst;\n\t  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {\n\t    closest = inst;\n\t    if (parents.length) {\n\t      precacheChildNodes(inst, node);\n\t    }\n\t  }\n\t\n\t  return closest;\n\t}\n\t\n\t/**\n\t * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent\n\t * instance, or null if the node was not rendered by this React.\n\t */\n\tfunction getInstanceFromNode(node) {\n\t  var inst = getClosestInstanceFromNode(node);\n\t  if (inst != null && inst._hostNode === node) {\n\t    return inst;\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding\n\t * DOM node.\n\t */\n\tfunction getNodeFromInstance(inst) {\n\t  // Without this first invariant, passing a non-DOM-component triggers the next\n\t  // invariant for a missing parent, which is super confusing.\n\t  !(inst._hostNode !== undefined) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\t\n\t  if (inst._hostNode) {\n\t    return inst._hostNode;\n\t  }\n\t\n\t  // Walk up the tree until we find an ancestor whose DOM node we have cached.\n\t  var parents = [];\n\t  while (!inst._hostNode) {\n\t    parents.push(inst);\n\t    !inst._hostParent ?  false ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;\n\t    inst = inst._hostParent;\n\t  }\n\t\n\t  // Now parents contains each ancestor that does *not* have a cached native\n\t  // node, and `inst` is the deepest ancestor that does.\n\t  for (; parents.length; inst = parents.pop()) {\n\t    precacheChildNodes(inst, inst._hostNode);\n\t  }\n\t\n\t  return inst._hostNode;\n\t}\n\t\n\tvar ReactDOMComponentTree = {\n\t  getClosestInstanceFromNode: getClosestInstanceFromNode,\n\t  getInstanceFromNode: getInstanceFromNode,\n\t  getNodeFromInstance: getNodeFromInstance,\n\t  precacheChildNodes: precacheChildNodes,\n\t  precacheNode: precacheNode,\n\t  uncacheNode: uncacheNode\n\t};\n\t\n\tmodule.exports = ReactDOMComponentTree;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\t\n\t/**\n\t * Simple, lightweight module assisting with the detection and context of\n\t * Worker. Helps avoid circular dependencies and allows code to reason about\n\t * whether or not they are in a Worker, even if they never include the main\n\t * `ReactWorker` dependency.\n\t */\n\tvar ExecutionEnvironment = {\n\t\n\t  canUseDOM: canUseDOM,\n\t\n\t  canUseWorkers: typeof Worker !== 'undefined',\n\t\n\t  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\t\n\t  canUseViewport: canUseDOM && !!window.screen,\n\t\n\t  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\t\n\t};\n\t\n\tmodule.exports = ExecutionEnvironment;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\tfunction makeEmptyFunction(arg) {\n\t  return function () {\n\t    return arg;\n\t  };\n\t}\n\t\n\t/**\n\t * This function accepts and discards inputs; it has no side effects. This is\n\t * primarily useful idiomatically for overridable function endpoints which\n\t * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n\t */\n\tvar emptyFunction = function emptyFunction() {};\n\t\n\temptyFunction.thatReturns = makeEmptyFunction;\n\temptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n\temptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n\temptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\temptyFunction.thatReturnsThis = function () {\n\t  return this;\n\t};\n\temptyFunction.thatReturnsArgument = function (arg) {\n\t  return arg;\n\t};\n\t\n\tmodule.exports = emptyFunction;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2016-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactInstrumentation\n\t */\n\t\n\t'use strict';\n\t\n\tvar debugTool = null;\n\t\n\tif (false) {\n\t  var ReactDebugTool = require('./ReactDebugTool');\n\t  debugTool = ReactDebugTool;\n\t}\n\t\n\tmodule.exports = { debugTool: debugTool };\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactElement\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(15);\n\t\n\tvar warning = __webpack_require__(3);\n\tvar canDefineProperty = __webpack_require__(78);\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t// The Symbol used to tag the ReactElement type. If there is no native Symbol\n\t// nor polyfill, then a plain number is used for performance.\n\tvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\t\n\tvar RESERVED_PROPS = {\n\t  key: true,\n\t  ref: true,\n\t  __self: true,\n\t  __source: true\n\t};\n\t\n\tvar specialPropKeyWarningShown, specialPropRefWarningShown;\n\t\n\tfunction hasValidRef(config) {\n\t  if (false) {\n\t    if (hasOwnProperty.call(config, 'ref')) {\n\t      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\t      if (getter && getter.isReactWarning) {\n\t        return false;\n\t      }\n\t    }\n\t  }\n\t  return config.ref !== undefined;\n\t}\n\t\n\tfunction hasValidKey(config) {\n\t  if (false) {\n\t    if (hasOwnProperty.call(config, 'key')) {\n\t      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\t      if (getter && getter.isReactWarning) {\n\t        return false;\n\t      }\n\t    }\n\t  }\n\t  return config.key !== undefined;\n\t}\n\t\n\tfunction defineKeyPropWarningGetter(props, displayName) {\n\t  var warnAboutAccessingKey = function () {\n\t    if (!specialPropKeyWarningShown) {\n\t      specialPropKeyWarningShown = true;\n\t       false ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n\t    }\n\t  };\n\t  warnAboutAccessingKey.isReactWarning = true;\n\t  Object.defineProperty(props, 'key', {\n\t    get: warnAboutAccessingKey,\n\t    configurable: true\n\t  });\n\t}\n\t\n\tfunction defineRefPropWarningGetter(props, displayName) {\n\t  var warnAboutAccessingRef = function () {\n\t    if (!specialPropRefWarningShown) {\n\t      specialPropRefWarningShown = true;\n\t       false ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n\t    }\n\t  };\n\t  warnAboutAccessingRef.isReactWarning = true;\n\t  Object.defineProperty(props, 'ref', {\n\t    get: warnAboutAccessingRef,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Factory method to create a new React element. This no longer adheres to\n\t * the class pattern, so do not use new to call it. Also, no instanceof check\n\t * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n\t * if something is a React Element.\n\t *\n\t * @param {*} type\n\t * @param {*} key\n\t * @param {string|object} ref\n\t * @param {*} self A *temporary* helper to detect places where `this` is\n\t * different from the `owner` when React.createElement is called, so that we\n\t * can warn. We want to get rid of owner and replace string `ref`s with arrow\n\t * functions, and as long as `this` and owner are the same, there will be no\n\t * change in behavior.\n\t * @param {*} source An annotation object (added by a transpiler or otherwise)\n\t * indicating filename, line number, and/or other information.\n\t * @param {*} owner\n\t * @param {*} props\n\t * @internal\n\t */\n\tvar ReactElement = function (type, key, ref, self, source, owner, props) {\n\t  var element = {\n\t    // This tag allow us to uniquely identify this as a React Element\n\t    $$typeof: REACT_ELEMENT_TYPE,\n\t\n\t    // Built-in properties that belong on the element\n\t    type: type,\n\t    key: key,\n\t    ref: ref,\n\t    props: props,\n\t\n\t    // Record the component responsible for creating this element.\n\t    _owner: owner\n\t  };\n\t\n\t  if (false) {\n\t    // The validation flag is currently mutative. We put it on\n\t    // an external backing store so that we can freeze the whole object.\n\t    // This can be replaced with a WeakMap once they are implemented in\n\t    // commonly used development environments.\n\t    element._store = {};\n\t    var shadowChildren = Array.isArray(props.children) ? props.children.slice(0) : props.children;\n\t\n\t    // To make comparing ReactElements easier for testing purposes, we make\n\t    // the validation flag non-enumerable (where possible, which should\n\t    // include every environment we run tests in), so the test framework\n\t    // ignores it.\n\t    if (canDefineProperty) {\n\t      Object.defineProperty(element._store, 'validated', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: true,\n\t        value: false\n\t      });\n\t      // self and source are DEV only properties.\n\t      Object.defineProperty(element, '_self', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: false,\n\t        value: self\n\t      });\n\t      Object.defineProperty(element, '_shadowChildren', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: false,\n\t        value: shadowChildren\n\t      });\n\t      // Two elements created in two different places should be considered\n\t      // equal for testing purposes and therefore we hide it from enumeration.\n\t      Object.defineProperty(element, '_source', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: false,\n\t        value: source\n\t      });\n\t    } else {\n\t      element._store.validated = false;\n\t      element._self = self;\n\t      element._shadowChildren = shadowChildren;\n\t      element._source = source;\n\t    }\n\t    if (Object.freeze) {\n\t      Object.freeze(element.props);\n\t      Object.freeze(element);\n\t    }\n\t  }\n\t\n\t  return element;\n\t};\n\t\n\t/**\n\t * Create and return a new ReactElement of the given type.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement\n\t */\n\tReactElement.createElement = function (type, config, children) {\n\t  var propName;\n\t\n\t  // Reserved names are extracted\n\t  var props = {};\n\t\n\t  var key = null;\n\t  var ref = null;\n\t  var self = null;\n\t  var source = null;\n\t\n\t  if (config != null) {\n\t    if (hasValidRef(config)) {\n\t      ref = config.ref;\n\t    }\n\t    if (hasValidKey(config)) {\n\t      key = '' + config.key;\n\t    }\n\t\n\t    self = config.__self === undefined ? null : config.__self;\n\t    source = config.__source === undefined ? null : config.__source;\n\t    // Remaining properties are added to a new props object\n\t    for (propName in config) {\n\t      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n\t        props[propName] = config[propName];\n\t      }\n\t    }\n\t  }\n\t\n\t  // Children can be more than one argument, and those are transferred onto\n\t  // the newly allocated props object.\n\t  var childrenLength = arguments.length - 2;\n\t  if (childrenLength === 1) {\n\t    props.children = children;\n\t  } else if (childrenLength > 1) {\n\t    var childArray = Array(childrenLength);\n\t    for (var i = 0; i < childrenLength; i++) {\n\t      childArray[i] = arguments[i + 2];\n\t    }\n\t    props.children = childArray;\n\t  }\n\t\n\t  // Resolve default props\n\t  if (type && type.defaultProps) {\n\t    var defaultProps = type.defaultProps;\n\t    for (propName in defaultProps) {\n\t      if (props[propName] === undefined) {\n\t        props[propName] = defaultProps[propName];\n\t      }\n\t    }\n\t  }\n\t  if (false) {\n\t    if (key || ref) {\n\t      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\n\t        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\t        if (key) {\n\t          defineKeyPropWarningGetter(props, displayName);\n\t        }\n\t        if (ref) {\n\t          defineRefPropWarningGetter(props, displayName);\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\t};\n\t\n\t/**\n\t * Return a function that produces ReactElements of a given type.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory\n\t */\n\tReactElement.createFactory = function (type) {\n\t  var factory = ReactElement.createElement.bind(null, type);\n\t  // Expose the type on the factory and the prototype so that it can be\n\t  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n\t  // This should not be named `constructor` since this may not be the function\n\t  // that created the element, and it may not even be a constructor.\n\t  // Legacy hook TODO: Warn if this is accessed\n\t  factory.type = type;\n\t  return factory;\n\t};\n\t\n\tReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n\t  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\t\n\t  return newElement;\n\t};\n\t\n\t/**\n\t * Clone and return a new ReactElement using element as the starting point.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement\n\t */\n\tReactElement.cloneElement = function (element, config, children) {\n\t  var propName;\n\t\n\t  // Original props are copied\n\t  var props = _assign({}, element.props);\n\t\n\t  // Reserved names are extracted\n\t  var key = element.key;\n\t  var ref = element.ref;\n\t  // Self is preserved since the owner is preserved.\n\t  var self = element._self;\n\t  // Source is preserved since cloneElement is unlikely to be targeted by a\n\t  // transpiler, and the original source is probably a better indicator of the\n\t  // true owner.\n\t  var source = element._source;\n\t\n\t  // Owner will be preserved, unless ref is overridden\n\t  var owner = element._owner;\n\t\n\t  if (config != null) {\n\t    if (hasValidRef(config)) {\n\t      // Silently steal the ref from the parent.\n\t      ref = config.ref;\n\t      owner = ReactCurrentOwner.current;\n\t    }\n\t    if (hasValidKey(config)) {\n\t      key = '' + config.key;\n\t    }\n\t\n\t    // Remaining properties override existing props\n\t    var defaultProps;\n\t    if (element.type && element.type.defaultProps) {\n\t      defaultProps = element.type.defaultProps;\n\t    }\n\t    for (propName in config) {\n\t      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n\t        if (config[propName] === undefined && defaultProps !== undefined) {\n\t          // Resolve default props\n\t          props[propName] = defaultProps[propName];\n\t        } else {\n\t          props[propName] = config[propName];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // Children can be more than one argument, and those are transferred onto\n\t  // the newly allocated props object.\n\t  var childrenLength = arguments.length - 2;\n\t  if (childrenLength === 1) {\n\t    props.children = children;\n\t  } else if (childrenLength > 1) {\n\t    var childArray = Array(childrenLength);\n\t    for (var i = 0; i < childrenLength; i++) {\n\t      childArray[i] = arguments[i + 2];\n\t    }\n\t    props.children = childArray;\n\t  }\n\t\n\t  return ReactElement(element.type, key, ref, self, source, owner, props);\n\t};\n\t\n\t/**\n\t * Verifies the object is a ReactElement.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement\n\t * @param {?object} object\n\t * @return {boolean} True if `object` is a valid component.\n\t * @final\n\t */\n\tReactElement.isValidElement = function (object) {\n\t  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n\t};\n\t\n\tReactElement.REACT_ELEMENT_TYPE = REACT_ELEMENT_TYPE;\n\t\n\tmodule.exports = ReactElement;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactUpdates\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar CallbackQueue = __webpack_require__(61);\n\tvar PooledClass = __webpack_require__(14);\n\tvar ReactFeatureFlags = __webpack_require__(68);\n\tvar ReactReconciler = __webpack_require__(18);\n\tvar Transaction = __webpack_require__(24);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar dirtyComponents = [];\n\tvar updateBatchNumber = 0;\n\tvar asapCallbackQueue = CallbackQueue.getPooled();\n\tvar asapEnqueued = false;\n\t\n\tvar batchingStrategy = null;\n\t\n\tfunction ensureInjected() {\n\t  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ?  false ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;\n\t}\n\t\n\tvar NESTED_UPDATES = {\n\t  initialize: function () {\n\t    this.dirtyComponentsLength = dirtyComponents.length;\n\t  },\n\t  close: function () {\n\t    if (this.dirtyComponentsLength !== dirtyComponents.length) {\n\t      // Additional updates were enqueued by componentDidUpdate handlers or\n\t      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run\n\t      // these new updates so that if A's componentDidUpdate calls setState on\n\t      // B, B will update before the callback A's updater provided when calling\n\t      // setState.\n\t      dirtyComponents.splice(0, this.dirtyComponentsLength);\n\t      flushBatchedUpdates();\n\t    } else {\n\t      dirtyComponents.length = 0;\n\t    }\n\t  }\n\t};\n\t\n\tvar UPDATE_QUEUEING = {\n\t  initialize: function () {\n\t    this.callbackQueue.reset();\n\t  },\n\t  close: function () {\n\t    this.callbackQueue.notifyAll();\n\t  }\n\t};\n\t\n\tvar TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];\n\t\n\tfunction ReactUpdatesFlushTransaction() {\n\t  this.reinitializeTransaction();\n\t  this.dirtyComponentsLength = null;\n\t  this.callbackQueue = CallbackQueue.getPooled();\n\t  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n\t  /* useCreateElement */true);\n\t}\n\t\n\t_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {\n\t  getTransactionWrappers: function () {\n\t    return TRANSACTION_WRAPPERS;\n\t  },\n\t\n\t  destructor: function () {\n\t    this.dirtyComponentsLength = null;\n\t    CallbackQueue.release(this.callbackQueue);\n\t    this.callbackQueue = null;\n\t    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);\n\t    this.reconcileTransaction = null;\n\t  },\n\t\n\t  perform: function (method, scope, a) {\n\t    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`\n\t    // with this transaction's wrappers around it.\n\t    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);\n\t  }\n\t});\n\t\n\tPooledClass.addPoolingTo(ReactUpdatesFlushTransaction);\n\t\n\tfunction batchedUpdates(callback, a, b, c, d, e) {\n\t  ensureInjected();\n\t  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);\n\t}\n\t\n\t/**\n\t * Array comparator for ReactComponents by mount ordering.\n\t *\n\t * @param {ReactComponent} c1 first component you're comparing\n\t * @param {ReactComponent} c2 second component you're comparing\n\t * @return {number} Return value usable by Array.prototype.sort().\n\t */\n\tfunction mountOrderComparator(c1, c2) {\n\t  return c1._mountOrder - c2._mountOrder;\n\t}\n\t\n\tfunction runBatchedUpdates(transaction) {\n\t  var len = transaction.dirtyComponentsLength;\n\t  !(len === dirtyComponents.length) ?  false ? invariant(false, 'Expected flush transaction\\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;\n\t\n\t  // Since reconciling a component higher in the owner hierarchy usually (not\n\t  // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n\t  // them before their children by sorting the array.\n\t  dirtyComponents.sort(mountOrderComparator);\n\t\n\t  // Any updates enqueued while reconciling must be performed after this entire\n\t  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and\n\t  // C, B could update twice in a single batch if C's render enqueues an update\n\t  // to B (since B would have already updated, we should skip it, and the only\n\t  // way we can know to do so is by checking the batch counter).\n\t  updateBatchNumber++;\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    // If a component is unmounted before pending changes apply, it will still\n\t    // be here, but we assume that it has cleared its _pendingCallbacks and\n\t    // that performUpdateIfNecessary is a noop.\n\t    var component = dirtyComponents[i];\n\t\n\t    // If performUpdateIfNecessary happens to enqueue any new updates, we\n\t    // shouldn't execute the callbacks until the next render happens, so\n\t    // stash the callbacks first\n\t    var callbacks = component._pendingCallbacks;\n\t    component._pendingCallbacks = null;\n\t\n\t    var markerName;\n\t    if (ReactFeatureFlags.logTopLevelRenders) {\n\t      var namedComponent = component;\n\t      // Duck type TopLevelWrapper. This is probably always true.\n\t      if (component._currentElement.props === component._renderedComponent._currentElement) {\n\t        namedComponent = component._renderedComponent;\n\t      }\n\t      markerName = 'React update: ' + namedComponent.getName();\n\t      console.time(markerName);\n\t    }\n\t\n\t    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);\n\t\n\t    if (markerName) {\n\t      console.timeEnd(markerName);\n\t    }\n\t\n\t    if (callbacks) {\n\t      for (var j = 0; j < callbacks.length; j++) {\n\t        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar flushBatchedUpdates = function () {\n\t  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents\n\t  // array and perform any updates enqueued by mount-ready handlers (i.e.,\n\t  // componentDidUpdate) but we need to check here too in order to catch\n\t  // updates enqueued by setState callbacks and asap calls.\n\t  while (dirtyComponents.length || asapEnqueued) {\n\t    if (dirtyComponents.length) {\n\t      var transaction = ReactUpdatesFlushTransaction.getPooled();\n\t      transaction.perform(runBatchedUpdates, null, transaction);\n\t      ReactUpdatesFlushTransaction.release(transaction);\n\t    }\n\t\n\t    if (asapEnqueued) {\n\t      asapEnqueued = false;\n\t      var queue = asapCallbackQueue;\n\t      asapCallbackQueue = CallbackQueue.getPooled();\n\t      queue.notifyAll();\n\t      CallbackQueue.release(queue);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Mark a component as needing a rerender, adding an optional callback to a\n\t * list of functions which will be executed once the rerender occurs.\n\t */\n\tfunction enqueueUpdate(component) {\n\t  ensureInjected();\n\t\n\t  // Various parts of our code (such as ReactCompositeComponent's\n\t  // _renderValidatedComponent) assume that calls to render aren't nested;\n\t  // verify that that's the case. (This is called by each top-level update\n\t  // function, like setState, forceUpdate, etc.; creation and\n\t  // destruction of top-level components is guarded in ReactMount.)\n\t\n\t  if (!batchingStrategy.isBatchingUpdates) {\n\t    batchingStrategy.batchedUpdates(enqueueUpdate, component);\n\t    return;\n\t  }\n\t\n\t  dirtyComponents.push(component);\n\t  if (component._updateBatchNumber == null) {\n\t    component._updateBatchNumber = updateBatchNumber + 1;\n\t  }\n\t}\n\t\n\t/**\n\t * Enqueue a callback to be run at the end of the current batching cycle. Throws\n\t * if no updates are currently being performed.\n\t */\n\tfunction asap(callback, context) {\n\t  !batchingStrategy.isBatchingUpdates ?  false ? invariant(false, 'ReactUpdates.asap: Can\\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;\n\t  asapCallbackQueue.enqueue(callback, context);\n\t  asapEnqueued = true;\n\t}\n\t\n\tvar ReactUpdatesInjection = {\n\t  injectReconcileTransaction: function (ReconcileTransaction) {\n\t    !ReconcileTransaction ?  false ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;\n\t    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;\n\t  },\n\t\n\t  injectBatchingStrategy: function (_batchingStrategy) {\n\t    !_batchingStrategy ?  false ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;\n\t    !(typeof _batchingStrategy.batchedUpdates === 'function') ?  false ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;\n\t    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ?  false ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;\n\t    batchingStrategy = _batchingStrategy;\n\t  }\n\t};\n\t\n\tvar ReactUpdates = {\n\t  /**\n\t   * React references `ReactReconcileTransaction` using this property in order\n\t   * to allow dependency injection.\n\t   *\n\t   * @internal\n\t   */\n\t  ReactReconcileTransaction: null,\n\t\n\t  batchedUpdates: batchedUpdates,\n\t  enqueueUpdate: enqueueUpdate,\n\t  flushBatchedUpdates: flushBatchedUpdates,\n\t  injection: ReactUpdatesInjection,\n\t  asap: asap\n\t};\n\t\n\tmodule.exports = ReactUpdates;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule EventConstants\n\t */\n\t\n\t'use strict';\n\t\n\tvar keyMirror = __webpack_require__(25);\n\t\n\tvar PropagationPhases = keyMirror({ bubbled: null, captured: null });\n\t\n\t/**\n\t * Types of raw signals from the browser caught at the top level.\n\t */\n\tvar topLevelTypes = keyMirror({\n\t  topAbort: null,\n\t  topAnimationEnd: null,\n\t  topAnimationIteration: null,\n\t  topAnimationStart: null,\n\t  topBlur: null,\n\t  topCanPlay: null,\n\t  topCanPlayThrough: null,\n\t  topChange: null,\n\t  topClick: null,\n\t  topCompositionEnd: null,\n\t  topCompositionStart: null,\n\t  topCompositionUpdate: null,\n\t  topContextMenu: null,\n\t  topCopy: null,\n\t  topCut: null,\n\t  topDoubleClick: null,\n\t  topDrag: null,\n\t  topDragEnd: null,\n\t  topDragEnter: null,\n\t  topDragExit: null,\n\t  topDragLeave: null,\n\t  topDragOver: null,\n\t  topDragStart: null,\n\t  topDrop: null,\n\t  topDurationChange: null,\n\t  topEmptied: null,\n\t  topEncrypted: null,\n\t  topEnded: null,\n\t  topError: null,\n\t  topFocus: null,\n\t  topInput: null,\n\t  topInvalid: null,\n\t  topKeyDown: null,\n\t  topKeyPress: null,\n\t  topKeyUp: null,\n\t  topLoad: null,\n\t  topLoadedData: null,\n\t  topLoadedMetadata: null,\n\t  topLoadStart: null,\n\t  topMouseDown: null,\n\t  topMouseMove: null,\n\t  topMouseOut: null,\n\t  topMouseOver: null,\n\t  topMouseUp: null,\n\t  topPaste: null,\n\t  topPause: null,\n\t  topPlay: null,\n\t  topPlaying: null,\n\t  topProgress: null,\n\t  topRateChange: null,\n\t  topReset: null,\n\t  topScroll: null,\n\t  topSeeked: null,\n\t  topSeeking: null,\n\t  topSelectionChange: null,\n\t  topStalled: null,\n\t  topSubmit: null,\n\t  topSuspend: null,\n\t  topTextInput: null,\n\t  topTimeUpdate: null,\n\t  topTouchCancel: null,\n\t  topTouchEnd: null,\n\t  topTouchMove: null,\n\t  topTouchStart: null,\n\t  topTransitionEnd: null,\n\t  topVolumeChange: null,\n\t  topWaiting: null,\n\t  topWheel: null\n\t});\n\t\n\tvar EventConstants = {\n\t  topLevelTypes: topLevelTypes,\n\t  PropagationPhases: PropagationPhases\n\t};\n\t\n\tmodule.exports = EventConstants;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar PooledClass = __webpack_require__(14);\n\t\n\tvar emptyFunction = __webpack_require__(7);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar didWarnForAddedNewProperty = false;\n\tvar isProxySupported = typeof Proxy === 'function';\n\t\n\tvar shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar EventInterface = {\n\t  type: null,\n\t  target: null,\n\t  // currentTarget is set when dispatching; no use in copying it here\n\t  currentTarget: emptyFunction.thatReturnsNull,\n\t  eventPhase: null,\n\t  bubbles: null,\n\t  cancelable: null,\n\t  timeStamp: function (event) {\n\t    return event.timeStamp || Date.now();\n\t  },\n\t  defaultPrevented: null,\n\t  isTrusted: null\n\t};\n\t\n\t/**\n\t * Synthetic events are dispatched by event plugins, typically in response to a\n\t * top-level event delegation handler.\n\t *\n\t * These systems should generally use pooling to reduce the frequency of garbage\n\t * collection. The system should check `isPersistent` to determine whether the\n\t * event should be released into the pool after being dispatched. Users that\n\t * need a persisted event should invoke `persist`.\n\t *\n\t * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n\t * normalizing browser quirks. Subclasses do not necessarily have to implement a\n\t * DOM interface; custom application-specific events can also subclass this.\n\t *\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {*} targetInst Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @param {DOMEventTarget} nativeEventTarget Target node.\n\t */\n\tfunction SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {\n\t  if (false) {\n\t    // these have a getter/setter for warnings\n\t    delete this.nativeEvent;\n\t    delete this.preventDefault;\n\t    delete this.stopPropagation;\n\t  }\n\t\n\t  this.dispatchConfig = dispatchConfig;\n\t  this._targetInst = targetInst;\n\t  this.nativeEvent = nativeEvent;\n\t\n\t  var Interface = this.constructor.Interface;\n\t  for (var propName in Interface) {\n\t    if (!Interface.hasOwnProperty(propName)) {\n\t      continue;\n\t    }\n\t    if (false) {\n\t      delete this[propName]; // this has a getter/setter for warnings\n\t    }\n\t    var normalize = Interface[propName];\n\t    if (normalize) {\n\t      this[propName] = normalize(nativeEvent);\n\t    } else {\n\t      if (propName === 'target') {\n\t        this.target = nativeEventTarget;\n\t      } else {\n\t        this[propName] = nativeEvent[propName];\n\t      }\n\t    }\n\t  }\n\t\n\t  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n\t  if (defaultPrevented) {\n\t    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n\t  } else {\n\t    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n\t  }\n\t  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n\t  return this;\n\t}\n\t\n\t_assign(SyntheticEvent.prototype, {\n\t\n\t  preventDefault: function () {\n\t    this.defaultPrevented = true;\n\t    var event = this.nativeEvent;\n\t    if (!event) {\n\t      return;\n\t    }\n\t\n\t    if (event.preventDefault) {\n\t      event.preventDefault();\n\t    } else if (typeof event.returnValue !== 'unknown') {\n\t      // eslint-disable-line valid-typeof\n\t      event.returnValue = false;\n\t    }\n\t    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n\t  },\n\t\n\t  stopPropagation: function () {\n\t    var event = this.nativeEvent;\n\t    if (!event) {\n\t      return;\n\t    }\n\t\n\t    if (event.stopPropagation) {\n\t      event.stopPropagation();\n\t    } else if (typeof event.cancelBubble !== 'unknown') {\n\t      // eslint-disable-line valid-typeof\n\t      // The ChangeEventPlugin registers a \"propertychange\" event for\n\t      // IE. This event does not support bubbling or cancelling, and\n\t      // any references to cancelBubble throw \"Member not found\".  A\n\t      // typeof check of \"unknown\" circumvents this issue (and is also\n\t      // IE specific).\n\t      event.cancelBubble = true;\n\t    }\n\t\n\t    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n\t  },\n\t\n\t  /**\n\t   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n\t   * them back into the pool. This allows a way to hold onto a reference that\n\t   * won't be added back into the pool.\n\t   */\n\t  persist: function () {\n\t    this.isPersistent = emptyFunction.thatReturnsTrue;\n\t  },\n\t\n\t  /**\n\t   * Checks if this event should be released back into the pool.\n\t   *\n\t   * @return {boolean} True if this should not be released, false otherwise.\n\t   */\n\t  isPersistent: emptyFunction.thatReturnsFalse,\n\t\n\t  /**\n\t   * `PooledClass` looks for `destructor` on each instance it releases.\n\t   */\n\t  destructor: function () {\n\t    var Interface = this.constructor.Interface;\n\t    for (var propName in Interface) {\n\t      if (false) {\n\t        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));\n\t      } else {\n\t        this[propName] = null;\n\t      }\n\t    }\n\t    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {\n\t      this[shouldBeReleasedProperties[i]] = null;\n\t    }\n\t    if (false) {\n\t      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));\n\t      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));\n\t      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));\n\t    }\n\t  }\n\t\n\t});\n\t\n\tSyntheticEvent.Interface = EventInterface;\n\t\n\tif (false) {\n\t  if (isProxySupported) {\n\t    /*eslint-disable no-func-assign */\n\t    SyntheticEvent = new Proxy(SyntheticEvent, {\n\t      construct: function (target, args) {\n\t        return this.apply(target, Object.create(target.prototype), args);\n\t      },\n\t      apply: function (constructor, that, args) {\n\t        return new Proxy(constructor.apply(that, args), {\n\t          set: function (target, prop, value) {\n\t            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {\n\t              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\\'re ' + 'seeing this, you\\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;\n\t              didWarnForAddedNewProperty = true;\n\t            }\n\t            target[prop] = value;\n\t            return true;\n\t          }\n\t        });\n\t      }\n\t    });\n\t    /*eslint-enable no-func-assign */\n\t  }\n\t}\n\t/**\n\t * Helper to reduce boilerplate when creating subclasses.\n\t *\n\t * @param {function} Class\n\t * @param {?object} Interface\n\t */\n\tSyntheticEvent.augmentClass = function (Class, Interface) {\n\t  var Super = this;\n\t\n\t  var E = function () {};\n\t  E.prototype = Super.prototype;\n\t  var prototype = new E();\n\t\n\t  _assign(prototype, Class.prototype);\n\t  Class.prototype = prototype;\n\t  Class.prototype.constructor = Class;\n\t\n\t  Class.Interface = _assign({}, Super.Interface, Interface);\n\t  Class.augmentClass = Super.augmentClass;\n\t\n\t  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);\n\t};\n\t\n\tPooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);\n\t\n\tmodule.exports = SyntheticEvent;\n\t\n\t/**\n\t  * Helper to nullify syntheticEvent instance properties when destructing\n\t  *\n\t  * @param {object} SyntheticEvent\n\t  * @param {String} propName\n\t  * @return {object} defineProperty object\n\t  */\n\tfunction getPooledWarningPropertyDefinition(propName, getVal) {\n\t  var isFunction = typeof getVal === 'function';\n\t  return {\n\t    configurable: true,\n\t    set: set,\n\t    get: get\n\t  };\n\t\n\t  function set(val) {\n\t    var action = isFunction ? 'setting the method' : 'setting the property';\n\t    warn(action, 'This is effectively a no-op');\n\t    return val;\n\t  }\n\t\n\t  function get() {\n\t    var action = isFunction ? 'accessing the method' : 'accessing the property';\n\t    var result = isFunction ? 'This is a no-op function' : 'This is set to null';\n\t    warn(action, result);\n\t    return getVal;\n\t  }\n\t\n\t  function warn(action, result) {\n\t    var warningCondition = false;\n\t     false ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\\'re seeing this, ' + 'you\\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;\n\t  }\n\t}\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t/**\n\t * Allows extraction of a minified key. Let's the build system minify keys\n\t * without losing the ability to dynamically use key strings as values\n\t * themselves. Pass in an object with a single key/val pair and it will return\n\t * you the string key of that single record. Suppose you want to grab the\n\t * value for a key 'className' inside of an object. Key/val minification may\n\t * have aliased that key to be 'xa12'. keyOf({className: null}) will return\n\t * 'xa12' in that case. Resolve keys you want to use once at startup time, then\n\t * reuse those resolutions.\n\t */\n\tvar keyOf = function keyOf(oneKeyObj) {\n\t  var key;\n\t  for (key in oneKeyObj) {\n\t    if (!oneKeyObj.hasOwnProperty(key)) {\n\t      continue;\n\t    }\n\t    return key;\n\t  }\n\t  return null;\n\t};\n\t\n\tmodule.exports = keyOf;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule PooledClass\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Static poolers. Several custom versions for each potential number of\n\t * arguments. A completely generic pooler is easy to implement, but would\n\t * require accessing the `arguments` object. In each of these, `this` refers to\n\t * the Class itself, not an instance. If any others are needed, simply add them\n\t * here, or in their own files.\n\t */\n\tvar oneArgumentPooler = function (copyFieldsFrom) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, copyFieldsFrom);\n\t    return instance;\n\t  } else {\n\t    return new Klass(copyFieldsFrom);\n\t  }\n\t};\n\t\n\tvar twoArgumentPooler = function (a1, a2) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2);\n\t  }\n\t};\n\t\n\tvar threeArgumentPooler = function (a1, a2, a3) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2, a3);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2, a3);\n\t  }\n\t};\n\t\n\tvar fourArgumentPooler = function (a1, a2, a3, a4) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2, a3, a4);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2, a3, a4);\n\t  }\n\t};\n\t\n\tvar fiveArgumentPooler = function (a1, a2, a3, a4, a5) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2, a3, a4, a5);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2, a3, a4, a5);\n\t  }\n\t};\n\t\n\tvar standardReleaser = function (instance) {\n\t  var Klass = this;\n\t  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;\n\t  instance.destructor();\n\t  if (Klass.instancePool.length < Klass.poolSize) {\n\t    Klass.instancePool.push(instance);\n\t  }\n\t};\n\t\n\tvar DEFAULT_POOL_SIZE = 10;\n\tvar DEFAULT_POOLER = oneArgumentPooler;\n\t\n\t/**\n\t * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n\t * itself (statically) not adding any prototypical fields. Any CopyConstructor\n\t * you give this may have a `poolSize` property, and will look for a\n\t * prototypical `destructor` on instances.\n\t *\n\t * @param {Function} CopyConstructor Constructor that can be used to reset.\n\t * @param {Function} pooler Customizable pooler.\n\t */\n\tvar addPoolingTo = function (CopyConstructor, pooler) {\n\t  var NewKlass = CopyConstructor;\n\t  NewKlass.instancePool = [];\n\t  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n\t  if (!NewKlass.poolSize) {\n\t    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n\t  }\n\t  NewKlass.release = standardReleaser;\n\t  return NewKlass;\n\t};\n\t\n\tvar PooledClass = {\n\t  addPoolingTo: addPoolingTo,\n\t  oneArgumentPooler: oneArgumentPooler,\n\t  twoArgumentPooler: twoArgumentPooler,\n\t  threeArgumentPooler: threeArgumentPooler,\n\t  fourArgumentPooler: fourArgumentPooler,\n\t  fiveArgumentPooler: fiveArgumentPooler\n\t};\n\t\n\tmodule.exports = PooledClass;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactCurrentOwner\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Keeps track of the current owner.\n\t *\n\t * The current owner is the component who should own any components that are\n\t * currently being constructed.\n\t */\n\t\n\tvar ReactCurrentOwner = {\n\t\n\t  /**\n\t   * @internal\n\t   * @type {ReactComponent}\n\t   */\n\t  current: null\n\t\n\t};\n\t\n\tmodule.exports = ReactCurrentOwner;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule DOMLazyTree\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMNamespaces = __webpack_require__(34);\n\tvar setInnerHTML = __webpack_require__(30);\n\t\n\tvar createMicrosoftUnsafeLocalFunction = __webpack_require__(48);\n\tvar setTextContent = __webpack_require__(85);\n\t\n\tvar ELEMENT_NODE_TYPE = 1;\n\tvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\t\n\t/**\n\t * In IE (8-11) and Edge, appending nodes with no children is dramatically\n\t * faster than appending a full subtree, so we essentially queue up the\n\t * .appendChild calls here and apply them so each node is added to its parent\n\t * before any children are added.\n\t *\n\t * In other browsers, doing so is slower or neutral compared to the other order\n\t * (in Firefox, twice as slow) so we only do this inversion in IE.\n\t *\n\t * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.\n\t */\n\tvar enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\\bEdge\\/\\d/.test(navigator.userAgent);\n\t\n\tfunction insertTreeChildren(tree) {\n\t  if (!enableLazy) {\n\t    return;\n\t  }\n\t  var node = tree.node;\n\t  var children = tree.children;\n\t  if (children.length) {\n\t    for (var i = 0; i < children.length; i++) {\n\t      insertTreeBefore(node, children[i], null);\n\t    }\n\t  } else if (tree.html != null) {\n\t    setInnerHTML(node, tree.html);\n\t  } else if (tree.text != null) {\n\t    setTextContent(node, tree.text);\n\t  }\n\t}\n\t\n\tvar insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {\n\t  // DocumentFragments aren't actually part of the DOM after insertion so\n\t  // appending children won't update the DOM. We need to ensure the fragment\n\t  // is properly populated first, breaking out of our lazy approach for just\n\t  // this level. Also, some <object> plugins (like Flash Player) will read\n\t  // <param> nodes immediately upon insertion into the DOM, so <object>\n\t  // must also be populated prior to insertion into the DOM.\n\t  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {\n\t    insertTreeChildren(tree);\n\t    parentNode.insertBefore(tree.node, referenceNode);\n\t  } else {\n\t    parentNode.insertBefore(tree.node, referenceNode);\n\t    insertTreeChildren(tree);\n\t  }\n\t});\n\t\n\tfunction replaceChildWithTree(oldNode, newTree) {\n\t  oldNode.parentNode.replaceChild(newTree.node, oldNode);\n\t  insertTreeChildren(newTree);\n\t}\n\t\n\tfunction queueChild(parentTree, childTree) {\n\t  if (enableLazy) {\n\t    parentTree.children.push(childTree);\n\t  } else {\n\t    parentTree.node.appendChild(childTree.node);\n\t  }\n\t}\n\t\n\tfunction queueHTML(tree, html) {\n\t  if (enableLazy) {\n\t    tree.html = html;\n\t  } else {\n\t    setInnerHTML(tree.node, html);\n\t  }\n\t}\n\t\n\tfunction queueText(tree, text) {\n\t  if (enableLazy) {\n\t    tree.text = text;\n\t  } else {\n\t    setTextContent(tree.node, text);\n\t  }\n\t}\n\t\n\tfunction toString() {\n\t  return this.node.nodeName;\n\t}\n\t\n\tfunction DOMLazyTree(node) {\n\t  return {\n\t    node: node,\n\t    children: [],\n\t    html: null,\n\t    text: null,\n\t    toString: toString\n\t  };\n\t}\n\t\n\tDOMLazyTree.insertTreeBefore = insertTreeBefore;\n\tDOMLazyTree.replaceChildWithTree = replaceChildWithTree;\n\tDOMLazyTree.queueChild = queueChild;\n\tDOMLazyTree.queueHTML = queueHTML;\n\tDOMLazyTree.queueText = queueText;\n\t\n\tmodule.exports = DOMLazyTree;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule DOMProperty\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tfunction checkMask(value, bitmask) {\n\t  return (value & bitmask) === bitmask;\n\t}\n\t\n\tvar DOMPropertyInjection = {\n\t  /**\n\t   * Mapping from normalized, camelcased property names to a configuration that\n\t   * specifies how the associated DOM property should be accessed or rendered.\n\t   */\n\t  MUST_USE_PROPERTY: 0x1,\n\t  HAS_BOOLEAN_VALUE: 0x4,\n\t  HAS_NUMERIC_VALUE: 0x8,\n\t  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,\n\t  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,\n\t\n\t  /**\n\t   * Inject some specialized knowledge about the DOM. This takes a config object\n\t   * with the following properties:\n\t   *\n\t   * isCustomAttribute: function that given an attribute name will return true\n\t   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*\n\t   * attributes where it's impossible to enumerate all of the possible\n\t   * attribute names,\n\t   *\n\t   * Properties: object mapping DOM property name to one of the\n\t   * DOMPropertyInjection constants or null. If your attribute isn't in here,\n\t   * it won't get written to the DOM.\n\t   *\n\t   * DOMAttributeNames: object mapping React attribute name to the DOM\n\t   * attribute name. Attribute names not specified use the **lowercase**\n\t   * normalized name.\n\t   *\n\t   * DOMAttributeNamespaces: object mapping React attribute name to the DOM\n\t   * attribute namespace URL. (Attribute names not specified use no namespace.)\n\t   *\n\t   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.\n\t   * Property names not specified use the normalized name.\n\t   *\n\t   * DOMMutationMethods: Properties that require special mutation methods. If\n\t   * `value` is undefined, the mutation method should unset the property.\n\t   *\n\t   * @param {object} domPropertyConfig the config as described above.\n\t   */\n\t  injectDOMPropertyConfig: function (domPropertyConfig) {\n\t    var Injection = DOMPropertyInjection;\n\t    var Properties = domPropertyConfig.Properties || {};\n\t    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};\n\t    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};\n\t    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};\n\t    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};\n\t\n\t    if (domPropertyConfig.isCustomAttribute) {\n\t      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);\n\t    }\n\t\n\t    for (var propName in Properties) {\n\t      !!DOMProperty.properties.hasOwnProperty(propName) ?  false ? invariant(false, 'injectDOMPropertyConfig(...): You\\'re trying to inject DOM property \\'%s\\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;\n\t\n\t      var lowerCased = propName.toLowerCase();\n\t      var propConfig = Properties[propName];\n\t\n\t      var propertyInfo = {\n\t        attributeName: lowerCased,\n\t        attributeNamespace: null,\n\t        propertyName: propName,\n\t        mutationMethod: null,\n\t\n\t        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),\n\t        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),\n\t        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),\n\t        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),\n\t        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)\n\t      };\n\t      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ?  false ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;\n\t\n\t      if (false) {\n\t        DOMProperty.getPossibleStandardName[lowerCased] = propName;\n\t      }\n\t\n\t      if (DOMAttributeNames.hasOwnProperty(propName)) {\n\t        var attributeName = DOMAttributeNames[propName];\n\t        propertyInfo.attributeName = attributeName;\n\t        if (false) {\n\t          DOMProperty.getPossibleStandardName[attributeName] = propName;\n\t        }\n\t      }\n\t\n\t      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {\n\t        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];\n\t      }\n\t\n\t      if (DOMPropertyNames.hasOwnProperty(propName)) {\n\t        propertyInfo.propertyName = DOMPropertyNames[propName];\n\t      }\n\t\n\t      if (DOMMutationMethods.hasOwnProperty(propName)) {\n\t        propertyInfo.mutationMethod = DOMMutationMethods[propName];\n\t      }\n\t\n\t      DOMProperty.properties[propName] = propertyInfo;\n\t    }\n\t  }\n\t};\n\t\n\t/* eslint-disable max-len */\n\tvar ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n\t/* eslint-enable max-len */\n\t\n\t/**\n\t * DOMProperty exports lookup objects that can be used like functions:\n\t *\n\t *   > DOMProperty.isValid['id']\n\t *   true\n\t *   > DOMProperty.isValid['foobar']\n\t *   undefined\n\t *\n\t * Although this may be confusing, it performs better in general.\n\t *\n\t * @see http://jsperf.com/key-exists\n\t * @see http://jsperf.com/key-missing\n\t */\n\tvar DOMProperty = {\n\t\n\t  ID_ATTRIBUTE_NAME: 'data-reactid',\n\t  ROOT_ATTRIBUTE_NAME: 'data-reactroot',\n\t\n\t  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,\n\t  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040',\n\t\n\t  /**\n\t   * Map from property \"standard name\" to an object with info about how to set\n\t   * the property in the DOM. Each object contains:\n\t   *\n\t   * attributeName:\n\t   *   Used when rendering markup or with `*Attribute()`.\n\t   * attributeNamespace\n\t   * propertyName:\n\t   *   Used on DOM node instances. (This includes properties that mutate due to\n\t   *   external factors.)\n\t   * mutationMethod:\n\t   *   If non-null, used instead of the property or `setAttribute()` after\n\t   *   initial render.\n\t   * mustUseProperty:\n\t   *   Whether the property must be accessed and mutated as an object property.\n\t   * hasBooleanValue:\n\t   *   Whether the property should be removed when set to a falsey value.\n\t   * hasNumericValue:\n\t   *   Whether the property must be numeric or parse as a numeric and should be\n\t   *   removed when set to a falsey value.\n\t   * hasPositiveNumericValue:\n\t   *   Whether the property must be positive numeric or parse as a positive\n\t   *   numeric and should be removed when set to a falsey value.\n\t   * hasOverloadedBooleanValue:\n\t   *   Whether the property can be used as a flag as well as with a value.\n\t   *   Removed when strictly equal to false; present without a value when\n\t   *   strictly equal to true; present with a value otherwise.\n\t   */\n\t  properties: {},\n\t\n\t  /**\n\t   * Mapping from lowercase property names to the properly cased version, used\n\t   * to warn in the case of missing properties. Available only in __DEV__.\n\t   * @type {Object}\n\t   */\n\t  getPossibleStandardName:  false ? {} : null,\n\t\n\t  /**\n\t   * All of the isCustomAttribute() functions that have been injected.\n\t   */\n\t  _isCustomAttributeFunctions: [],\n\t\n\t  /**\n\t   * Checks whether a property name is a custom attribute.\n\t   * @method\n\t   */\n\t  isCustomAttribute: function (attributeName) {\n\t    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {\n\t      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];\n\t      if (isCustomAttributeFn(attributeName)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  },\n\t\n\t  injection: DOMPropertyInjection\n\t};\n\t\n\tmodule.exports = DOMProperty;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactReconciler\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactRef = __webpack_require__(148);\n\tvar ReactInstrumentation = __webpack_require__(8);\n\t\n\tvar warning = __webpack_require__(3);\n\t\n\t/**\n\t * Helper to call ReactRef.attachRefs with this composite component, split out\n\t * to avoid allocations in the transaction mount-ready queue.\n\t */\n\tfunction attachRefs() {\n\t  ReactRef.attachRefs(this, this._currentElement);\n\t}\n\t\n\tvar ReactReconciler = {\n\t\n\t  /**\n\t   * Initializes the component, renders markup, and registers event listeners.\n\t   *\n\t   * @param {ReactComponent} internalInstance\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {?object} the containing host component instance\n\t   * @param {?object} info about the host container\n\t   * @return {?string} Rendered markup to be inserted into the DOM.\n\t   * @final\n\t   * @internal\n\t   */\n\t  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots\n\t  ) {\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);\n\t      }\n\t    }\n\t    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);\n\t    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n\t      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n\t    }\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);\n\t      }\n\t    }\n\t    return markup;\n\t  },\n\t\n\t  /**\n\t   * Returns a value that can be passed to\n\t   * ReactComponentEnvironment.replaceNodeWithMarkup.\n\t   */\n\t  getHostNode: function (internalInstance) {\n\t    return internalInstance.getHostNode();\n\t  },\n\t\n\t  /**\n\t   * Releases any resources allocated by `mountComponent`.\n\t   *\n\t   * @final\n\t   * @internal\n\t   */\n\t  unmountComponent: function (internalInstance, safely) {\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);\n\t      }\n\t    }\n\t    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n\t    internalInstance.unmountComponent(safely);\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Update a component using a new element.\n\t   *\n\t   * @param {ReactComponent} internalInstance\n\t   * @param {ReactElement} nextElement\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {object} context\n\t   * @internal\n\t   */\n\t  receiveComponent: function (internalInstance, nextElement, transaction, context) {\n\t    var prevElement = internalInstance._currentElement;\n\t\n\t    if (nextElement === prevElement && context === internalInstance._context) {\n\t      // Since elements are immutable after the owner is rendered,\n\t      // we can do a cheap identity compare here to determine if this is a\n\t      // superfluous reconcile. It's possible for state to be mutable but such\n\t      // change should trigger an update of the owner which would recreate\n\t      // the element. We explicitly check for the existence of an owner since\n\t      // it's possible for an element created outside a composite to be\n\t      // deeply mutated and reused.\n\t\n\t      // TODO: Bailing out early is just a perf optimization right?\n\t      // TODO: Removing the return statement should affect correctness?\n\t      return;\n\t    }\n\t\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);\n\t      }\n\t    }\n\t\n\t    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);\n\t\n\t    if (refsChanged) {\n\t      ReactRef.detachRefs(internalInstance, prevElement);\n\t    }\n\t\n\t    internalInstance.receiveComponent(nextElement, transaction, context);\n\t\n\t    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n\t      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n\t    }\n\t\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Flush any dirty changes in a component.\n\t   *\n\t   * @param {ReactComponent} internalInstance\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   */\n\t  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {\n\t    if (internalInstance._updateBatchNumber !== updateBatchNumber) {\n\t      // The component's enqueued batch number should always be the current\n\t      // batch or the following one.\n\t       false ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;\n\t      return;\n\t    }\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);\n\t      }\n\t    }\n\t    internalInstance.performUpdateIfNecessary(transaction);\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactReconciler;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyObject = {};\n\t\n\tif (false) {\n\t  Object.freeze(emptyObject);\n\t}\n\t\n\tmodule.exports = emptyObject;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule EventPluginHub\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar EventPluginRegistry = __webpack_require__(35);\n\tvar EventPluginUtils = __webpack_require__(36);\n\tvar ReactErrorUtils = __webpack_require__(42);\n\t\n\tvar accumulateInto = __webpack_require__(77);\n\tvar forEachAccumulated = __webpack_require__(79);\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Internal store for event listeners\n\t */\n\tvar listenerBank = {};\n\t\n\t/**\n\t * Internal queue of events that have accumulated their dispatches and are\n\t * waiting to have their dispatches executed.\n\t */\n\tvar eventQueue = null;\n\t\n\t/**\n\t * Dispatches an event and releases it back into the pool, unless persistent.\n\t *\n\t * @param {?object} event Synthetic event to be dispatched.\n\t * @param {boolean} simulated If the event is simulated (changes exn behavior)\n\t * @private\n\t */\n\tvar executeDispatchesAndRelease = function (event, simulated) {\n\t  if (event) {\n\t    EventPluginUtils.executeDispatchesInOrder(event, simulated);\n\t\n\t    if (!event.isPersistent()) {\n\t      event.constructor.release(event);\n\t    }\n\t  }\n\t};\n\tvar executeDispatchesAndReleaseSimulated = function (e) {\n\t  return executeDispatchesAndRelease(e, true);\n\t};\n\tvar executeDispatchesAndReleaseTopLevel = function (e) {\n\t  return executeDispatchesAndRelease(e, false);\n\t};\n\t\n\tvar getDictionaryKey = function (inst) {\n\t  // Prevents V8 performance issue:\n\t  // https://github.com/facebook/react/pull/7232\n\t  return '.' + inst._rootNodeID;\n\t};\n\t\n\t/**\n\t * This is a unified interface for event plugins to be installed and configured.\n\t *\n\t * Event plugins can implement the following properties:\n\t *\n\t *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n\t *     Required. When a top-level event is fired, this method is expected to\n\t *     extract synthetic events that will in turn be queued and dispatched.\n\t *\n\t *   `eventTypes` {object}\n\t *     Optional, plugins that fire events must publish a mapping of registration\n\t *     names that are used to register listeners. Values of this mapping must\n\t *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n\t *\n\t *   `executeDispatch` {function(object, function, string)}\n\t *     Optional, allows plugins to override how an event gets dispatched. By\n\t *     default, the listener is simply invoked.\n\t *\n\t * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n\t *\n\t * @public\n\t */\n\tvar EventPluginHub = {\n\t\n\t  /**\n\t   * Methods for injecting dependencies.\n\t   */\n\t  injection: {\n\t\n\t    /**\n\t     * @param {array} InjectedEventPluginOrder\n\t     * @public\n\t     */\n\t    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\t\n\t    /**\n\t     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n\t     */\n\t    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n\t\n\t  },\n\t\n\t  /**\n\t   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.\n\t   *\n\t   * @param {object} inst The instance, which is the source of events.\n\t   * @param {string} registrationName Name of listener (e.g. `onClick`).\n\t   * @param {function} listener The callback to store.\n\t   */\n\t  putListener: function (inst, registrationName, listener) {\n\t    !(typeof listener === 'function') ?  false ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;\n\t\n\t    var key = getDictionaryKey(inst);\n\t    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});\n\t    bankForRegistrationName[key] = listener;\n\t\n\t    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n\t    if (PluginModule && PluginModule.didPutListener) {\n\t      PluginModule.didPutListener(inst, registrationName, listener);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {object} inst The instance, which is the source of events.\n\t   * @param {string} registrationName Name of listener (e.g. `onClick`).\n\t   * @return {?function} The stored callback.\n\t   */\n\t  getListener: function (inst, registrationName) {\n\t    var bankForRegistrationName = listenerBank[registrationName];\n\t    var key = getDictionaryKey(inst);\n\t    return bankForRegistrationName && bankForRegistrationName[key];\n\t  },\n\t\n\t  /**\n\t   * Deletes a listener from the registration bank.\n\t   *\n\t   * @param {object} inst The instance, which is the source of events.\n\t   * @param {string} registrationName Name of listener (e.g. `onClick`).\n\t   */\n\t  deleteListener: function (inst, registrationName) {\n\t    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n\t    if (PluginModule && PluginModule.willDeleteListener) {\n\t      PluginModule.willDeleteListener(inst, registrationName);\n\t    }\n\t\n\t    var bankForRegistrationName = listenerBank[registrationName];\n\t    // TODO: This should never be null -- when is it?\n\t    if (bankForRegistrationName) {\n\t      var key = getDictionaryKey(inst);\n\t      delete bankForRegistrationName[key];\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Deletes all listeners for the DOM element with the supplied ID.\n\t   *\n\t   * @param {object} inst The instance, which is the source of events.\n\t   */\n\t  deleteAllListeners: function (inst) {\n\t    var key = getDictionaryKey(inst);\n\t    for (var registrationName in listenerBank) {\n\t      if (!listenerBank.hasOwnProperty(registrationName)) {\n\t        continue;\n\t      }\n\t\n\t      if (!listenerBank[registrationName][key]) {\n\t        continue;\n\t      }\n\t\n\t      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n\t      if (PluginModule && PluginModule.willDeleteListener) {\n\t        PluginModule.willDeleteListener(inst, registrationName);\n\t      }\n\t\n\t      delete listenerBank[registrationName][key];\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Allows registered plugins an opportunity to extract events from top-level\n\t   * native browser events.\n\t   *\n\t   * @return {*} An accumulation of synthetic events.\n\t   * @internal\n\t   */\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    var events;\n\t    var plugins = EventPluginRegistry.plugins;\n\t    for (var i = 0; i < plugins.length; i++) {\n\t      // Not every plugin in the ordering may be loaded at runtime.\n\t      var possiblePlugin = plugins[i];\n\t      if (possiblePlugin) {\n\t        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n\t        if (extractedEvents) {\n\t          events = accumulateInto(events, extractedEvents);\n\t        }\n\t      }\n\t    }\n\t    return events;\n\t  },\n\t\n\t  /**\n\t   * Enqueues a synthetic event that should be dispatched when\n\t   * `processEventQueue` is invoked.\n\t   *\n\t   * @param {*} events An accumulation of synthetic events.\n\t   * @internal\n\t   */\n\t  enqueueEvents: function (events) {\n\t    if (events) {\n\t      eventQueue = accumulateInto(eventQueue, events);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Dispatches all synthetic events on the event queue.\n\t   *\n\t   * @internal\n\t   */\n\t  processEventQueue: function (simulated) {\n\t    // Set `eventQueue` to null before processing it so that we can tell if more\n\t    // events get enqueued while processing.\n\t    var processingEventQueue = eventQueue;\n\t    eventQueue = null;\n\t    if (simulated) {\n\t      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);\n\t    } else {\n\t      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n\t    }\n\t    !!eventQueue ?  false ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;\n\t    // This would be a good time to rethrow if any of the event handlers threw.\n\t    ReactErrorUtils.rethrowCaughtError();\n\t  },\n\t\n\t  /**\n\t   * These are needed for tests only. Do not use!\n\t   */\n\t  __purge: function () {\n\t    listenerBank = {};\n\t  },\n\t\n\t  __getListenerBank: function () {\n\t    return listenerBank;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = EventPluginHub;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule EventPropagators\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventConstants = __webpack_require__(11);\n\tvar EventPluginHub = __webpack_require__(20);\n\tvar EventPluginUtils = __webpack_require__(36);\n\t\n\tvar accumulateInto = __webpack_require__(77);\n\tvar forEachAccumulated = __webpack_require__(79);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar PropagationPhases = EventConstants.PropagationPhases;\n\tvar getListener = EventPluginHub.getListener;\n\t\n\t/**\n\t * Some event types have a notion of different registration names for different\n\t * \"phases\" of propagation. This finds listeners by a given phase.\n\t */\n\tfunction listenerAtPhase(inst, event, propagationPhase) {\n\t  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n\t  return getListener(inst, registrationName);\n\t}\n\t\n\t/**\n\t * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n\t * here, allows us to not have to bind or create functions for each event.\n\t * Mutating the event's members allows us to not have to create a wrapping\n\t * \"dispatch\" object that pairs the event with the listener.\n\t */\n\tfunction accumulateDirectionalDispatches(inst, upwards, event) {\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;\n\t  }\n\t  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;\n\t  var listener = listenerAtPhase(inst, event, phase);\n\t  if (listener) {\n\t    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n\t    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n\t  }\n\t}\n\t\n\t/**\n\t * Collect dispatches (must be entirely collected before dispatching - see unit\n\t * tests). Lazily allocate the array to conserve memory.  We must loop through\n\t * each event and perform the traversal for each one. We cannot perform a\n\t * single traversal for the entire collection of events because each event may\n\t * have a different target.\n\t */\n\tfunction accumulateTwoPhaseDispatchesSingle(event) {\n\t  if (event && event.dispatchConfig.phasedRegistrationNames) {\n\t    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n\t  }\n\t}\n\t\n\t/**\n\t * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.\n\t */\n\tfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n\t  if (event && event.dispatchConfig.phasedRegistrationNames) {\n\t    var targetInst = event._targetInst;\n\t    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;\n\t    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n\t  }\n\t}\n\t\n\t/**\n\t * Accumulates without regard to direction, does not look for phased\n\t * registration names. Same as `accumulateDirectDispatchesSingle` but without\n\t * requiring that the `dispatchMarker` be the same as the dispatched ID.\n\t */\n\tfunction accumulateDispatches(inst, ignoredDirection, event) {\n\t  if (event && event.dispatchConfig.registrationName) {\n\t    var registrationName = event.dispatchConfig.registrationName;\n\t    var listener = getListener(inst, registrationName);\n\t    if (listener) {\n\t      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n\t      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Accumulates dispatches on an `SyntheticEvent`, but only for the\n\t * `dispatchMarker`.\n\t * @param {SyntheticEvent} event\n\t */\n\tfunction accumulateDirectDispatchesSingle(event) {\n\t  if (event && event.dispatchConfig.registrationName) {\n\t    accumulateDispatches(event._targetInst, null, event);\n\t  }\n\t}\n\t\n\tfunction accumulateTwoPhaseDispatches(events) {\n\t  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n\t}\n\t\n\tfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\n\t  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n\t}\n\t\n\tfunction accumulateEnterLeaveDispatches(leave, enter, from, to) {\n\t  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);\n\t}\n\t\n\tfunction accumulateDirectDispatches(events) {\n\t  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n\t}\n\t\n\t/**\n\t * A small set of propagation patterns, each of which will accept a small amount\n\t * of information, and generate a set of \"dispatch ready event objects\" - which\n\t * are sets of events that have already been annotated with a set of dispatched\n\t * listener functions/ids. The API is designed this way to discourage these\n\t * propagation strategies from actually executing the dispatches, since we\n\t * always want to collect the entire set of dispatches before executing event a\n\t * single one.\n\t *\n\t * @constructor EventPropagators\n\t */\n\tvar EventPropagators = {\n\t  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,\n\t  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,\n\t  accumulateDirectDispatches: accumulateDirectDispatches,\n\t  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches\n\t};\n\t\n\tmodule.exports = EventPropagators;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactInstanceMap\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * `ReactInstanceMap` maintains a mapping from a public facing stateful\n\t * instance (key) and the internal representation (value). This allows public\n\t * methods to accept the user facing instance as an argument and map them back\n\t * to internal methods.\n\t */\n\t\n\t// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\n\t\n\tvar ReactInstanceMap = {\n\t\n\t  /**\n\t   * This API should be called `delete` but we'd have to make sure to always\n\t   * transform these to strings for IE support. When this transform is fully\n\t   * supported we can rename it.\n\t   */\n\t  remove: function (key) {\n\t    key._reactInternalInstance = undefined;\n\t  },\n\t\n\t  get: function (key) {\n\t    return key._reactInternalInstance;\n\t  },\n\t\n\t  has: function (key) {\n\t    return key._reactInternalInstance !== undefined;\n\t  },\n\t\n\t  set: function (key, value) {\n\t    key._reactInternalInstance = value;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactInstanceMap;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticUIEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(12);\n\t\n\tvar getEventTarget = __webpack_require__(51);\n\t\n\t/**\n\t * @interface UIEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar UIEventInterface = {\n\t  view: function (event) {\n\t    if (event.view) {\n\t      return event.view;\n\t    }\n\t\n\t    var target = getEventTarget(event);\n\t    if (target.window === target) {\n\t      // target is a window object\n\t      return target;\n\t    }\n\t\n\t    var doc = target.ownerDocument;\n\t    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n\t    if (doc) {\n\t      return doc.defaultView || doc.parentWindow;\n\t    } else {\n\t      return window;\n\t    }\n\t  },\n\t  detail: function (event) {\n\t    return event.detail || 0;\n\t  }\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticEvent}\n\t */\n\tfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\n\t\n\tmodule.exports = SyntheticUIEvent;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule Transaction\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * `Transaction` creates a black box that is able to wrap any method such that\n\t * certain invariants are maintained before and after the method is invoked\n\t * (Even if an exception is thrown while invoking the wrapped method). Whoever\n\t * instantiates a transaction can provide enforcers of the invariants at\n\t * creation time. The `Transaction` class itself will supply one additional\n\t * automatic invariant for you - the invariant that any transaction instance\n\t * should not be run while it is already being run. You would typically create a\n\t * single instance of a `Transaction` for reuse multiple times, that potentially\n\t * is used to wrap several different methods. Wrappers are extremely simple -\n\t * they only require implementing two methods.\n\t *\n\t * <pre>\n\t *                       wrappers (injected at creation time)\n\t *                                      +        +\n\t *                                      |        |\n\t *                    +-----------------|--------|--------------+\n\t *                    |                 v        |              |\n\t *                    |      +---------------+   |              |\n\t *                    |   +--|    wrapper1   |---|----+         |\n\t *                    |   |  +---------------+   v    |         |\n\t *                    |   |          +-------------+  |         |\n\t *                    |   |     +----|   wrapper2  |--------+   |\n\t *                    |   |     |    +-------------+  |     |   |\n\t *                    |   |     |                     |     |   |\n\t *                    |   v     v                     v     v   | wrapper\n\t *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n\t * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n\t * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->\n\t *                    | |   | |   |   |         |   |   | |   | |\n\t *                    | |   | |   |   |         |   |   | |   | |\n\t *                    | |   | |   |   |         |   |   | |   | |\n\t *                    | +---+ +---+   +---------+   +---+ +---+ |\n\t *                    |  initialize                    close    |\n\t *                    +-----------------------------------------+\n\t * </pre>\n\t *\n\t * Use cases:\n\t * - Preserving the input selection ranges before/after reconciliation.\n\t *   Restoring selection even in the event of an unexpected error.\n\t * - Deactivating events while rearranging the DOM, preventing blurs/focuses,\n\t *   while guaranteeing that afterwards, the event system is reactivated.\n\t * - Flushing a queue of collected DOM mutations to the main UI thread after a\n\t *   reconciliation takes place in a worker thread.\n\t * - Invoking any collected `componentDidUpdate` callbacks after rendering new\n\t *   content.\n\t * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\n\t *   to preserve the `scrollTop` (an automatic scroll aware DOM).\n\t * - (Future use case): Layout calculations before and after DOM updates.\n\t *\n\t * Transactional plugin API:\n\t * - A module that has an `initialize` method that returns any precomputation.\n\t * - and a `close` method that accepts the precomputation. `close` is invoked\n\t *   when the wrapped process is completed, or has failed.\n\t *\n\t * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules\n\t * that implement `initialize` and `close`.\n\t * @return {Transaction} Single transaction for reuse in thread.\n\t *\n\t * @class Transaction\n\t */\n\tvar Mixin = {\n\t  /**\n\t   * Sets up this instance so that it is prepared for collecting metrics. Does\n\t   * so such that this setup method may be used on an instance that is already\n\t   * initialized, in a way that does not consume additional memory upon reuse.\n\t   * That can be useful if you decide to make your subclass of this mixin a\n\t   * \"PooledClass\".\n\t   */\n\t  reinitializeTransaction: function () {\n\t    this.transactionWrappers = this.getTransactionWrappers();\n\t    if (this.wrapperInitData) {\n\t      this.wrapperInitData.length = 0;\n\t    } else {\n\t      this.wrapperInitData = [];\n\t    }\n\t    this._isInTransaction = false;\n\t  },\n\t\n\t  _isInTransaction: false,\n\t\n\t  /**\n\t   * @abstract\n\t   * @return {Array<TransactionWrapper>} Array of transaction wrappers.\n\t   */\n\t  getTransactionWrappers: null,\n\t\n\t  isInTransaction: function () {\n\t    return !!this._isInTransaction;\n\t  },\n\t\n\t  /**\n\t   * Executes the function within a safety window. Use this for the top level\n\t   * methods that result in large amounts of computation/mutations that would\n\t   * need to be safety checked. The optional arguments helps prevent the need\n\t   * to bind in many cases.\n\t   *\n\t   * @param {function} method Member of scope to call.\n\t   * @param {Object} scope Scope to invoke from.\n\t   * @param {Object?=} a Argument to pass to the method.\n\t   * @param {Object?=} b Argument to pass to the method.\n\t   * @param {Object?=} c Argument to pass to the method.\n\t   * @param {Object?=} d Argument to pass to the method.\n\t   * @param {Object?=} e Argument to pass to the method.\n\t   * @param {Object?=} f Argument to pass to the method.\n\t   *\n\t   * @return {*} Return value from `method`.\n\t   */\n\t  perform: function (method, scope, a, b, c, d, e, f) {\n\t    !!this.isInTransaction() ?  false ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;\n\t    var errorThrown;\n\t    var ret;\n\t    try {\n\t      this._isInTransaction = true;\n\t      // Catching errors makes debugging more difficult, so we start with\n\t      // errorThrown set to true before setting it to false after calling\n\t      // close -- if it's still set to true in the finally block, it means\n\t      // one of these calls threw.\n\t      errorThrown = true;\n\t      this.initializeAll(0);\n\t      ret = method.call(scope, a, b, c, d, e, f);\n\t      errorThrown = false;\n\t    } finally {\n\t      try {\n\t        if (errorThrown) {\n\t          // If `method` throws, prefer to show that stack trace over any thrown\n\t          // by invoking `closeAll`.\n\t          try {\n\t            this.closeAll(0);\n\t          } catch (err) {}\n\t        } else {\n\t          // Since `method` didn't throw, we don't want to silence the exception\n\t          // here.\n\t          this.closeAll(0);\n\t        }\n\t      } finally {\n\t        this._isInTransaction = false;\n\t      }\n\t    }\n\t    return ret;\n\t  },\n\t\n\t  initializeAll: function (startIndex) {\n\t    var transactionWrappers = this.transactionWrappers;\n\t    for (var i = startIndex; i < transactionWrappers.length; i++) {\n\t      var wrapper = transactionWrappers[i];\n\t      try {\n\t        // Catching errors makes debugging more difficult, so we start with the\n\t        // OBSERVED_ERROR state before overwriting it with the real return value\n\t        // of initialize -- if it's still set to OBSERVED_ERROR in the finally\n\t        // block, it means wrapper.initialize threw.\n\t        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;\n\t        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;\n\t      } finally {\n\t        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {\n\t          // The initializer for wrapper i threw an error; initialize the\n\t          // remaining wrappers but silence any exceptions from them to ensure\n\t          // that the first error is the one to bubble up.\n\t          try {\n\t            this.initializeAll(i + 1);\n\t          } catch (err) {}\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into\n\t   * them the respective return values of `this.transactionWrappers.init[i]`\n\t   * (`close`rs that correspond to initializers that failed will not be\n\t   * invoked).\n\t   */\n\t  closeAll: function (startIndex) {\n\t    !this.isInTransaction() ?  false ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;\n\t    var transactionWrappers = this.transactionWrappers;\n\t    for (var i = startIndex; i < transactionWrappers.length; i++) {\n\t      var wrapper = transactionWrappers[i];\n\t      var initData = this.wrapperInitData[i];\n\t      var errorThrown;\n\t      try {\n\t        // Catching errors makes debugging more difficult, so we start with\n\t        // errorThrown set to true before setting it to false after calling\n\t        // close -- if it's still set to true in the finally block, it means\n\t        // wrapper.close threw.\n\t        errorThrown = true;\n\t        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {\n\t          wrapper.close.call(this, initData);\n\t        }\n\t        errorThrown = false;\n\t      } finally {\n\t        if (errorThrown) {\n\t          // The closer for wrapper i threw an error; close the remaining\n\t          // wrappers but silence any exceptions from them to ensure that the\n\t          // first error is the one to bubble up.\n\t          try {\n\t            this.closeAll(i + 1);\n\t          } catch (e) {}\n\t        }\n\t      }\n\t    }\n\t    this.wrapperInitData.length = 0;\n\t  }\n\t};\n\t\n\tvar Transaction = {\n\t\n\t  Mixin: Mixin,\n\t\n\t  /**\n\t   * Token to look for to determine if an error occurred.\n\t   */\n\t  OBSERVED_ERROR: {}\n\t\n\t};\n\t\n\tmodule.exports = Transaction;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Constructs an enumeration with keys equal to their value.\n\t *\n\t * For example:\n\t *\n\t *   var COLORS = keyMirror({blue: null, red: null});\n\t *   var myColor = COLORS.blue;\n\t *   var isColorValid = !!COLORS[myColor];\n\t *\n\t * The last line could not be performed if the values of the generated enum were\n\t * not equal to their keys.\n\t *\n\t *   Input:  {key1: val1, key2: val2}\n\t *   Output: {key1: key1, key2: key2}\n\t *\n\t * @param {object} obj\n\t * @return {object}\n\t */\n\tvar keyMirror = function keyMirror(obj) {\n\t  var ret = {};\n\t  var key;\n\t  !(obj instanceof Object && !Array.isArray(obj)) ?  false ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;\n\t  for (key in obj) {\n\t    if (!obj.hasOwnProperty(key)) {\n\t      continue;\n\t    }\n\t    ret[key] = key;\n\t  }\n\t  return ret;\n\t};\n\t\n\tmodule.exports = keyMirror;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule DisabledInputUtils\n\t */\n\t\n\t'use strict';\n\t\n\tvar disableableMouseListenerNames = {\n\t  onClick: true,\n\t  onDoubleClick: true,\n\t  onMouseDown: true,\n\t  onMouseMove: true,\n\t  onMouseUp: true,\n\t\n\t  onClickCapture: true,\n\t  onDoubleClickCapture: true,\n\t  onMouseDownCapture: true,\n\t  onMouseMoveCapture: true,\n\t  onMouseUpCapture: true\n\t};\n\t\n\t/**\n\t * Implements a host component that does not receive mouse events\n\t * when `disabled` is set.\n\t */\n\tvar DisabledInputUtils = {\n\t  getHostProps: function (inst, props) {\n\t    if (!props.disabled) {\n\t      return props;\n\t    }\n\t\n\t    // Copy the props, except the mouse listeners\n\t    var hostProps = {};\n\t    for (var key in props) {\n\t      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {\n\t        hostProps[key] = props[key];\n\t      }\n\t    }\n\t\n\t    return hostProps;\n\t  }\n\t};\n\t\n\tmodule.exports = DisabledInputUtils;\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactBrowserEventEmitter\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar EventConstants = __webpack_require__(11);\n\tvar EventPluginRegistry = __webpack_require__(35);\n\tvar ReactEventEmitterMixin = __webpack_require__(140);\n\tvar ViewportMetrics = __webpack_require__(76);\n\t\n\tvar getVendorPrefixedEventName = __webpack_require__(171);\n\tvar isEventSupported = __webpack_require__(52);\n\t\n\t/**\n\t * Summary of `ReactBrowserEventEmitter` event handling:\n\t *\n\t *  - Top-level delegation is used to trap most native browser events. This\n\t *    may only occur in the main thread and is the responsibility of\n\t *    ReactEventListener, which is injected and can therefore support pluggable\n\t *    event sources. This is the only work that occurs in the main thread.\n\t *\n\t *  - We normalize and de-duplicate events to account for browser quirks. This\n\t *    may be done in the worker thread.\n\t *\n\t *  - Forward these native events (with the associated top-level type used to\n\t *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n\t *    to extract any synthetic events.\n\t *\n\t *  - The `EventPluginHub` will then process each event by annotating them with\n\t *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n\t *\n\t *  - The `EventPluginHub` then dispatches the events.\n\t *\n\t * Overview of React and the event system:\n\t *\n\t * +------------+    .\n\t * |    DOM     |    .\n\t * +------------+    .\n\t *       |           .\n\t *       v           .\n\t * +------------+    .\n\t * | ReactEvent |    .\n\t * |  Listener  |    .\n\t * +------------+    .                         +-----------+\n\t *       |           .               +--------+|SimpleEvent|\n\t *       |           .               |         |Plugin     |\n\t * +-----|------+    .               v         +-----------+\n\t * |     |      |    .    +--------------+                    +------------+\n\t * |     +-----------.--->|EventPluginHub|                    |    Event   |\n\t * |            |    .    |              |     +-----------+  | Propagators|\n\t * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n\t * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n\t * |            |    .    |              |     +-----------+  |  utilities |\n\t * |     +-----------.--->|              |                    +------------+\n\t * |     |      |    .    +--------------+\n\t * +-----|------+    .                ^        +-----------+\n\t *       |           .                |        |Enter/Leave|\n\t *       +           .                +-------+|Plugin     |\n\t * +-------------+   .                         +-----------+\n\t * | application |   .\n\t * |-------------|   .\n\t * |             |   .\n\t * |             |   .\n\t * +-------------+   .\n\t *                   .\n\t *    React Core     .  General Purpose Event Plugin System\n\t */\n\t\n\tvar hasEventPageXY;\n\tvar alreadyListeningTo = {};\n\tvar isMonitoringScrollValue = false;\n\tvar reactTopListenersCounter = 0;\n\t\n\t// For events like 'submit' which don't consistently bubble (which we trap at a\n\t// lower node than `document`), binding at `document` would cause duplicate\n\t// events so we don't include them here\n\tvar topEventMapping = {\n\t  topAbort: 'abort',\n\t  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',\n\t  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',\n\t  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',\n\t  topBlur: 'blur',\n\t  topCanPlay: 'canplay',\n\t  topCanPlayThrough: 'canplaythrough',\n\t  topChange: 'change',\n\t  topClick: 'click',\n\t  topCompositionEnd: 'compositionend',\n\t  topCompositionStart: 'compositionstart',\n\t  topCompositionUpdate: 'compositionupdate',\n\t  topContextMenu: 'contextmenu',\n\t  topCopy: 'copy',\n\t  topCut: 'cut',\n\t  topDoubleClick: 'dblclick',\n\t  topDrag: 'drag',\n\t  topDragEnd: 'dragend',\n\t  topDragEnter: 'dragenter',\n\t  topDragExit: 'dragexit',\n\t  topDragLeave: 'dragleave',\n\t  topDragOver: 'dragover',\n\t  topDragStart: 'dragstart',\n\t  topDrop: 'drop',\n\t  topDurationChange: 'durationchange',\n\t  topEmptied: 'emptied',\n\t  topEncrypted: 'encrypted',\n\t  topEnded: 'ended',\n\t  topError: 'error',\n\t  topFocus: 'focus',\n\t  topInput: 'input',\n\t  topKeyDown: 'keydown',\n\t  topKeyPress: 'keypress',\n\t  topKeyUp: 'keyup',\n\t  topLoadedData: 'loadeddata',\n\t  topLoadedMetadata: 'loadedmetadata',\n\t  topLoadStart: 'loadstart',\n\t  topMouseDown: 'mousedown',\n\t  topMouseMove: 'mousemove',\n\t  topMouseOut: 'mouseout',\n\t  topMouseOver: 'mouseover',\n\t  topMouseUp: 'mouseup',\n\t  topPaste: 'paste',\n\t  topPause: 'pause',\n\t  topPlay: 'play',\n\t  topPlaying: 'playing',\n\t  topProgress: 'progress',\n\t  topRateChange: 'ratechange',\n\t  topScroll: 'scroll',\n\t  topSeeked: 'seeked',\n\t  topSeeking: 'seeking',\n\t  topSelectionChange: 'selectionchange',\n\t  topStalled: 'stalled',\n\t  topSuspend: 'suspend',\n\t  topTextInput: 'textInput',\n\t  topTimeUpdate: 'timeupdate',\n\t  topTouchCancel: 'touchcancel',\n\t  topTouchEnd: 'touchend',\n\t  topTouchMove: 'touchmove',\n\t  topTouchStart: 'touchstart',\n\t  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',\n\t  topVolumeChange: 'volumechange',\n\t  topWaiting: 'waiting',\n\t  topWheel: 'wheel'\n\t};\n\t\n\t/**\n\t * To ensure no conflicts with other potential React instances on the page\n\t */\n\tvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\t\n\tfunction getListeningForDocument(mountAt) {\n\t  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n\t  // directly.\n\t  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n\t    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n\t    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n\t  }\n\t  return alreadyListeningTo[mountAt[topListenersIDKey]];\n\t}\n\t\n\t/**\n\t * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n\t * example:\n\t *\n\t *   EventPluginHub.putListener('myID', 'onClick', myFunction);\n\t *\n\t * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n\t *\n\t * @internal\n\t */\n\tvar ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {\n\t\n\t  /**\n\t   * Injectable event backend\n\t   */\n\t  ReactEventListener: null,\n\t\n\t  injection: {\n\t    /**\n\t     * @param {object} ReactEventListener\n\t     */\n\t    injectReactEventListener: function (ReactEventListener) {\n\t      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);\n\t      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets whether or not any created callbacks should be enabled.\n\t   *\n\t   * @param {boolean} enabled True if callbacks should be enabled.\n\t   */\n\t  setEnabled: function (enabled) {\n\t    if (ReactBrowserEventEmitter.ReactEventListener) {\n\t      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @return {boolean} True if callbacks are enabled.\n\t   */\n\t  isEnabled: function () {\n\t    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());\n\t  },\n\t\n\t  /**\n\t   * We listen for bubbled touch events on the document object.\n\t   *\n\t   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n\t   * mounting `onmousemove` events at some node that was not the document\n\t   * element. The symptoms were that if your mouse is not moving over something\n\t   * contained within that mount point (for example on the background) the\n\t   * top-level listeners for `onmousemove` won't be called. However, if you\n\t   * register the `mousemove` on the document object, then it will of course\n\t   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n\t   * top-level listeners to the document object only, at least for these\n\t   * movement types of events and possibly all events.\n\t   *\n\t   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n\t   *\n\t   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n\t   * they bubble to document.\n\t   *\n\t   * @param {string} registrationName Name of listener (e.g. `onClick`).\n\t   * @param {object} contentDocumentHandle Document which owns the container\n\t   */\n\t  listenTo: function (registrationName, contentDocumentHandle) {\n\t    var mountAt = contentDocumentHandle;\n\t    var isListening = getListeningForDocument(mountAt);\n\t    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];\n\t\n\t    var topLevelTypes = EventConstants.topLevelTypes;\n\t    for (var i = 0; i < dependencies.length; i++) {\n\t      var dependency = dependencies[i];\n\t      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n\t        if (dependency === topLevelTypes.topWheel) {\n\t          if (isEventSupported('wheel')) {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);\n\t          } else if (isEventSupported('mousewheel')) {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);\n\t          } else {\n\t            // Firefox needs to capture a different mouse scroll event.\n\t            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);\n\t          }\n\t        } else if (dependency === topLevelTypes.topScroll) {\n\t\n\t          if (isEventSupported('scroll', true)) {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);\n\t          } else {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);\n\t          }\n\t        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {\n\t\n\t          if (isEventSupported('focus', true)) {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);\n\t            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);\n\t          } else if (isEventSupported('focusin')) {\n\t            // IE has `focusin` and `focusout` events which bubble.\n\t            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);\n\t          }\n\t\n\t          // to make sure blur and focus event listeners are only attached once\n\t          isListening[topLevelTypes.topBlur] = true;\n\t          isListening[topLevelTypes.topFocus] = true;\n\t        } else if (topEventMapping.hasOwnProperty(dependency)) {\n\t          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);\n\t        }\n\t\n\t        isListening[dependency] = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n\t    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);\n\t  },\n\t\n\t  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n\t    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);\n\t  },\n\t\n\t  /**\n\t   * Protect against document.createEvent() returning null\n\t   * Some popup blocker extensions appear to do this:\n\t   * https://github.com/facebook/react/issues/6887\n\t   */\n\t  supportsEventPageXY: function () {\n\t    if (!document.createEvent) {\n\t      return false;\n\t    }\n\t    var ev = document.createEvent('MouseEvent');\n\t    return ev != null && 'pageX' in ev;\n\t  },\n\t\n\t  /**\n\t   * Listens to window scroll and resize events. We cache scroll values so that\n\t   * application code can access them without triggering reflows.\n\t   *\n\t   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when\n\t   * pageX/pageY isn't supported (legacy browsers).\n\t   *\n\t   * NOTE: Scroll events do not bubble.\n\t   *\n\t   * @see http://www.quirksmode.org/dom/events/scroll.html\n\t   */\n\t  ensureScrollValueMonitoring: function () {\n\t    if (hasEventPageXY === undefined) {\n\t      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();\n\t    }\n\t    if (!hasEventPageXY && !isMonitoringScrollValue) {\n\t      var refresh = ViewportMetrics.refreshScrollValues;\n\t      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n\t      isMonitoringScrollValue = true;\n\t    }\n\t  }\n\t\n\t});\n\t\n\tmodule.exports = ReactBrowserEventEmitter;\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticMouseEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticUIEvent = __webpack_require__(23);\n\tvar ViewportMetrics = __webpack_require__(76);\n\t\n\tvar getEventModifierState = __webpack_require__(50);\n\t\n\t/**\n\t * @interface MouseEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar MouseEventInterface = {\n\t  screenX: null,\n\t  screenY: null,\n\t  clientX: null,\n\t  clientY: null,\n\t  ctrlKey: null,\n\t  shiftKey: null,\n\t  altKey: null,\n\t  metaKey: null,\n\t  getModifierState: getEventModifierState,\n\t  button: function (event) {\n\t    // Webkit, Firefox, IE9+\n\t    // which:  1 2 3\n\t    // button: 0 1 2 (standard)\n\t    var button = event.button;\n\t    if ('which' in event) {\n\t      return button;\n\t    }\n\t    // IE<9\n\t    // which:  undefined\n\t    // button: 0 0 0\n\t    // button: 1 4 2 (onmouseup)\n\t    return button === 2 ? 2 : button === 4 ? 1 : 0;\n\t  },\n\t  buttons: null,\n\t  relatedTarget: function (event) {\n\t    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n\t  },\n\t  // \"Proprietary\" Interface.\n\t  pageX: function (event) {\n\t    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\n\t  },\n\t  pageY: function (event) {\n\t    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\n\t  }\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\t\n\tmodule.exports = SyntheticMouseEvent;\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2016-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * Based on the escape-html library, which is used under the MIT License below:\n\t *\n\t * Copyright (c) 2012-2013 TJ Holowaychuk\n\t * Copyright (c) 2015 Andreas Lubbe\n\t * Copyright (c) 2015 Tiancheng \"Timothy\" Gu\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining\n\t * a copy of this software and associated documentation files (the\n\t * 'Software'), to deal in the Software without restriction, including\n\t * without limitation the rights to use, copy, modify, merge, publish,\n\t * distribute, sublicense, and/or sell copies of the Software, and to\n\t * permit persons to whom the Software is furnished to do so, subject to\n\t * the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\t * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n\t * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\t * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n\t * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t *\n\t * @providesModule escapeTextContentForBrowser\n\t */\n\t\n\t'use strict';\n\t\n\t// code copied and modified from escape-html\n\t/**\n\t * Module variables.\n\t * @private\n\t */\n\t\n\tvar matchHtmlRegExp = /[\"'&<>]/;\n\t\n\t/**\n\t * Escape special characters in the given string of html.\n\t *\n\t * @param  {string} string The string to escape for inserting into HTML\n\t * @return {string}\n\t * @public\n\t */\n\t\n\tfunction escapeHtml(string) {\n\t  var str = '' + string;\n\t  var match = matchHtmlRegExp.exec(str);\n\t\n\t  if (!match) {\n\t    return str;\n\t  }\n\t\n\t  var escape;\n\t  var html = '';\n\t  var index = 0;\n\t  var lastIndex = 0;\n\t\n\t  for (index = match.index; index < str.length; index++) {\n\t    switch (str.charCodeAt(index)) {\n\t      case 34:\n\t        // \"\n\t        escape = '&quot;';\n\t        break;\n\t      case 38:\n\t        // &\n\t        escape = '&amp;';\n\t        break;\n\t      case 39:\n\t        // '\n\t        escape = '&#x27;'; // modified from escape-html; used to be '&#39'\n\t        break;\n\t      case 60:\n\t        // <\n\t        escape = '&lt;';\n\t        break;\n\t      case 62:\n\t        // >\n\t        escape = '&gt;';\n\t        break;\n\t      default:\n\t        continue;\n\t    }\n\t\n\t    if (lastIndex !== index) {\n\t      html += str.substring(lastIndex, index);\n\t    }\n\t\n\t    lastIndex = index + 1;\n\t    html += escape;\n\t  }\n\t\n\t  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\n\t}\n\t// end code copied and modified from escape-html\n\t\n\t\n\t/**\n\t * Escapes text to prevent scripting attacks.\n\t *\n\t * @param {*} text Text value to escape.\n\t * @return {string} An escaped string.\n\t */\n\tfunction escapeTextContentForBrowser(text) {\n\t  if (typeof text === 'boolean' || typeof text === 'number') {\n\t    // this shortcircuit helps perf for types that we know will never have\n\t    // special characters, especially given that this function is used often\n\t    // for numeric dom ids.\n\t    return '' + text;\n\t  }\n\t  return escapeHtml(text);\n\t}\n\t\n\tmodule.exports = escapeTextContentForBrowser;\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule setInnerHTML\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar DOMNamespaces = __webpack_require__(34);\n\t\n\tvar WHITESPACE_TEST = /^[ \\r\\n\\t\\f]/;\n\tvar NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/;\n\t\n\tvar createMicrosoftUnsafeLocalFunction = __webpack_require__(48);\n\t\n\t// SVG temp container for IE lacking innerHTML\n\tvar reusableSVGContainer;\n\t\n\t/**\n\t * Set the innerHTML property of a node, ensuring that whitespace is preserved\n\t * even in IE8.\n\t *\n\t * @param {DOMElement} node\n\t * @param {string} html\n\t * @internal\n\t */\n\tvar setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {\n\t  // IE does not have innerHTML for SVG nodes, so instead we inject the\n\t  // new markup in a temp node and then move the child nodes across into\n\t  // the target node\n\t  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {\n\t    reusableSVGContainer = reusableSVGContainer || document.createElement('div');\n\t    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';\n\t    var svgNode = reusableSVGContainer.firstChild;\n\t    while (svgNode.firstChild) {\n\t      node.appendChild(svgNode.firstChild);\n\t    }\n\t  } else {\n\t    node.innerHTML = html;\n\t  }\n\t});\n\t\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  // IE8: When updating a just created node with innerHTML only leading\n\t  // whitespace is removed. When updating an existing node with innerHTML\n\t  // whitespace in root TextNodes is also collapsed.\n\t  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html\n\t\n\t  // Feature detection; only IE8 is known to behave improperly like this.\n\t  var testElement = document.createElement('div');\n\t  testElement.innerHTML = ' ';\n\t  if (testElement.innerHTML === '') {\n\t    setInnerHTML = function (node, html) {\n\t      // Magic theory: IE8 supposedly differentiates between added and updated\n\t      // nodes when processing innerHTML, innerHTML on updated nodes suffers\n\t      // from worse whitespace behavior. Re-adding a node like this triggers\n\t      // the initial and more favorable whitespace behavior.\n\t      // TODO: What to do on a detached node?\n\t      if (node.parentNode) {\n\t        node.parentNode.replaceChild(node, node);\n\t      }\n\t\n\t      // We also implement a workaround for non-visible tags disappearing into\n\t      // thin air on IE8, this only happens if there is no visible text\n\t      // in-front of the non-visible tags. Piggyback on the whitespace fix\n\t      // and simply check if any non-visible tags appear in the source.\n\t      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {\n\t        // Recover leading whitespace by temporarily prepending any character.\n\t        // \\uFEFF has the potential advantage of being zero-width/invisible.\n\t        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode\n\t        // in hopes that this is preserved even if \"\\uFEFF\" is transformed to\n\t        // the actual Unicode character (by Babel, for example).\n\t        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216\n\t        node.innerHTML = String.fromCharCode(0xFEFF) + html;\n\t\n\t        // deleteData leaves an empty `TextNode` which offsets the index of all\n\t        // children. Definitely want to avoid this.\n\t        var textNode = node.firstChild;\n\t        if (textNode.data.length === 1) {\n\t          node.removeChild(textNode);\n\t        } else {\n\t          textNode.deleteData(0, 1);\n\t        }\n\t      } else {\n\t        node.innerHTML = html;\n\t      }\n\t    };\n\t  }\n\t  testElement = null;\n\t}\n\t\n\tmodule.exports = setInnerHTML;\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t * \n\t */\n\t\n\t/*eslint-disable no-self-compare */\n\t\n\t'use strict';\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t/**\n\t * inlined Object.is polyfill to avoid requiring consumers ship their own\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\t */\n\tfunction is(x, y) {\n\t  // SameValue algorithm\n\t  if (x === y) {\n\t    // Steps 1-5, 7-10\n\t    // Steps 6.b-6.e: +0 != -0\n\t    // Added the nonzero y check to make Flow happy, but it is redundant\n\t    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n\t  } else {\n\t    // Step 6.a: NaN == NaN\n\t    return x !== x && y !== y;\n\t  }\n\t}\n\t\n\t/**\n\t * Performs equality by iterating through keys on an object and returning false\n\t * when any key has values which are not strictly equal between the arguments.\n\t * Returns true when the values of all keys are strictly equal.\n\t */\n\tfunction shallowEqual(objA, objB) {\n\t  if (is(objA, objB)) {\n\t    return true;\n\t  }\n\t\n\t  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n\t    return false;\n\t  }\n\t\n\t  var keysA = Object.keys(objA);\n\t  var keysB = Object.keys(objB);\n\t\n\t  if (keysA.length !== keysB.length) {\n\t    return false;\n\t  }\n\t\n\t  // Test for A's keys different from B.\n\t  for (var i = 0; i < keysA.length; i++) {\n\t    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n\t      return false;\n\t    }\n\t  }\n\t\n\t  return true;\n\t}\n\t\n\tmodule.exports = shallowEqual;\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule DOMChildrenOperations\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMLazyTree = __webpack_require__(16);\n\tvar Danger = __webpack_require__(115);\n\tvar ReactMultiChildUpdateTypes = __webpack_require__(72);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactInstrumentation = __webpack_require__(8);\n\t\n\tvar createMicrosoftUnsafeLocalFunction = __webpack_require__(48);\n\tvar setInnerHTML = __webpack_require__(30);\n\tvar setTextContent = __webpack_require__(85);\n\t\n\tfunction getNodeAfter(parentNode, node) {\n\t  // Special case for text components, which return [open, close] comments\n\t  // from getHostNode.\n\t  if (Array.isArray(node)) {\n\t    node = node[1];\n\t  }\n\t  return node ? node.nextSibling : parentNode.firstChild;\n\t}\n\t\n\t/**\n\t * Inserts `childNode` as a child of `parentNode` at the `index`.\n\t *\n\t * @param {DOMElement} parentNode Parent node in which to insert.\n\t * @param {DOMElement} childNode Child node to insert.\n\t * @param {number} index Index at which to insert the child.\n\t * @internal\n\t */\n\tvar insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {\n\t  // We rely exclusively on `insertBefore(node, null)` instead of also using\n\t  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so\n\t  // we are careful to use `null`.)\n\t  parentNode.insertBefore(childNode, referenceNode);\n\t});\n\t\n\tfunction insertLazyTreeChildAt(parentNode, childTree, referenceNode) {\n\t  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);\n\t}\n\t\n\tfunction moveChild(parentNode, childNode, referenceNode) {\n\t  if (Array.isArray(childNode)) {\n\t    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);\n\t  } else {\n\t    insertChildAt(parentNode, childNode, referenceNode);\n\t  }\n\t}\n\t\n\tfunction removeChild(parentNode, childNode) {\n\t  if (Array.isArray(childNode)) {\n\t    var closingComment = childNode[1];\n\t    childNode = childNode[0];\n\t    removeDelimitedText(parentNode, childNode, closingComment);\n\t    parentNode.removeChild(closingComment);\n\t  }\n\t  parentNode.removeChild(childNode);\n\t}\n\t\n\tfunction moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {\n\t  var node = openingComment;\n\t  while (true) {\n\t    var nextNode = node.nextSibling;\n\t    insertChildAt(parentNode, node, referenceNode);\n\t    if (node === closingComment) {\n\t      break;\n\t    }\n\t    node = nextNode;\n\t  }\n\t}\n\t\n\tfunction removeDelimitedText(parentNode, startNode, closingComment) {\n\t  while (true) {\n\t    var node = startNode.nextSibling;\n\t    if (node === closingComment) {\n\t      // The closing comment is removed by ReactMultiChild.\n\t      break;\n\t    } else {\n\t      parentNode.removeChild(node);\n\t    }\n\t  }\n\t}\n\t\n\tfunction replaceDelimitedText(openingComment, closingComment, stringText) {\n\t  var parentNode = openingComment.parentNode;\n\t  var nodeAfterComment = openingComment.nextSibling;\n\t  if (nodeAfterComment === closingComment) {\n\t    // There are no text nodes between the opening and closing comments; insert\n\t    // a new one if stringText isn't empty.\n\t    if (stringText) {\n\t      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);\n\t    }\n\t  } else {\n\t    if (stringText) {\n\t      // Set the text content of the first node after the opening comment, and\n\t      // remove all following nodes up until the closing comment.\n\t      setTextContent(nodeAfterComment, stringText);\n\t      removeDelimitedText(parentNode, nodeAfterComment, closingComment);\n\t    } else {\n\t      removeDelimitedText(parentNode, openingComment, closingComment);\n\t    }\n\t  }\n\t\n\t  if (false) {\n\t    ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);\n\t  }\n\t}\n\t\n\tvar dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;\n\tif (false) {\n\t  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {\n\t    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);\n\t    if (prevInstance._debugID !== 0) {\n\t      ReactInstrumentation.debugTool.onHostOperation(prevInstance._debugID, 'replace with', markup.toString());\n\t    } else {\n\t      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);\n\t      if (nextInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onHostOperation(nextInstance._debugID, 'mount', markup.toString());\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Operations for updating with DOM children.\n\t */\n\tvar DOMChildrenOperations = {\n\t\n\t  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,\n\t\n\t  replaceDelimitedText: replaceDelimitedText,\n\t\n\t  /**\n\t   * Updates a component's children by processing a series of updates. The\n\t   * update configurations are each expected to have a `parentNode` property.\n\t   *\n\t   * @param {array<object>} updates List of update configurations.\n\t   * @internal\n\t   */\n\t  processUpdates: function (parentNode, updates) {\n\t    if (false) {\n\t      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;\n\t    }\n\t\n\t    for (var k = 0; k < updates.length; k++) {\n\t      var update = updates[k];\n\t      switch (update.type) {\n\t        case ReactMultiChildUpdateTypes.INSERT_MARKUP:\n\t          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));\n\t          if (false) {\n\t            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'insert child', { toIndex: update.toIndex, content: update.content.toString() });\n\t          }\n\t          break;\n\t        case ReactMultiChildUpdateTypes.MOVE_EXISTING:\n\t          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));\n\t          if (false) {\n\t            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'move child', { fromIndex: update.fromIndex, toIndex: update.toIndex });\n\t          }\n\t          break;\n\t        case ReactMultiChildUpdateTypes.SET_MARKUP:\n\t          setInnerHTML(parentNode, update.content);\n\t          if (false) {\n\t            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace children', update.content.toString());\n\t          }\n\t          break;\n\t        case ReactMultiChildUpdateTypes.TEXT_CONTENT:\n\t          setTextContent(parentNode, update.content);\n\t          if (false) {\n\t            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace text', update.content.toString());\n\t          }\n\t          break;\n\t        case ReactMultiChildUpdateTypes.REMOVE_NODE:\n\t          removeChild(parentNode, update.fromNode);\n\t          if (false) {\n\t            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'remove child', { fromIndex: update.fromIndex });\n\t          }\n\t          break;\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = DOMChildrenOperations;\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule DOMNamespaces\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMNamespaces = {\n\t  html: 'http://www.w3.org/1999/xhtml',\n\t  mathml: 'http://www.w3.org/1998/Math/MathML',\n\t  svg: 'http://www.w3.org/2000/svg'\n\t};\n\t\n\tmodule.exports = DOMNamespaces;\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule EventPluginRegistry\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Injectable ordering of event plugins.\n\t */\n\tvar EventPluginOrder = null;\n\t\n\t/**\n\t * Injectable mapping from names to event plugin modules.\n\t */\n\tvar namesToPlugins = {};\n\t\n\t/**\n\t * Recomputes the plugin list using the injected plugins and plugin ordering.\n\t *\n\t * @private\n\t */\n\tfunction recomputePluginOrdering() {\n\t  if (!EventPluginOrder) {\n\t    // Wait until an `EventPluginOrder` is injected.\n\t    return;\n\t  }\n\t  for (var pluginName in namesToPlugins) {\n\t    var PluginModule = namesToPlugins[pluginName];\n\t    var pluginIndex = EventPluginOrder.indexOf(pluginName);\n\t    !(pluginIndex > -1) ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;\n\t    if (EventPluginRegistry.plugins[pluginIndex]) {\n\t      continue;\n\t    }\n\t    !PluginModule.extractEvents ?  false ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;\n\t    EventPluginRegistry.plugins[pluginIndex] = PluginModule;\n\t    var publishedEvents = PluginModule.eventTypes;\n\t    for (var eventName in publishedEvents) {\n\t      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ?  false ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Publishes an event so that it can be dispatched by the supplied plugin.\n\t *\n\t * @param {object} dispatchConfig Dispatch configuration for the event.\n\t * @param {object} PluginModule Plugin publishing the event.\n\t * @return {boolean} True if the event was successfully published.\n\t * @private\n\t */\n\tfunction publishEventForPlugin(dispatchConfig, PluginModule, eventName) {\n\t  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;\n\t  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;\n\t\n\t  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n\t  if (phasedRegistrationNames) {\n\t    for (var phaseName in phasedRegistrationNames) {\n\t      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n\t        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n\t        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);\n\t      }\n\t    }\n\t    return true;\n\t  } else if (dispatchConfig.registrationName) {\n\t    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);\n\t    return true;\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Publishes a registration name that is used to identify dispatched events and\n\t * can be used with `EventPluginHub.putListener` to register listeners.\n\t *\n\t * @param {string} registrationName Registration name to add.\n\t * @param {object} PluginModule Plugin publishing the event.\n\t * @private\n\t */\n\tfunction publishRegistrationName(registrationName, PluginModule, eventName) {\n\t  !!EventPluginRegistry.registrationNameModules[registrationName] ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;\n\t  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;\n\t  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;\n\t\n\t  if (false) {\n\t    var lowerCasedName = registrationName.toLowerCase();\n\t    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;\n\t\n\t    if (registrationName === 'onDoubleClick') {\n\t      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Registers plugins so that they can extract and dispatch events.\n\t *\n\t * @see {EventPluginHub}\n\t */\n\tvar EventPluginRegistry = {\n\t\n\t  /**\n\t   * Ordered list of injected plugins.\n\t   */\n\t  plugins: [],\n\t\n\t  /**\n\t   * Mapping from event name to dispatch config\n\t   */\n\t  eventNameDispatchConfigs: {},\n\t\n\t  /**\n\t   * Mapping from registration name to plugin module\n\t   */\n\t  registrationNameModules: {},\n\t\n\t  /**\n\t   * Mapping from registration name to event name\n\t   */\n\t  registrationNameDependencies: {},\n\t\n\t  /**\n\t   * Mapping from lowercase registration names to the properly cased version,\n\t   * used to warn in the case of missing event handlers. Available\n\t   * only in __DEV__.\n\t   * @type {Object}\n\t   */\n\t  possibleRegistrationNames:  false ? {} : null,\n\t\n\t  /**\n\t   * Injects an ordering of plugins (by plugin name). This allows the ordering\n\t   * to be decoupled from injection of the actual plugins so that ordering is\n\t   * always deterministic regardless of packaging, on-the-fly injection, etc.\n\t   *\n\t   * @param {array} InjectedEventPluginOrder\n\t   * @internal\n\t   * @see {EventPluginHub.injection.injectEventPluginOrder}\n\t   */\n\t  injectEventPluginOrder: function (InjectedEventPluginOrder) {\n\t    !!EventPluginOrder ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;\n\t    // Clone the ordering so it cannot be dynamically mutated.\n\t    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);\n\t    recomputePluginOrdering();\n\t  },\n\t\n\t  /**\n\t   * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n\t   * in the ordering injected by `injectEventPluginOrder`.\n\t   *\n\t   * Plugins can be injected as part of page initialization or on-the-fly.\n\t   *\n\t   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n\t   * @internal\n\t   * @see {EventPluginHub.injection.injectEventPluginsByName}\n\t   */\n\t  injectEventPluginsByName: function (injectedNamesToPlugins) {\n\t    var isOrderingDirty = false;\n\t    for (var pluginName in injectedNamesToPlugins) {\n\t      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n\t        continue;\n\t      }\n\t      var PluginModule = injectedNamesToPlugins[pluginName];\n\t      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {\n\t        !!namesToPlugins[pluginName] ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;\n\t        namesToPlugins[pluginName] = PluginModule;\n\t        isOrderingDirty = true;\n\t      }\n\t    }\n\t    if (isOrderingDirty) {\n\t      recomputePluginOrdering();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Looks up the plugin for the supplied event.\n\t   *\n\t   * @param {object} event A synthetic event.\n\t   * @return {?object} The plugin that created the supplied event.\n\t   * @internal\n\t   */\n\t  getPluginModuleForEvent: function (event) {\n\t    var dispatchConfig = event.dispatchConfig;\n\t    if (dispatchConfig.registrationName) {\n\t      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;\n\t    }\n\t    for (var phase in dispatchConfig.phasedRegistrationNames) {\n\t      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {\n\t        continue;\n\t      }\n\t      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];\n\t      if (PluginModule) {\n\t        return PluginModule;\n\t      }\n\t    }\n\t    return null;\n\t  },\n\t\n\t  /**\n\t   * Exposed for unit testing.\n\t   * @private\n\t   */\n\t  _resetEventPlugins: function () {\n\t    EventPluginOrder = null;\n\t    for (var pluginName in namesToPlugins) {\n\t      if (namesToPlugins.hasOwnProperty(pluginName)) {\n\t        delete namesToPlugins[pluginName];\n\t      }\n\t    }\n\t    EventPluginRegistry.plugins.length = 0;\n\t\n\t    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;\n\t    for (var eventName in eventNameDispatchConfigs) {\n\t      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n\t        delete eventNameDispatchConfigs[eventName];\n\t      }\n\t    }\n\t\n\t    var registrationNameModules = EventPluginRegistry.registrationNameModules;\n\t    for (var registrationName in registrationNameModules) {\n\t      if (registrationNameModules.hasOwnProperty(registrationName)) {\n\t        delete registrationNameModules[registrationName];\n\t      }\n\t    }\n\t\n\t    if (false) {\n\t      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;\n\t      for (var lowerCasedName in possibleRegistrationNames) {\n\t        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {\n\t          delete possibleRegistrationNames[lowerCasedName];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = EventPluginRegistry;\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule EventPluginUtils\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar EventConstants = __webpack_require__(11);\n\tvar ReactErrorUtils = __webpack_require__(42);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\t/**\n\t * Injected dependencies:\n\t */\n\t\n\t/**\n\t * - `ComponentTree`: [required] Module that can convert between React instances\n\t *   and actual node references.\n\t */\n\tvar ComponentTree;\n\tvar TreeTraversal;\n\tvar injection = {\n\t  injectComponentTree: function (Injected) {\n\t    ComponentTree = Injected;\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;\n\t    }\n\t  },\n\t  injectTreeTraversal: function (Injected) {\n\t    TreeTraversal = Injected;\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;\n\t    }\n\t  }\n\t};\n\t\n\tvar topLevelTypes = EventConstants.topLevelTypes;\n\t\n\tfunction isEndish(topLevelType) {\n\t  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;\n\t}\n\t\n\tfunction isMoveish(topLevelType) {\n\t  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;\n\t}\n\tfunction isStartish(topLevelType) {\n\t  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;\n\t}\n\t\n\tvar validateEventDispatches;\n\tif (false) {\n\t  validateEventDispatches = function (event) {\n\t    var dispatchListeners = event._dispatchListeners;\n\t    var dispatchInstances = event._dispatchInstances;\n\t\n\t    var listenersIsArr = Array.isArray(dispatchListeners);\n\t    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n\t\n\t    var instancesIsArr = Array.isArray(dispatchInstances);\n\t    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\n\t\n\t    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;\n\t  };\n\t}\n\t\n\t/**\n\t * Dispatch the event to the listener.\n\t * @param {SyntheticEvent} event SyntheticEvent to handle\n\t * @param {boolean} simulated If the event is simulated (changes exn behavior)\n\t * @param {function} listener Application-level callback\n\t * @param {*} inst Internal component instance\n\t */\n\tfunction executeDispatch(event, simulated, listener, inst) {\n\t  var type = event.type || 'unknown-event';\n\t  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);\n\t  if (simulated) {\n\t    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);\n\t  } else {\n\t    ReactErrorUtils.invokeGuardedCallback(type, listener, event);\n\t  }\n\t  event.currentTarget = null;\n\t}\n\t\n\t/**\n\t * Standard/simple iteration through an event's collected dispatches.\n\t */\n\tfunction executeDispatchesInOrder(event, simulated) {\n\t  var dispatchListeners = event._dispatchListeners;\n\t  var dispatchInstances = event._dispatchInstances;\n\t  if (false) {\n\t    validateEventDispatches(event);\n\t  }\n\t  if (Array.isArray(dispatchListeners)) {\n\t    for (var i = 0; i < dispatchListeners.length; i++) {\n\t      if (event.isPropagationStopped()) {\n\t        break;\n\t      }\n\t      // Listeners and Instances are two parallel arrays that are always in sync.\n\t      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);\n\t    }\n\t  } else if (dispatchListeners) {\n\t    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);\n\t  }\n\t  event._dispatchListeners = null;\n\t  event._dispatchInstances = null;\n\t}\n\t\n\t/**\n\t * Standard/simple iteration through an event's collected dispatches, but stops\n\t * at the first dispatch execution returning true, and returns that id.\n\t *\n\t * @return {?string} id of the first dispatch execution who's listener returns\n\t * true, or null if no listener returned true.\n\t */\n\tfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n\t  var dispatchListeners = event._dispatchListeners;\n\t  var dispatchInstances = event._dispatchInstances;\n\t  if (false) {\n\t    validateEventDispatches(event);\n\t  }\n\t  if (Array.isArray(dispatchListeners)) {\n\t    for (var i = 0; i < dispatchListeners.length; i++) {\n\t      if (event.isPropagationStopped()) {\n\t        break;\n\t      }\n\t      // Listeners and Instances are two parallel arrays that are always in sync.\n\t      if (dispatchListeners[i](event, dispatchInstances[i])) {\n\t        return dispatchInstances[i];\n\t      }\n\t    }\n\t  } else if (dispatchListeners) {\n\t    if (dispatchListeners(event, dispatchInstances)) {\n\t      return dispatchInstances;\n\t    }\n\t  }\n\t  return null;\n\t}\n\t\n\t/**\n\t * @see executeDispatchesInOrderStopAtTrueImpl\n\t */\n\tfunction executeDispatchesInOrderStopAtTrue(event) {\n\t  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n\t  event._dispatchInstances = null;\n\t  event._dispatchListeners = null;\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Execution of a \"direct\" dispatch - there must be at most one dispatch\n\t * accumulated on the event or it is considered an error. It doesn't really make\n\t * sense for an event with multiple dispatches (bubbled) to keep track of the\n\t * return values at each dispatch execution, but it does tend to make sense when\n\t * dealing with \"direct\" dispatches.\n\t *\n\t * @return {*} The return value of executing the single dispatch.\n\t */\n\tfunction executeDirectDispatch(event) {\n\t  if (false) {\n\t    validateEventDispatches(event);\n\t  }\n\t  var dispatchListener = event._dispatchListeners;\n\t  var dispatchInstance = event._dispatchInstances;\n\t  !!Array.isArray(dispatchListener) ?  false ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;\n\t  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;\n\t  var res = dispatchListener ? dispatchListener(event) : null;\n\t  event.currentTarget = null;\n\t  event._dispatchListeners = null;\n\t  event._dispatchInstances = null;\n\t  return res;\n\t}\n\t\n\t/**\n\t * @param {SyntheticEvent} event\n\t * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n\t */\n\tfunction hasDispatches(event) {\n\t  return !!event._dispatchListeners;\n\t}\n\t\n\t/**\n\t * General utilities that are useful in creating custom Event Plugins.\n\t */\n\tvar EventPluginUtils = {\n\t  isEndish: isEndish,\n\t  isMoveish: isMoveish,\n\t  isStartish: isStartish,\n\t\n\t  executeDirectDispatch: executeDirectDispatch,\n\t  executeDispatchesInOrder: executeDispatchesInOrder,\n\t  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n\t  hasDispatches: hasDispatches,\n\t\n\t  getInstanceFromNode: function (node) {\n\t    return ComponentTree.getInstanceFromNode(node);\n\t  },\n\t  getNodeFromInstance: function (node) {\n\t    return ComponentTree.getNodeFromInstance(node);\n\t  },\n\t  isAncestor: function (a, b) {\n\t    return TreeTraversal.isAncestor(a, b);\n\t  },\n\t  getLowestCommonAncestor: function (a, b) {\n\t    return TreeTraversal.getLowestCommonAncestor(a, b);\n\t  },\n\t  getParentInstance: function (inst) {\n\t    return TreeTraversal.getParentInstance(inst);\n\t  },\n\t  traverseTwoPhase: function (target, fn, arg) {\n\t    return TreeTraversal.traverseTwoPhase(target, fn, arg);\n\t  },\n\t  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {\n\t    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);\n\t  },\n\t\n\t  injection: injection\n\t};\n\t\n\tmodule.exports = EventPluginUtils;\n\n/***/ },\n/* 37 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule KeyEscapeUtils\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Escape and wrap key so it is safe to use as a reactid\n\t *\n\t * @param {string} key to be escaped.\n\t * @return {string} the escaped key.\n\t */\n\t\n\tfunction escape(key) {\n\t  var escapeRegex = /[=:]/g;\n\t  var escaperLookup = {\n\t    '=': '=0',\n\t    ':': '=2'\n\t  };\n\t  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n\t    return escaperLookup[match];\n\t  });\n\t\n\t  return '$' + escapedString;\n\t}\n\t\n\t/**\n\t * Unescape and unwrap key for human-readable display\n\t *\n\t * @param {string} key to unescape.\n\t * @return {string} the unescaped key.\n\t */\n\tfunction unescape(key) {\n\t  var unescapeRegex = /(=0|=2)/g;\n\t  var unescaperLookup = {\n\t    '=0': '=',\n\t    '=2': ':'\n\t  };\n\t  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n\t\n\t  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n\t    return unescaperLookup[match];\n\t  });\n\t}\n\t\n\tvar KeyEscapeUtils = {\n\t  escape: escape,\n\t  unescape: unescape\n\t};\n\t\n\tmodule.exports = KeyEscapeUtils;\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule LinkedValueUtils\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactPropTypes = __webpack_require__(74);\n\tvar ReactPropTypeLocations = __webpack_require__(45);\n\tvar ReactPropTypesSecret = __webpack_require__(46);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar hasReadOnlyValue = {\n\t  'button': true,\n\t  'checkbox': true,\n\t  'image': true,\n\t  'hidden': true,\n\t  'radio': true,\n\t  'reset': true,\n\t  'submit': true\n\t};\n\t\n\tfunction _assertSingleLink(inputProps) {\n\t  !(inputProps.checkedLink == null || inputProps.valueLink == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;\n\t}\n\tfunction _assertValueLink(inputProps) {\n\t  _assertSingleLink(inputProps);\n\t  !(inputProps.value == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\\'t want to use valueLink.') : _prodInvariant('88') : void 0;\n\t}\n\t\n\tfunction _assertCheckedLink(inputProps) {\n\t  _assertSingleLink(inputProps);\n\t  !(inputProps.checked == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\\'t want to use checkedLink') : _prodInvariant('89') : void 0;\n\t}\n\t\n\tvar propTypes = {\n\t  value: function (props, propName, componentName) {\n\t    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n\t      return null;\n\t    }\n\t    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n\t  },\n\t  checked: function (props, propName, componentName) {\n\t    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n\t      return null;\n\t    }\n\t    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n\t  },\n\t  onChange: ReactPropTypes.func\n\t};\n\t\n\tvar loggedTypeFailures = {};\n\tfunction getDeclarationErrorAddendum(owner) {\n\t  if (owner) {\n\t    var name = owner.getName();\n\t    if (name) {\n\t      return ' Check the render method of `' + name + '`.';\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\t/**\n\t * Provide a linked `value` attribute for controlled forms. You should not use\n\t * this outside of the ReactDOM controlled form components.\n\t */\n\tvar LinkedValueUtils = {\n\t  checkPropTypes: function (tagName, props, owner) {\n\t    for (var propName in propTypes) {\n\t      if (propTypes.hasOwnProperty(propName)) {\n\t        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, ReactPropTypesSecret);\n\t      }\n\t      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n\t        // Only monitor this failure once because there tends to be a lot of the\n\t        // same error.\n\t        loggedTypeFailures[error.message] = true;\n\t\n\t        var addendum = getDeclarationErrorAddendum(owner);\n\t         false ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {object} inputProps Props for form component\n\t   * @return {*} current value of the input either from value prop or link.\n\t   */\n\t  getValue: function (inputProps) {\n\t    if (inputProps.valueLink) {\n\t      _assertValueLink(inputProps);\n\t      return inputProps.valueLink.value;\n\t    }\n\t    return inputProps.value;\n\t  },\n\t\n\t  /**\n\t   * @param {object} inputProps Props for form component\n\t   * @return {*} current checked status of the input either from checked prop\n\t   *             or link.\n\t   */\n\t  getChecked: function (inputProps) {\n\t    if (inputProps.checkedLink) {\n\t      _assertCheckedLink(inputProps);\n\t      return inputProps.checkedLink.value;\n\t    }\n\t    return inputProps.checked;\n\t  },\n\t\n\t  /**\n\t   * @param {object} inputProps Props for form component\n\t   * @param {SyntheticEvent} event change event to handle\n\t   */\n\t  executeOnChange: function (inputProps, event) {\n\t    if (inputProps.valueLink) {\n\t      _assertValueLink(inputProps);\n\t      return inputProps.valueLink.requestChange(event.target.value);\n\t    } else if (inputProps.checkedLink) {\n\t      _assertCheckedLink(inputProps);\n\t      return inputProps.checkedLink.requestChange(event.target.checked);\n\t    } else if (inputProps.onChange) {\n\t      return inputProps.onChange.call(undefined, event);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = LinkedValueUtils;\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactComponent\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactNoopUpdateQueue = __webpack_require__(43);\n\t\n\tvar canDefineProperty = __webpack_require__(78);\n\tvar emptyObject = __webpack_require__(19);\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\t/**\n\t * Base class helpers for the updating state of a component.\n\t */\n\tfunction ReactComponent(props, context, updater) {\n\t  this.props = props;\n\t  this.context = context;\n\t  this.refs = emptyObject;\n\t  // We initialize the default updater but the real one gets injected by the\n\t  // renderer.\n\t  this.updater = updater || ReactNoopUpdateQueue;\n\t}\n\t\n\tReactComponent.prototype.isReactComponent = {};\n\t\n\t/**\n\t * Sets a subset of the state. Always use this to mutate\n\t * state. You should treat `this.state` as immutable.\n\t *\n\t * There is no guarantee that `this.state` will be immediately updated, so\n\t * accessing `this.state` after calling this method may return the old value.\n\t *\n\t * There is no guarantee that calls to `setState` will run synchronously,\n\t * as they may eventually be batched together.  You can provide an optional\n\t * callback that will be executed when the call to setState is actually\n\t * completed.\n\t *\n\t * When a function is provided to setState, it will be called at some point in\n\t * the future (not synchronously). It will be called with the up to date\n\t * component arguments (state, props, context). These values can be different\n\t * from this.* because your function may be called after receiveProps but before\n\t * shouldComponentUpdate, and this new state, props, and context will not yet be\n\t * assigned to this.\n\t *\n\t * @param {object|function} partialState Next partial state or function to\n\t *        produce next partial state to be merged with current state.\n\t * @param {?function} callback Called after state is updated.\n\t * @final\n\t * @protected\n\t */\n\tReactComponent.prototype.setState = function (partialState, callback) {\n\t  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ?  false ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;\n\t  this.updater.enqueueSetState(this, partialState);\n\t  if (callback) {\n\t    this.updater.enqueueCallback(this, callback, 'setState');\n\t  }\n\t};\n\t\n\t/**\n\t * Forces an update. This should only be invoked when it is known with\n\t * certainty that we are **not** in a DOM transaction.\n\t *\n\t * You may want to call this when you know that some deeper aspect of the\n\t * component's state has changed but `setState` was not called.\n\t *\n\t * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t * `componentWillUpdate` and `componentDidUpdate`.\n\t *\n\t * @param {?function} callback Called after update is complete.\n\t * @final\n\t * @protected\n\t */\n\tReactComponent.prototype.forceUpdate = function (callback) {\n\t  this.updater.enqueueForceUpdate(this);\n\t  if (callback) {\n\t    this.updater.enqueueCallback(this, callback, 'forceUpdate');\n\t  }\n\t};\n\t\n\t/**\n\t * Deprecated APIs. These APIs used to exist on classic React classes but since\n\t * we would like to deprecate them, we're not going to move them over to this\n\t * modern base class. Instead, we define a getter that warns if it's accessed.\n\t */\n\tif (false) {\n\t  var deprecatedAPIs = {\n\t    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n\t    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n\t  };\n\t  var defineDeprecationWarning = function (methodName, info) {\n\t    if (canDefineProperty) {\n\t      Object.defineProperty(ReactComponent.prototype, methodName, {\n\t        get: function () {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;\n\t          return undefined;\n\t        }\n\t      });\n\t    }\n\t  };\n\t  for (var fnName in deprecatedAPIs) {\n\t    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n\t      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = ReactComponent;\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactComponentEnvironment\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar injected = false;\n\t\n\tvar ReactComponentEnvironment = {\n\t\n\t  /**\n\t   * Optionally injectable hook for swapping out mount images in the middle of\n\t   * the tree.\n\t   */\n\t  replaceNodeWithMarkup: null,\n\t\n\t  /**\n\t   * Optionally injectable hook for processing a queue of child updates. Will\n\t   * later move into MultiChildComponents.\n\t   */\n\t  processChildrenUpdates: null,\n\t\n\t  injection: {\n\t    injectEnvironment: function (environment) {\n\t      !!injected ?  false ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;\n\t      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;\n\t      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;\n\t      injected = true;\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactComponentEnvironment;\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2016-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactComponentTreeHook\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(15);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\tfunction isNative(fn) {\n\t  // Based on isNative() from Lodash\n\t  var funcToString = Function.prototype.toString;\n\t  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\t  var reIsNative = RegExp('^' + funcToString\n\t  // Take an example native function source for comparison\n\t  .call(hasOwnProperty)\n\t  // Strip regex characters so we can use it for regex\n\t  .replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n\t  // Remove hasOwnProperty from the template to make it generic\n\t  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n\t  try {\n\t    var source = funcToString.call(fn);\n\t    return reIsNative.test(source);\n\t  } catch (err) {\n\t    return false;\n\t  }\n\t}\n\t\n\tvar canUseCollections =\n\t// Array.from\n\ttypeof Array.from === 'function' &&\n\t// Map\n\ttypeof Map === 'function' && isNative(Map) &&\n\t// Map.prototype.keys\n\tMap.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&\n\t// Set\n\ttypeof Set === 'function' && isNative(Set) &&\n\t// Set.prototype.keys\n\tSet.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);\n\t\n\tvar itemMap;\n\tvar rootIDSet;\n\t\n\tvar itemByKey;\n\tvar rootByKey;\n\t\n\tif (canUseCollections) {\n\t  itemMap = new Map();\n\t  rootIDSet = new Set();\n\t} else {\n\t  itemByKey = {};\n\t  rootByKey = {};\n\t}\n\t\n\tvar unmountedIDs = [];\n\t\n\t// Use non-numeric keys to prevent V8 performance issues:\n\t// https://github.com/facebook/react/pull/7232\n\tfunction getKeyFromID(id) {\n\t  return '.' + id;\n\t}\n\tfunction getIDFromKey(key) {\n\t  return parseInt(key.substr(1), 10);\n\t}\n\t\n\tfunction get(id) {\n\t  if (canUseCollections) {\n\t    return itemMap.get(id);\n\t  } else {\n\t    var key = getKeyFromID(id);\n\t    return itemByKey[key];\n\t  }\n\t}\n\t\n\tfunction remove(id) {\n\t  if (canUseCollections) {\n\t    itemMap['delete'](id);\n\t  } else {\n\t    var key = getKeyFromID(id);\n\t    delete itemByKey[key];\n\t  }\n\t}\n\t\n\tfunction create(id, element, parentID) {\n\t  var item = {\n\t    element: element,\n\t    parentID: parentID,\n\t    text: null,\n\t    childIDs: [],\n\t    isMounted: false,\n\t    updateCount: 0\n\t  };\n\t\n\t  if (canUseCollections) {\n\t    itemMap.set(id, item);\n\t  } else {\n\t    var key = getKeyFromID(id);\n\t    itemByKey[key] = item;\n\t  }\n\t}\n\t\n\tfunction addRoot(id) {\n\t  if (canUseCollections) {\n\t    rootIDSet.add(id);\n\t  } else {\n\t    var key = getKeyFromID(id);\n\t    rootByKey[key] = true;\n\t  }\n\t}\n\t\n\tfunction removeRoot(id) {\n\t  if (canUseCollections) {\n\t    rootIDSet['delete'](id);\n\t  } else {\n\t    var key = getKeyFromID(id);\n\t    delete rootByKey[key];\n\t  }\n\t}\n\t\n\tfunction getRegisteredIDs() {\n\t  if (canUseCollections) {\n\t    return Array.from(itemMap.keys());\n\t  } else {\n\t    return Object.keys(itemByKey).map(getIDFromKey);\n\t  }\n\t}\n\t\n\tfunction getRootIDs() {\n\t  if (canUseCollections) {\n\t    return Array.from(rootIDSet.keys());\n\t  } else {\n\t    return Object.keys(rootByKey).map(getIDFromKey);\n\t  }\n\t}\n\t\n\tfunction purgeDeep(id) {\n\t  var item = get(id);\n\t  if (item) {\n\t    var childIDs = item.childIDs;\n\t\n\t    remove(id);\n\t    childIDs.forEach(purgeDeep);\n\t  }\n\t}\n\t\n\tfunction describeComponentFrame(name, source, ownerName) {\n\t  return '\\n    in ' + name + (source ? ' (at ' + source.fileName.replace(/^.*[\\\\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');\n\t}\n\t\n\tfunction getDisplayName(element) {\n\t  if (element == null) {\n\t    return '#empty';\n\t  } else if (typeof element === 'string' || typeof element === 'number') {\n\t    return '#text';\n\t  } else if (typeof element.type === 'string') {\n\t    return element.type;\n\t  } else {\n\t    return element.type.displayName || element.type.name || 'Unknown';\n\t  }\n\t}\n\t\n\tfunction describeID(id) {\n\t  var name = ReactComponentTreeHook.getDisplayName(id);\n\t  var element = ReactComponentTreeHook.getElement(id);\n\t  var ownerID = ReactComponentTreeHook.getOwnerID(id);\n\t  var ownerName;\n\t  if (ownerID) {\n\t    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);\n\t  }\n\t   false ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;\n\t  return describeComponentFrame(name, element && element._source, ownerName);\n\t}\n\t\n\tvar ReactComponentTreeHook = {\n\t  onSetChildren: function (id, nextChildIDs) {\n\t    var item = get(id);\n\t    item.childIDs = nextChildIDs;\n\t\n\t    for (var i = 0; i < nextChildIDs.length; i++) {\n\t      var nextChildID = nextChildIDs[i];\n\t      var nextChild = get(nextChildID);\n\t      !nextChild ?  false ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;\n\t      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ?  false ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;\n\t      !nextChild.isMounted ?  false ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;\n\t      if (nextChild.parentID == null) {\n\t        nextChild.parentID = id;\n\t        // TODO: This shouldn't be necessary but mounting a new root during in\n\t        // componentWillMount currently causes not-yet-mounted components to\n\t        // be purged from our tree data so their parent ID is missing.\n\t      }\n\t      !(nextChild.parentID === id) ?  false ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;\n\t    }\n\t  },\n\t  onBeforeMountComponent: function (id, element, parentID) {\n\t    create(id, element, parentID);\n\t  },\n\t  onBeforeUpdateComponent: function (id, element) {\n\t    var item = get(id);\n\t    if (!item || !item.isMounted) {\n\t      // We may end up here as a result of setState() in componentWillUnmount().\n\t      // In this case, ignore the element.\n\t      return;\n\t    }\n\t    item.element = element;\n\t  },\n\t  onMountComponent: function (id) {\n\t    var item = get(id);\n\t    item.isMounted = true;\n\t    var isRoot = item.parentID === 0;\n\t    if (isRoot) {\n\t      addRoot(id);\n\t    }\n\t  },\n\t  onUpdateComponent: function (id) {\n\t    var item = get(id);\n\t    if (!item || !item.isMounted) {\n\t      // We may end up here as a result of setState() in componentWillUnmount().\n\t      // In this case, ignore the element.\n\t      return;\n\t    }\n\t    item.updateCount++;\n\t  },\n\t  onUnmountComponent: function (id) {\n\t    var item = get(id);\n\t    if (item) {\n\t      // We need to check if it exists.\n\t      // `item` might not exist if it is inside an error boundary, and a sibling\n\t      // error boundary child threw while mounting. Then this instance never\n\t      // got a chance to mount, but it still gets an unmounting event during\n\t      // the error boundary cleanup.\n\t      item.isMounted = false;\n\t      var isRoot = item.parentID === 0;\n\t      if (isRoot) {\n\t        removeRoot(id);\n\t      }\n\t    }\n\t    unmountedIDs.push(id);\n\t  },\n\t  purgeUnmountedComponents: function () {\n\t    if (ReactComponentTreeHook._preventPurging) {\n\t      // Should only be used for testing.\n\t      return;\n\t    }\n\t\n\t    for (var i = 0; i < unmountedIDs.length; i++) {\n\t      var id = unmountedIDs[i];\n\t      purgeDeep(id);\n\t    }\n\t    unmountedIDs.length = 0;\n\t  },\n\t  isMounted: function (id) {\n\t    var item = get(id);\n\t    return item ? item.isMounted : false;\n\t  },\n\t  getCurrentStackAddendum: function (topElement) {\n\t    var info = '';\n\t    if (topElement) {\n\t      var type = topElement.type;\n\t      var name = typeof type === 'function' ? type.displayName || type.name : type;\n\t      var owner = topElement._owner;\n\t      info += describeComponentFrame(name || 'Unknown', topElement._source, owner && owner.getName());\n\t    }\n\t\n\t    var currentOwner = ReactCurrentOwner.current;\n\t    var id = currentOwner && currentOwner._debugID;\n\t\n\t    info += ReactComponentTreeHook.getStackAddendumByID(id);\n\t    return info;\n\t  },\n\t  getStackAddendumByID: function (id) {\n\t    var info = '';\n\t    while (id) {\n\t      info += describeID(id);\n\t      id = ReactComponentTreeHook.getParentID(id);\n\t    }\n\t    return info;\n\t  },\n\t  getChildIDs: function (id) {\n\t    var item = get(id);\n\t    return item ? item.childIDs : [];\n\t  },\n\t  getDisplayName: function (id) {\n\t    var element = ReactComponentTreeHook.getElement(id);\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    return getDisplayName(element);\n\t  },\n\t  getElement: function (id) {\n\t    var item = get(id);\n\t    return item ? item.element : null;\n\t  },\n\t  getOwnerID: function (id) {\n\t    var element = ReactComponentTreeHook.getElement(id);\n\t    if (!element || !element._owner) {\n\t      return null;\n\t    }\n\t    return element._owner._debugID;\n\t  },\n\t  getParentID: function (id) {\n\t    var item = get(id);\n\t    return item ? item.parentID : null;\n\t  },\n\t  getSource: function (id) {\n\t    var item = get(id);\n\t    var element = item ? item.element : null;\n\t    var source = element != null ? element._source : null;\n\t    return source;\n\t  },\n\t  getText: function (id) {\n\t    var element = ReactComponentTreeHook.getElement(id);\n\t    if (typeof element === 'string') {\n\t      return element;\n\t    } else if (typeof element === 'number') {\n\t      return '' + element;\n\t    } else {\n\t      return null;\n\t    }\n\t  },\n\t  getUpdateCount: function (id) {\n\t    var item = get(id);\n\t    return item ? item.updateCount : 0;\n\t  },\n\t\n\t\n\t  getRegisteredIDs: getRegisteredIDs,\n\t\n\t  getRootIDs: getRootIDs\n\t};\n\t\n\tmodule.exports = ReactComponentTreeHook;\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactErrorUtils\n\t */\n\t\n\t'use strict';\n\t\n\tvar caughtError = null;\n\t\n\t/**\n\t * Call a function while guarding against errors that happens within it.\n\t *\n\t * @param {?String} name of the guard to use for logging or debugging\n\t * @param {Function} func The function to invoke\n\t * @param {*} a First argument\n\t * @param {*} b Second argument\n\t */\n\tfunction invokeGuardedCallback(name, func, a, b) {\n\t  try {\n\t    return func(a, b);\n\t  } catch (x) {\n\t    if (caughtError === null) {\n\t      caughtError = x;\n\t    }\n\t    return undefined;\n\t  }\n\t}\n\t\n\tvar ReactErrorUtils = {\n\t  invokeGuardedCallback: invokeGuardedCallback,\n\t\n\t  /**\n\t   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event\n\t   * handler are sure to be rethrown by rethrowCaughtError.\n\t   */\n\t  invokeGuardedCallbackWithCatch: invokeGuardedCallback,\n\t\n\t  /**\n\t   * During execution of guarded functions we will capture the first error which\n\t   * we will rethrow to be handled by the top level error handler.\n\t   */\n\t  rethrowCaughtError: function () {\n\t    if (caughtError) {\n\t      var error = caughtError;\n\t      caughtError = null;\n\t      throw error;\n\t    }\n\t  }\n\t};\n\t\n\tif (false) {\n\t  /**\n\t   * To help development we can get better devtools integration by simulating a\n\t   * real browser event.\n\t   */\n\t  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\n\t    var fakeNode = document.createElement('react');\n\t    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {\n\t      var boundFunc = func.bind(null, a, b);\n\t      var evtType = 'react-' + name;\n\t      fakeNode.addEventListener(evtType, boundFunc, false);\n\t      var evt = document.createEvent('Event');\n\t      evt.initEvent(evtType, false, false);\n\t      fakeNode.dispatchEvent(evt);\n\t      fakeNode.removeEventListener(evtType, boundFunc, false);\n\t    };\n\t  }\n\t}\n\t\n\tmodule.exports = ReactErrorUtils;\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactNoopUpdateQueue\n\t */\n\t\n\t'use strict';\n\t\n\tvar warning = __webpack_require__(3);\n\t\n\tfunction warnNoop(publicInstance, callerName) {\n\t  if (false) {\n\t    var constructor = publicInstance.constructor;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n\t  }\n\t}\n\t\n\t/**\n\t * This is the abstract API for an update queue.\n\t */\n\tvar ReactNoopUpdateQueue = {\n\t\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @param {ReactClass} publicInstance The instance we want to test.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t  isMounted: function (publicInstance) {\n\t    return false;\n\t  },\n\t\n\t  /**\n\t   * Enqueue a callback that will be executed after all the pending updates\n\t   * have processed.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance to use as `this` context.\n\t   * @param {?function} callback Called after state is updated.\n\t   * @internal\n\t   */\n\t  enqueueCallback: function (publicInstance, callback) {},\n\t\n\t  /**\n\t   * Forces an update. This should only be invoked when it is known with\n\t   * certainty that we are **not** in a DOM transaction.\n\t   *\n\t   * You may want to call this when you know that some deeper aspect of the\n\t   * component's state has changed but `setState` was not called.\n\t   *\n\t   * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t   * `componentWillUpdate` and `componentDidUpdate`.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @internal\n\t   */\n\t  enqueueForceUpdate: function (publicInstance) {\n\t    warnNoop(publicInstance, 'forceUpdate');\n\t  },\n\t\n\t  /**\n\t   * Replaces all of the state. Always use this or `setState` to mutate state.\n\t   * You should treat `this.state` as immutable.\n\t   *\n\t   * There is no guarantee that `this.state` will be immediately updated, so\n\t   * accessing `this.state` after calling this method may return the old value.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} completeState Next state.\n\t   * @internal\n\t   */\n\t  enqueueReplaceState: function (publicInstance, completeState) {\n\t    warnNoop(publicInstance, 'replaceState');\n\t  },\n\t\n\t  /**\n\t   * Sets a subset of the state. This only exists because _pendingState is\n\t   * internal. This provides a merging strategy that is not available to deep\n\t   * properties which is confusing. TODO: Expose pendingState or don't use it\n\t   * during the merge.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} partialState Next partial state to be merged with state.\n\t   * @internal\n\t   */\n\t  enqueueSetState: function (publicInstance, partialState) {\n\t    warnNoop(publicInstance, 'setState');\n\t  }\n\t};\n\t\n\tmodule.exports = ReactNoopUpdateQueue;\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactPropTypeLocationNames\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypeLocationNames = {};\n\t\n\tif (false) {\n\t  ReactPropTypeLocationNames = {\n\t    prop: 'prop',\n\t    context: 'context',\n\t    childContext: 'child context'\n\t  };\n\t}\n\t\n\tmodule.exports = ReactPropTypeLocationNames;\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactPropTypeLocations\n\t */\n\t\n\t'use strict';\n\t\n\tvar keyMirror = __webpack_require__(25);\n\t\n\tvar ReactPropTypeLocations = keyMirror({\n\t  prop: null,\n\t  context: null,\n\t  childContext: null\n\t});\n\t\n\tmodule.exports = ReactPropTypeLocations;\n\n/***/ },\n/* 46 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactPropTypesSecret\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\t\n\tmodule.exports = ReactPropTypesSecret;\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactUpdateQueue\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(15);\n\tvar ReactInstanceMap = __webpack_require__(22);\n\tvar ReactInstrumentation = __webpack_require__(8);\n\tvar ReactUpdates = __webpack_require__(10);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\tfunction enqueueUpdate(internalInstance) {\n\t  ReactUpdates.enqueueUpdate(internalInstance);\n\t}\n\t\n\tfunction formatUnexpectedArgument(arg) {\n\t  var type = typeof arg;\n\t  if (type !== 'object') {\n\t    return type;\n\t  }\n\t  var displayName = arg.constructor && arg.constructor.name || type;\n\t  var keys = Object.keys(arg);\n\t  if (keys.length > 0 && keys.length < 20) {\n\t    return displayName + ' (keys: ' + keys.join(', ') + ')';\n\t  }\n\t  return displayName;\n\t}\n\t\n\tfunction getInternalInstanceReadyForUpdate(publicInstance, callerName) {\n\t  var internalInstance = ReactInstanceMap.get(publicInstance);\n\t  if (!internalInstance) {\n\t    if (false) {\n\t      var ctor = publicInstance.constructor;\n\t      // Only warn when we have a callerName. Otherwise we should be silent.\n\t      // We're probably calling from enqueueCallback. We don't want to warn\n\t      // there because we already warned for the corresponding lifecycle method.\n\t      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;\n\t    }\n\t    return null;\n\t  }\n\t\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;\n\t  }\n\t\n\t  return internalInstance;\n\t}\n\t\n\t/**\n\t * ReactUpdateQueue allows for state updates to be scheduled into a later\n\t * reconciliation step.\n\t */\n\tvar ReactUpdateQueue = {\n\t\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @param {ReactClass} publicInstance The instance we want to test.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t  isMounted: function (publicInstance) {\n\t    if (false) {\n\t      var owner = ReactCurrentOwner.current;\n\t      if (owner !== null) {\n\t        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n\t        owner._warnedAboutRefsInRender = true;\n\t      }\n\t    }\n\t    var internalInstance = ReactInstanceMap.get(publicInstance);\n\t    if (internalInstance) {\n\t      // During componentWillMount and render this will still be null but after\n\t      // that will always render to something. At least for now. So we can use\n\t      // this hack.\n\t      return !!internalInstance._renderedComponent;\n\t    } else {\n\t      return false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Enqueue a callback that will be executed after all the pending updates\n\t   * have processed.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance to use as `this` context.\n\t   * @param {?function} callback Called after state is updated.\n\t   * @param {string} callerName Name of the calling function in the public API.\n\t   * @internal\n\t   */\n\t  enqueueCallback: function (publicInstance, callback, callerName) {\n\t    ReactUpdateQueue.validateCallback(callback, callerName);\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\n\t\n\t    // Previously we would throw an error if we didn't have an internal\n\t    // instance. Since we want to make it a no-op instead, we mirror the same\n\t    // behavior we have in other enqueue* methods.\n\t    // We also need to ignore callbacks in componentWillMount. See\n\t    // enqueueUpdates.\n\t    if (!internalInstance) {\n\t      return null;\n\t    }\n\t\n\t    if (internalInstance._pendingCallbacks) {\n\t      internalInstance._pendingCallbacks.push(callback);\n\t    } else {\n\t      internalInstance._pendingCallbacks = [callback];\n\t    }\n\t    // TODO: The callback here is ignored when setState is called from\n\t    // componentWillMount. Either fix it or disallow doing so completely in\n\t    // favor of getInitialState. Alternatively, we can disallow\n\t    // componentWillMount during server-side rendering.\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  enqueueCallbackInternal: function (internalInstance, callback) {\n\t    if (internalInstance._pendingCallbacks) {\n\t      internalInstance._pendingCallbacks.push(callback);\n\t    } else {\n\t      internalInstance._pendingCallbacks = [callback];\n\t    }\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  /**\n\t   * Forces an update. This should only be invoked when it is known with\n\t   * certainty that we are **not** in a DOM transaction.\n\t   *\n\t   * You may want to call this when you know that some deeper aspect of the\n\t   * component's state has changed but `setState` was not called.\n\t   *\n\t   * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t   * `componentWillUpdate` and `componentDidUpdate`.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @internal\n\t   */\n\t  enqueueForceUpdate: function (publicInstance) {\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');\n\t\n\t    if (!internalInstance) {\n\t      return;\n\t    }\n\t\n\t    internalInstance._pendingForceUpdate = true;\n\t\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  /**\n\t   * Replaces all of the state. Always use this or `setState` to mutate state.\n\t   * You should treat `this.state` as immutable.\n\t   *\n\t   * There is no guarantee that `this.state` will be immediately updated, so\n\t   * accessing `this.state` after calling this method may return the old value.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} completeState Next state.\n\t   * @internal\n\t   */\n\t  enqueueReplaceState: function (publicInstance, completeState) {\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');\n\t\n\t    if (!internalInstance) {\n\t      return;\n\t    }\n\t\n\t    internalInstance._pendingStateQueue = [completeState];\n\t    internalInstance._pendingReplaceState = true;\n\t\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  /**\n\t   * Sets a subset of the state. This only exists because _pendingState is\n\t   * internal. This provides a merging strategy that is not available to deep\n\t   * properties which is confusing. TODO: Expose pendingState or don't use it\n\t   * during the merge.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} partialState Next partial state to be merged with state.\n\t   * @internal\n\t   */\n\t  enqueueSetState: function (publicInstance, partialState) {\n\t    if (false) {\n\t      ReactInstrumentation.debugTool.onSetState();\n\t      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;\n\t    }\n\t\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');\n\t\n\t    if (!internalInstance) {\n\t      return;\n\t    }\n\t\n\t    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);\n\t    queue.push(partialState);\n\t\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {\n\t    internalInstance._pendingElement = nextElement;\n\t    // TODO: introduce _pendingContext instead of setting it directly.\n\t    internalInstance._context = nextContext;\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  validateCallback: function (callback, callerName) {\n\t    !(!callback || typeof callback === 'function') ?  false ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactUpdateQueue;\n\n/***/ },\n/* 48 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule createMicrosoftUnsafeLocalFunction\n\t */\n\t\n\t/* globals MSApp */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Create a function which has 'unsafe' privileges (required by windows8 apps)\n\t */\n\t\n\tvar createMicrosoftUnsafeLocalFunction = function (func) {\n\t  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n\t    return function (arg0, arg1, arg2, arg3) {\n\t      MSApp.execUnsafeLocalFunction(function () {\n\t        return func(arg0, arg1, arg2, arg3);\n\t      });\n\t    };\n\t  } else {\n\t    return func;\n\t  }\n\t};\n\t\n\tmodule.exports = createMicrosoftUnsafeLocalFunction;\n\n/***/ },\n/* 49 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getEventCharCode\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * `charCode` represents the actual \"character code\" and is safe to use with\n\t * `String.fromCharCode`. As such, only keys that correspond to printable\n\t * characters produce a valid `charCode`, the only exception to this is Enter.\n\t * The Tab-key is considered non-printable and does not have a `charCode`,\n\t * presumably because it does not produce a tab-character in browsers.\n\t *\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {number} Normalized `charCode` property.\n\t */\n\t\n\tfunction getEventCharCode(nativeEvent) {\n\t  var charCode;\n\t  var keyCode = nativeEvent.keyCode;\n\t\n\t  if ('charCode' in nativeEvent) {\n\t    charCode = nativeEvent.charCode;\n\t\n\t    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n\t    if (charCode === 0 && keyCode === 13) {\n\t      charCode = 13;\n\t    }\n\t  } else {\n\t    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n\t    charCode = keyCode;\n\t  }\n\t\n\t  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n\t  // Must not discard the (non-)printable Enter-key.\n\t  if (charCode >= 32 || charCode === 13) {\n\t    return charCode;\n\t  }\n\t\n\t  return 0;\n\t}\n\t\n\tmodule.exports = getEventCharCode;\n\n/***/ },\n/* 50 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getEventModifierState\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Translation from modifier key to the associated property in the event.\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n\t */\n\t\n\tvar modifierKeyToProp = {\n\t  'Alt': 'altKey',\n\t  'Control': 'ctrlKey',\n\t  'Meta': 'metaKey',\n\t  'Shift': 'shiftKey'\n\t};\n\t\n\t// IE8 does not implement getModifierState so we simply map it to the only\n\t// modifier keys exposed by the event itself, does not support Lock-keys.\n\t// Currently, all major browsers except Chrome seems to support Lock-keys.\n\tfunction modifierStateGetter(keyArg) {\n\t  var syntheticEvent = this;\n\t  var nativeEvent = syntheticEvent.nativeEvent;\n\t  if (nativeEvent.getModifierState) {\n\t    return nativeEvent.getModifierState(keyArg);\n\t  }\n\t  var keyProp = modifierKeyToProp[keyArg];\n\t  return keyProp ? !!nativeEvent[keyProp] : false;\n\t}\n\t\n\tfunction getEventModifierState(nativeEvent) {\n\t  return modifierStateGetter;\n\t}\n\t\n\tmodule.exports = getEventModifierState;\n\n/***/ },\n/* 51 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getEventTarget\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Gets the target node from a native browser event by accounting for\n\t * inconsistencies in browser DOM APIs.\n\t *\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {DOMEventTarget} Target node.\n\t */\n\t\n\tfunction getEventTarget(nativeEvent) {\n\t  var target = nativeEvent.target || nativeEvent.srcElement || window;\n\t\n\t  // Normalize SVG <use> element events #4963\n\t  if (target.correspondingUseElement) {\n\t    target = target.correspondingUseElement;\n\t  }\n\t\n\t  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n\t  // @see http://www.quirksmode.org/js/events_properties.html\n\t  return target.nodeType === 3 ? target.parentNode : target;\n\t}\n\t\n\tmodule.exports = getEventTarget;\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule isEventSupported\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar useHasFeature;\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  useHasFeature = document.implementation && document.implementation.hasFeature &&\n\t  // always returns true in newer browsers as per the standard.\n\t  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n\t  document.implementation.hasFeature('', '') !== true;\n\t}\n\t\n\t/**\n\t * Checks if an event is supported in the current execution environment.\n\t *\n\t * NOTE: This will not work correctly for non-generic events such as `change`,\n\t * `reset`, `load`, `error`, and `select`.\n\t *\n\t * Borrows from Modernizr.\n\t *\n\t * @param {string} eventNameSuffix Event name, e.g. \"click\".\n\t * @param {?boolean} capture Check if the capture phase is supported.\n\t * @return {boolean} True if the event is supported.\n\t * @internal\n\t * @license Modernizr 3.0.0pre (Custom Build) | MIT\n\t */\n\tfunction isEventSupported(eventNameSuffix, capture) {\n\t  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {\n\t    return false;\n\t  }\n\t\n\t  var eventName = 'on' + eventNameSuffix;\n\t  var isSupported = eventName in document;\n\t\n\t  if (!isSupported) {\n\t    var element = document.createElement('div');\n\t    element.setAttribute(eventName, 'return;');\n\t    isSupported = typeof element[eventName] === 'function';\n\t  }\n\t\n\t  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n\t    // This is the only way to test support for the `wheel` event in IE9+.\n\t    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n\t  }\n\t\n\t  return isSupported;\n\t}\n\t\n\tmodule.exports = isEventSupported;\n\n/***/ },\n/* 53 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule shouldUpdateReactComponent\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Given a `prevElement` and `nextElement`, determines if the existing\n\t * instance should be updated as opposed to being destroyed or replaced by a new\n\t * instance. Both arguments are elements. This ensures that this logic can\n\t * operate on stateless trees without any backing instance.\n\t *\n\t * @param {?object} prevElement\n\t * @param {?object} nextElement\n\t * @return {boolean} True if the existing instance should be updated.\n\t * @protected\n\t */\n\t\n\tfunction shouldUpdateReactComponent(prevElement, nextElement) {\n\t  var prevEmpty = prevElement === null || prevElement === false;\n\t  var nextEmpty = nextElement === null || nextElement === false;\n\t  if (prevEmpty || nextEmpty) {\n\t    return prevEmpty === nextEmpty;\n\t  }\n\t\n\t  var prevType = typeof prevElement;\n\t  var nextType = typeof nextElement;\n\t  if (prevType === 'string' || prevType === 'number') {\n\t    return nextType === 'string' || nextType === 'number';\n\t  } else {\n\t    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;\n\t  }\n\t}\n\t\n\tmodule.exports = shouldUpdateReactComponent;\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule traverseAllChildren\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(15);\n\tvar ReactElement = __webpack_require__(9);\n\t\n\tvar getIteratorFn = __webpack_require__(81);\n\tvar invariant = __webpack_require__(1);\n\tvar KeyEscapeUtils = __webpack_require__(37);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar SEPARATOR = '.';\n\tvar SUBSEPARATOR = ':';\n\t\n\t/**\n\t * TODO: Test that a single child and an array with one item have the same key\n\t * pattern.\n\t */\n\t\n\tvar didWarnAboutMaps = false;\n\t\n\t/**\n\t * Generate a key string that identifies a component within a set.\n\t *\n\t * @param {*} component A component that could contain a manual key.\n\t * @param {number} index Index that is used if a manual key is not provided.\n\t * @return {string}\n\t */\n\tfunction getComponentKey(component, index) {\n\t  // Do some typechecking here since we call this blindly. We want to ensure\n\t  // that we don't block potential future ES APIs.\n\t  if (component && typeof component === 'object' && component.key != null) {\n\t    // Explicit key\n\t    return KeyEscapeUtils.escape(component.key);\n\t  }\n\t  // Implicit key determined by the index in the set\n\t  return index.toString(36);\n\t}\n\t\n\t/**\n\t * @param {?*} children Children tree container.\n\t * @param {!string} nameSoFar Name of the key path so far.\n\t * @param {!function} callback Callback to invoke with each child found.\n\t * @param {?*} traverseContext Used to pass information throughout the traversal\n\t * process.\n\t * @return {!number} The number of children in this subtree.\n\t */\n\tfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n\t  var type = typeof children;\n\t\n\t  if (type === 'undefined' || type === 'boolean') {\n\t    // All of the above are perceived as null.\n\t    children = null;\n\t  }\n\t\n\t  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {\n\t    callback(traverseContext, children,\n\t    // If it's the only child, treat the name as if it was wrapped in an array\n\t    // so that it's consistent if the number of children grows.\n\t    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n\t    return 1;\n\t  }\n\t\n\t  var child;\n\t  var nextName;\n\t  var subtreeCount = 0; // Count of children found in the current subtree.\n\t  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\t\n\t  if (Array.isArray(children)) {\n\t    for (var i = 0; i < children.length; i++) {\n\t      child = children[i];\n\t      nextName = nextNamePrefix + getComponentKey(child, i);\n\t      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t    }\n\t  } else {\n\t    var iteratorFn = getIteratorFn(children);\n\t    if (iteratorFn) {\n\t      var iterator = iteratorFn.call(children);\n\t      var step;\n\t      if (iteratorFn !== children.entries) {\n\t        var ii = 0;\n\t        while (!(step = iterator.next()).done) {\n\t          child = step.value;\n\t          nextName = nextNamePrefix + getComponentKey(child, ii++);\n\t          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t        }\n\t      } else {\n\t        if (false) {\n\t          var mapsAsChildrenAddendum = '';\n\t          if (ReactCurrentOwner.current) {\n\t            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n\t            if (mapsAsChildrenOwnerName) {\n\t              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n\t            }\n\t          }\n\t          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n\t          didWarnAboutMaps = true;\n\t        }\n\t        // Iterator will provide entry [k,v] tuples rather than values.\n\t        while (!(step = iterator.next()).done) {\n\t          var entry = step.value;\n\t          if (entry) {\n\t            child = entry[1];\n\t            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n\t            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t          }\n\t        }\n\t      }\n\t    } else if (type === 'object') {\n\t      var addendum = '';\n\t      if (false) {\n\t        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n\t        if (children._isReactElement) {\n\t          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n\t        }\n\t        if (ReactCurrentOwner.current) {\n\t          var name = ReactCurrentOwner.current.getName();\n\t          if (name) {\n\t            addendum += ' Check the render method of `' + name + '`.';\n\t          }\n\t        }\n\t      }\n\t      var childrenString = String(children);\n\t       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n\t    }\n\t  }\n\t\n\t  return subtreeCount;\n\t}\n\t\n\t/**\n\t * Traverses children that are typically specified as `props.children`, but\n\t * might also be specified through attributes:\n\t *\n\t * - `traverseAllChildren(this.props.children, ...)`\n\t * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n\t *\n\t * The `traverseContext` is an optional argument that is passed through the\n\t * entire traversal. It can be used to store accumulations or anything else that\n\t * the callback might find relevant.\n\t *\n\t * @param {?*} children Children tree object.\n\t * @param {!function} callback To invoke upon traversing each child.\n\t * @param {?*} traverseContext Context for traversal.\n\t * @return {!number} The number of children in this subtree.\n\t */\n\tfunction traverseAllChildren(children, callback, traverseContext) {\n\t  if (children == null) {\n\t    return 0;\n\t  }\n\t\n\t  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n\t}\n\t\n\tmodule.exports = traverseAllChildren;\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule validateDOMNesting\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar emptyFunction = __webpack_require__(7);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar validateDOMNesting = emptyFunction;\n\t\n\tif (false) {\n\t  // This validation code was written based on the HTML5 parsing spec:\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n\t  //\n\t  // Note: this does not catch all invalid nesting, nor does it try to (as it's\n\t  // not clear what practical benefit doing so provides); instead, we warn only\n\t  // for cases where the parser will give a parse tree differing from what React\n\t  // intended. For example, <b><div></div></b> is invalid but we don't warn\n\t  // because it still parses correctly; we do warn for other cases like nested\n\t  // <p> tags where the beginning of the second element implicitly closes the\n\t  // first, causing a confusing mess.\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#special\n\t  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n\t  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n\t  // TODO: Distinguish by namespace here -- for <title>, including it here\n\t  // errs on the side of fewer warnings\n\t  'foreignObject', 'desc', 'title'];\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n\t  var buttonScopeTags = inScopeTags.concat(['button']);\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n\t  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\n\t\n\t  var emptyAncestorInfo = {\n\t    current: null,\n\t\n\t    formTag: null,\n\t    aTagInScope: null,\n\t    buttonTagInScope: null,\n\t    nobrTagInScope: null,\n\t    pTagInButtonScope: null,\n\t\n\t    listItemTagAutoclosing: null,\n\t    dlItemTagAutoclosing: null\n\t  };\n\t\n\t  var updatedAncestorInfo = function (oldInfo, tag, instance) {\n\t    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);\n\t    var info = { tag: tag, instance: instance };\n\t\n\t    if (inScopeTags.indexOf(tag) !== -1) {\n\t      ancestorInfo.aTagInScope = null;\n\t      ancestorInfo.buttonTagInScope = null;\n\t      ancestorInfo.nobrTagInScope = null;\n\t    }\n\t    if (buttonScopeTags.indexOf(tag) !== -1) {\n\t      ancestorInfo.pTagInButtonScope = null;\n\t    }\n\t\n\t    // See rules for 'li', 'dd', 'dt' start tags in\n\t    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n\t    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {\n\t      ancestorInfo.listItemTagAutoclosing = null;\n\t      ancestorInfo.dlItemTagAutoclosing = null;\n\t    }\n\t\n\t    ancestorInfo.current = info;\n\t\n\t    if (tag === 'form') {\n\t      ancestorInfo.formTag = info;\n\t    }\n\t    if (tag === 'a') {\n\t      ancestorInfo.aTagInScope = info;\n\t    }\n\t    if (tag === 'button') {\n\t      ancestorInfo.buttonTagInScope = info;\n\t    }\n\t    if (tag === 'nobr') {\n\t      ancestorInfo.nobrTagInScope = info;\n\t    }\n\t    if (tag === 'p') {\n\t      ancestorInfo.pTagInButtonScope = info;\n\t    }\n\t    if (tag === 'li') {\n\t      ancestorInfo.listItemTagAutoclosing = info;\n\t    }\n\t    if (tag === 'dd' || tag === 'dt') {\n\t      ancestorInfo.dlItemTagAutoclosing = info;\n\t    }\n\t\n\t    return ancestorInfo;\n\t  };\n\t\n\t  /**\n\t   * Returns whether\n\t   */\n\t  var isTagValidWithParent = function (tag, parentTag) {\n\t    // First, let's check if we're in an unusual parsing mode...\n\t    switch (parentTag) {\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n\t      case 'select':\n\t        return tag === 'option' || tag === 'optgroup' || tag === '#text';\n\t      case 'optgroup':\n\t        return tag === 'option' || tag === '#text';\n\t      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n\t      // but\n\t      case 'option':\n\t        return tag === '#text';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n\t      // No special behavior since these rules fall back to \"in body\" mode for\n\t      // all except special table nodes which cause bad parsing behavior anyway.\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n\t      case 'tr':\n\t        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n\t      case 'tbody':\n\t      case 'thead':\n\t      case 'tfoot':\n\t        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n\t      case 'colgroup':\n\t        return tag === 'col' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n\t      case 'table':\n\t        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n\t      case 'head':\n\t        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n\t      case 'html':\n\t        return tag === 'head' || tag === 'body';\n\t      case '#document':\n\t        return tag === 'html';\n\t    }\n\t\n\t    // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n\t    // where the parsing rules cause implicit opens or closes to be added.\n\t    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n\t    switch (tag) {\n\t      case 'h1':\n\t      case 'h2':\n\t      case 'h3':\n\t      case 'h4':\n\t      case 'h5':\n\t      case 'h6':\n\t        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';\n\t\n\t      case 'rp':\n\t      case 'rt':\n\t        return impliedEndTags.indexOf(parentTag) === -1;\n\t\n\t      case 'body':\n\t      case 'caption':\n\t      case 'col':\n\t      case 'colgroup':\n\t      case 'frame':\n\t      case 'head':\n\t      case 'html':\n\t      case 'tbody':\n\t      case 'td':\n\t      case 'tfoot':\n\t      case 'th':\n\t      case 'thead':\n\t      case 'tr':\n\t        // These tags are only valid with a few parents that have special child\n\t        // parsing rules -- if we're down here, then none of those matched and\n\t        // so we allow it only if we don't know what the parent is, as all other\n\t        // cases are invalid.\n\t        return parentTag == null;\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * Returns whether\n\t   */\n\t  var findInvalidAncestorForTag = function (tag, ancestorInfo) {\n\t    switch (tag) {\n\t      case 'address':\n\t      case 'article':\n\t      case 'aside':\n\t      case 'blockquote':\n\t      case 'center':\n\t      case 'details':\n\t      case 'dialog':\n\t      case 'dir':\n\t      case 'div':\n\t      case 'dl':\n\t      case 'fieldset':\n\t      case 'figcaption':\n\t      case 'figure':\n\t      case 'footer':\n\t      case 'header':\n\t      case 'hgroup':\n\t      case 'main':\n\t      case 'menu':\n\t      case 'nav':\n\t      case 'ol':\n\t      case 'p':\n\t      case 'section':\n\t      case 'summary':\n\t      case 'ul':\n\t\n\t      case 'pre':\n\t      case 'listing':\n\t\n\t      case 'table':\n\t\n\t      case 'hr':\n\t\n\t      case 'xmp':\n\t\n\t      case 'h1':\n\t      case 'h2':\n\t      case 'h3':\n\t      case 'h4':\n\t      case 'h5':\n\t      case 'h6':\n\t        return ancestorInfo.pTagInButtonScope;\n\t\n\t      case 'form':\n\t        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\t\n\t      case 'li':\n\t        return ancestorInfo.listItemTagAutoclosing;\n\t\n\t      case 'dd':\n\t      case 'dt':\n\t        return ancestorInfo.dlItemTagAutoclosing;\n\t\n\t      case 'button':\n\t        return ancestorInfo.buttonTagInScope;\n\t\n\t      case 'a':\n\t        // Spec says something about storing a list of markers, but it sounds\n\t        // equivalent to this check.\n\t        return ancestorInfo.aTagInScope;\n\t\n\t      case 'nobr':\n\t        return ancestorInfo.nobrTagInScope;\n\t    }\n\t\n\t    return null;\n\t  };\n\t\n\t  /**\n\t   * Given a ReactCompositeComponent instance, return a list of its recursive\n\t   * owners, starting at the root and ending with the instance itself.\n\t   */\n\t  var findOwnerStack = function (instance) {\n\t    if (!instance) {\n\t      return [];\n\t    }\n\t\n\t    var stack = [];\n\t    do {\n\t      stack.push(instance);\n\t    } while (instance = instance._currentElement._owner);\n\t    stack.reverse();\n\t    return stack;\n\t  };\n\t\n\t  var didWarn = {};\n\t\n\t  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {\n\t    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n\t    var parentInfo = ancestorInfo.current;\n\t    var parentTag = parentInfo && parentInfo.tag;\n\t\n\t    if (childText != null) {\n\t      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;\n\t      childTag = '#text';\n\t    }\n\t\n\t    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;\n\t    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);\n\t    var problematic = invalidParent || invalidAncestor;\n\t\n\t    if (problematic) {\n\t      var ancestorTag = problematic.tag;\n\t      var ancestorInstance = problematic.instance;\n\t\n\t      var childOwner = childInstance && childInstance._currentElement._owner;\n\t      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;\n\t\n\t      var childOwners = findOwnerStack(childOwner);\n\t      var ancestorOwners = findOwnerStack(ancestorOwner);\n\t\n\t      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);\n\t      var i;\n\t\n\t      var deepestCommon = -1;\n\t      for (i = 0; i < minStackLen; i++) {\n\t        if (childOwners[i] === ancestorOwners[i]) {\n\t          deepestCommon = i;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t\n\t      var UNKNOWN = '(unknown)';\n\t      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {\n\t        return inst.getName() || UNKNOWN;\n\t      });\n\t      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {\n\t        return inst.getName() || UNKNOWN;\n\t      });\n\t      var ownerInfo = [].concat(\n\t      // If the parent and child instances have a common owner ancestor, start\n\t      // with that -- otherwise we just start with the parent's owners.\n\t      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,\n\t      // If we're warning about an invalid (non-parent) ancestry, add '...'\n\t      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');\n\t\n\t      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;\n\t      if (didWarn[warnKey]) {\n\t        return;\n\t      }\n\t      didWarn[warnKey] = true;\n\t\n\t      var tagDisplayName = childTag;\n\t      var whitespaceInfo = '';\n\t      if (childTag === '#text') {\n\t        if (/\\S/.test(childText)) {\n\t          tagDisplayName = 'Text nodes';\n\t        } else {\n\t          tagDisplayName = 'Whitespace text nodes';\n\t          whitespaceInfo = ' Make sure you don\\'t have any extra whitespace between tags on ' + 'each line of your source code.';\n\t        }\n\t      } else {\n\t        tagDisplayName = '<' + childTag + '>';\n\t      }\n\t\n\t      if (invalidParent) {\n\t        var info = '';\n\t        if (ancestorTag === 'table' && childTag === 'tr') {\n\t          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';\n\t        }\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;\n\t      } else {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;\n\t      }\n\t    }\n\t  };\n\t\n\t  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;\n\t\n\t  // For testing\n\t  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {\n\t    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n\t    var parentInfo = ancestorInfo.current;\n\t    var parentTag = parentInfo && parentInfo.tag;\n\t    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);\n\t  };\n\t}\n\t\n\tmodule.exports = validateDOMNesting;\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar emptyFunction = __webpack_require__(7);\n\t\n\t/**\n\t * Upstream version of event listener. Does not take into account specific\n\t * nature of platform.\n\t */\n\tvar EventListener = {\n\t  /**\n\t   * Listen to DOM events during the bubble phase.\n\t   *\n\t   * @param {DOMEventTarget} target DOM element to register listener on.\n\t   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n\t   * @param {function} callback Callback function.\n\t   * @return {object} Object with a `remove` method.\n\t   */\n\t  listen: function listen(target, eventType, callback) {\n\t    if (target.addEventListener) {\n\t      target.addEventListener(eventType, callback, false);\n\t      return {\n\t        remove: function remove() {\n\t          target.removeEventListener(eventType, callback, false);\n\t        }\n\t      };\n\t    } else if (target.attachEvent) {\n\t      target.attachEvent('on' + eventType, callback);\n\t      return {\n\t        remove: function remove() {\n\t          target.detachEvent('on' + eventType, callback);\n\t        }\n\t      };\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Listen to DOM events during the capture phase.\n\t   *\n\t   * @param {DOMEventTarget} target DOM element to register listener on.\n\t   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n\t   * @param {function} callback Callback function.\n\t   * @return {object} Object with a `remove` method.\n\t   */\n\t  capture: function capture(target, eventType, callback) {\n\t    if (target.addEventListener) {\n\t      target.addEventListener(eventType, callback, true);\n\t      return {\n\t        remove: function remove() {\n\t          target.removeEventListener(eventType, callback, true);\n\t        }\n\t      };\n\t    } else {\n\t      if (false) {\n\t        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n\t      }\n\t      return {\n\t        remove: emptyFunction\n\t      };\n\t    }\n\t  },\n\t\n\t  registerDefault: function registerDefault() {}\n\t};\n\t\n\tmodule.exports = EventListener;\n\n/***/ },\n/* 57 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * @param {DOMElement} node input/textarea to focus\n\t */\n\t\n\tfunction focusNode(node) {\n\t  // IE8 can throw \"Can't move focus to the control because it is invisible,\n\t  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n\t  // reasons that are too expensive and fragile to test.\n\t  try {\n\t    node.focus();\n\t  } catch (e) {}\n\t}\n\t\n\tmodule.exports = focusNode;\n\n/***/ },\n/* 58 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t/* eslint-disable fb-www/typeof-undefined */\n\t\n\t/**\n\t * Same as document.activeElement but wraps in a try-catch block. In IE it is\n\t * not safe to call document.activeElement if there is nothing focused.\n\t *\n\t * The activeElement will be null only if the document or document body is not\n\t * yet defined.\n\t */\n\tfunction getActiveElement() /*?DOMElement*/{\n\t  if (typeof document === 'undefined') {\n\t    return null;\n\t  }\n\t  try {\n\t    return document.activeElement || document.body;\n\t  } catch (e) {\n\t    return document.body;\n\t  }\n\t}\n\t\n\tmodule.exports = getActiveElement;\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar asap = __webpack_require__(101);\n\t\n\tfunction noop() {}\n\t\n\t// States:\n\t//\n\t// 0 - pending\n\t// 1 - fulfilled with _value\n\t// 2 - rejected with _value\n\t// 3 - adopted the state of another promise, _value\n\t//\n\t// once the state is no longer pending (0) it is immutable\n\t\n\t// All `_` prefixed properties will be reduced to `_{random number}`\n\t// at build time to obfuscate them and discourage their use.\n\t// We don't use symbols or Object.defineProperty to fully hide them\n\t// because the performance isn't good enough.\n\t\n\t\n\t// to avoid using try/catch inside critical functions, we\n\t// extract them to here.\n\tvar LAST_ERROR = null;\n\tvar IS_ERROR = {};\n\tfunction getThen(obj) {\n\t  try {\n\t    return obj.then;\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tfunction tryCallOne(fn, a) {\n\t  try {\n\t    return fn(a);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\tfunction tryCallTwo(fn, a, b) {\n\t  try {\n\t    fn(a, b);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tmodule.exports = Promise;\n\t\n\tfunction Promise(fn) {\n\t  if (typeof this !== 'object') {\n\t    throw new TypeError('Promises must be constructed via new');\n\t  }\n\t  if (typeof fn !== 'function') {\n\t    throw new TypeError('not a function');\n\t  }\n\t  this._45 = 0;\n\t  this._81 = 0;\n\t  this._65 = null;\n\t  this._54 = null;\n\t  if (fn === noop) return;\n\t  doResolve(fn, this);\n\t}\n\tPromise._10 = null;\n\tPromise._97 = null;\n\tPromise._61 = noop;\n\t\n\tPromise.prototype.then = function(onFulfilled, onRejected) {\n\t  if (this.constructor !== Promise) {\n\t    return safeThen(this, onFulfilled, onRejected);\n\t  }\n\t  var res = new Promise(noop);\n\t  handle(this, new Handler(onFulfilled, onRejected, res));\n\t  return res;\n\t};\n\t\n\tfunction safeThen(self, onFulfilled, onRejected) {\n\t  return new self.constructor(function (resolve, reject) {\n\t    var res = new Promise(noop);\n\t    res.then(resolve, reject);\n\t    handle(self, new Handler(onFulfilled, onRejected, res));\n\t  });\n\t};\n\tfunction handle(self, deferred) {\n\t  while (self._81 === 3) {\n\t    self = self._65;\n\t  }\n\t  if (Promise._10) {\n\t    Promise._10(self);\n\t  }\n\t  if (self._81 === 0) {\n\t    if (self._45 === 0) {\n\t      self._45 = 1;\n\t      self._54 = deferred;\n\t      return;\n\t    }\n\t    if (self._45 === 1) {\n\t      self._45 = 2;\n\t      self._54 = [self._54, deferred];\n\t      return;\n\t    }\n\t    self._54.push(deferred);\n\t    return;\n\t  }\n\t  handleResolved(self, deferred);\n\t}\n\t\n\tfunction handleResolved(self, deferred) {\n\t  asap(function() {\n\t    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t    if (cb === null) {\n\t      if (self._81 === 1) {\n\t        resolve(deferred.promise, self._65);\n\t      } else {\n\t        reject(deferred.promise, self._65);\n\t      }\n\t      return;\n\t    }\n\t    var ret = tryCallOne(cb, self._65);\n\t    if (ret === IS_ERROR) {\n\t      reject(deferred.promise, LAST_ERROR);\n\t    } else {\n\t      resolve(deferred.promise, ret);\n\t    }\n\t  });\n\t}\n\tfunction resolve(self, newValue) {\n\t  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t  if (newValue === self) {\n\t    return reject(\n\t      self,\n\t      new TypeError('A promise cannot be resolved with itself.')\n\t    );\n\t  }\n\t  if (\n\t    newValue &&\n\t    (typeof newValue === 'object' || typeof newValue === 'function')\n\t  ) {\n\t    var then = getThen(newValue);\n\t    if (then === IS_ERROR) {\n\t      return reject(self, LAST_ERROR);\n\t    }\n\t    if (\n\t      then === self.then &&\n\t      newValue instanceof Promise\n\t    ) {\n\t      self._81 = 3;\n\t      self._65 = newValue;\n\t      finale(self);\n\t      return;\n\t    } else if (typeof then === 'function') {\n\t      doResolve(then.bind(newValue), self);\n\t      return;\n\t    }\n\t  }\n\t  self._81 = 1;\n\t  self._65 = newValue;\n\t  finale(self);\n\t}\n\t\n\tfunction reject(self, newValue) {\n\t  self._81 = 2;\n\t  self._65 = newValue;\n\t  if (Promise._97) {\n\t    Promise._97(self, newValue);\n\t  }\n\t  finale(self);\n\t}\n\tfunction finale(self) {\n\t  if (self._45 === 1) {\n\t    handle(self, self._54);\n\t    self._54 = null;\n\t  }\n\t  if (self._45 === 2) {\n\t    for (var i = 0; i < self._54.length; i++) {\n\t      handle(self, self._54[i]);\n\t    }\n\t    self._54 = null;\n\t  }\n\t}\n\t\n\tfunction Handler(onFulfilled, onRejected, promise){\n\t  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t  this.promise = promise;\n\t}\n\t\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, promise) {\n\t  var done = false;\n\t  var res = tryCallTwo(fn, function (value) {\n\t    if (done) return;\n\t    done = true;\n\t    resolve(promise, value);\n\t  }, function (reason) {\n\t    if (done) return;\n\t    done = true;\n\t    reject(promise, reason);\n\t  })\n\t  if (!done && res === IS_ERROR) {\n\t    done = true;\n\t    reject(promise, LAST_ERROR);\n\t  }\n\t}\n\n\n/***/ },\n/* 60 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule CSSProperty\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * CSS properties which accept numbers but are not in units of \"px\".\n\t */\n\t\n\tvar isUnitlessNumber = {\n\t  animationIterationCount: true,\n\t  borderImageOutset: true,\n\t  borderImageSlice: true,\n\t  borderImageWidth: true,\n\t  boxFlex: true,\n\t  boxFlexGroup: true,\n\t  boxOrdinalGroup: true,\n\t  columnCount: true,\n\t  flex: true,\n\t  flexGrow: true,\n\t  flexPositive: true,\n\t  flexShrink: true,\n\t  flexNegative: true,\n\t  flexOrder: true,\n\t  gridRow: true,\n\t  gridColumn: true,\n\t  fontWeight: true,\n\t  lineClamp: true,\n\t  lineHeight: true,\n\t  opacity: true,\n\t  order: true,\n\t  orphans: true,\n\t  tabSize: true,\n\t  widows: true,\n\t  zIndex: true,\n\t  zoom: true,\n\t\n\t  // SVG-related properties\n\t  fillOpacity: true,\n\t  floodOpacity: true,\n\t  stopOpacity: true,\n\t  strokeDasharray: true,\n\t  strokeDashoffset: true,\n\t  strokeMiterlimit: true,\n\t  strokeOpacity: true,\n\t  strokeWidth: true\n\t};\n\t\n\t/**\n\t * @param {string} prefix vendor-specific prefix, eg: Webkit\n\t * @param {string} key style name, eg: transitionDuration\n\t * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n\t * WebkitTransitionDuration\n\t */\n\tfunction prefixKey(prefix, key) {\n\t  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n\t}\n\t\n\t/**\n\t * Support style names that may come passed in prefixed by adding permutations\n\t * of vendor prefixes.\n\t */\n\tvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\t\n\t// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n\t// infinite loop, because it iterates over the newly added props too.\n\tObject.keys(isUnitlessNumber).forEach(function (prop) {\n\t  prefixes.forEach(function (prefix) {\n\t    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n\t  });\n\t});\n\t\n\t/**\n\t * Most style properties can be unset by doing .style[prop] = '' but IE8\n\t * doesn't like doing that with shorthand properties so for the properties that\n\t * IE8 breaks on, which are listed here, we instead unset each of the\n\t * individual properties. See http://bugs.jquery.com/ticket/12385.\n\t * The 4-value 'clock' properties like margin, padding, border-width seem to\n\t * behave without any problems. Curiously, list-style works too without any\n\t * special prodding.\n\t */\n\tvar shorthandPropertyExpansions = {\n\t  background: {\n\t    backgroundAttachment: true,\n\t    backgroundColor: true,\n\t    backgroundImage: true,\n\t    backgroundPositionX: true,\n\t    backgroundPositionY: true,\n\t    backgroundRepeat: true\n\t  },\n\t  backgroundPosition: {\n\t    backgroundPositionX: true,\n\t    backgroundPositionY: true\n\t  },\n\t  border: {\n\t    borderWidth: true,\n\t    borderStyle: true,\n\t    borderColor: true\n\t  },\n\t  borderBottom: {\n\t    borderBottomWidth: true,\n\t    borderBottomStyle: true,\n\t    borderBottomColor: true\n\t  },\n\t  borderLeft: {\n\t    borderLeftWidth: true,\n\t    borderLeftStyle: true,\n\t    borderLeftColor: true\n\t  },\n\t  borderRight: {\n\t    borderRightWidth: true,\n\t    borderRightStyle: true,\n\t    borderRightColor: true\n\t  },\n\t  borderTop: {\n\t    borderTopWidth: true,\n\t    borderTopStyle: true,\n\t    borderTopColor: true\n\t  },\n\t  font: {\n\t    fontStyle: true,\n\t    fontVariant: true,\n\t    fontWeight: true,\n\t    fontSize: true,\n\t    lineHeight: true,\n\t    fontFamily: true\n\t  },\n\t  outline: {\n\t    outlineWidth: true,\n\t    outlineStyle: true,\n\t    outlineColor: true\n\t  }\n\t};\n\t\n\tvar CSSProperty = {\n\t  isUnitlessNumber: isUnitlessNumber,\n\t  shorthandPropertyExpansions: shorthandPropertyExpansions\n\t};\n\t\n\tmodule.exports = CSSProperty;\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule CallbackQueue\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar PooledClass = __webpack_require__(14);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * A specialized pseudo-event module to help keep track of components waiting to\n\t * be notified when their DOM representations are available for use.\n\t *\n\t * This implements `PooledClass`, so you should never need to instantiate this.\n\t * Instead, use `CallbackQueue.getPooled()`.\n\t *\n\t * @class ReactMountReady\n\t * @implements PooledClass\n\t * @internal\n\t */\n\tfunction CallbackQueue() {\n\t  this._callbacks = null;\n\t  this._contexts = null;\n\t}\n\t\n\t_assign(CallbackQueue.prototype, {\n\t\n\t  /**\n\t   * Enqueues a callback to be invoked when `notifyAll` is invoked.\n\t   *\n\t   * @param {function} callback Invoked when `notifyAll` is invoked.\n\t   * @param {?object} context Context to call `callback` with.\n\t   * @internal\n\t   */\n\t  enqueue: function (callback, context) {\n\t    this._callbacks = this._callbacks || [];\n\t    this._contexts = this._contexts || [];\n\t    this._callbacks.push(callback);\n\t    this._contexts.push(context);\n\t  },\n\t\n\t  /**\n\t   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n\t   * the DOM representation of a component has been created or updated.\n\t   *\n\t   * @internal\n\t   */\n\t  notifyAll: function () {\n\t    var callbacks = this._callbacks;\n\t    var contexts = this._contexts;\n\t    if (callbacks) {\n\t      !(callbacks.length === contexts.length) ?  false ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;\n\t      this._callbacks = null;\n\t      this._contexts = null;\n\t      for (var i = 0; i < callbacks.length; i++) {\n\t        callbacks[i].call(contexts[i]);\n\t      }\n\t      callbacks.length = 0;\n\t      contexts.length = 0;\n\t    }\n\t  },\n\t\n\t  checkpoint: function () {\n\t    return this._callbacks ? this._callbacks.length : 0;\n\t  },\n\t\n\t  rollback: function (len) {\n\t    if (this._callbacks) {\n\t      this._callbacks.length = len;\n\t      this._contexts.length = len;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resets the internal queue.\n\t   *\n\t   * @internal\n\t   */\n\t  reset: function () {\n\t    this._callbacks = null;\n\t    this._contexts = null;\n\t  },\n\t\n\t  /**\n\t   * `PooledClass` looks for this.\n\t   */\n\t  destructor: function () {\n\t    this.reset();\n\t  }\n\t\n\t});\n\t\n\tPooledClass.addPoolingTo(CallbackQueue);\n\t\n\tmodule.exports = CallbackQueue;\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule DOMPropertyOperations\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMProperty = __webpack_require__(17);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactInstrumentation = __webpack_require__(8);\n\t\n\tvar quoteAttributeValueForBrowser = __webpack_require__(173);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');\n\tvar illegalAttributeNameCache = {};\n\tvar validatedAttributeNameCache = {};\n\t\n\tfunction isAttributeNameSafe(attributeName) {\n\t  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {\n\t    return true;\n\t  }\n\t  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {\n\t    return false;\n\t  }\n\t  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n\t    validatedAttributeNameCache[attributeName] = true;\n\t    return true;\n\t  }\n\t  illegalAttributeNameCache[attributeName] = true;\n\t   false ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;\n\t  return false;\n\t}\n\t\n\tfunction shouldIgnoreValue(propertyInfo, value) {\n\t  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;\n\t}\n\t\n\t/**\n\t * Operations for dealing with DOM properties.\n\t */\n\tvar DOMPropertyOperations = {\n\t\n\t  /**\n\t   * Creates markup for the ID property.\n\t   *\n\t   * @param {string} id Unescaped ID.\n\t   * @return {string} Markup string.\n\t   */\n\t  createMarkupForID: function (id) {\n\t    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);\n\t  },\n\t\n\t  setAttributeForID: function (node, id) {\n\t    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);\n\t  },\n\t\n\t  createMarkupForRoot: function () {\n\t    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=\"\"';\n\t  },\n\t\n\t  setAttributeForRoot: function (node) {\n\t    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');\n\t  },\n\t\n\t  /**\n\t   * Creates markup for a property.\n\t   *\n\t   * @param {string} name\n\t   * @param {*} value\n\t   * @return {?string} Markup string, or null if the property was invalid.\n\t   */\n\t  createMarkupForProperty: function (name, value) {\n\t    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n\t    if (propertyInfo) {\n\t      if (shouldIgnoreValue(propertyInfo, value)) {\n\t        return '';\n\t      }\n\t      var attributeName = propertyInfo.attributeName;\n\t      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n\t        return attributeName + '=\"\"';\n\t      }\n\t      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n\t    } else if (DOMProperty.isCustomAttribute(name)) {\n\t      if (value == null) {\n\t        return '';\n\t      }\n\t      return name + '=' + quoteAttributeValueForBrowser(value);\n\t    }\n\t    return null;\n\t  },\n\t\n\t  /**\n\t   * Creates markup for a custom property.\n\t   *\n\t   * @param {string} name\n\t   * @param {*} value\n\t   * @return {string} Markup string, or empty string if the property was invalid.\n\t   */\n\t  createMarkupForCustomAttribute: function (name, value) {\n\t    if (!isAttributeNameSafe(name) || value == null) {\n\t      return '';\n\t    }\n\t    return name + '=' + quoteAttributeValueForBrowser(value);\n\t  },\n\t\n\t  /**\n\t   * Sets the value for a property on a node.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {string} name\n\t   * @param {*} value\n\t   */\n\t  setValueForProperty: function (node, name, value) {\n\t    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n\t    if (propertyInfo) {\n\t      var mutationMethod = propertyInfo.mutationMethod;\n\t      if (mutationMethod) {\n\t        mutationMethod(node, value);\n\t      } else if (shouldIgnoreValue(propertyInfo, value)) {\n\t        this.deleteValueForProperty(node, name);\n\t        return;\n\t      } else if (propertyInfo.mustUseProperty) {\n\t        // Contrary to `setAttribute`, object properties are properly\n\t        // `toString`ed by IE8/9.\n\t        node[propertyInfo.propertyName] = value;\n\t      } else {\n\t        var attributeName = propertyInfo.attributeName;\n\t        var namespace = propertyInfo.attributeNamespace;\n\t        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n\t        // ('' + value) makes it output the correct toString()-value.\n\t        if (namespace) {\n\t          node.setAttributeNS(namespace, attributeName, '' + value);\n\t        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n\t          node.setAttribute(attributeName, '');\n\t        } else {\n\t          node.setAttribute(attributeName, '' + value);\n\t        }\n\t      }\n\t    } else if (DOMProperty.isCustomAttribute(name)) {\n\t      DOMPropertyOperations.setValueForAttribute(node, name, value);\n\t      return;\n\t    }\n\t\n\t    if (false) {\n\t      var payload = {};\n\t      payload[name] = value;\n\t      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);\n\t    }\n\t  },\n\t\n\t  setValueForAttribute: function (node, name, value) {\n\t    if (!isAttributeNameSafe(name)) {\n\t      return;\n\t    }\n\t    if (value == null) {\n\t      node.removeAttribute(name);\n\t    } else {\n\t      node.setAttribute(name, '' + value);\n\t    }\n\t\n\t    if (false) {\n\t      var payload = {};\n\t      payload[name] = value;\n\t      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Deletes an attributes from a node.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {string} name\n\t   */\n\t  deleteValueForAttribute: function (node, name) {\n\t    node.removeAttribute(name);\n\t    if (false) {\n\t      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Deletes the value for a property on a node.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {string} name\n\t   */\n\t  deleteValueForProperty: function (node, name) {\n\t    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n\t    if (propertyInfo) {\n\t      var mutationMethod = propertyInfo.mutationMethod;\n\t      if (mutationMethod) {\n\t        mutationMethod(node, undefined);\n\t      } else if (propertyInfo.mustUseProperty) {\n\t        var propName = propertyInfo.propertyName;\n\t        if (propertyInfo.hasBooleanValue) {\n\t          node[propName] = false;\n\t        } else {\n\t          node[propName] = '';\n\t        }\n\t      } else {\n\t        node.removeAttribute(propertyInfo.attributeName);\n\t      }\n\t    } else if (DOMProperty.isCustomAttribute(name)) {\n\t      node.removeAttribute(name);\n\t    }\n\t\n\t    if (false) {\n\t      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = DOMPropertyOperations;\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactChildren\n\t */\n\t\n\t'use strict';\n\t\n\tvar PooledClass = __webpack_require__(14);\n\tvar ReactElement = __webpack_require__(9);\n\t\n\tvar emptyFunction = __webpack_require__(7);\n\tvar traverseAllChildren = __webpack_require__(54);\n\t\n\tvar twoArgumentPooler = PooledClass.twoArgumentPooler;\n\tvar fourArgumentPooler = PooledClass.fourArgumentPooler;\n\t\n\tvar userProvidedKeyEscapeRegex = /\\/+/g;\n\tfunction escapeUserProvidedKey(text) {\n\t  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n\t}\n\t\n\t/**\n\t * PooledClass representing the bookkeeping associated with performing a child\n\t * traversal. Allows avoiding binding callbacks.\n\t *\n\t * @constructor ForEachBookKeeping\n\t * @param {!function} forEachFunction Function to perform traversal with.\n\t * @param {?*} forEachContext Context to perform context with.\n\t */\n\tfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n\t  this.func = forEachFunction;\n\t  this.context = forEachContext;\n\t  this.count = 0;\n\t}\n\tForEachBookKeeping.prototype.destructor = function () {\n\t  this.func = null;\n\t  this.context = null;\n\t  this.count = 0;\n\t};\n\tPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\t\n\tfunction forEachSingleChild(bookKeeping, child, name) {\n\t  var func = bookKeeping.func;\n\t  var context = bookKeeping.context;\n\t\n\t  func.call(context, child, bookKeeping.count++);\n\t}\n\t\n\t/**\n\t * Iterates through children that are typically specified as `props.children`.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach\n\t *\n\t * The provided forEachFunc(child, index) will be called for each\n\t * leaf child.\n\t *\n\t * @param {?*} children Children tree container.\n\t * @param {function(*, int)} forEachFunc\n\t * @param {*} forEachContext Context for forEachContext.\n\t */\n\tfunction forEachChildren(children, forEachFunc, forEachContext) {\n\t  if (children == null) {\n\t    return children;\n\t  }\n\t  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n\t  traverseAllChildren(children, forEachSingleChild, traverseContext);\n\t  ForEachBookKeeping.release(traverseContext);\n\t}\n\t\n\t/**\n\t * PooledClass representing the bookkeeping associated with performing a child\n\t * mapping. Allows avoiding binding callbacks.\n\t *\n\t * @constructor MapBookKeeping\n\t * @param {!*} mapResult Object containing the ordered map of results.\n\t * @param {!function} mapFunction Function to perform mapping with.\n\t * @param {?*} mapContext Context to perform mapping with.\n\t */\n\tfunction MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {\n\t  this.result = mapResult;\n\t  this.keyPrefix = keyPrefix;\n\t  this.func = mapFunction;\n\t  this.context = mapContext;\n\t  this.count = 0;\n\t}\n\tMapBookKeeping.prototype.destructor = function () {\n\t  this.result = null;\n\t  this.keyPrefix = null;\n\t  this.func = null;\n\t  this.context = null;\n\t  this.count = 0;\n\t};\n\tPooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);\n\t\n\tfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n\t  var result = bookKeeping.result;\n\t  var keyPrefix = bookKeeping.keyPrefix;\n\t  var func = bookKeeping.func;\n\t  var context = bookKeeping.context;\n\t\n\t\n\t  var mappedChild = func.call(context, child, bookKeeping.count++);\n\t  if (Array.isArray(mappedChild)) {\n\t    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n\t  } else if (mappedChild != null) {\n\t    if (ReactElement.isValidElement(mappedChild)) {\n\t      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,\n\t      // Keep both the (mapped) and old keys if they differ, just as\n\t      // traverseAllChildren used to do for objects as children\n\t      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n\t    }\n\t    result.push(mappedChild);\n\t  }\n\t}\n\t\n\tfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n\t  var escapedPrefix = '';\n\t  if (prefix != null) {\n\t    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n\t  }\n\t  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);\n\t  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n\t  MapBookKeeping.release(traverseContext);\n\t}\n\t\n\t/**\n\t * Maps children that are typically specified as `props.children`.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map\n\t *\n\t * The provided mapFunction(child, key, index) will be called for each\n\t * leaf child.\n\t *\n\t * @param {?*} children Children tree container.\n\t * @param {function(*, int)} func The map function.\n\t * @param {*} context Context for mapFunction.\n\t * @return {object} Object containing the ordered map of results.\n\t */\n\tfunction mapChildren(children, func, context) {\n\t  if (children == null) {\n\t    return children;\n\t  }\n\t  var result = [];\n\t  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n\t  return result;\n\t}\n\t\n\tfunction forEachSingleChildDummy(traverseContext, child, name) {\n\t  return null;\n\t}\n\t\n\t/**\n\t * Count the number of children that are typically specified as\n\t * `props.children`.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count\n\t *\n\t * @param {?*} children Children tree container.\n\t * @return {number} The number of children.\n\t */\n\tfunction countChildren(children, context) {\n\t  return traverseAllChildren(children, forEachSingleChildDummy, null);\n\t}\n\t\n\t/**\n\t * Flatten a children object (typically specified as `props.children`) and\n\t * return an array with appropriately re-keyed children.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray\n\t */\n\tfunction toArray(children) {\n\t  var result = [];\n\t  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n\t  return result;\n\t}\n\t\n\tvar ReactChildren = {\n\t  forEach: forEachChildren,\n\t  map: mapChildren,\n\t  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,\n\t  count: countChildren,\n\t  toArray: toArray\n\t};\n\t\n\tmodule.exports = ReactChildren;\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactClass\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar ReactComponent = __webpack_require__(39);\n\tvar ReactElement = __webpack_require__(9);\n\tvar ReactPropTypeLocations = __webpack_require__(45);\n\tvar ReactPropTypeLocationNames = __webpack_require__(44);\n\tvar ReactNoopUpdateQueue = __webpack_require__(43);\n\t\n\tvar emptyObject = __webpack_require__(19);\n\tvar invariant = __webpack_require__(1);\n\tvar keyMirror = __webpack_require__(25);\n\tvar keyOf = __webpack_require__(13);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar MIXINS_KEY = keyOf({ mixins: null });\n\t\n\t/**\n\t * Policies that describe methods in `ReactClassInterface`.\n\t */\n\tvar SpecPolicy = keyMirror({\n\t  /**\n\t   * These methods may be defined only once by the class specification or mixin.\n\t   */\n\t  DEFINE_ONCE: null,\n\t  /**\n\t   * These methods may be defined by both the class specification and mixins.\n\t   * Subsequent definitions will be chained. These methods must return void.\n\t   */\n\t  DEFINE_MANY: null,\n\t  /**\n\t   * These methods are overriding the base class.\n\t   */\n\t  OVERRIDE_BASE: null,\n\t  /**\n\t   * These methods are similar to DEFINE_MANY, except we assume they return\n\t   * objects. We try to merge the keys of the return values of all the mixed in\n\t   * functions. If there is a key conflict we throw.\n\t   */\n\t  DEFINE_MANY_MERGED: null\n\t});\n\t\n\tvar injectedMixins = [];\n\t\n\t/**\n\t * Composite components are higher-level components that compose other composite\n\t * or host components.\n\t *\n\t * To create a new type of `ReactClass`, pass a specification of\n\t * your new class to `React.createClass`. The only requirement of your class\n\t * specification is that you implement a `render` method.\n\t *\n\t *   var MyComponent = React.createClass({\n\t *     render: function() {\n\t *       return <div>Hello World</div>;\n\t *     }\n\t *   });\n\t *\n\t * The class specification supports a specific protocol of methods that have\n\t * special meaning (e.g. `render`). See `ReactClassInterface` for\n\t * more the comprehensive protocol. Any other properties and methods in the\n\t * class specification will be available on the prototype.\n\t *\n\t * @interface ReactClassInterface\n\t * @internal\n\t */\n\tvar ReactClassInterface = {\n\t\n\t  /**\n\t   * An array of Mixin objects to include when defining your component.\n\t   *\n\t   * @type {array}\n\t   * @optional\n\t   */\n\t  mixins: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * An object containing properties and methods that should be defined on\n\t   * the component's constructor instead of its prototype (static methods).\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  statics: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Definition of prop types for this component.\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  propTypes: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Definition of context types for this component.\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  contextTypes: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Definition of context types this component sets for its children.\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  childContextTypes: SpecPolicy.DEFINE_MANY,\n\t\n\t  // ==== Definition methods ====\n\t\n\t  /**\n\t   * Invoked when the component is mounted. Values in the mapping will be set on\n\t   * `this.props` if that prop is not specified (i.e. using an `in` check).\n\t   *\n\t   * This method is invoked before `getInitialState` and therefore cannot rely\n\t   * on `this.state` or use `this.setState`.\n\t   *\n\t   * @return {object}\n\t   * @optional\n\t   */\n\t  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,\n\t\n\t  /**\n\t   * Invoked once before the component is mounted. The return value will be used\n\t   * as the initial value of `this.state`.\n\t   *\n\t   *   getInitialState: function() {\n\t   *     return {\n\t   *       isOn: false,\n\t   *       fooBaz: new BazFoo()\n\t   *     }\n\t   *   }\n\t   *\n\t   * @return {object}\n\t   * @optional\n\t   */\n\t  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,\n\t\n\t  /**\n\t   * @return {object}\n\t   * @optional\n\t   */\n\t  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,\n\t\n\t  /**\n\t   * Uses props from `this.props` and state from `this.state` to render the\n\t   * structure of the component.\n\t   *\n\t   * No guarantees are made about when or how often this method is invoked, so\n\t   * it must not have side effects.\n\t   *\n\t   *   render: function() {\n\t   *     var name = this.props.name;\n\t   *     return <div>Hello, {name}!</div>;\n\t   *   }\n\t   *\n\t   * @return {ReactComponent}\n\t   * @nosideeffects\n\t   * @required\n\t   */\n\t  render: SpecPolicy.DEFINE_ONCE,\n\t\n\t  // ==== Delegate methods ====\n\t\n\t  /**\n\t   * Invoked when the component is initially created and about to be mounted.\n\t   * This may have side effects, but any external subscriptions or data created\n\t   * by this method must be cleaned up in `componentWillUnmount`.\n\t   *\n\t   * @optional\n\t   */\n\t  componentWillMount: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Invoked when the component has been mounted and has a DOM representation.\n\t   * However, there is no guarantee that the DOM node is in the document.\n\t   *\n\t   * Use this as an opportunity to operate on the DOM when the component has\n\t   * been mounted (initialized and rendered) for the first time.\n\t   *\n\t   * @param {DOMElement} rootNode DOM element representing the component.\n\t   * @optional\n\t   */\n\t  componentDidMount: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Invoked before the component receives new props.\n\t   *\n\t   * Use this as an opportunity to react to a prop transition by updating the\n\t   * state using `this.setState`. Current props are accessed via `this.props`.\n\t   *\n\t   *   componentWillReceiveProps: function(nextProps, nextContext) {\n\t   *     this.setState({\n\t   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n\t   *     });\n\t   *   }\n\t   *\n\t   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n\t   * transition may cause a state change, but the opposite is not true. If you\n\t   * need it, you are probably looking for `componentWillUpdate`.\n\t   *\n\t   * @param {object} nextProps\n\t   * @optional\n\t   */\n\t  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Invoked while deciding if the component should be updated as a result of\n\t   * receiving new props, state and/or context.\n\t   *\n\t   * Use this as an opportunity to `return false` when you're certain that the\n\t   * transition to the new props/state/context will not require a component\n\t   * update.\n\t   *\n\t   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n\t   *     return !equal(nextProps, this.props) ||\n\t   *       !equal(nextState, this.state) ||\n\t   *       !equal(nextContext, this.context);\n\t   *   }\n\t   *\n\t   * @param {object} nextProps\n\t   * @param {?object} nextState\n\t   * @param {?object} nextContext\n\t   * @return {boolean} True if the component should update.\n\t   * @optional\n\t   */\n\t  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,\n\t\n\t  /**\n\t   * Invoked when the component is about to update due to a transition from\n\t   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n\t   * and `nextContext`.\n\t   *\n\t   * Use this as an opportunity to perform preparation before an update occurs.\n\t   *\n\t   * NOTE: You **cannot** use `this.setState()` in this method.\n\t   *\n\t   * @param {object} nextProps\n\t   * @param {?object} nextState\n\t   * @param {?object} nextContext\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @optional\n\t   */\n\t  componentWillUpdate: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Invoked when the component's DOM representation has been updated.\n\t   *\n\t   * Use this as an opportunity to operate on the DOM when the component has\n\t   * been updated.\n\t   *\n\t   * @param {object} prevProps\n\t   * @param {?object} prevState\n\t   * @param {?object} prevContext\n\t   * @param {DOMElement} rootNode DOM element representing the component.\n\t   * @optional\n\t   */\n\t  componentDidUpdate: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Invoked when the component is about to be removed from its parent and have\n\t   * its DOM representation destroyed.\n\t   *\n\t   * Use this as an opportunity to deallocate any external resources.\n\t   *\n\t   * NOTE: There is no `componentDidUnmount` since your component will have been\n\t   * destroyed by that point.\n\t   *\n\t   * @optional\n\t   */\n\t  componentWillUnmount: SpecPolicy.DEFINE_MANY,\n\t\n\t  // ==== Advanced methods ====\n\t\n\t  /**\n\t   * Updates the component's currently mounted DOM representation.\n\t   *\n\t   * By default, this implements React's rendering and reconciliation algorithm.\n\t   * Sophisticated clients may wish to override this.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   * @overridable\n\t   */\n\t  updateComponent: SpecPolicy.OVERRIDE_BASE\n\t\n\t};\n\t\n\t/**\n\t * Mapping from class specification keys to special processing functions.\n\t *\n\t * Although these are declared like instance properties in the specification\n\t * when defining classes using `React.createClass`, they are actually static\n\t * and are accessible on the constructor instead of the prototype. Despite\n\t * being static, they must be defined outside of the \"statics\" key under\n\t * which all other static methods are defined.\n\t */\n\tvar RESERVED_SPEC_KEYS = {\n\t  displayName: function (Constructor, displayName) {\n\t    Constructor.displayName = displayName;\n\t  },\n\t  mixins: function (Constructor, mixins) {\n\t    if (mixins) {\n\t      for (var i = 0; i < mixins.length; i++) {\n\t        mixSpecIntoComponent(Constructor, mixins[i]);\n\t      }\n\t    }\n\t  },\n\t  childContextTypes: function (Constructor, childContextTypes) {\n\t    if (false) {\n\t      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);\n\t    }\n\t    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);\n\t  },\n\t  contextTypes: function (Constructor, contextTypes) {\n\t    if (false) {\n\t      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);\n\t    }\n\t    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);\n\t  },\n\t  /**\n\t   * Special case getDefaultProps which should move into statics but requires\n\t   * automatic merging.\n\t   */\n\t  getDefaultProps: function (Constructor, getDefaultProps) {\n\t    if (Constructor.getDefaultProps) {\n\t      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);\n\t    } else {\n\t      Constructor.getDefaultProps = getDefaultProps;\n\t    }\n\t  },\n\t  propTypes: function (Constructor, propTypes) {\n\t    if (false) {\n\t      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);\n\t    }\n\t    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n\t  },\n\t  statics: function (Constructor, statics) {\n\t    mixStaticSpecIntoComponent(Constructor, statics);\n\t  },\n\t  autobind: function () {} };\n\t\n\t// noop\n\tfunction validateTypeDef(Constructor, typeDef, location) {\n\t  for (var propName in typeDef) {\n\t    if (typeDef.hasOwnProperty(propName)) {\n\t      // use a warning instead of an invariant so components\n\t      // don't show up in prod but only in __DEV__\n\t       false ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;\n\t    }\n\t  }\n\t}\n\t\n\tfunction validateMethodOverride(isAlreadyDefined, name) {\n\t  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;\n\t\n\t  // Disallow overriding of base class methods unless explicitly allowed.\n\t  if (ReactClassMixin.hasOwnProperty(name)) {\n\t    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ?  false ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;\n\t  }\n\t\n\t  // Disallow defining methods more than once unless explicitly allowed.\n\t  if (isAlreadyDefined) {\n\t    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ?  false ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;\n\t  }\n\t}\n\t\n\t/**\n\t * Mixin helper which handles policy validation and reserved\n\t * specification keys when building React classes.\n\t */\n\tfunction mixSpecIntoComponent(Constructor, spec) {\n\t  if (!spec) {\n\t    if (false) {\n\t      var typeofSpec = typeof spec;\n\t      var isMixinValid = typeofSpec === 'object' && spec !== null;\n\t\n\t      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;\n\t    }\n\t\n\t    return;\n\t  }\n\t\n\t  !(typeof spec !== 'function') ?  false ? invariant(false, 'ReactClass: You\\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;\n\t  !!ReactElement.isValidElement(spec) ?  false ? invariant(false, 'ReactClass: You\\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;\n\t\n\t  var proto = Constructor.prototype;\n\t  var autoBindPairs = proto.__reactAutoBindPairs;\n\t\n\t  // By handling mixins before any other properties, we ensure the same\n\t  // chaining order is applied to methods with DEFINE_MANY policy, whether\n\t  // mixins are listed before or after these methods in the spec.\n\t  if (spec.hasOwnProperty(MIXINS_KEY)) {\n\t    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n\t  }\n\t\n\t  for (var name in spec) {\n\t    if (!spec.hasOwnProperty(name)) {\n\t      continue;\n\t    }\n\t\n\t    if (name === MIXINS_KEY) {\n\t      // We have already handled mixins in a special case above.\n\t      continue;\n\t    }\n\t\n\t    var property = spec[name];\n\t    var isAlreadyDefined = proto.hasOwnProperty(name);\n\t    validateMethodOverride(isAlreadyDefined, name);\n\t\n\t    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n\t      RESERVED_SPEC_KEYS[name](Constructor, property);\n\t    } else {\n\t      // Setup methods on prototype:\n\t      // The following member methods should not be automatically bound:\n\t      // 1. Expected ReactClass methods (in the \"interface\").\n\t      // 2. Overridden methods (that were mixed in).\n\t      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n\t      var isFunction = typeof property === 'function';\n\t      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\t\n\t      if (shouldAutoBind) {\n\t        autoBindPairs.push(name, property);\n\t        proto[name] = property;\n\t      } else {\n\t        if (isAlreadyDefined) {\n\t          var specPolicy = ReactClassInterface[name];\n\t\n\t          // These cases should already be caught by validateMethodOverride.\n\t          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ?  false ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;\n\t\n\t          // For methods which are defined more than once, call the existing\n\t          // methods before calling the new property, merging if appropriate.\n\t          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {\n\t            proto[name] = createMergedResultFunction(proto[name], property);\n\t          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {\n\t            proto[name] = createChainedFunction(proto[name], property);\n\t          }\n\t        } else {\n\t          proto[name] = property;\n\t          if (false) {\n\t            // Add verbose displayName to the function, which helps when looking\n\t            // at profiling tools.\n\t            if (typeof property === 'function' && spec.displayName) {\n\t              proto[name].displayName = spec.displayName + '_' + name;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction mixStaticSpecIntoComponent(Constructor, statics) {\n\t  if (!statics) {\n\t    return;\n\t  }\n\t  for (var name in statics) {\n\t    var property = statics[name];\n\t    if (!statics.hasOwnProperty(name)) {\n\t      continue;\n\t    }\n\t\n\t    var isReserved = name in RESERVED_SPEC_KEYS;\n\t    !!isReserved ?  false ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;\n\t\n\t    var isInherited = name in Constructor;\n\t    !!isInherited ?  false ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;\n\t    Constructor[name] = property;\n\t  }\n\t}\n\t\n\t/**\n\t * Merge two objects, but throw if both contain the same key.\n\t *\n\t * @param {object} one The first object, which is mutated.\n\t * @param {object} two The second object\n\t * @return {object} one after it has been mutated to contain everything in two.\n\t */\n\tfunction mergeIntoWithNoDuplicateKeys(one, two) {\n\t  !(one && two && typeof one === 'object' && typeof two === 'object') ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;\n\t\n\t  for (var key in two) {\n\t    if (two.hasOwnProperty(key)) {\n\t      !(one[key] === undefined) ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;\n\t      one[key] = two[key];\n\t    }\n\t  }\n\t  return one;\n\t}\n\t\n\t/**\n\t * Creates a function that invokes two functions and merges their return values.\n\t *\n\t * @param {function} one Function to invoke first.\n\t * @param {function} two Function to invoke second.\n\t * @return {function} Function that invokes the two argument functions.\n\t * @private\n\t */\n\tfunction createMergedResultFunction(one, two) {\n\t  return function mergedResult() {\n\t    var a = one.apply(this, arguments);\n\t    var b = two.apply(this, arguments);\n\t    if (a == null) {\n\t      return b;\n\t    } else if (b == null) {\n\t      return a;\n\t    }\n\t    var c = {};\n\t    mergeIntoWithNoDuplicateKeys(c, a);\n\t    mergeIntoWithNoDuplicateKeys(c, b);\n\t    return c;\n\t  };\n\t}\n\t\n\t/**\n\t * Creates a function that invokes two functions and ignores their return vales.\n\t *\n\t * @param {function} one Function to invoke first.\n\t * @param {function} two Function to invoke second.\n\t * @return {function} Function that invokes the two argument functions.\n\t * @private\n\t */\n\tfunction createChainedFunction(one, two) {\n\t  return function chainedFunction() {\n\t    one.apply(this, arguments);\n\t    two.apply(this, arguments);\n\t  };\n\t}\n\t\n\t/**\n\t * Binds a method to the component.\n\t *\n\t * @param {object} component Component whose method is going to be bound.\n\t * @param {function} method Method to be bound.\n\t * @return {function} The bound method.\n\t */\n\tfunction bindAutoBindMethod(component, method) {\n\t  var boundMethod = method.bind(component);\n\t  if (false) {\n\t    boundMethod.__reactBoundContext = component;\n\t    boundMethod.__reactBoundMethod = method;\n\t    boundMethod.__reactBoundArguments = null;\n\t    var componentName = component.constructor.displayName;\n\t    var _bind = boundMethod.bind;\n\t    boundMethod.bind = function (newThis) {\n\t      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        args[_key - 1] = arguments[_key];\n\t      }\n\t\n\t      // User is trying to bind() an autobound method; we effectively will\n\t      // ignore the value of \"this\" that the user is trying to use, so\n\t      // let's warn.\n\t      if (newThis !== component && newThis !== null) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;\n\t      } else if (!args.length) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;\n\t        return boundMethod;\n\t      }\n\t      var reboundMethod = _bind.apply(boundMethod, arguments);\n\t      reboundMethod.__reactBoundContext = component;\n\t      reboundMethod.__reactBoundMethod = method;\n\t      reboundMethod.__reactBoundArguments = args;\n\t      return reboundMethod;\n\t    };\n\t  }\n\t  return boundMethod;\n\t}\n\t\n\t/**\n\t * Binds all auto-bound methods in a component.\n\t *\n\t * @param {object} component Component whose method is going to be bound.\n\t */\n\tfunction bindAutoBindMethods(component) {\n\t  var pairs = component.__reactAutoBindPairs;\n\t  for (var i = 0; i < pairs.length; i += 2) {\n\t    var autoBindKey = pairs[i];\n\t    var method = pairs[i + 1];\n\t    component[autoBindKey] = bindAutoBindMethod(component, method);\n\t  }\n\t}\n\t\n\t/**\n\t * Add more to the ReactClass base class. These are all legacy features and\n\t * therefore not already part of the modern ReactComponent.\n\t */\n\tvar ReactClassMixin = {\n\t\n\t  /**\n\t   * TODO: This will be deprecated because state should always keep a consistent\n\t   * type signature and the only use case for this, is to avoid that.\n\t   */\n\t  replaceState: function (newState, callback) {\n\t    this.updater.enqueueReplaceState(this, newState);\n\t    if (callback) {\n\t      this.updater.enqueueCallback(this, callback, 'replaceState');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t  isMounted: function () {\n\t    return this.updater.isMounted(this);\n\t  }\n\t};\n\t\n\tvar ReactClassComponent = function () {};\n\t_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n\t\n\t/**\n\t * Module for creating composite components.\n\t *\n\t * @class ReactClass\n\t */\n\tvar ReactClass = {\n\t\n\t  /**\n\t   * Creates a composite component class given a class specification.\n\t   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n\t   *\n\t   * @param {object} spec Class specification (which must define `render`).\n\t   * @return {function} Component constructor function.\n\t   * @public\n\t   */\n\t  createClass: function (spec) {\n\t    var Constructor = function (props, context, updater) {\n\t      // This constructor gets overridden by mocks. The argument is used\n\t      // by mocks to assert on what gets mounted.\n\t\n\t      if (false) {\n\t        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;\n\t      }\n\t\n\t      // Wire up auto-binding\n\t      if (this.__reactAutoBindPairs.length) {\n\t        bindAutoBindMethods(this);\n\t      }\n\t\n\t      this.props = props;\n\t      this.context = context;\n\t      this.refs = emptyObject;\n\t      this.updater = updater || ReactNoopUpdateQueue;\n\t\n\t      this.state = null;\n\t\n\t      // ReactClasses doesn't have constructors. Instead, they use the\n\t      // getInitialState and componentWillMount methods for initialization.\n\t\n\t      var initialState = this.getInitialState ? this.getInitialState() : null;\n\t      if (false) {\n\t        // We allow auto-mocks to proceed as if they're returning null.\n\t        if (initialState === undefined && this.getInitialState._isMockFunction) {\n\t          // This is probably bad practice. Consider warning here and\n\t          // deprecating this convenience.\n\t          initialState = null;\n\t        }\n\t      }\n\t      !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;\n\t\n\t      this.state = initialState;\n\t    };\n\t    Constructor.prototype = new ReactClassComponent();\n\t    Constructor.prototype.constructor = Constructor;\n\t    Constructor.prototype.__reactAutoBindPairs = [];\n\t\n\t    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\t\n\t    mixSpecIntoComponent(Constructor, spec);\n\t\n\t    // Initialize the defaultProps property after all mixins have been merged.\n\t    if (Constructor.getDefaultProps) {\n\t      Constructor.defaultProps = Constructor.getDefaultProps();\n\t    }\n\t\n\t    if (false) {\n\t      // This is a tag to indicate that the use of these method names is ok,\n\t      // since it's used with createClass. If it's not, then it's likely a\n\t      // mistake so we'll warn you to use the static property, property\n\t      // initializer or constructor respectively.\n\t      if (Constructor.getDefaultProps) {\n\t        Constructor.getDefaultProps.isReactClassApproved = {};\n\t      }\n\t      if (Constructor.prototype.getInitialState) {\n\t        Constructor.prototype.getInitialState.isReactClassApproved = {};\n\t      }\n\t    }\n\t\n\t    !Constructor.prototype.render ?  false ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;\n\t\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;\n\t    }\n\t\n\t    // Reduce time spent doing lookups by setting these on the prototype.\n\t    for (var methodName in ReactClassInterface) {\n\t      if (!Constructor.prototype[methodName]) {\n\t        Constructor.prototype[methodName] = null;\n\t      }\n\t    }\n\t\n\t    return Constructor;\n\t  },\n\t\n\t  injection: {\n\t    injectMixin: function (mixin) {\n\t      injectedMixins.push(mixin);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactClass;\n\n/***/ },\n/* 65 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMComponentFlags\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDOMComponentFlags = {\n\t  hasCachedChildNodes: 1 << 0\n\t};\n\t\n\tmodule.exports = ReactDOMComponentFlags;\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMSelect\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar DisabledInputUtils = __webpack_require__(26);\n\tvar LinkedValueUtils = __webpack_require__(38);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactUpdates = __webpack_require__(10);\n\t\n\tvar warning = __webpack_require__(3);\n\t\n\tvar didWarnValueLink = false;\n\tvar didWarnValueDefaultValue = false;\n\t\n\tfunction updateOptionsIfPendingUpdateAndMounted() {\n\t  if (this._rootNodeID && this._wrapperState.pendingUpdate) {\n\t    this._wrapperState.pendingUpdate = false;\n\t\n\t    var props = this._currentElement.props;\n\t    var value = LinkedValueUtils.getValue(props);\n\t\n\t    if (value != null) {\n\t      updateOptions(this, Boolean(props.multiple), value);\n\t    }\n\t  }\n\t}\n\t\n\tfunction getDeclarationErrorAddendum(owner) {\n\t  if (owner) {\n\t    var name = owner.getName();\n\t    if (name) {\n\t      return ' Check the render method of `' + name + '`.';\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\tvar valuePropNames = ['value', 'defaultValue'];\n\t\n\t/**\n\t * Validation function for `value` and `defaultValue`.\n\t * @private\n\t */\n\tfunction checkSelectPropTypes(inst, props) {\n\t  var owner = inst._currentElement._owner;\n\t  LinkedValueUtils.checkPropTypes('select', props, owner);\n\t\n\t  if (props.valueLink !== undefined && !didWarnValueLink) {\n\t     false ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;\n\t    didWarnValueLink = true;\n\t  }\n\t\n\t  for (var i = 0; i < valuePropNames.length; i++) {\n\t    var propName = valuePropNames[i];\n\t    if (props[propName] == null) {\n\t      continue;\n\t    }\n\t    var isArray = Array.isArray(props[propName]);\n\t    if (props.multiple && !isArray) {\n\t       false ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n\t    } else if (!props.multiple && isArray) {\n\t       false ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * @param {ReactDOMComponent} inst\n\t * @param {boolean} multiple\n\t * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n\t * @private\n\t */\n\tfunction updateOptions(inst, multiple, propValue) {\n\t  var selectedValue, i;\n\t  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;\n\t\n\t  if (multiple) {\n\t    selectedValue = {};\n\t    for (i = 0; i < propValue.length; i++) {\n\t      selectedValue['' + propValue[i]] = true;\n\t    }\n\t    for (i = 0; i < options.length; i++) {\n\t      var selected = selectedValue.hasOwnProperty(options[i].value);\n\t      if (options[i].selected !== selected) {\n\t        options[i].selected = selected;\n\t      }\n\t    }\n\t  } else {\n\t    // Do not set `select.value` as exact behavior isn't consistent across all\n\t    // browsers for all cases.\n\t    selectedValue = '' + propValue;\n\t    for (i = 0; i < options.length; i++) {\n\t      if (options[i].value === selectedValue) {\n\t        options[i].selected = true;\n\t        return;\n\t      }\n\t    }\n\t    if (options.length) {\n\t      options[0].selected = true;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Implements a <select> host component that allows optionally setting the\n\t * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n\t * stringable. If `multiple` is true, the prop must be an array of stringables.\n\t *\n\t * If `value` is not supplied (or null/undefined), user actions that change the\n\t * selected option will trigger updates to the rendered options.\n\t *\n\t * If it is supplied (and not null/undefined), the rendered options will not\n\t * update in response to user actions. Instead, the `value` prop must change in\n\t * order for the rendered options to update.\n\t *\n\t * If `defaultValue` is provided, any options with the supplied values will be\n\t * selected.\n\t */\n\tvar ReactDOMSelect = {\n\t  getHostProps: function (inst, props) {\n\t    return _assign({}, DisabledInputUtils.getHostProps(inst, props), {\n\t      onChange: inst._wrapperState.onChange,\n\t      value: undefined\n\t    });\n\t  },\n\t\n\t  mountWrapper: function (inst, props) {\n\t    if (false) {\n\t      checkSelectPropTypes(inst, props);\n\t    }\n\t\n\t    var value = LinkedValueUtils.getValue(props);\n\t    inst._wrapperState = {\n\t      pendingUpdate: false,\n\t      initialValue: value != null ? value : props.defaultValue,\n\t      listeners: null,\n\t      onChange: _handleChange.bind(inst),\n\t      wasMultiple: Boolean(props.multiple)\n\t    };\n\t\n\t    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n\t       false ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n\t      didWarnValueDefaultValue = true;\n\t    }\n\t  },\n\t\n\t  getSelectValueContext: function (inst) {\n\t    // ReactDOMOption looks at this initial value so the initial generated\n\t    // markup has correct `selected` attributes\n\t    return inst._wrapperState.initialValue;\n\t  },\n\t\n\t  postUpdateWrapper: function (inst) {\n\t    var props = inst._currentElement.props;\n\t\n\t    // After the initial mount, we control selected-ness manually so don't pass\n\t    // this value down\n\t    inst._wrapperState.initialValue = undefined;\n\t\n\t    var wasMultiple = inst._wrapperState.wasMultiple;\n\t    inst._wrapperState.wasMultiple = Boolean(props.multiple);\n\t\n\t    var value = LinkedValueUtils.getValue(props);\n\t    if (value != null) {\n\t      inst._wrapperState.pendingUpdate = false;\n\t      updateOptions(inst, Boolean(props.multiple), value);\n\t    } else if (wasMultiple !== Boolean(props.multiple)) {\n\t      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n\t      if (props.defaultValue != null) {\n\t        updateOptions(inst, Boolean(props.multiple), props.defaultValue);\n\t      } else {\n\t        // Revert the select back to its default unselected state.\n\t        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction _handleChange(event) {\n\t  var props = this._currentElement.props;\n\t  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\t\n\t  if (this._rootNodeID) {\n\t    this._wrapperState.pendingUpdate = true;\n\t  }\n\t  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n\t  return returnValue;\n\t}\n\t\n\tmodule.exports = ReactDOMSelect;\n\n/***/ },\n/* 67 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactEmptyComponent\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyComponentFactory;\n\t\n\tvar ReactEmptyComponentInjection = {\n\t  injectEmptyComponentFactory: function (factory) {\n\t    emptyComponentFactory = factory;\n\t  }\n\t};\n\t\n\tvar ReactEmptyComponent = {\n\t  create: function (instantiate) {\n\t    return emptyComponentFactory(instantiate);\n\t  }\n\t};\n\t\n\tReactEmptyComponent.injection = ReactEmptyComponentInjection;\n\t\n\tmodule.exports = ReactEmptyComponent;\n\n/***/ },\n/* 68 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactFeatureFlags\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactFeatureFlags = {\n\t  // When true, call console.time() before and .timeEnd() after each top-level\n\t  // render (both initial renders and updates). Useful when looking at prod-mode\n\t  // timeline profiles in Chrome, for example.\n\t  logTopLevelRenders: false\n\t};\n\t\n\tmodule.exports = ReactFeatureFlags;\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactHostComponent\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar genericComponentClass = null;\n\t// This registry keeps track of wrapper classes around host tags.\n\tvar tagToComponentClass = {};\n\tvar textComponentClass = null;\n\t\n\tvar ReactHostComponentInjection = {\n\t  // This accepts a class that receives the tag string. This is a catch all\n\t  // that can render any kind of tag.\n\t  injectGenericComponentClass: function (componentClass) {\n\t    genericComponentClass = componentClass;\n\t  },\n\t  // This accepts a text component class that takes the text string to be\n\t  // rendered as props.\n\t  injectTextComponentClass: function (componentClass) {\n\t    textComponentClass = componentClass;\n\t  },\n\t  // This accepts a keyed object with classes as values. Each key represents a\n\t  // tag. That particular tag will use this class instead of the generic one.\n\t  injectComponentClasses: function (componentClasses) {\n\t    _assign(tagToComponentClass, componentClasses);\n\t  }\n\t};\n\t\n\t/**\n\t * Get a host internal component class for a specific tag.\n\t *\n\t * @param {ReactElement} element The element to create.\n\t * @return {function} The internal class constructor function.\n\t */\n\tfunction createInternalComponent(element) {\n\t  !genericComponentClass ?  false ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;\n\t  return new genericComponentClass(element);\n\t}\n\t\n\t/**\n\t * @param {ReactText} text\n\t * @return {ReactComponent}\n\t */\n\tfunction createInstanceForText(text) {\n\t  return new textComponentClass(text);\n\t}\n\t\n\t/**\n\t * @param {ReactComponent} component\n\t * @return {boolean}\n\t */\n\tfunction isTextComponent(component) {\n\t  return component instanceof textComponentClass;\n\t}\n\t\n\tvar ReactHostComponent = {\n\t  createInternalComponent: createInternalComponent,\n\t  createInstanceForText: createInstanceForText,\n\t  isTextComponent: isTextComponent,\n\t  injection: ReactHostComponentInjection\n\t};\n\t\n\tmodule.exports = ReactHostComponent;\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactInputSelection\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDOMSelection = __webpack_require__(134);\n\t\n\tvar containsNode = __webpack_require__(89);\n\tvar focusNode = __webpack_require__(57);\n\tvar getActiveElement = __webpack_require__(58);\n\t\n\tfunction isInDocument(node) {\n\t  return containsNode(document.documentElement, node);\n\t}\n\t\n\t/**\n\t * @ReactInputSelection: React input selection module. Based on Selection.js,\n\t * but modified to be suitable for react and has a couple of bug fixes (doesn't\n\t * assume buttons have range selections allowed).\n\t * Input selection module for React.\n\t */\n\tvar ReactInputSelection = {\n\t\n\t  hasSelectionCapabilities: function (elem) {\n\t    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\t    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');\n\t  },\n\t\n\t  getSelectionInformation: function () {\n\t    var focusedElem = getActiveElement();\n\t    return {\n\t      focusedElem: focusedElem,\n\t      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null\n\t    };\n\t  },\n\t\n\t  /**\n\t   * @restoreSelection: If any selection information was potentially lost,\n\t   * restore it. This is useful when performing operations that could remove dom\n\t   * nodes and place them back in, resulting in focus being lost.\n\t   */\n\t  restoreSelection: function (priorSelectionInformation) {\n\t    var curFocusedElem = getActiveElement();\n\t    var priorFocusedElem = priorSelectionInformation.focusedElem;\n\t    var priorSelectionRange = priorSelectionInformation.selectionRange;\n\t    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n\t      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\n\t        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);\n\t      }\n\t      focusNode(priorFocusedElem);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @getSelection: Gets the selection bounds of a focused textarea, input or\n\t   * contentEditable node.\n\t   * -@input: Look up selection bounds of this input\n\t   * -@return {start: selectionStart, end: selectionEnd}\n\t   */\n\t  getSelection: function (input) {\n\t    var selection;\n\t\n\t    if ('selectionStart' in input) {\n\t      // Modern browser with input or textarea.\n\t      selection = {\n\t        start: input.selectionStart,\n\t        end: input.selectionEnd\n\t      };\n\t    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n\t      // IE8 input.\n\t      var range = document.selection.createRange();\n\t      // There can only be one selection per document in IE, so it must\n\t      // be in our element.\n\t      if (range.parentElement() === input) {\n\t        selection = {\n\t          start: -range.moveStart('character', -input.value.length),\n\t          end: -range.moveEnd('character', -input.value.length)\n\t        };\n\t      }\n\t    } else {\n\t      // Content editable or old IE textarea.\n\t      selection = ReactDOMSelection.getOffsets(input);\n\t    }\n\t\n\t    return selection || { start: 0, end: 0 };\n\t  },\n\t\n\t  /**\n\t   * @setSelection: Sets the selection bounds of a textarea or input and focuses\n\t   * the input.\n\t   * -@input     Set selection bounds of this input or textarea\n\t   * -@offsets   Object of same form that is returned from get*\n\t   */\n\t  setSelection: function (input, offsets) {\n\t    var start = offsets.start;\n\t    var end = offsets.end;\n\t    if (end === undefined) {\n\t      end = start;\n\t    }\n\t\n\t    if ('selectionStart' in input) {\n\t      input.selectionStart = start;\n\t      input.selectionEnd = Math.min(end, input.value.length);\n\t    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n\t      var range = input.createTextRange();\n\t      range.collapse(true);\n\t      range.moveStart('character', start);\n\t      range.moveEnd('character', end - start);\n\t      range.select();\n\t    } else {\n\t      ReactDOMSelection.setOffsets(input, offsets);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = ReactInputSelection;\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactMount\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar DOMLazyTree = __webpack_require__(16);\n\tvar DOMProperty = __webpack_require__(17);\n\tvar ReactBrowserEventEmitter = __webpack_require__(27);\n\tvar ReactCurrentOwner = __webpack_require__(15);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactDOMContainerInfo = __webpack_require__(127);\n\tvar ReactDOMFeatureFlags = __webpack_require__(130);\n\tvar ReactElement = __webpack_require__(9);\n\tvar ReactFeatureFlags = __webpack_require__(68);\n\tvar ReactInstanceMap = __webpack_require__(22);\n\tvar ReactInstrumentation = __webpack_require__(8);\n\tvar ReactMarkupChecksum = __webpack_require__(143);\n\tvar ReactReconciler = __webpack_require__(18);\n\tvar ReactUpdateQueue = __webpack_require__(47);\n\tvar ReactUpdates = __webpack_require__(10);\n\t\n\tvar emptyObject = __webpack_require__(19);\n\tvar instantiateReactComponent = __webpack_require__(83);\n\tvar invariant = __webpack_require__(1);\n\tvar setInnerHTML = __webpack_require__(30);\n\tvar shouldUpdateReactComponent = __webpack_require__(53);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\n\tvar ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;\n\t\n\tvar ELEMENT_NODE_TYPE = 1;\n\tvar DOC_NODE_TYPE = 9;\n\tvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\t\n\tvar instancesByReactRootID = {};\n\t\n\t/**\n\t * Finds the index of the first character\n\t * that's not common between the two given strings.\n\t *\n\t * @return {number} the index of the character where the strings diverge\n\t */\n\tfunction firstDifferenceIndex(string1, string2) {\n\t  var minLen = Math.min(string1.length, string2.length);\n\t  for (var i = 0; i < minLen; i++) {\n\t    if (string1.charAt(i) !== string2.charAt(i)) {\n\t      return i;\n\t    }\n\t  }\n\t  return string1.length === string2.length ? -1 : minLen;\n\t}\n\t\n\t/**\n\t * @param {DOMElement|DOMDocument} container DOM element that may contain\n\t * a React component\n\t * @return {?*} DOM element that may have the reactRoot ID, or null.\n\t */\n\tfunction getReactRootElementInContainer(container) {\n\t  if (!container) {\n\t    return null;\n\t  }\n\t\n\t  if (container.nodeType === DOC_NODE_TYPE) {\n\t    return container.documentElement;\n\t  } else {\n\t    return container.firstChild;\n\t  }\n\t}\n\t\n\tfunction internalGetID(node) {\n\t  // If node is something like a window, document, or text node, none of\n\t  // which support attributes or a .getAttribute method, gracefully return\n\t  // the empty string, as if the attribute were missing.\n\t  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n\t}\n\t\n\t/**\n\t * Mounts this component and inserts it into the DOM.\n\t *\n\t * @param {ReactComponent} componentInstance The instance to mount.\n\t * @param {DOMElement} container DOM element to mount into.\n\t * @param {ReactReconcileTransaction} transaction\n\t * @param {boolean} shouldReuseMarkup If true, do not insert markup\n\t */\n\tfunction mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {\n\t  var markerName;\n\t  if (ReactFeatureFlags.logTopLevelRenders) {\n\t    var wrappedElement = wrapperInstance._currentElement.props;\n\t    var type = wrappedElement.type;\n\t    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);\n\t    console.time(markerName);\n\t  }\n\t\n\t  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */\n\t  );\n\t\n\t  if (markerName) {\n\t    console.timeEnd(markerName);\n\t  }\n\t\n\t  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;\n\t  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);\n\t}\n\t\n\t/**\n\t * Batched mount.\n\t *\n\t * @param {ReactComponent} componentInstance The instance to mount.\n\t * @param {DOMElement} container DOM element to mount into.\n\t * @param {boolean} shouldReuseMarkup If true, do not insert markup\n\t */\n\tfunction batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {\n\t  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n\t  /* useCreateElement */\n\t  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);\n\t  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);\n\t  ReactUpdates.ReactReconcileTransaction.release(transaction);\n\t}\n\t\n\t/**\n\t * Unmounts a component and removes it from the DOM.\n\t *\n\t * @param {ReactComponent} instance React component instance.\n\t * @param {DOMElement} container DOM element to unmount from.\n\t * @final\n\t * @internal\n\t * @see {ReactMount.unmountComponentAtNode}\n\t */\n\tfunction unmountComponentFromNode(instance, container, safely) {\n\t  if (false) {\n\t    ReactInstrumentation.debugTool.onBeginFlush();\n\t  }\n\t  ReactReconciler.unmountComponent(instance, safely);\n\t  if (false) {\n\t    ReactInstrumentation.debugTool.onEndFlush();\n\t  }\n\t\n\t  if (container.nodeType === DOC_NODE_TYPE) {\n\t    container = container.documentElement;\n\t  }\n\t\n\t  // http://jsperf.com/emptying-a-node\n\t  while (container.lastChild) {\n\t    container.removeChild(container.lastChild);\n\t  }\n\t}\n\t\n\t/**\n\t * True if the supplied DOM node has a direct React-rendered child that is\n\t * not a React root element. Useful for warning in `render`,\n\t * `unmountComponentAtNode`, etc.\n\t *\n\t * @param {?DOMElement} node The candidate DOM node.\n\t * @return {boolean} True if the DOM element contains a direct child that was\n\t * rendered by React but is not a root element.\n\t * @internal\n\t */\n\tfunction hasNonRootReactChild(container) {\n\t  var rootEl = getReactRootElementInContainer(container);\n\t  if (rootEl) {\n\t    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);\n\t    return !!(inst && inst._hostParent);\n\t  }\n\t}\n\t\n\t/**\n\t * True if the supplied DOM node is a React DOM element and\n\t * it has been rendered by another copy of React.\n\t *\n\t * @param {?DOMElement} node The candidate DOM node.\n\t * @return {boolean} True if the DOM has been rendered by another copy of React\n\t * @internal\n\t */\n\tfunction nodeIsRenderedByOtherInstance(container) {\n\t  var rootEl = getReactRootElementInContainer(container);\n\t  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));\n\t}\n\t\n\t/**\n\t * True if the supplied DOM node is a valid node element.\n\t *\n\t * @param {?DOMElement} node The candidate DOM node.\n\t * @return {boolean} True if the DOM is a valid DOM node.\n\t * @internal\n\t */\n\tfunction isValidContainer(node) {\n\t  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));\n\t}\n\t\n\t/**\n\t * True if the supplied DOM node is a valid React node element.\n\t *\n\t * @param {?DOMElement} node The candidate DOM node.\n\t * @return {boolean} True if the DOM is a valid React DOM node.\n\t * @internal\n\t */\n\tfunction isReactNode(node) {\n\t  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));\n\t}\n\t\n\tfunction getHostRootInstanceInContainer(container) {\n\t  var rootEl = getReactRootElementInContainer(container);\n\t  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);\n\t  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;\n\t}\n\t\n\tfunction getTopLevelWrapperInContainer(container) {\n\t  var root = getHostRootInstanceInContainer(container);\n\t  return root ? root._hostContainerInfo._topLevelWrapper : null;\n\t}\n\t\n\t/**\n\t * Temporary (?) hack so that we can store all top-level pending updates on\n\t * composites instead of having to worry about different types of components\n\t * here.\n\t */\n\tvar topLevelRootCounter = 1;\n\tvar TopLevelWrapper = function () {\n\t  this.rootID = topLevelRootCounter++;\n\t};\n\tTopLevelWrapper.prototype.isReactComponent = {};\n\tif (false) {\n\t  TopLevelWrapper.displayName = 'TopLevelWrapper';\n\t}\n\tTopLevelWrapper.prototype.render = function () {\n\t  // this.props is actually a ReactElement\n\t  return this.props;\n\t};\n\t\n\t/**\n\t * Mounting is the process of initializing a React component by creating its\n\t * representative DOM elements and inserting them into a supplied `container`.\n\t * Any prior content inside `container` is destroyed in the process.\n\t *\n\t *   ReactMount.render(\n\t *     component,\n\t *     document.getElementById('container')\n\t *   );\n\t *\n\t *   <div id=\"container\">                   <-- Supplied `container`.\n\t *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n\t *       // ...                                 component.\n\t *     </div>\n\t *   </div>\n\t *\n\t * Inside of `container`, the first element rendered is the \"reactRoot\".\n\t */\n\tvar ReactMount = {\n\t\n\t  TopLevelWrapper: TopLevelWrapper,\n\t\n\t  /**\n\t   * Used by devtools. The keys are not important.\n\t   */\n\t  _instancesByReactRootID: instancesByReactRootID,\n\t\n\t  /**\n\t   * This is a hook provided to support rendering React components while\n\t   * ensuring that the apparent scroll position of its `container` does not\n\t   * change.\n\t   *\n\t   * @param {DOMElement} container The `container` being rendered into.\n\t   * @param {function} renderCallback This must be called once to do the render.\n\t   */\n\t  scrollMonitor: function (container, renderCallback) {\n\t    renderCallback();\n\t  },\n\t\n\t  /**\n\t   * Take a component that's already mounted into the DOM and replace its props\n\t   * @param {ReactComponent} prevComponent component instance already in the DOM\n\t   * @param {ReactElement} nextElement component instance to render\n\t   * @param {DOMElement} container container to render into\n\t   * @param {?function} callback function triggered on completion\n\t   */\n\t  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {\n\t    ReactMount.scrollMonitor(container, function () {\n\t      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);\n\t      if (callback) {\n\t        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n\t      }\n\t    });\n\t\n\t    return prevComponent;\n\t  },\n\t\n\t  /**\n\t   * Render a new component into the DOM. Hooked by hooks!\n\t   *\n\t   * @param {ReactElement} nextElement element to render\n\t   * @param {DOMElement} container container to render into\n\t   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n\t   * @return {ReactComponent} nextComponent\n\t   */\n\t  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {\n\t    // Various parts of our code (such as ReactCompositeComponent's\n\t    // _renderValidatedComponent) assume that calls to render aren't nested;\n\t    // verify that that's the case.\n\t     false ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\t\n\t    !isValidContainer(container) ?  false ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;\n\t\n\t    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n\t    var componentInstance = instantiateReactComponent(nextElement, false);\n\t\n\t    // The initial render is synchronous but any updates that happen during\n\t    // rendering, in componentWillMount or componentDidMount, will be batched\n\t    // according to the current batching strategy.\n\t\n\t    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);\n\t\n\t    var wrapperID = componentInstance._instance.rootID;\n\t    instancesByReactRootID[wrapperID] = componentInstance;\n\t\n\t    return componentInstance;\n\t  },\n\t\n\t  /**\n\t   * Renders a React component into the DOM in the supplied `container`.\n\t   *\n\t   * If the React component was previously rendered into `container`, this will\n\t   * perform an update on it and only mutate the DOM as necessary to reflect the\n\t   * latest React component.\n\t   *\n\t   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.\n\t   * @param {ReactElement} nextElement Component element to render.\n\t   * @param {DOMElement} container DOM element to render into.\n\t   * @param {?function} callback function triggered on completion\n\t   * @return {ReactComponent} Component instance rendered in `container`.\n\t   */\n\t  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n\t    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ?  false ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;\n\t    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);\n\t  },\n\t\n\t  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n\t    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');\n\t    !ReactElement.isValidElement(nextElement) ?  false ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \\'div\\', pass ' + 'React.createElement(\\'div\\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :\n\t    // Check if it quacks like an element\n\t    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \\'div\\', pass ' + 'React.createElement(\\'div\\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;\n\t\n\t     false ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;\n\t\n\t    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);\n\t\n\t    var nextContext;\n\t    if (parentComponent) {\n\t      var parentInst = ReactInstanceMap.get(parentComponent);\n\t      nextContext = parentInst._processChildContext(parentInst._context);\n\t    } else {\n\t      nextContext = emptyObject;\n\t    }\n\t\n\t    var prevComponent = getTopLevelWrapperInContainer(container);\n\t\n\t    if (prevComponent) {\n\t      var prevWrappedElement = prevComponent._currentElement;\n\t      var prevElement = prevWrappedElement.props;\n\t      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n\t        var publicInst = prevComponent._renderedComponent.getPublicInstance();\n\t        var updatedCallback = callback && function () {\n\t          callback.call(publicInst);\n\t        };\n\t        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);\n\t        return publicInst;\n\t      } else {\n\t        ReactMount.unmountComponentAtNode(container);\n\t      }\n\t    }\n\t\n\t    var reactRootElement = getReactRootElementInContainer(container);\n\t    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);\n\t    var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\t\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;\n\t\n\t      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n\t        var rootElementSibling = reactRootElement;\n\t        while (rootElementSibling) {\n\t          if (internalGetID(rootElementSibling)) {\n\t            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;\n\t            break;\n\t          }\n\t          rootElementSibling = rootElementSibling.nextSibling;\n\t        }\n\t      }\n\t    }\n\t\n\t    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;\n\t    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();\n\t    if (callback) {\n\t      callback.call(component);\n\t    }\n\t    return component;\n\t  },\n\t\n\t  /**\n\t   * Renders a React component into the DOM in the supplied `container`.\n\t   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render\n\t   *\n\t   * If the React component was previously rendered into `container`, this will\n\t   * perform an update on it and only mutate the DOM as necessary to reflect the\n\t   * latest React component.\n\t   *\n\t   * @param {ReactElement} nextElement Component element to render.\n\t   * @param {DOMElement} container DOM element to render into.\n\t   * @param {?function} callback function triggered on completion\n\t   * @return {ReactComponent} Component instance rendered in `container`.\n\t   */\n\t  render: function (nextElement, container, callback) {\n\t    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);\n\t  },\n\t\n\t  /**\n\t   * Unmounts and destroys the React component rendered in the `container`.\n\t   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode\n\t   *\n\t   * @param {DOMElement} container DOM element containing a React component.\n\t   * @return {boolean} True if a component was found in and unmounted from\n\t   *                   `container`\n\t   */\n\t  unmountComponentAtNode: function (container) {\n\t    // Various parts of our code (such as ReactCompositeComponent's\n\t    // _renderValidatedComponent) assume that calls to render aren't nested;\n\t    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n\t    // render but we still don't expect to be in a render call here.)\n\t     false ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\t\n\t    !isValidContainer(container) ?  false ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;\n\t\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;\n\t    }\n\t\n\t    var prevComponent = getTopLevelWrapperInContainer(container);\n\t    if (!prevComponent) {\n\t      // Check if the node being unmounted was rendered by React, but isn't a\n\t      // root node.\n\t      var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\t\n\t      // Check if the container itself is a React root node.\n\t      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);\n\t\n\t      if (false) {\n\t        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;\n\t      }\n\t\n\t      return false;\n\t    }\n\t    delete instancesByReactRootID[prevComponent._instance.rootID];\n\t    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);\n\t    return true;\n\t  },\n\t\n\t  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {\n\t    !isValidContainer(container) ?  false ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;\n\t\n\t    if (shouldReuseMarkup) {\n\t      var rootElement = getReactRootElementInContainer(container);\n\t      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n\t        ReactDOMComponentTree.precacheNode(instance, rootElement);\n\t        return;\n\t      } else {\n\t        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\t        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\t\n\t        var rootMarkup = rootElement.outerHTML;\n\t        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);\n\t\n\t        var normalizedMarkup = markup;\n\t        if (false) {\n\t          // because rootMarkup is retrieved from the DOM, various normalizations\n\t          // will have occurred which will not be present in `markup`. Here,\n\t          // insert markup into a <div> or <iframe> depending on the container\n\t          // type to perform the same normalizations before comparing.\n\t          var normalizer;\n\t          if (container.nodeType === ELEMENT_NODE_TYPE) {\n\t            normalizer = document.createElement('div');\n\t            normalizer.innerHTML = markup;\n\t            normalizedMarkup = normalizer.innerHTML;\n\t          } else {\n\t            normalizer = document.createElement('iframe');\n\t            document.body.appendChild(normalizer);\n\t            normalizer.contentDocument.write(markup);\n\t            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;\n\t            document.body.removeChild(normalizer);\n\t          }\n\t        }\n\t\n\t        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);\n\t        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\t\n\t        !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\\n%s', difference) : _prodInvariant('42', difference) : void 0;\n\t\n\t        if (false) {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\\n%s', difference) : void 0;\n\t        }\n\t      }\n\t    }\n\t\n\t    !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\\'re trying to render a component to the document but you didn\\'t use server rendering. We can\\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;\n\t\n\t    if (transaction.useCreateElement) {\n\t      while (container.lastChild) {\n\t        container.removeChild(container.lastChild);\n\t      }\n\t      DOMLazyTree.insertTreeBefore(container, markup, null);\n\t    } else {\n\t      setInnerHTML(container, markup);\n\t      ReactDOMComponentTree.precacheNode(instance, container.firstChild);\n\t    }\n\t\n\t    if (false) {\n\t      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);\n\t      if (hostNode._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onHostOperation(hostNode._debugID, 'mount', markup.toString());\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = ReactMount;\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactMultiChildUpdateTypes\n\t */\n\t\n\t'use strict';\n\t\n\tvar keyMirror = __webpack_require__(25);\n\t\n\t/**\n\t * When a component's children are updated, a series of update configuration\n\t * objects are created in order to batch and serialize the required changes.\n\t *\n\t * Enumerates all the possible types of update configurations.\n\t *\n\t * @internal\n\t */\n\tvar ReactMultiChildUpdateTypes = keyMirror({\n\t  INSERT_MARKUP: null,\n\t  MOVE_EXISTING: null,\n\t  REMOVE_NODE: null,\n\t  SET_MARKUP: null,\n\t  TEXT_CONTENT: null\n\t});\n\t\n\tmodule.exports = ReactMultiChildUpdateTypes;\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactNodeTypes\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactElement = __webpack_require__(9);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar ReactNodeTypes = {\n\t  HOST: 0,\n\t  COMPOSITE: 1,\n\t  EMPTY: 2,\n\t\n\t  getType: function (node) {\n\t    if (node === null || node === false) {\n\t      return ReactNodeTypes.EMPTY;\n\t    } else if (ReactElement.isValidElement(node)) {\n\t      if (typeof node.type === 'function') {\n\t        return ReactNodeTypes.COMPOSITE;\n\t      } else {\n\t        return ReactNodeTypes.HOST;\n\t      }\n\t    }\n\t     true ?  false ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;\n\t  }\n\t};\n\t\n\tmodule.exports = ReactNodeTypes;\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactPropTypes\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactElement = __webpack_require__(9);\n\tvar ReactPropTypeLocationNames = __webpack_require__(44);\n\tvar ReactPropTypesSecret = __webpack_require__(46);\n\t\n\tvar emptyFunction = __webpack_require__(7);\n\tvar getIteratorFn = __webpack_require__(81);\n\tvar warning = __webpack_require__(3);\n\t\n\t/**\n\t * Collection of methods that allow declaration and validation of props that are\n\t * supplied to React components. Example usage:\n\t *\n\t *   var Props = require('ReactPropTypes');\n\t *   var MyArticle = React.createClass({\n\t *     propTypes: {\n\t *       // An optional string prop named \"description\".\n\t *       description: Props.string,\n\t *\n\t *       // A required enum prop named \"category\".\n\t *       category: Props.oneOf(['News','Photos']).isRequired,\n\t *\n\t *       // A prop named \"dialog\" that requires an instance of Dialog.\n\t *       dialog: Props.instanceOf(Dialog).isRequired\n\t *     },\n\t *     render: function() { ... }\n\t *   });\n\t *\n\t * A more formal specification of how these methods are used:\n\t *\n\t *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n\t *   decl := ReactPropTypes.{type}(.isRequired)?\n\t *\n\t * Each and every declaration produces a function with the same signature. This\n\t * allows the creation of custom validation functions. For example:\n\t *\n\t *  var MyLink = React.createClass({\n\t *    propTypes: {\n\t *      // An optional string or URI prop named \"href\".\n\t *      href: function(props, propName, componentName) {\n\t *        var propValue = props[propName];\n\t *        if (propValue != null && typeof propValue !== 'string' &&\n\t *            !(propValue instanceof URI)) {\n\t *          return new Error(\n\t *            'Expected a string or an URI for ' + propName + ' in ' +\n\t *            componentName\n\t *          );\n\t *        }\n\t *      }\n\t *    },\n\t *    render: function() {...}\n\t *  });\n\t *\n\t * @internal\n\t */\n\t\n\tvar ANONYMOUS = '<<anonymous>>';\n\t\n\tvar ReactPropTypes = {\n\t  array: createPrimitiveTypeChecker('array'),\n\t  bool: createPrimitiveTypeChecker('boolean'),\n\t  func: createPrimitiveTypeChecker('function'),\n\t  number: createPrimitiveTypeChecker('number'),\n\t  object: createPrimitiveTypeChecker('object'),\n\t  string: createPrimitiveTypeChecker('string'),\n\t  symbol: createPrimitiveTypeChecker('symbol'),\n\t\n\t  any: createAnyTypeChecker(),\n\t  arrayOf: createArrayOfTypeChecker,\n\t  element: createElementTypeChecker(),\n\t  instanceOf: createInstanceTypeChecker,\n\t  node: createNodeChecker(),\n\t  objectOf: createObjectOfTypeChecker,\n\t  oneOf: createEnumTypeChecker,\n\t  oneOfType: createUnionTypeChecker,\n\t  shape: createShapeTypeChecker\n\t};\n\t\n\t/**\n\t * inlined Object.is polyfill to avoid requiring consumers ship their own\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\t */\n\t/*eslint-disable no-self-compare*/\n\tfunction is(x, y) {\n\t  // SameValue algorithm\n\t  if (x === y) {\n\t    // Steps 1-5, 7-10\n\t    // Steps 6.b-6.e: +0 != -0\n\t    return x !== 0 || 1 / x === 1 / y;\n\t  } else {\n\t    // Step 6.a: NaN == NaN\n\t    return x !== x && y !== y;\n\t  }\n\t}\n\t/*eslint-enable no-self-compare*/\n\t\n\t/**\n\t * We use an Error-like object for backward compatibility as people may call\n\t * PropTypes directly and inspect their output. However we don't use real\n\t * Errors anymore. We don't inspect their stack anyway, and creating them\n\t * is prohibitively expensive if they are created too often, such as what\n\t * happens in oneOfType() for any type before the one that matched.\n\t */\n\tfunction PropTypeError(message) {\n\t  this.message = message;\n\t  this.stack = '';\n\t}\n\t// Make `instanceof Error` still work for returned errors.\n\tPropTypeError.prototype = Error.prototype;\n\t\n\tfunction createChainableTypeChecker(validate) {\n\t  if (false) {\n\t    var manualPropTypeCallCache = {};\n\t  }\n\t  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n\t    componentName = componentName || ANONYMOUS;\n\t    propFullName = propFullName || propName;\n\t    if (false) {\n\t      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {\n\t        var cacheKey = componentName + ':' + propName;\n\t        if (!manualPropTypeCallCache[cacheKey]) {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in the next major version. You may be ' + 'seeing this warning due to a third-party PropTypes library. ' + 'See https://fb.me/react-warning-dont-call-proptypes for details.', propFullName, componentName) : void 0;\n\t          manualPropTypeCallCache[cacheKey] = true;\n\t        }\n\t      }\n\t    }\n\t    if (props[propName] == null) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      if (isRequired) {\n\t        return new PropTypeError('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));\n\t      }\n\t      return null;\n\t    } else {\n\t      return validate(props, propName, componentName, location, propFullName);\n\t    }\n\t  }\n\t\n\t  var chainedCheckType = checkType.bind(null, false);\n\t  chainedCheckType.isRequired = checkType.bind(null, true);\n\t\n\t  return chainedCheckType;\n\t}\n\t\n\tfunction createPrimitiveTypeChecker(expectedType) {\n\t  function validate(props, propName, componentName, location, propFullName, secret) {\n\t    var propValue = props[propName];\n\t    var propType = getPropType(propValue);\n\t    if (propType !== expectedType) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      // `propValue` being instance of, say, date/regexp, pass the 'object'\n\t      // check, but we can offer a more precise error message here rather than\n\t      // 'of type `object`'.\n\t      var preciseType = getPreciseType(propValue);\n\t\n\t      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createAnyTypeChecker() {\n\t  return createChainableTypeChecker(emptyFunction.thatReturns(null));\n\t}\n\t\n\tfunction createArrayOfTypeChecker(typeChecker) {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    if (typeof typeChecker !== 'function') {\n\t      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n\t    }\n\t    var propValue = props[propName];\n\t    if (!Array.isArray(propValue)) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      var propType = getPropType(propValue);\n\t      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n\t    }\n\t    for (var i = 0; i < propValue.length; i++) {\n\t      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n\t      if (error instanceof Error) {\n\t        return error;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createElementTypeChecker() {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    var propValue = props[propName];\n\t    if (!ReactElement.isValidElement(propValue)) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      var propType = getPropType(propValue);\n\t      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createInstanceTypeChecker(expectedClass) {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    if (!(props[propName] instanceof expectedClass)) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      var expectedClassName = expectedClass.name || ANONYMOUS;\n\t      var actualClassName = getClassName(props[propName]);\n\t      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createEnumTypeChecker(expectedValues) {\n\t  if (!Array.isArray(expectedValues)) {\n\t     false ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n\t    return emptyFunction.thatReturnsNull;\n\t  }\n\t\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    var propValue = props[propName];\n\t    for (var i = 0; i < expectedValues.length; i++) {\n\t      if (is(propValue, expectedValues[i])) {\n\t        return null;\n\t      }\n\t    }\n\t\n\t    var locationName = ReactPropTypeLocationNames[location];\n\t    var valuesString = JSON.stringify(expectedValues);\n\t    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createObjectOfTypeChecker(typeChecker) {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    if (typeof typeChecker !== 'function') {\n\t      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n\t    }\n\t    var propValue = props[propName];\n\t    var propType = getPropType(propValue);\n\t    if (propType !== 'object') {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n\t    }\n\t    for (var key in propValue) {\n\t      if (propValue.hasOwnProperty(key)) {\n\t        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\t        if (error instanceof Error) {\n\t          return error;\n\t        }\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createUnionTypeChecker(arrayOfTypeCheckers) {\n\t  if (!Array.isArray(arrayOfTypeCheckers)) {\n\t     false ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n\t    return emptyFunction.thatReturnsNull;\n\t  }\n\t\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n\t      var checker = arrayOfTypeCheckers[i];\n\t      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n\t        return null;\n\t      }\n\t    }\n\t\n\t    var locationName = ReactPropTypeLocationNames[location];\n\t    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createNodeChecker() {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    if (!isNode(props[propName])) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createShapeTypeChecker(shapeTypes) {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    var propValue = props[propName];\n\t    var propType = getPropType(propValue);\n\t    if (propType !== 'object') {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n\t    }\n\t    for (var key in shapeTypes) {\n\t      var checker = shapeTypes[key];\n\t      if (!checker) {\n\t        continue;\n\t      }\n\t      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\t      if (error) {\n\t        return error;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction isNode(propValue) {\n\t  switch (typeof propValue) {\n\t    case 'number':\n\t    case 'string':\n\t    case 'undefined':\n\t      return true;\n\t    case 'boolean':\n\t      return !propValue;\n\t    case 'object':\n\t      if (Array.isArray(propValue)) {\n\t        return propValue.every(isNode);\n\t      }\n\t      if (propValue === null || ReactElement.isValidElement(propValue)) {\n\t        return true;\n\t      }\n\t\n\t      var iteratorFn = getIteratorFn(propValue);\n\t      if (iteratorFn) {\n\t        var iterator = iteratorFn.call(propValue);\n\t        var step;\n\t        if (iteratorFn !== propValue.entries) {\n\t          while (!(step = iterator.next()).done) {\n\t            if (!isNode(step.value)) {\n\t              return false;\n\t            }\n\t          }\n\t        } else {\n\t          // Iterator will provide entry [k,v] tuples rather than values.\n\t          while (!(step = iterator.next()).done) {\n\t            var entry = step.value;\n\t            if (entry) {\n\t              if (!isNode(entry[1])) {\n\t                return false;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        return false;\n\t      }\n\t\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t}\n\t\n\tfunction isSymbol(propType, propValue) {\n\t  // Native Symbol.\n\t  if (propType === 'symbol') {\n\t    return true;\n\t  }\n\t\n\t  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\t  if (propValue['@@toStringTag'] === 'Symbol') {\n\t    return true;\n\t  }\n\t\n\t  // Fallback for non-spec compliant Symbols which are polyfilled.\n\t  if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n\t    return true;\n\t  }\n\t\n\t  return false;\n\t}\n\t\n\t// Equivalent of `typeof` but with special handling for array and regexp.\n\tfunction getPropType(propValue) {\n\t  var propType = typeof propValue;\n\t  if (Array.isArray(propValue)) {\n\t    return 'array';\n\t  }\n\t  if (propValue instanceof RegExp) {\n\t    // Old webkits (at least until Android 4.0) return 'function' rather than\n\t    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n\t    // passes PropTypes.object.\n\t    return 'object';\n\t  }\n\t  if (isSymbol(propType, propValue)) {\n\t    return 'symbol';\n\t  }\n\t  return propType;\n\t}\n\t\n\t// This handles more types than `getPropType`. Only used for error messages.\n\t// See `createPrimitiveTypeChecker`.\n\tfunction getPreciseType(propValue) {\n\t  var propType = getPropType(propValue);\n\t  if (propType === 'object') {\n\t    if (propValue instanceof Date) {\n\t      return 'date';\n\t    } else if (propValue instanceof RegExp) {\n\t      return 'regexp';\n\t    }\n\t  }\n\t  return propType;\n\t}\n\t\n\t// Returns class name of the object, if any.\n\tfunction getClassName(propValue) {\n\t  if (!propValue.constructor || !propValue.constructor.name) {\n\t    return ANONYMOUS;\n\t  }\n\t  return propValue.constructor.name;\n\t}\n\t\n\tmodule.exports = ReactPropTypes;\n\n/***/ },\n/* 75 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactVersion\n\t */\n\t\n\t'use strict';\n\t\n\tmodule.exports = '15.3.2';\n\n/***/ },\n/* 76 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ViewportMetrics\n\t */\n\t\n\t'use strict';\n\t\n\tvar ViewportMetrics = {\n\t\n\t  currentScrollLeft: 0,\n\t\n\t  currentScrollTop: 0,\n\t\n\t  refreshScrollValues: function (scrollPosition) {\n\t    ViewportMetrics.currentScrollLeft = scrollPosition.x;\n\t    ViewportMetrics.currentScrollTop = scrollPosition.y;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ViewportMetrics;\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule accumulateInto\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Accumulates items that must not be null or undefined into the first one. This\n\t * is used to conserve memory by avoiding array allocations, and thus sacrifices\n\t * API cleanness. Since `current` can be null before being passed in and not\n\t * null after this function, make sure to assign it back to `current`:\n\t *\n\t * `a = accumulateInto(a, b);`\n\t *\n\t * This API should be sparingly used. Try `accumulate` for something cleaner.\n\t *\n\t * @return {*|array<*>} An accumulation of items.\n\t */\n\t\n\tfunction accumulateInto(current, next) {\n\t  !(next != null) ?  false ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;\n\t\n\t  if (current == null) {\n\t    return next;\n\t  }\n\t\n\t  // Both are not empty. Warning: Never call x.concat(y) when you are not\n\t  // certain that x is an Array (x could be a string with concat method).\n\t  if (Array.isArray(current)) {\n\t    if (Array.isArray(next)) {\n\t      current.push.apply(current, next);\n\t      return current;\n\t    }\n\t    current.push(next);\n\t    return current;\n\t  }\n\t\n\t  if (Array.isArray(next)) {\n\t    // A bit too dangerous to mutate `next`.\n\t    return [current].concat(next);\n\t  }\n\t\n\t  return [current, next];\n\t}\n\t\n\tmodule.exports = accumulateInto;\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule canDefineProperty\n\t */\n\t\n\t'use strict';\n\t\n\tvar canDefineProperty = false;\n\tif (false) {\n\t  try {\n\t    Object.defineProperty({}, 'x', { get: function () {} });\n\t    canDefineProperty = true;\n\t  } catch (x) {\n\t    // IE will fail on defineProperty\n\t  }\n\t}\n\t\n\tmodule.exports = canDefineProperty;\n\n/***/ },\n/* 79 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule forEachAccumulated\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * @param {array} arr an \"accumulation\" of items which is either an Array or\n\t * a single item. Useful when paired with the `accumulate` module. This is a\n\t * simple utility that allows us to reason about a collection of items, but\n\t * handling the case when there is exactly one item (and we do not need to\n\t * allocate an array).\n\t */\n\t\n\tfunction forEachAccumulated(arr, cb, scope) {\n\t  if (Array.isArray(arr)) {\n\t    arr.forEach(cb, scope);\n\t  } else if (arr) {\n\t    cb.call(scope, arr);\n\t  }\n\t}\n\t\n\tmodule.exports = forEachAccumulated;\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getHostComponentFromComposite\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactNodeTypes = __webpack_require__(73);\n\t\n\tfunction getHostComponentFromComposite(inst) {\n\t  var type;\n\t\n\t  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {\n\t    inst = inst._renderedComponent;\n\t  }\n\t\n\t  if (type === ReactNodeTypes.HOST) {\n\t    return inst._renderedComponent;\n\t  } else if (type === ReactNodeTypes.EMPTY) {\n\t    return null;\n\t  }\n\t}\n\t\n\tmodule.exports = getHostComponentFromComposite;\n\n/***/ },\n/* 81 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getIteratorFn\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/* global Symbol */\n\t\n\tvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n\tvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\t\n\t/**\n\t * Returns the iterator method function contained on the iterable object.\n\t *\n\t * Be sure to invoke the function with the iterable as context:\n\t *\n\t *     var iteratorFn = getIteratorFn(myIterable);\n\t *     if (iteratorFn) {\n\t *       var iterator = iteratorFn.call(myIterable);\n\t *       ...\n\t *     }\n\t *\n\t * @param {?object} maybeIterable\n\t * @return {?function}\n\t */\n\tfunction getIteratorFn(maybeIterable) {\n\t  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\t  if (typeof iteratorFn === 'function') {\n\t    return iteratorFn;\n\t  }\n\t}\n\t\n\tmodule.exports = getIteratorFn;\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getTextContentAccessor\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar contentKey = null;\n\t\n\t/**\n\t * Gets the key used to access text content on a DOM node.\n\t *\n\t * @return {?string} Key used to access text content.\n\t * @internal\n\t */\n\tfunction getTextContentAccessor() {\n\t  if (!contentKey && ExecutionEnvironment.canUseDOM) {\n\t    // Prefer textContent to innerText because many browsers support both but\n\t    // SVG <text> elements don't support innerText even when <div> does.\n\t    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';\n\t  }\n\t  return contentKey;\n\t}\n\t\n\tmodule.exports = getTextContentAccessor;\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule instantiateReactComponent\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar ReactCompositeComponent = __webpack_require__(123);\n\tvar ReactEmptyComponent = __webpack_require__(67);\n\tvar ReactHostComponent = __webpack_require__(69);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\t// To avoid a cyclic dependency, we create the final class in this module\n\tvar ReactCompositeComponentWrapper = function (element) {\n\t  this.construct(element);\n\t};\n\t_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {\n\t  _instantiateReactComponent: instantiateReactComponent\n\t});\n\t\n\tfunction getDeclarationErrorAddendum(owner) {\n\t  if (owner) {\n\t    var name = owner.getName();\n\t    if (name) {\n\t      return ' Check the render method of `' + name + '`.';\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\t/**\n\t * Check if the type reference is a known internal type. I.e. not a user\n\t * provided composite type.\n\t *\n\t * @param {function} type\n\t * @return {boolean} Returns true if this is a valid internal type.\n\t */\n\tfunction isInternalComponentType(type) {\n\t  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';\n\t}\n\t\n\tvar nextDebugID = 1;\n\t\n\t/**\n\t * Given a ReactNode, create an instance that will actually be mounted.\n\t *\n\t * @param {ReactNode} node\n\t * @param {boolean} shouldHaveDebugID\n\t * @return {object} A new instance of the element's constructor.\n\t * @protected\n\t */\n\tfunction instantiateReactComponent(node, shouldHaveDebugID) {\n\t  var instance;\n\t\n\t  if (node === null || node === false) {\n\t    instance = ReactEmptyComponent.create(instantiateReactComponent);\n\t  } else if (typeof node === 'object') {\n\t    var element = node;\n\t    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ?  false ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : void 0;\n\t\n\t    // Special case string values\n\t    if (typeof element.type === 'string') {\n\t      instance = ReactHostComponent.createInternalComponent(element);\n\t    } else if (isInternalComponentType(element.type)) {\n\t      // This is temporarily available for custom components that are not string\n\t      // representations. I.e. ART. Once those are updated to use the string\n\t      // representation, we can drop this code path.\n\t      instance = new element.type(element);\n\t\n\t      // We renamed this. Allow the old name for compat. :(\n\t      if (!instance.getHostNode) {\n\t        instance.getHostNode = instance.getNativeNode;\n\t      }\n\t    } else {\n\t      instance = new ReactCompositeComponentWrapper(element);\n\t    }\n\t  } else if (typeof node === 'string' || typeof node === 'number') {\n\t    instance = ReactHostComponent.createInstanceForText(node);\n\t  } else {\n\t     true ?  false ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;\n\t  }\n\t\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;\n\t  }\n\t\n\t  // These two fields are used by the DOM and ART diffing algorithms\n\t  // respectively. Instead of using expandos on components, we should be\n\t  // storing the state needed by the diffing algorithms elsewhere.\n\t  instance._mountIndex = 0;\n\t  instance._mountImage = null;\n\t\n\t  if (false) {\n\t    instance._debugID = shouldHaveDebugID ? nextDebugID++ : 0;\n\t  }\n\t\n\t  // Internal instances should fully constructed at this point, so they should\n\t  // not get any new fields added to them at this point.\n\t  if (false) {\n\t    if (Object.preventExtensions) {\n\t      Object.preventExtensions(instance);\n\t    }\n\t  }\n\t\n\t  return instance;\n\t}\n\t\n\tmodule.exports = instantiateReactComponent;\n\n/***/ },\n/* 84 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule isTextInputElement\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n\t */\n\t\n\tvar supportedInputTypes = {\n\t  'color': true,\n\t  'date': true,\n\t  'datetime': true,\n\t  'datetime-local': true,\n\t  'email': true,\n\t  'month': true,\n\t  'number': true,\n\t  'password': true,\n\t  'range': true,\n\t  'search': true,\n\t  'tel': true,\n\t  'text': true,\n\t  'time': true,\n\t  'url': true,\n\t  'week': true\n\t};\n\t\n\tfunction isTextInputElement(elem) {\n\t  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\t\n\t  if (nodeName === 'input') {\n\t    return !!supportedInputTypes[elem.type];\n\t  }\n\t\n\t  if (nodeName === 'textarea') {\n\t    return true;\n\t  }\n\t\n\t  return false;\n\t}\n\t\n\tmodule.exports = isTextInputElement;\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule setTextContent\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar escapeTextContentForBrowser = __webpack_require__(29);\n\tvar setInnerHTML = __webpack_require__(30);\n\t\n\t/**\n\t * Set the textContent property of a node, ensuring that whitespace is preserved\n\t * even in IE8. innerText is a poor substitute for textContent and, among many\n\t * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\n\t * as it should.\n\t *\n\t * @param {DOMElement} node\n\t * @param {string} text\n\t * @internal\n\t */\n\tvar setTextContent = function (node, text) {\n\t  if (text) {\n\t    var firstChild = node.firstChild;\n\t\n\t    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {\n\t      firstChild.nodeValue = text;\n\t      return;\n\t    }\n\t  }\n\t  node.textContent = text;\n\t};\n\t\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  if (!('textContent' in document.documentElement)) {\n\t    setTextContent = function (node, text) {\n\t      setInnerHTML(node, escapeTextContentForBrowser(text));\n\t    };\n\t  }\n\t}\n\t\n\tmodule.exports = setTextContent;\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(120);\n\n\n/***/ },\n/* 87 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar _hyphenPattern = /-(.)/g;\n\t\n\t/**\n\t * Camelcases a hyphenated string, for example:\n\t *\n\t *   > camelize('background-color')\n\t *   < \"backgroundColor\"\n\t *\n\t * @param {string} string\n\t * @return {string}\n\t */\n\tfunction camelize(string) {\n\t  return string.replace(_hyphenPattern, function (_, character) {\n\t    return character.toUpperCase();\n\t  });\n\t}\n\t\n\tmodule.exports = camelize;\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\tvar camelize = __webpack_require__(87);\n\t\n\tvar msPattern = /^-ms-/;\n\t\n\t/**\n\t * Camelcases a hyphenated CSS property name, for example:\n\t *\n\t *   > camelizeStyleName('background-color')\n\t *   < \"backgroundColor\"\n\t *   > camelizeStyleName('-moz-transition')\n\t *   < \"MozTransition\"\n\t *   > camelizeStyleName('-ms-transition')\n\t *   < \"msTransition\"\n\t *\n\t * As Andi Smith suggests\n\t * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n\t * is converted to lowercase `ms`.\n\t *\n\t * @param {string} string\n\t * @return {string}\n\t */\n\tfunction camelizeStyleName(string) {\n\t  return camelize(string.replace(msPattern, 'ms-'));\n\t}\n\t\n\tmodule.exports = camelizeStyleName;\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\tvar isTextNode = __webpack_require__(97);\n\t\n\t/*eslint-disable no-bitwise */\n\t\n\t/**\n\t * Checks if a given DOM node contains or is another DOM node.\n\t */\n\tfunction containsNode(outerNode, innerNode) {\n\t  if (!outerNode || !innerNode) {\n\t    return false;\n\t  } else if (outerNode === innerNode) {\n\t    return true;\n\t  } else if (isTextNode(outerNode)) {\n\t    return false;\n\t  } else if (isTextNode(innerNode)) {\n\t    return containsNode(outerNode, innerNode.parentNode);\n\t  } else if ('contains' in outerNode) {\n\t    return outerNode.contains(innerNode);\n\t  } else if (outerNode.compareDocumentPosition) {\n\t    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n\t  } else {\n\t    return false;\n\t  }\n\t}\n\t\n\tmodule.exports = containsNode;\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Convert array-like objects to arrays.\n\t *\n\t * This API assumes the caller knows the contents of the data type. For less\n\t * well defined inputs use createArrayFromMixed.\n\t *\n\t * @param {object|function|filelist} obj\n\t * @return {array}\n\t */\n\tfunction toArray(obj) {\n\t  var length = obj.length;\n\t\n\t  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList\n\t  // in old versions of Safari).\n\t  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ?  false ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;\n\t\n\t  !(typeof length === 'number') ?  false ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;\n\t\n\t  !(length === 0 || length - 1 in obj) ?  false ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;\n\t\n\t  !(typeof obj.callee !== 'function') ?  false ? invariant(false, 'toArray: Object can\\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;\n\t\n\t  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n\t  // without method will throw during the slice call and skip straight to the\n\t  // fallback.\n\t  if (obj.hasOwnProperty) {\n\t    try {\n\t      return Array.prototype.slice.call(obj);\n\t    } catch (e) {\n\t      // IE < 9 does not support Array#slice on collections objects\n\t    }\n\t  }\n\t\n\t  // Fall back to copying key by key. This assumes all keys have a value,\n\t  // so will not preserve sparsely populated inputs.\n\t  var ret = Array(length);\n\t  for (var ii = 0; ii < length; ii++) {\n\t    ret[ii] = obj[ii];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Perform a heuristic test to determine if an object is \"array-like\".\n\t *\n\t *   A monk asked Joshu, a Zen master, \"Has a dog Buddha nature?\"\n\t *   Joshu replied: \"Mu.\"\n\t *\n\t * This function determines if its argument has \"array nature\": it returns\n\t * true if the argument is an actual array, an `arguments' object, or an\n\t * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).\n\t *\n\t * It will return false for other array-like objects like Filelist.\n\t *\n\t * @param {*} obj\n\t * @return {boolean}\n\t */\n\tfunction hasArrayNature(obj) {\n\t  return (\n\t    // not null/false\n\t    !!obj && (\n\t    // arrays are objects, NodeLists are functions in Safari\n\t    typeof obj == 'object' || typeof obj == 'function') &&\n\t    // quacks like an array\n\t    'length' in obj &&\n\t    // not window\n\t    !('setInterval' in obj) &&\n\t    // no DOM node should be considered an array-like\n\t    // a 'select' element has 'length' and 'item' properties on IE8\n\t    typeof obj.nodeType != 'number' && (\n\t    // a real array\n\t    Array.isArray(obj) ||\n\t    // arguments\n\t    'callee' in obj ||\n\t    // HTMLCollection/NodeList\n\t    'item' in obj)\n\t  );\n\t}\n\t\n\t/**\n\t * Ensure that the argument is an array by wrapping it in an array if it is not.\n\t * Creates a copy of the argument if it is already an array.\n\t *\n\t * This is mostly useful idiomatically:\n\t *\n\t *   var createArrayFromMixed = require('createArrayFromMixed');\n\t *\n\t *   function takesOneOrMoreThings(things) {\n\t *     things = createArrayFromMixed(things);\n\t *     ...\n\t *   }\n\t *\n\t * This allows you to treat `things' as an array, but accept scalars in the API.\n\t *\n\t * If you need to convert an array-like object, like `arguments`, into an array\n\t * use toArray instead.\n\t *\n\t * @param {*} obj\n\t * @return {array}\n\t */\n\tfunction createArrayFromMixed(obj) {\n\t  if (!hasArrayNature(obj)) {\n\t    return [obj];\n\t  } else if (Array.isArray(obj)) {\n\t    return obj.slice();\n\t  } else {\n\t    return toArray(obj);\n\t  }\n\t}\n\t\n\tmodule.exports = createArrayFromMixed;\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t/*eslint-disable fb-www/unsafe-html*/\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar createArrayFromMixed = __webpack_require__(90);\n\tvar getMarkupWrap = __webpack_require__(92);\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Dummy container used to render all markup.\n\t */\n\tvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\t\n\t/**\n\t * Pattern used by `getNodeName`.\n\t */\n\tvar nodeNamePattern = /^\\s*<(\\w+)/;\n\t\n\t/**\n\t * Extracts the `nodeName` of the first element in a string of markup.\n\t *\n\t * @param {string} markup String of markup.\n\t * @return {?string} Node name of the supplied markup.\n\t */\n\tfunction getNodeName(markup) {\n\t  var nodeNameMatch = markup.match(nodeNamePattern);\n\t  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n\t}\n\t\n\t/**\n\t * Creates an array containing the nodes rendered from the supplied markup. The\n\t * optionally supplied `handleScript` function will be invoked once for each\n\t * <script> element that is rendered. If no `handleScript` function is supplied,\n\t * an exception is thrown if any <script> elements are rendered.\n\t *\n\t * @param {string} markup A string of valid HTML markup.\n\t * @param {?function} handleScript Invoked once for each rendered <script>.\n\t * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\n\t */\n\tfunction createNodesFromMarkup(markup, handleScript) {\n\t  var node = dummyNode;\n\t  !!!dummyNode ?  false ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;\n\t  var nodeName = getNodeName(markup);\n\t\n\t  var wrap = nodeName && getMarkupWrap(nodeName);\n\t  if (wrap) {\n\t    node.innerHTML = wrap[1] + markup + wrap[2];\n\t\n\t    var wrapDepth = wrap[0];\n\t    while (wrapDepth--) {\n\t      node = node.lastChild;\n\t    }\n\t  } else {\n\t    node.innerHTML = markup;\n\t  }\n\t\n\t  var scripts = node.getElementsByTagName('script');\n\t  if (scripts.length) {\n\t    !handleScript ?  false ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;\n\t    createArrayFromMixed(scripts).forEach(handleScript);\n\t  }\n\t\n\t  var nodes = Array.from(node.childNodes);\n\t  while (node.lastChild) {\n\t    node.removeChild(node.lastChild);\n\t  }\n\t  return nodes;\n\t}\n\t\n\tmodule.exports = createNodesFromMarkup;\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t/*eslint-disable fb-www/unsafe-html */\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Dummy container used to detect which wraps are necessary.\n\t */\n\tvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\t\n\t/**\n\t * Some browsers cannot use `innerHTML` to render certain elements standalone,\n\t * so we wrap them, render the wrapped nodes, then extract the desired node.\n\t *\n\t * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n\t */\n\t\n\tvar shouldWrap = {};\n\t\n\tvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\n\tvar tableWrap = [1, '<table>', '</table>'];\n\tvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tvar svgWrap = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\">', '</svg>'];\n\t\n\tvar markupWrap = {\n\t  '*': [1, '?<div>', '</div>'],\n\t\n\t  'area': [1, '<map>', '</map>'],\n\t  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n\t  'legend': [1, '<fieldset>', '</fieldset>'],\n\t  'param': [1, '<object>', '</object>'],\n\t  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\t\n\t  'optgroup': selectWrap,\n\t  'option': selectWrap,\n\t\n\t  'caption': tableWrap,\n\t  'colgroup': tableWrap,\n\t  'tbody': tableWrap,\n\t  'tfoot': tableWrap,\n\t  'thead': tableWrap,\n\t\n\t  'td': trWrap,\n\t  'th': trWrap\n\t};\n\t\n\t// Initialize the SVG elements since we know they'll always need to be wrapped\n\t// consistently. If they are created inside a <div> they will be initialized in\n\t// the wrong namespace (and will not display).\n\tvar svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];\n\tsvgElements.forEach(function (nodeName) {\n\t  markupWrap[nodeName] = svgWrap;\n\t  shouldWrap[nodeName] = true;\n\t});\n\t\n\t/**\n\t * Gets the markup wrap configuration for the supplied `nodeName`.\n\t *\n\t * NOTE: This lazily detects which wraps are necessary for the current browser.\n\t *\n\t * @param {string} nodeName Lowercase `nodeName`.\n\t * @return {?array} Markup wrap configuration, if applicable.\n\t */\n\tfunction getMarkupWrap(nodeName) {\n\t  !!!dummyNode ?  false ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;\n\t  if (!markupWrap.hasOwnProperty(nodeName)) {\n\t    nodeName = '*';\n\t  }\n\t  if (!shouldWrap.hasOwnProperty(nodeName)) {\n\t    if (nodeName === '*') {\n\t      dummyNode.innerHTML = '<link />';\n\t    } else {\n\t      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n\t    }\n\t    shouldWrap[nodeName] = !dummyNode.firstChild;\n\t  }\n\t  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n\t}\n\t\n\tmodule.exports = getMarkupWrap;\n\n/***/ },\n/* 93 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Gets the scroll position of the supplied element or window.\n\t *\n\t * The return values are unbounded, unlike `getScrollPosition`. This means they\n\t * may be negative or exceed the element boundaries (which is possible using\n\t * inertial scrolling).\n\t *\n\t * @param {DOMWindow|DOMElement} scrollable\n\t * @return {object} Map with `x` and `y` keys.\n\t */\n\t\n\tfunction getUnboundedScrollPosition(scrollable) {\n\t  if (scrollable === window) {\n\t    return {\n\t      x: window.pageXOffset || document.documentElement.scrollLeft,\n\t      y: window.pageYOffset || document.documentElement.scrollTop\n\t    };\n\t  }\n\t  return {\n\t    x: scrollable.scrollLeft,\n\t    y: scrollable.scrollTop\n\t  };\n\t}\n\t\n\tmodule.exports = getUnboundedScrollPosition;\n\n/***/ },\n/* 94 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar _uppercasePattern = /([A-Z])/g;\n\t\n\t/**\n\t * Hyphenates a camelcased string, for example:\n\t *\n\t *   > hyphenate('backgroundColor')\n\t *   < \"background-color\"\n\t *\n\t * For CSS style names, use `hyphenateStyleName` instead which works properly\n\t * with all vendor prefixes, including `ms`.\n\t *\n\t * @param {string} string\n\t * @return {string}\n\t */\n\tfunction hyphenate(string) {\n\t  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n\t}\n\t\n\tmodule.exports = hyphenate;\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\tvar hyphenate = __webpack_require__(94);\n\t\n\tvar msPattern = /^ms-/;\n\t\n\t/**\n\t * Hyphenates a camelcased CSS property name, for example:\n\t *\n\t *   > hyphenateStyleName('backgroundColor')\n\t *   < \"background-color\"\n\t *   > hyphenateStyleName('MozTransition')\n\t *   < \"-moz-transition\"\n\t *   > hyphenateStyleName('msTransition')\n\t *   < \"-ms-transition\"\n\t *\n\t * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n\t * is converted to `-ms-`.\n\t *\n\t * @param {string} string\n\t * @return {string}\n\t */\n\tfunction hyphenateStyleName(string) {\n\t  return hyphenate(string).replace(msPattern, '-ms-');\n\t}\n\t\n\tmodule.exports = hyphenateStyleName;\n\n/***/ },\n/* 96 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t/**\n\t * @param {*} object The object to check.\n\t * @return {boolean} Whether or not the object is a DOM node.\n\t */\n\tfunction isNode(object) {\n\t  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n\t}\n\t\n\tmodule.exports = isNode;\n\n/***/ },\n/* 97 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar isNode = __webpack_require__(96);\n\t\n\t/**\n\t * @param {*} object The object to check.\n\t * @return {boolean} Whether or not the object is a DOM text node.\n\t */\n\tfunction isTextNode(object) {\n\t  return isNode(object) && object.nodeType == 3;\n\t}\n\t\n\tmodule.exports = isTextNode;\n\n/***/ },\n/* 98 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Memoizes the return value of a function that accepts one string argument.\n\t */\n\t\n\tfunction memoizeStringOnly(callback) {\n\t  var cache = {};\n\t  return function (string) {\n\t    if (!cache.hasOwnProperty(string)) {\n\t      cache[string] = callback.call(this, string);\n\t    }\n\t    return cache[string];\n\t  };\n\t}\n\t\n\tmodule.exports = memoizeStringOnly;\n\n/***/ },\n/* 99 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(124);\n\n\n/***/ },\n/* 100 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// @remove-on-eject-begin\n\t/**\n\t * Copyright (c) 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t// @remove-on-eject-end\n\t\n\tif (typeof Promise === 'undefined') {\n\t  // Rejection tracking prevents a common issue where React gets into an\n\t  // inconsistent state due to an error, but it gets swallowed by a Promise,\n\t  // and the user has no idea what causes React's erratic future behavior.\n\t  __webpack_require__(109).enable();\n\t  window.Promise = __webpack_require__(108);\n\t}\n\t\n\t// fetch() polyfill for making API calls.\n\t__webpack_require__(110);\n\t\n\t// Object.assign() is commonly used with React.\n\t// It will use the native implementation if it's present and isn't buggy.\n\tObject.assign = __webpack_require__(107);\n\n\n/***/ },\n/* 101 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tmodule.exports = rawAsap;\n\tfunction rawAsap(task) {\n\t    if (!queue.length) {\n\t        requestFlush();\n\t        flushing = true;\n\t    }\n\t    // Equivalent to push, but avoids a function call.\n\t    queue[queue.length] = task;\n\t}\n\t\n\tvar queue = [];\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\tvar flushing = false;\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tvar requestFlush;\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tvar index = 0;\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tvar capacity = 1024;\n\t\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tfunction flush() {\n\t    while (index < queue.length) {\n\t        var currentIndex = index;\n\t        // Advance the index before calling the task. This ensures that we will\n\t        // begin flushing on the next task the task throws an error.\n\t        index = index + 1;\n\t        queue[currentIndex].call();\n\t        // Prevent leaking memory for long chains of recursive calls to `asap`.\n\t        // If we call `asap` within tasks scheduled by `asap`, the queue will\n\t        // grow, but to avoid an O(n) walk for every task we execute, we don't\n\t        // shift tasks off the queue after they have been executed.\n\t        // Instead, we periodically shift 1024 tasks off the queue.\n\t        if (index > capacity) {\n\t            // Manually shift all values starting at the index back to the\n\t            // beginning of the queue.\n\t            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n\t                queue[scan] = queue[scan + index];\n\t            }\n\t            queue.length -= index;\n\t            index = 0;\n\t        }\n\t    }\n\t    queue.length = 0;\n\t    index = 0;\n\t    flushing = false;\n\t}\n\t\n\t// `requestFlush` is implemented using a strategy based on data collected from\n\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\n\t// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n\t// have WebKitMutationObserver but not un-prefixed MutationObserver.\n\t// Must use `global` or `self` instead of `window` to work in both frames and web\n\t// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\t\n\t/* globals self */\n\tvar scope = typeof global !== \"undefined\" ? global : self;\n\tvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\t\n\t// MutationObservers are desirable because they have high priority and work\n\t// reliably everywhere they are implemented.\n\t// They are implemented in all modern browsers.\n\t//\n\t// - Android 4-4.3\n\t// - Chrome 26-34\n\t// - Firefox 14-29\n\t// - Internet Explorer 11\n\t// - iPad Safari 6-7.1\n\t// - iPhone Safari 7-7.1\n\t// - Safari 6-7\n\tif (typeof BrowserMutationObserver === \"function\") {\n\t    requestFlush = makeRequestCallFromMutationObserver(flush);\n\t\n\t// MessageChannels are desirable because they give direct access to the HTML\n\t// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t// 11-12, and in web workers in many engines.\n\t// Although message channels yield to any queued rendering and IO tasks, they\n\t// would be better than imposing the 4ms delay of timers.\n\t// However, they do not work reliably in Internet Explorer or Safari.\n\t\n\t// Internet Explorer 10 is the only browser that has setImmediate but does\n\t// not have MutationObservers.\n\t// Although setImmediate yields to the browser's renderer, it would be\n\t// preferrable to falling back to setTimeout since it does not have\n\t// the minimum 4ms penalty.\n\t// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t// Desktop to a lesser extent) that renders both setImmediate and\n\t// MessageChannel useless for the purposes of ASAP.\n\t// https://github.com/kriskowal/q/issues/396\n\t\n\t// Timers are implemented universally.\n\t// We fall back to timers in workers in most engines, and in foreground\n\t// contexts in the following browsers.\n\t// However, note that even this simple case requires nuances to operate in a\n\t// broad spectrum of browsers.\n\t//\n\t// - Firefox 3-13\n\t// - Internet Explorer 6-9\n\t// - iPad Safari 4.3\n\t// - Lynx 2.8.7\n\t} else {\n\t    requestFlush = makeRequestCallFromTimer(flush);\n\t}\n\t\n\t// `requestFlush` requests that the high priority event queue be flushed as\n\t// soon as possible.\n\t// This is useful to prevent an error thrown in a task from stalling the event\n\t// queue if the exception handled by Node.js’s\n\t// `process.on(\"uncaughtException\")` or by a domain.\n\trawAsap.requestFlush = requestFlush;\n\t\n\t// To request a high priority event, we induce a mutation observer by toggling\n\t// the text of a text node between \"1\" and \"-1\".\n\tfunction makeRequestCallFromMutationObserver(callback) {\n\t    var toggle = 1;\n\t    var observer = new BrowserMutationObserver(callback);\n\t    var node = document.createTextNode(\"\");\n\t    observer.observe(node, {characterData: true});\n\t    return function requestCall() {\n\t        toggle = -toggle;\n\t        node.data = toggle;\n\t    };\n\t}\n\t\n\t// The message channel technique was discovered by Malte Ubl and was the\n\t// original foundation for this library.\n\t// http://www.nonblocking.io/2011/06/windownexttick.html\n\t\n\t// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n\t// page's first load. Thankfully, this version of Safari supports\n\t// MutationObservers, so we don't need to fall back in that case.\n\t\n\t// function makeRequestCallFromMessageChannel(callback) {\n\t//     var channel = new MessageChannel();\n\t//     channel.port1.onmessage = callback;\n\t//     return function requestCall() {\n\t//         channel.port2.postMessage(0);\n\t//     };\n\t// }\n\t\n\t// For reasons explained above, we are also unable to use `setImmediate`\n\t// under any circumstances.\n\t// Even if we were, there is another bug in Internet Explorer 10.\n\t// It is not sufficient to assign `setImmediate` to `requestFlush` because\n\t// `setImmediate` must be called *by name* and therefore must be wrapped in a\n\t// closure.\n\t// Never forget.\n\t\n\t// function makeRequestCallFromSetImmediate(callback) {\n\t//     return function requestCall() {\n\t//         setImmediate(callback);\n\t//     };\n\t// }\n\t\n\t// Safari 6.0 has a problem where timers will get lost while the user is\n\t// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n\t// mutation observers, so that implementation is used instead.\n\t// However, if we ever elect to use timers in Safari, the prevalent work-around\n\t// is to add a scroll event listener that calls for a flush.\n\t\n\t// `setTimeout` does not call the passed callback if the delay is less than\n\t// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n\t// even then.\n\t\n\tfunction makeRequestCallFromTimer(callback) {\n\t    return function requestCall() {\n\t        // We dispatch a timeout with a specified delay of 0 for engines that\n\t        // can reliably accommodate that request. This will usually be snapped\n\t        // to a 4 milisecond delay, but once we're flushing, there's no delay\n\t        // between events.\n\t        var timeoutHandle = setTimeout(handleTimer, 0);\n\t        // However, since this timer gets frequently dropped in Firefox\n\t        // workers, we enlist an interval handle that will try to fire\n\t        // an event 20 times per second until it succeeds.\n\t        var intervalHandle = setInterval(handleTimer, 50);\n\t\n\t        function handleTimer() {\n\t            // Whichever timer succeeds will cancel both timers and\n\t            // execute the callback.\n\t            clearTimeout(timeoutHandle);\n\t            clearInterval(intervalHandle);\n\t            callback();\n\t        }\n\t    };\n\t}\n\t\n\t// This is for `asap.js` only.\n\t// Its name will be periodically randomized to break any code that depends on\n\t// its existence.\n\trawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\t\n\t// ASAP was originally a nextTick shim included in Q. This was factored out\n\t// into this ASAP package. It was later adapted to RSVP which made further\n\t// amendments. These decisions, particularly to marginalize MessageChannel and\n\t// to capture the MutationObserver implementation in a closure, were integrated\n\t// back into ASAP proper.\n\t// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _react = __webpack_require__(86);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\t__webpack_require__(105);\n\t\n\tvar _sequencer = __webpack_require__(104);\n\t\n\tvar sequencer = _interopRequireWildcard(_sequencer);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction initTracks() {\n\t  return [{ name: \"hi-hat (open)\", sample: \"audio/hihato.wav\", vol: .4, muted: false, beats: initBeats(16) }, { name: \"hi-hat (close)\", sample: \"audio/hihatc.wav\", vol: .4, muted: false, beats: initBeats(16) }, { name: \"snare\", sample: \"audio/snare.wav\", vol: .9, muted: false, beats: initBeats(16) }, { name: \"kick\", sample: \"audio/kick.wav\", vol: .8, muted: false, beats: initBeats(16) }];\n\t}\n\t\n\tfunction initBeats(n) {\n\t  return new Array(n).fill(false);\n\t}\n\t\n\tfunction _toggleTrackBeat(tracks, name, beat) {\n\t  return tracks.map(function (track) {\n\t    if (track.name !== name) {\n\t      return track;\n\t    } else {\n\t      return _extends({}, track, {\n\t        beats: track.beats.map(function (v, i) {\n\t          return i !== beat ? v : !v;\n\t        })\n\t      });\n\t    }\n\t  });\n\t}\n\t\n\tfunction _setTrackVolume(tracks, name, vol) {\n\t  return tracks.map(function (track) {\n\t    if (track.name !== name) {\n\t      return track;\n\t    } else {\n\t      return _extends({}, track, { vol: vol });\n\t    }\n\t  });\n\t}\n\t\n\tfunction _muteTrack(tracks, name) {\n\t  return tracks.map(function (track) {\n\t    if (track.name !== name) {\n\t      return track;\n\t    } else {\n\t      return _extends({}, track, { muted: !track.muted });\n\t    }\n\t  });\n\t}\n\t\n\tfunction TrackView(_ref) {\n\t  var track = _ref.track;\n\t  var currentBeat = _ref.currentBeat;\n\t  var toggleTrackBeat = _ref.toggleTrackBeat;\n\t  var setTrackVolume = _ref.setTrackVolume;\n\t  var muteTrack = _ref.muteTrack;\n\t\n\t  return _react2.default.createElement(\n\t    \"tr\",\n\t    { className: \"track\" },\n\t    _react2.default.createElement(\n\t      \"th\",\n\t      null,\n\t      track.name\n\t    ),\n\t    _react2.default.createElement(\n\t      \"td\",\n\t      null,\n\t      _react2.default.createElement(\"input\", { type: \"range\", min: \"0\", max: \"1\", step: \".1\", value: track.vol,\n\t        onChange: function onChange(event) {\n\t          return setTrackVolume(track.name, parseFloat(event.target.value));\n\t        } })\n\t    ),\n\t    _react2.default.createElement(\n\t      \"td\",\n\t      null,\n\t      _react2.default.createElement(\"input\", { type: \"checkbox\", checked: !track.muted,\n\t        onChange: function onChange(event) {\n\t          return muteTrack(track.name);\n\t        } })\n\t    ),\n\t    track.beats.map(function (v, beat) {\n\t      var beatClass = v ? \"active\" : beat === currentBeat ? \"current\" : \"\";\n\t      return _react2.default.createElement(\n\t        \"td\",\n\t        { key: beat, className: \"beat \" + beatClass },\n\t        _react2.default.createElement(\"a\", { href: \"\", onClick: function onClick(event) {\n\t            event.preventDefault();\n\t            toggleTrackBeat(track.name, beat);\n\t          } })\n\t      );\n\t    })\n\t  );\n\t}\n\t\n\tfunction TrackListView(_ref2) {\n\t  var tracks = _ref2.tracks;\n\t  var currentBeat = _ref2.currentBeat;\n\t  var toggleTrackBeat = _ref2.toggleTrackBeat;\n\t  var setTrackVolume = _ref2.setTrackVolume;\n\t  var muteTrack = _ref2.muteTrack;\n\t\n\t  return _react2.default.createElement(\n\t    \"table\",\n\t    null,\n\t    _react2.default.createElement(\n\t      \"tbody\",\n\t      null,\n\t      tracks.map(function (track, i) {\n\t        return _react2.default.createElement(TrackView, { key: i,\n\t          track: track,\n\t          currentBeat: currentBeat,\n\t          toggleTrackBeat: toggleTrackBeat,\n\t          setTrackVolume: setTrackVolume,\n\t          muteTrack: muteTrack });\n\t      })\n\t    )\n\t  );\n\t}\n\t\n\tfunction Controls(_ref3) {\n\t  var bpm = _ref3.bpm;\n\t  var updateBPM = _ref3.updateBPM;\n\t  var start = _ref3.start;\n\t  var stop = _ref3.stop;\n\t\n\t  var onChange = function onChange(event) {\n\t    return updateBPM(parseInt(event.target.value, 10));\n\t  };\n\t  return _react2.default.createElement(\n\t    \"div\",\n\t    { className: \"controls\" },\n\t    _react2.default.createElement(\n\t      \"button\",\n\t      { className: \"btn btn-start\", onClick: start },\n\t      \"Play\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"button\",\n\t      { className: \"btn btn-stop\", onClick: stop },\n\t      \"Stop\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"div\",\n\t      { className: \"bpm\" },\n\t      _react2.default.createElement(\n\t        \"label\",\n\t        null,\n\t        \"BPM\",\n\t        _react2.default.createElement(\"input\", { type: \"range\", min: \"30\", max: \"240\", value: bpm, onChange: onChange }),\n\t        _react2.default.createElement(\"input\", { type: \"number\", value: bpm, onChange: onChange })\n\t      )\n\t    )\n\t  );\n\t}\n\t\n\tvar App = function (_Component) {\n\t  _inherits(App, _Component);\n\t\n\t  function App(props) {\n\t    _classCallCheck(this, App);\n\t\n\t    var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));\n\t\n\t    _initialiseProps.call(_this);\n\t\n\t    var tracks = initTracks();\n\t    _this.state = {\n\t      bpm: 120,\n\t      currentBeat: -1,\n\t      tracks: tracks, loop: sequencer.create(tracks, _this.updateCurrentBeat)\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(App, [{\n\t    key: \"render\",\n\t    value: function render() {\n\t      var _state = this.state;\n\t      var bpm = _state.bpm;\n\t      var currentBeat = _state.currentBeat;\n\t      var tracks = _state.tracks;\n\t      var updateBPM = this.updateBPM;\n\t      var start = this.start;\n\t      var stop = this.stop;\n\t\n\t      return _react2.default.createElement(\n\t        \"div\",\n\t        null,\n\t        _react2.default.createElement(\n\t          \"h3\",\n\t          null,\n\t          \"tinysynth\"\n\t        ),\n\t        _react2.default.createElement(TrackListView, {\n\t          tracks: tracks,\n\t          currentBeat: currentBeat,\n\t          toggleTrackBeat: this.toggleTrackBeat,\n\t          setTrackVolume: this.setTrackVolume,\n\t          muteTrack: this.muteTrack }),\n\t        _react2.default.createElement(Controls, { bpm: bpm, updateBPM: updateBPM, start: start, stop: stop })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return App;\n\t}(_react.Component);\n\t\n\tvar _initialiseProps = function _initialiseProps() {\n\t  var _this2 = this;\n\t\n\t  this.start = function () {\n\t    _this2.state.loop.start();\n\t  };\n\t\n\t  this.stop = function () {\n\t    _this2.state.loop.stop();\n\t    _this2.setState({ currentBeat: -1 });\n\t  };\n\t\n\t  this.updateCurrentBeat = function (beat) {\n\t    _this2.setState({ currentBeat: beat });\n\t  };\n\t\n\t  this.updateTracks = function (newTracks) {\n\t    var loop = _this2.state.loop;\n\t\n\t    _this2.setState({\n\t      tracks: newTracks,\n\t      loop: sequencer.update(loop, newTracks, _this2.updateCurrentBeat)\n\t    });\n\t  };\n\t\n\t  this.toggleTrackBeat = function (name, beat) {\n\t    var tracks = _this2.state.tracks;\n\t\n\t    _this2.updateTracks(_toggleTrackBeat(tracks, name, beat));\n\t  };\n\t\n\t  this.setTrackVolume = function (name, vol) {\n\t    var tracks = _this2.state.tracks;\n\t\n\t    _this2.updateTracks(_setTrackVolume(tracks, name, vol));\n\t  };\n\t\n\t  this.muteTrack = function (name) {\n\t    var tracks = _this2.state.tracks;\n\t\n\t    _this2.updateTracks(_muteTrack(tracks, name));\n\t  };\n\t\n\t  this.updateBPM = function (newBpm) {\n\t    var bpm = _this2.state.bpm;\n\t\n\t    sequencer.updateBPM(bpm);\n\t    _this2.setState({ bpm: newBpm });\n\t  };\n\t};\n\t\n\texports.default = App;\n\n/***/ },\n/* 103 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _react = __webpack_require__(86);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(99);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _App = __webpack_require__(102);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\t__webpack_require__(106);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_reactDom2.default.render(_react2.default.createElement(_App2.default, null), document.getElementById('root'));\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.create = create;\n\texports.update = update;\n\texports.updateBPM = updateBPM;\n\t\n\tvar _tone = __webpack_require__(175);\n\t\n\tvar _tone2 = _interopRequireDefault(_tone);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tvar velocities = [1, .5, .75, .5, 1, .5, .75, .5, 1, .5, .75, .5, 1, .5, .75, .5];\n\t\n\tfunction create(tracks, beatNotifier) {\n\t  var loop = new _tone2.default.Sequence(loopProcessor(tracks, beatNotifier), new Array(16).fill(0).map(function (_, i) {\n\t    return i;\n\t  }), \"16n\");\n\t\n\t  _tone2.default.Transport.bpm.value = 120;\n\t  _tone2.default.Transport.start();\n\t\n\t  return loop;\n\t}\n\t\n\tfunction update(loop, tracks, beatNotifier) {\n\t  loop.callback = loopProcessor(tracks, beatNotifier);\n\t  return loop;\n\t}\n\t\n\tfunction updateBPM(bpm) {\n\t  _tone2.default.Transport.bpm.value = bpm;\n\t}\n\t\n\tfunction loopProcessor(tracks, beatNotifier) {\n\t  var urls = tracks.reduce(function (acc, _ref) {\n\t    var name = _ref.name;\n\t    var sample = _ref.sample;\n\t\n\t    return _extends({}, acc, _defineProperty({}, name, sample));\n\t  }, {});\n\t\n\t  var keys = new _tone2.default.MultiPlayer({ urls: urls }).toMaster();\n\t\n\t  return function (time, index) {\n\t    beatNotifier(index);\n\t    tracks.forEach(function (_ref2) {\n\t      var name = _ref2.name;\n\t      var vol = _ref2.vol;\n\t      var muted = _ref2.muted;\n\t      var beats = _ref2.beats;\n\t\n\t      if (beats[index]) {\n\t        // XXX \"1n\" should be set via some \"resolution\" track prop\n\t        keys.start(name, time, 0, \"1n\", 0, muted ? 0 : velocities[index] * vol);\n\t      }\n\t    });\n\t  };\n\t}\n\n/***/ },\n/* 105 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 106 */\n105,\n/* 107 */\n4,\n/* 108 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t//This file contains the ES6 extensions to the core Promises/A+ API\n\t\n\tvar Promise = __webpack_require__(59);\n\t\n\tmodule.exports = Promise;\n\t\n\t/* Static Functions */\n\t\n\tvar TRUE = valuePromise(true);\n\tvar FALSE = valuePromise(false);\n\tvar NULL = valuePromise(null);\n\tvar UNDEFINED = valuePromise(undefined);\n\tvar ZERO = valuePromise(0);\n\tvar EMPTYSTRING = valuePromise('');\n\t\n\tfunction valuePromise(value) {\n\t  var p = new Promise(Promise._61);\n\t  p._81 = 1;\n\t  p._65 = value;\n\t  return p;\n\t}\n\tPromise.resolve = function (value) {\n\t  if (value instanceof Promise) return value;\n\t\n\t  if (value === null) return NULL;\n\t  if (value === undefined) return UNDEFINED;\n\t  if (value === true) return TRUE;\n\t  if (value === false) return FALSE;\n\t  if (value === 0) return ZERO;\n\t  if (value === '') return EMPTYSTRING;\n\t\n\t  if (typeof value === 'object' || typeof value === 'function') {\n\t    try {\n\t      var then = value.then;\n\t      if (typeof then === 'function') {\n\t        return new Promise(then.bind(value));\n\t      }\n\t    } catch (ex) {\n\t      return new Promise(function (resolve, reject) {\n\t        reject(ex);\n\t      });\n\t    }\n\t  }\n\t  return valuePromise(value);\n\t};\n\t\n\tPromise.all = function (arr) {\n\t  var args = Array.prototype.slice.call(arr);\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    if (args.length === 0) return resolve([]);\n\t    var remaining = args.length;\n\t    function res(i, val) {\n\t      if (val && (typeof val === 'object' || typeof val === 'function')) {\n\t        if (val instanceof Promise && val.then === Promise.prototype.then) {\n\t          while (val._81 === 3) {\n\t            val = val._65;\n\t          }\n\t          if (val._81 === 1) return res(i, val._65);\n\t          if (val._81 === 2) reject(val._65);\n\t          val.then(function (val) {\n\t            res(i, val);\n\t          }, reject);\n\t          return;\n\t        } else {\n\t          var then = val.then;\n\t          if (typeof then === 'function') {\n\t            var p = new Promise(then.bind(val));\n\t            p.then(function (val) {\n\t              res(i, val);\n\t            }, reject);\n\t            return;\n\t          }\n\t        }\n\t      }\n\t      args[i] = val;\n\t      if (--remaining === 0) {\n\t        resolve(args);\n\t      }\n\t    }\n\t    for (var i = 0; i < args.length; i++) {\n\t      res(i, args[i]);\n\t    }\n\t  });\n\t};\n\t\n\tPromise.reject = function (value) {\n\t  return new Promise(function (resolve, reject) {\n\t    reject(value);\n\t  });\n\t};\n\t\n\tPromise.race = function (values) {\n\t  return new Promise(function (resolve, reject) {\n\t    values.forEach(function(value){\n\t      Promise.resolve(value).then(resolve, reject);\n\t    });\n\t  });\n\t};\n\t\n\t/* Prototype Methods */\n\t\n\tPromise.prototype['catch'] = function (onRejected) {\n\t  return this.then(null, onRejected);\n\t};\n\n\n/***/ },\n/* 109 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(59);\n\t\n\tvar DEFAULT_WHITELIST = [\n\t  ReferenceError,\n\t  TypeError,\n\t  RangeError\n\t];\n\t\n\tvar enabled = false;\n\texports.disable = disable;\n\tfunction disable() {\n\t  enabled = false;\n\t  Promise._10 = null;\n\t  Promise._97 = null;\n\t}\n\t\n\texports.enable = enable;\n\tfunction enable(options) {\n\t  options = options || {};\n\t  if (enabled) disable();\n\t  enabled = true;\n\t  var id = 0;\n\t  var displayId = 0;\n\t  var rejections = {};\n\t  Promise._10 = function (promise) {\n\t    if (\n\t      promise._81 === 2 && // IS REJECTED\n\t      rejections[promise._72]\n\t    ) {\n\t      if (rejections[promise._72].logged) {\n\t        onHandled(promise._72);\n\t      } else {\n\t        clearTimeout(rejections[promise._72].timeout);\n\t      }\n\t      delete rejections[promise._72];\n\t    }\n\t  };\n\t  Promise._97 = function (promise, err) {\n\t    if (promise._45 === 0) { // not yet handled\n\t      promise._72 = id++;\n\t      rejections[promise._72] = {\n\t        displayId: null,\n\t        error: err,\n\t        timeout: setTimeout(\n\t          onUnhandled.bind(null, promise._72),\n\t          // For reference errors and type errors, this almost always\n\t          // means the programmer made a mistake, so log them after just\n\t          // 100ms\n\t          // otherwise, wait 2 seconds to see if they get handled\n\t          matchWhitelist(err, DEFAULT_WHITELIST)\n\t            ? 100\n\t            : 2000\n\t        ),\n\t        logged: false\n\t      };\n\t    }\n\t  };\n\t  function onUnhandled(id) {\n\t    if (\n\t      options.allRejections ||\n\t      matchWhitelist(\n\t        rejections[id].error,\n\t        options.whitelist || DEFAULT_WHITELIST\n\t      )\n\t    ) {\n\t      rejections[id].displayId = displayId++;\n\t      if (options.onUnhandled) {\n\t        rejections[id].logged = true;\n\t        options.onUnhandled(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      } else {\n\t        rejections[id].logged = true;\n\t        logError(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      }\n\t    }\n\t  }\n\t  function onHandled(id) {\n\t    if (rejections[id].logged) {\n\t      if (options.onHandled) {\n\t        options.onHandled(rejections[id].displayId, rejections[id].error);\n\t      } else if (!rejections[id].onUnhandled) {\n\t        console.warn(\n\t          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n\t        );\n\t        console.warn(\n\t          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n\t          rejections[id].displayId + '.'\n\t        );\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction logError(id, error) {\n\t  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n\t  var errStr = (error && (error.stack || error)) + '';\n\t  errStr.split('\\n').forEach(function (line) {\n\t    console.warn('  ' + line);\n\t  });\n\t}\n\t\n\tfunction matchWhitelist(error, list) {\n\t  return list.some(function (cls) {\n\t    return error instanceof cls;\n\t  });\n\t}\n\n/***/ },\n/* 110 */\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var list = this.map[name]\n\t    if (!list) {\n\t      list = []\n\t      this.map[name] = list\n\t    }\n\t    list.push(value)\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    var values = this.map[normalizeName(name)]\n\t    return values ? values[0] : null\n\t  }\n\t\n\t  Headers.prototype.getAll = function(name) {\n\t    return this.map[normalizeName(name)] || []\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = [normalizeValue(value)]\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n\t      this.map[name].forEach(function(value) {\n\t        callback.call(thisArg, value, name, this)\n\t      }, this)\n\t    }, this)\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsArrayBuffer(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsText(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (!body) {\n\t        this._bodyText = ''\n\t      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n\t        // Only support ArrayBuffers for POST method.\n\t        // Receiving ArrayBuffers happens via Blobs, instead.\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        return this.blob().then(readBlobAsArrayBuffer)\n\t      }\n\t\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return readBlobAsText(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as text')\n\t        } else {\n\t          return Promise.resolve(this._bodyText)\n\t        }\n\t      }\n\t    } else {\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        return rejected ? rejected : Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t    if (Request.prototype.isPrototypeOf(input)) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = input\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this)\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function headers(xhr) {\n\t    var head = new Headers()\n\t    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n\t    pairs.forEach(function(header) {\n\t      var split = header.trim().split(':')\n\t      var key = split.shift().trim()\n\t      var value = split.join(':').trim()\n\t      head.append(key, value)\n\t    })\n\t    return head\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = options.status\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = options.statusText\n\t    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request\n\t      if (Request.prototype.isPrototypeOf(input) && !init) {\n\t        request = input\n\t      } else {\n\t        request = new Request(input, init)\n\t      }\n\t\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      function responseURL() {\n\t        if ('responseURL' in xhr) {\n\t          return xhr.responseURL\n\t        }\n\t\n\t        // Avoid security warnings on getResponseHeader when not allowed by CORS\n\t        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n\t          return xhr.getResponseHeader('X-Request-URL')\n\t        }\n\t\n\t        return\n\t      }\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: headers(xhr),\n\t          url: responseURL()\n\t        }\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ },\n/* 111 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule AutoFocusUtils\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\t\n\tvar focusNode = __webpack_require__(57);\n\t\n\tvar AutoFocusUtils = {\n\t  focusDOMComponent: function () {\n\t    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));\n\t  }\n\t};\n\t\n\tmodule.exports = AutoFocusUtils;\n\n/***/ },\n/* 112 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule BeforeInputEventPlugin\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventConstants = __webpack_require__(11);\n\tvar EventPropagators = __webpack_require__(21);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar FallbackCompositionState = __webpack_require__(118);\n\tvar SyntheticCompositionEvent = __webpack_require__(156);\n\tvar SyntheticInputEvent = __webpack_require__(159);\n\t\n\tvar keyOf = __webpack_require__(13);\n\t\n\tvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\n\tvar START_KEYCODE = 229;\n\t\n\tvar canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;\n\t\n\tvar documentMode = null;\n\tif (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {\n\t  documentMode = document.documentMode;\n\t}\n\t\n\t// Webkit offers a very useful `textInput` event that can be used to\n\t// directly represent `beforeInput`. The IE `textinput` event is not as\n\t// useful, so we don't use it.\n\tvar canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();\n\t\n\t// In IE9+, we have access to composition events, but the data supplied\n\t// by the native compositionend event may be incorrect. Japanese ideographic\n\t// spaces, for instance (\\u3000) are not recorded correctly.\n\tvar useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);\n\t\n\t/**\n\t * Opera <= 12 includes TextEvent in window, but does not fire\n\t * text input events. Rely on keypress instead.\n\t */\n\tfunction isPresto() {\n\t  var opera = window.opera;\n\t  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;\n\t}\n\t\n\tvar SPACEBAR_CODE = 32;\n\tvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\t\n\tvar topLevelTypes = EventConstants.topLevelTypes;\n\t\n\t// Events and their corresponding property names.\n\tvar eventTypes = {\n\t  beforeInput: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onBeforeInput: null }),\n\t      captured: keyOf({ onBeforeInputCapture: null })\n\t    },\n\t    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]\n\t  },\n\t  compositionEnd: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onCompositionEnd: null }),\n\t      captured: keyOf({ onCompositionEndCapture: null })\n\t    },\n\t    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\n\t  },\n\t  compositionStart: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onCompositionStart: null }),\n\t      captured: keyOf({ onCompositionStartCapture: null })\n\t    },\n\t    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\n\t  },\n\t  compositionUpdate: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onCompositionUpdate: null }),\n\t      captured: keyOf({ onCompositionUpdateCapture: null })\n\t    },\n\t    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\n\t  }\n\t};\n\t\n\t// Track whether we've ever handled a keypress on the space key.\n\tvar hasSpaceKeypress = false;\n\t\n\t/**\n\t * Return whether a native keypress event is assumed to be a command.\n\t * This is required because Firefox fires `keypress` events for key commands\n\t * (cut, copy, select-all, etc.) even though no character is inserted.\n\t */\n\tfunction isKeypressCommand(nativeEvent) {\n\t  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n\t  // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n\t  !(nativeEvent.ctrlKey && nativeEvent.altKey);\n\t}\n\t\n\t/**\n\t * Translate native top level events into event types.\n\t *\n\t * @param {string} topLevelType\n\t * @return {object}\n\t */\n\tfunction getCompositionEventType(topLevelType) {\n\t  switch (topLevelType) {\n\t    case topLevelTypes.topCompositionStart:\n\t      return eventTypes.compositionStart;\n\t    case topLevelTypes.topCompositionEnd:\n\t      return eventTypes.compositionEnd;\n\t    case topLevelTypes.topCompositionUpdate:\n\t      return eventTypes.compositionUpdate;\n\t  }\n\t}\n\t\n\t/**\n\t * Does our fallback best-guess model think this event signifies that\n\t * composition has begun?\n\t *\n\t * @param {string} topLevelType\n\t * @param {object} nativeEvent\n\t * @return {boolean}\n\t */\n\tfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n\t  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;\n\t}\n\t\n\t/**\n\t * Does our fallback mode think that this event is the end of composition?\n\t *\n\t * @param {string} topLevelType\n\t * @param {object} nativeEvent\n\t * @return {boolean}\n\t */\n\tfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n\t  switch (topLevelType) {\n\t    case topLevelTypes.topKeyUp:\n\t      // Command keys insert or clear IME input.\n\t      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\n\t    case topLevelTypes.topKeyDown:\n\t      // Expect IME keyCode on each keydown. If we get any other\n\t      // code we must have exited earlier.\n\t      return nativeEvent.keyCode !== START_KEYCODE;\n\t    case topLevelTypes.topKeyPress:\n\t    case topLevelTypes.topMouseDown:\n\t    case topLevelTypes.topBlur:\n\t      // Events are not possible without cancelling IME.\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Google Input Tools provides composition data via a CustomEvent,\n\t * with the `data` property populated in the `detail` object. If this\n\t * is available on the event object, use it. If not, this is a plain\n\t * composition event and we have nothing special to extract.\n\t *\n\t * @param {object} nativeEvent\n\t * @return {?string}\n\t */\n\tfunction getDataFromCustomEvent(nativeEvent) {\n\t  var detail = nativeEvent.detail;\n\t  if (typeof detail === 'object' && 'data' in detail) {\n\t    return detail.data;\n\t  }\n\t  return null;\n\t}\n\t\n\t// Track the current IME composition fallback object, if any.\n\tvar currentComposition = null;\n\t\n\t/**\n\t * @return {?object} A SyntheticCompositionEvent.\n\t */\n\tfunction extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t  var eventType;\n\t  var fallbackData;\n\t\n\t  if (canUseCompositionEvent) {\n\t    eventType = getCompositionEventType(topLevelType);\n\t  } else if (!currentComposition) {\n\t    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n\t      eventType = eventTypes.compositionStart;\n\t    }\n\t  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n\t    eventType = eventTypes.compositionEnd;\n\t  }\n\t\n\t  if (!eventType) {\n\t    return null;\n\t  }\n\t\n\t  if (useFallbackCompositionData) {\n\t    // The current composition is stored statically and must not be\n\t    // overwritten while composition continues.\n\t    if (!currentComposition && eventType === eventTypes.compositionStart) {\n\t      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);\n\t    } else if (eventType === eventTypes.compositionEnd) {\n\t      if (currentComposition) {\n\t        fallbackData = currentComposition.getData();\n\t      }\n\t    }\n\t  }\n\t\n\t  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);\n\t\n\t  if (fallbackData) {\n\t    // Inject data generated from fallback path into the synthetic event.\n\t    // This matches the property of native CompositionEventInterface.\n\t    event.data = fallbackData;\n\t  } else {\n\t    var customData = getDataFromCustomEvent(nativeEvent);\n\t    if (customData !== null) {\n\t      event.data = customData;\n\t    }\n\t  }\n\t\n\t  EventPropagators.accumulateTwoPhaseDispatches(event);\n\t  return event;\n\t}\n\t\n\t/**\n\t * @param {string} topLevelType Record from `EventConstants`.\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {?string} The string corresponding to this `beforeInput` event.\n\t */\n\tfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\n\t  switch (topLevelType) {\n\t    case topLevelTypes.topCompositionEnd:\n\t      return getDataFromCustomEvent(nativeEvent);\n\t    case topLevelTypes.topKeyPress:\n\t      /**\n\t       * If native `textInput` events are available, our goal is to make\n\t       * use of them. However, there is a special case: the spacebar key.\n\t       * In Webkit, preventing default on a spacebar `textInput` event\n\t       * cancels character insertion, but it *also* causes the browser\n\t       * to fall back to its default spacebar behavior of scrolling the\n\t       * page.\n\t       *\n\t       * Tracking at:\n\t       * https://code.google.com/p/chromium/issues/detail?id=355103\n\t       *\n\t       * To avoid this issue, use the keypress event as if no `textInput`\n\t       * event is available.\n\t       */\n\t      var which = nativeEvent.which;\n\t      if (which !== SPACEBAR_CODE) {\n\t        return null;\n\t      }\n\t\n\t      hasSpaceKeypress = true;\n\t      return SPACEBAR_CHAR;\n\t\n\t    case topLevelTypes.topTextInput:\n\t      // Record the characters to be added to the DOM.\n\t      var chars = nativeEvent.data;\n\t\n\t      // If it's a spacebar character, assume that we have already handled\n\t      // it at the keypress level and bail immediately. Android Chrome\n\t      // doesn't give us keycodes, so we need to blacklist it.\n\t      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n\t        return null;\n\t      }\n\t\n\t      return chars;\n\t\n\t    default:\n\t      // For other native event types, do nothing.\n\t      return null;\n\t  }\n\t}\n\t\n\t/**\n\t * For browsers that do not provide the `textInput` event, extract the\n\t * appropriate string to use for SyntheticInputEvent.\n\t *\n\t * @param {string} topLevelType Record from `EventConstants`.\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {?string} The fallback string for this `beforeInput` event.\n\t */\n\tfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\n\t  // If we are currently composing (IME) and using a fallback to do so,\n\t  // try to extract the composed characters from the fallback object.\n\t  // If composition event is available, we extract a string only at\n\t  // compositionevent, otherwise extract it at fallback events.\n\t  if (currentComposition) {\n\t    if (topLevelType === topLevelTypes.topCompositionEnd || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n\t      var chars = currentComposition.getData();\n\t      FallbackCompositionState.release(currentComposition);\n\t      currentComposition = null;\n\t      return chars;\n\t    }\n\t    return null;\n\t  }\n\t\n\t  switch (topLevelType) {\n\t    case topLevelTypes.topPaste:\n\t      // If a paste event occurs after a keypress, throw out the input\n\t      // chars. Paste events should not lead to BeforeInput events.\n\t      return null;\n\t    case topLevelTypes.topKeyPress:\n\t      /**\n\t       * As of v27, Firefox may fire keypress events even when no character\n\t       * will be inserted. A few possibilities:\n\t       *\n\t       * - `which` is `0`. Arrow keys, Esc key, etc.\n\t       *\n\t       * - `which` is the pressed key code, but no char is available.\n\t       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n\t       *   this key combination and no character is inserted into the\n\t       *   document, but FF fires the keypress for char code `100` anyway.\n\t       *   No `input` event will occur.\n\t       *\n\t       * - `which` is the pressed key code, but a command combination is\n\t       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n\t       *   `input` event will occur.\n\t       */\n\t      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {\n\t        return String.fromCharCode(nativeEvent.which);\n\t      }\n\t      return null;\n\t    case topLevelTypes.topCompositionEnd:\n\t      return useFallbackCompositionData ? null : nativeEvent.data;\n\t    default:\n\t      return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n\t * `textInput` or fallback behavior.\n\t *\n\t * @return {?object} A SyntheticInputEvent.\n\t */\n\tfunction extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t  var chars;\n\t\n\t  if (canUseTextInputEvent) {\n\t    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n\t  } else {\n\t    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n\t  }\n\t\n\t  // If no characters are being inserted, no BeforeInput event should\n\t  // be fired.\n\t  if (!chars) {\n\t    return null;\n\t  }\n\t\n\t  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);\n\t\n\t  event.data = chars;\n\t  EventPropagators.accumulateTwoPhaseDispatches(event);\n\t  return event;\n\t}\n\t\n\t/**\n\t * Create an `onBeforeInput` event to match\n\t * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n\t *\n\t * This event plugin is based on the native `textInput` event\n\t * available in Chrome, Safari, Opera, and IE. This event fires after\n\t * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n\t *\n\t * `beforeInput` is spec'd but not implemented in any browsers, and\n\t * the `input` event does not provide any useful information about what has\n\t * actually been added, contrary to the spec. Thus, `textInput` is the best\n\t * available event to identify the characters that have actually been inserted\n\t * into the target node.\n\t *\n\t * This plugin is also responsible for emitting `composition` events, thus\n\t * allowing us to share composition fallback code for both `beforeInput` and\n\t * `composition` event types.\n\t */\n\tvar BeforeInputEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];\n\t  }\n\t};\n\t\n\tmodule.exports = BeforeInputEventPlugin;\n\n/***/ },\n/* 113 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule CSSPropertyOperations\n\t */\n\t\n\t'use strict';\n\t\n\tvar CSSProperty = __webpack_require__(60);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar ReactInstrumentation = __webpack_require__(8);\n\t\n\tvar camelizeStyleName = __webpack_require__(88);\n\tvar dangerousStyleValue = __webpack_require__(166);\n\tvar hyphenateStyleName = __webpack_require__(95);\n\tvar memoizeStringOnly = __webpack_require__(98);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar processStyleName = memoizeStringOnly(function (styleName) {\n\t  return hyphenateStyleName(styleName);\n\t});\n\t\n\tvar hasShorthandPropertyBug = false;\n\tvar styleFloatAccessor = 'cssFloat';\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  var tempStyle = document.createElement('div').style;\n\t  try {\n\t    // IE8 throws \"Invalid argument.\" if resetting shorthand style properties.\n\t    tempStyle.font = '';\n\t  } catch (e) {\n\t    hasShorthandPropertyBug = true;\n\t  }\n\t  // IE8 only supports accessing cssFloat (standard) as styleFloat\n\t  if (document.documentElement.style.cssFloat === undefined) {\n\t    styleFloatAccessor = 'styleFloat';\n\t  }\n\t}\n\t\n\tif (false) {\n\t  // 'msTransform' is correct, but the other prefixes should be capitalized\n\t  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\t\n\t  // style values shouldn't contain a semicolon\n\t  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\t\n\t  var warnedStyleNames = {};\n\t  var warnedStyleValues = {};\n\t  var warnedForNaNValue = false;\n\t\n\t  var warnHyphenatedStyleName = function (name, owner) {\n\t    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n\t      return;\n\t    }\n\t\n\t    warnedStyleNames[name] = true;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;\n\t  };\n\t\n\t  var warnBadVendoredStyleName = function (name, owner) {\n\t    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n\t      return;\n\t    }\n\t\n\t    warnedStyleNames[name] = true;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;\n\t  };\n\t\n\t  var warnStyleValueWithSemicolon = function (name, value, owner) {\n\t    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n\t      return;\n\t    }\n\t\n\t    warnedStyleValues[value] = true;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\\'t contain a semicolon.%s ' + 'Try \"%s: %s\" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;\n\t  };\n\t\n\t  var warnStyleValueIsNaN = function (name, value, owner) {\n\t    if (warnedForNaNValue) {\n\t      return;\n\t    }\n\t\n\t    warnedForNaNValue = true;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;\n\t  };\n\t\n\t  var checkRenderMessage = function (owner) {\n\t    if (owner) {\n\t      var name = owner.getName();\n\t      if (name) {\n\t        return ' Check the render method of `' + name + '`.';\n\t      }\n\t    }\n\t    return '';\n\t  };\n\t\n\t  /**\n\t   * @param {string} name\n\t   * @param {*} value\n\t   * @param {ReactDOMComponent} component\n\t   */\n\t  var warnValidStyle = function (name, value, component) {\n\t    var owner;\n\t    if (component) {\n\t      owner = component._currentElement._owner;\n\t    }\n\t    if (name.indexOf('-') > -1) {\n\t      warnHyphenatedStyleName(name, owner);\n\t    } else if (badVendoredStyleNamePattern.test(name)) {\n\t      warnBadVendoredStyleName(name, owner);\n\t    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n\t      warnStyleValueWithSemicolon(name, value, owner);\n\t    }\n\t\n\t    if (typeof value === 'number' && isNaN(value)) {\n\t      warnStyleValueIsNaN(name, value, owner);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Operations for dealing with CSS properties.\n\t */\n\tvar CSSPropertyOperations = {\n\t\n\t  /**\n\t   * Serializes a mapping of style properties for use as inline styles:\n\t   *\n\t   *   > createMarkupForStyles({width: '200px', height: 0})\n\t   *   \"width:200px;height:0;\"\n\t   *\n\t   * Undefined values are ignored so that declarative programming is easier.\n\t   * The result should be HTML-escaped before insertion into the DOM.\n\t   *\n\t   * @param {object} styles\n\t   * @param {ReactDOMComponent} component\n\t   * @return {?string}\n\t   */\n\t  createMarkupForStyles: function (styles, component) {\n\t    var serialized = '';\n\t    for (var styleName in styles) {\n\t      if (!styles.hasOwnProperty(styleName)) {\n\t        continue;\n\t      }\n\t      var styleValue = styles[styleName];\n\t      if (false) {\n\t        warnValidStyle(styleName, styleValue, component);\n\t      }\n\t      if (styleValue != null) {\n\t        serialized += processStyleName(styleName) + ':';\n\t        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';\n\t      }\n\t    }\n\t    return serialized || null;\n\t  },\n\t\n\t  /**\n\t   * Sets the value for multiple styles on a node.  If a value is specified as\n\t   * '' (empty string), the corresponding style property will be unset.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {object} styles\n\t   * @param {ReactDOMComponent} component\n\t   */\n\t  setValueForStyles: function (node, styles, component) {\n\t    if (false) {\n\t      ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);\n\t    }\n\t\n\t    var style = node.style;\n\t    for (var styleName in styles) {\n\t      if (!styles.hasOwnProperty(styleName)) {\n\t        continue;\n\t      }\n\t      if (false) {\n\t        warnValidStyle(styleName, styles[styleName], component);\n\t      }\n\t      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);\n\t      if (styleName === 'float' || styleName === 'cssFloat') {\n\t        styleName = styleFloatAccessor;\n\t      }\n\t      if (styleValue) {\n\t        style[styleName] = styleValue;\n\t      } else {\n\t        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];\n\t        if (expansion) {\n\t          // Shorthand property that IE8 won't like unsetting, so unset each\n\t          // component to placate it\n\t          for (var individualStyleName in expansion) {\n\t            style[individualStyleName] = '';\n\t          }\n\t        } else {\n\t          style[styleName] = '';\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = CSSPropertyOperations;\n\n/***/ },\n/* 114 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ChangeEventPlugin\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventConstants = __webpack_require__(11);\n\tvar EventPluginHub = __webpack_require__(20);\n\tvar EventPropagators = __webpack_require__(21);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactUpdates = __webpack_require__(10);\n\tvar SyntheticEvent = __webpack_require__(12);\n\t\n\tvar getEventTarget = __webpack_require__(51);\n\tvar isEventSupported = __webpack_require__(52);\n\tvar isTextInputElement = __webpack_require__(84);\n\tvar keyOf = __webpack_require__(13);\n\t\n\tvar topLevelTypes = EventConstants.topLevelTypes;\n\t\n\tvar eventTypes = {\n\t  change: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onChange: null }),\n\t      captured: keyOf({ onChangeCapture: null })\n\t    },\n\t    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]\n\t  }\n\t};\n\t\n\t/**\n\t * For IE shims\n\t */\n\tvar activeElement = null;\n\tvar activeElementInst = null;\n\tvar activeElementValue = null;\n\tvar activeElementValueProp = null;\n\t\n\t/**\n\t * SECTION: handle `change` event\n\t */\n\tfunction shouldUseChangeEvent(elem) {\n\t  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n\t  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\n\t}\n\t\n\tvar doesChangeEventBubble = false;\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  // See `handleChange` comment below\n\t  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);\n\t}\n\t\n\tfunction manualDispatchChangeEvent(nativeEvent) {\n\t  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));\n\t  EventPropagators.accumulateTwoPhaseDispatches(event);\n\t\n\t  // If change and propertychange bubbled, we'd just bind to it like all the\n\t  // other events and have it go through ReactBrowserEventEmitter. Since it\n\t  // doesn't, we manually listen for the events and so we have to enqueue and\n\t  // process the abstract event manually.\n\t  //\n\t  // Batching is necessary here in order to ensure that all event handlers run\n\t  // before the next rerender (including event handlers attached to ancestor\n\t  // elements instead of directly on the input). Without this, controlled\n\t  // components don't work properly in conjunction with event bubbling because\n\t  // the component is rerendered and the value reverted before all the event\n\t  // handlers can run. See https://github.com/facebook/react/issues/708.\n\t  ReactUpdates.batchedUpdates(runEventInBatch, event);\n\t}\n\t\n\tfunction runEventInBatch(event) {\n\t  EventPluginHub.enqueueEvents(event);\n\t  EventPluginHub.processEventQueue(false);\n\t}\n\t\n\tfunction startWatchingForChangeEventIE8(target, targetInst) {\n\t  activeElement = target;\n\t  activeElementInst = targetInst;\n\t  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n\t}\n\t\n\tfunction stopWatchingForChangeEventIE8() {\n\t  if (!activeElement) {\n\t    return;\n\t  }\n\t  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n\t  activeElement = null;\n\t  activeElementInst = null;\n\t}\n\t\n\tfunction getTargetInstForChangeEvent(topLevelType, targetInst) {\n\t  if (topLevelType === topLevelTypes.topChange) {\n\t    return targetInst;\n\t  }\n\t}\n\tfunction handleEventsForChangeEventIE8(topLevelType, target, targetInst) {\n\t  if (topLevelType === topLevelTypes.topFocus) {\n\t    // stopWatching() should be a noop here but we call it just in case we\n\t    // missed a blur event somehow.\n\t    stopWatchingForChangeEventIE8();\n\t    startWatchingForChangeEventIE8(target, targetInst);\n\t  } else if (topLevelType === topLevelTypes.topBlur) {\n\t    stopWatchingForChangeEventIE8();\n\t  }\n\t}\n\t\n\t/**\n\t * SECTION: handle `input` event\n\t */\n\tvar isInputEventSupported = false;\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  // IE9 claims to support the input event but fails to trigger it when\n\t  // deleting text, so we ignore its input events.\n\t  // IE10+ fire input events to often, such when a placeholder\n\t  // changes or when an input with a placeholder is focused.\n\t  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);\n\t}\n\t\n\t/**\n\t * (For IE <=11) Replacement getter/setter for the `value` property that gets\n\t * set on the active element.\n\t */\n\tvar newValueProp = {\n\t  get: function () {\n\t    return activeElementValueProp.get.call(this);\n\t  },\n\t  set: function (val) {\n\t    // Cast to a string so we can do equality checks.\n\t    activeElementValue = '' + val;\n\t    activeElementValueProp.set.call(this, val);\n\t  }\n\t};\n\t\n\t/**\n\t * (For IE <=11) Starts tracking propertychange events on the passed-in element\n\t * and override the value property so that we can distinguish user events from\n\t * value changes in JS.\n\t */\n\tfunction startWatchingForValueChange(target, targetInst) {\n\t  activeElement = target;\n\t  activeElementInst = targetInst;\n\t  activeElementValue = target.value;\n\t  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');\n\t\n\t  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only\n\t  // on DOM elements\n\t  Object.defineProperty(activeElement, 'value', newValueProp);\n\t  if (activeElement.attachEvent) {\n\t    activeElement.attachEvent('onpropertychange', handlePropertyChange);\n\t  } else {\n\t    activeElement.addEventListener('propertychange', handlePropertyChange, false);\n\t  }\n\t}\n\t\n\t/**\n\t * (For IE <=11) Removes the event listeners from the currently-tracked element,\n\t * if any exists.\n\t */\n\tfunction stopWatchingForValueChange() {\n\t  if (!activeElement) {\n\t    return;\n\t  }\n\t\n\t  // delete restores the original property definition\n\t  delete activeElement.value;\n\t\n\t  if (activeElement.detachEvent) {\n\t    activeElement.detachEvent('onpropertychange', handlePropertyChange);\n\t  } else {\n\t    activeElement.removeEventListener('propertychange', handlePropertyChange, false);\n\t  }\n\t\n\t  activeElement = null;\n\t  activeElementInst = null;\n\t  activeElementValue = null;\n\t  activeElementValueProp = null;\n\t}\n\t\n\t/**\n\t * (For IE <=11) Handles a propertychange event, sending a `change` event if\n\t * the value of the active element has changed.\n\t */\n\tfunction handlePropertyChange(nativeEvent) {\n\t  if (nativeEvent.propertyName !== 'value') {\n\t    return;\n\t  }\n\t  var value = nativeEvent.srcElement.value;\n\t  if (value === activeElementValue) {\n\t    return;\n\t  }\n\t  activeElementValue = value;\n\t\n\t  manualDispatchChangeEvent(nativeEvent);\n\t}\n\t\n\t/**\n\t * If a `change` event should be fired, returns the target's ID.\n\t */\n\tfunction getTargetInstForInputEvent(topLevelType, targetInst) {\n\t  if (topLevelType === topLevelTypes.topInput) {\n\t    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\n\t    // what we want so fall through here and trigger an abstract event\n\t    return targetInst;\n\t  }\n\t}\n\t\n\tfunction handleEventsForInputEventIE(topLevelType, target, targetInst) {\n\t  if (topLevelType === topLevelTypes.topFocus) {\n\t    // In IE8, we can capture almost all .value changes by adding a\n\t    // propertychange handler and looking for events with propertyName\n\t    // equal to 'value'\n\t    // In IE9-11, propertychange fires for most input events but is buggy and\n\t    // doesn't fire when text is deleted, but conveniently, selectionchange\n\t    // appears to fire in all of the remaining cases so we catch those and\n\t    // forward the event if the value has changed\n\t    // In either case, we don't want to call the event handler if the value\n\t    // is changed from JS so we redefine a setter for `.value` that updates\n\t    // our activeElementValue variable, allowing us to ignore those changes\n\t    //\n\t    // stopWatching() should be a noop here but we call it just in case we\n\t    // missed a blur event somehow.\n\t    stopWatchingForValueChange();\n\t    startWatchingForValueChange(target, targetInst);\n\t  } else if (topLevelType === topLevelTypes.topBlur) {\n\t    stopWatchingForValueChange();\n\t  }\n\t}\n\t\n\t// For IE8 and IE9.\n\tfunction getTargetInstForInputEventIE(topLevelType, targetInst) {\n\t  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {\n\t    // On the selectionchange event, the target is just document which isn't\n\t    // helpful for us so just check activeElement instead.\n\t    //\n\t    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n\t    // propertychange on the first input event after setting `value` from a\n\t    // script and fires only keydown, keypress, keyup. Catching keyup usually\n\t    // gets it and catching keydown lets us fire an event for the first\n\t    // keystroke if user does a key repeat (it'll be a little delayed: right\n\t    // before the second keystroke). Other input methods (e.g., paste) seem to\n\t    // fire selectionchange normally.\n\t    if (activeElement && activeElement.value !== activeElementValue) {\n\t      activeElementValue = activeElement.value;\n\t      return activeElementInst;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * SECTION: handle `click` event\n\t */\n\tfunction shouldUseClickEvent(elem) {\n\t  // Use the `click` event to detect changes to checkbox and radio inputs.\n\t  // This approach works across all browsers, whereas `change` does not fire\n\t  // until `blur` in IE8.\n\t  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\n\t}\n\t\n\tfunction getTargetInstForClickEvent(topLevelType, targetInst) {\n\t  if (topLevelType === topLevelTypes.topClick) {\n\t    return targetInst;\n\t  }\n\t}\n\t\n\t/**\n\t * This plugin creates an `onChange` event that normalizes change events\n\t * across form elements. This event fires at a time when it's possible to\n\t * change the element's value without seeing a flicker.\n\t *\n\t * Supported elements are:\n\t * - input (see `isTextInputElement`)\n\t * - textarea\n\t * - select\n\t */\n\tvar ChangeEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\t\n\t    var getTargetInstFunc, handleEventFunc;\n\t    if (shouldUseChangeEvent(targetNode)) {\n\t      if (doesChangeEventBubble) {\n\t        getTargetInstFunc = getTargetInstForChangeEvent;\n\t      } else {\n\t        handleEventFunc = handleEventsForChangeEventIE8;\n\t      }\n\t    } else if (isTextInputElement(targetNode)) {\n\t      if (isInputEventSupported) {\n\t        getTargetInstFunc = getTargetInstForInputEvent;\n\t      } else {\n\t        getTargetInstFunc = getTargetInstForInputEventIE;\n\t        handleEventFunc = handleEventsForInputEventIE;\n\t      }\n\t    } else if (shouldUseClickEvent(targetNode)) {\n\t      getTargetInstFunc = getTargetInstForClickEvent;\n\t    }\n\t\n\t    if (getTargetInstFunc) {\n\t      var inst = getTargetInstFunc(topLevelType, targetInst);\n\t      if (inst) {\n\t        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);\n\t        event.type = 'change';\n\t        EventPropagators.accumulateTwoPhaseDispatches(event);\n\t        return event;\n\t      }\n\t    }\n\t\n\t    if (handleEventFunc) {\n\t      handleEventFunc(topLevelType, targetNode, targetInst);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ChangeEventPlugin;\n\n/***/ },\n/* 115 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule Danger\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar DOMLazyTree = __webpack_require__(16);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar createNodesFromMarkup = __webpack_require__(91);\n\tvar emptyFunction = __webpack_require__(7);\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar Danger = {\n\t\n\t  /**\n\t   * Replaces a node with a string of markup at its current position within its\n\t   * parent. The markup must render into a single root node.\n\t   *\n\t   * @param {DOMElement} oldChild Child node to replace.\n\t   * @param {string} markup Markup to render in place of the child node.\n\t   * @internal\n\t   */\n\t  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {\n\t    !ExecutionEnvironment.canUseDOM ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;\n\t    !markup ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;\n\t    !(oldChild.nodeName !== 'HTML') ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;\n\t\n\t    if (typeof markup === 'string') {\n\t      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];\n\t      oldChild.parentNode.replaceChild(newChild, oldChild);\n\t    } else {\n\t      DOMLazyTree.replaceChildWithTree(oldChild, markup);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = Danger;\n\n/***/ },\n/* 116 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule DefaultEventPluginOrder\n\t */\n\t\n\t'use strict';\n\t\n\tvar keyOf = __webpack_require__(13);\n\t\n\t/**\n\t * Module that is injectable into `EventPluginHub`, that specifies a\n\t * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n\t * plugins, without having to package every one of them. This is better than\n\t * having plugins be ordered in the same order that they are injected because\n\t * that ordering would be influenced by the packaging order.\n\t * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n\t * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n\t */\n\tvar DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];\n\t\n\tmodule.exports = DefaultEventPluginOrder;\n\n/***/ },\n/* 117 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule EnterLeaveEventPlugin\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventConstants = __webpack_require__(11);\n\tvar EventPropagators = __webpack_require__(21);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar SyntheticMouseEvent = __webpack_require__(28);\n\t\n\tvar keyOf = __webpack_require__(13);\n\t\n\tvar topLevelTypes = EventConstants.topLevelTypes;\n\t\n\tvar eventTypes = {\n\t  mouseEnter: {\n\t    registrationName: keyOf({ onMouseEnter: null }),\n\t    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n\t  },\n\t  mouseLeave: {\n\t    registrationName: keyOf({ onMouseLeave: null }),\n\t    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n\t  }\n\t};\n\t\n\tvar EnterLeaveEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  /**\n\t   * For almost every interaction we care about, there will be both a top-level\n\t   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n\t   * we do not extract duplicate events. However, moving the mouse into the\n\t   * browser from outside will not fire a `mouseout` event. In this case, we use\n\t   * the `mouseover` top-level event.\n\t   */\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n\t      return null;\n\t    }\n\t    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {\n\t      // Must not be a mouse in or mouse out - ignoring.\n\t      return null;\n\t    }\n\t\n\t    var win;\n\t    if (nativeEventTarget.window === nativeEventTarget) {\n\t      // `nativeEventTarget` is probably a window object.\n\t      win = nativeEventTarget;\n\t    } else {\n\t      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n\t      var doc = nativeEventTarget.ownerDocument;\n\t      if (doc) {\n\t        win = doc.defaultView || doc.parentWindow;\n\t      } else {\n\t        win = window;\n\t      }\n\t    }\n\t\n\t    var from;\n\t    var to;\n\t    if (topLevelType === topLevelTypes.topMouseOut) {\n\t      from = targetInst;\n\t      var related = nativeEvent.relatedTarget || nativeEvent.toElement;\n\t      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;\n\t    } else {\n\t      // Moving to a node from outside the window.\n\t      from = null;\n\t      to = targetInst;\n\t    }\n\t\n\t    if (from === to) {\n\t      // Nothing pertains to our managed components.\n\t      return null;\n\t    }\n\t\n\t    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);\n\t    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);\n\t\n\t    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);\n\t    leave.type = 'mouseleave';\n\t    leave.target = fromNode;\n\t    leave.relatedTarget = toNode;\n\t\n\t    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);\n\t    enter.type = 'mouseenter';\n\t    enter.target = toNode;\n\t    enter.relatedTarget = fromNode;\n\t\n\t    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);\n\t\n\t    return [leave, enter];\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = EnterLeaveEventPlugin;\n\n/***/ },\n/* 118 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule FallbackCompositionState\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar PooledClass = __webpack_require__(14);\n\t\n\tvar getTextContentAccessor = __webpack_require__(82);\n\t\n\t/**\n\t * This helper class stores information about text content of a target node,\n\t * allowing comparison of content before and after a given event.\n\t *\n\t * Identify the node where selection currently begins, then observe\n\t * both its text content and its current position in the DOM. Since the\n\t * browser may natively replace the target node during composition, we can\n\t * use its position to find its replacement.\n\t *\n\t * @param {DOMEventTarget} root\n\t */\n\tfunction FallbackCompositionState(root) {\n\t  this._root = root;\n\t  this._startText = this.getText();\n\t  this._fallbackText = null;\n\t}\n\t\n\t_assign(FallbackCompositionState.prototype, {\n\t  destructor: function () {\n\t    this._root = null;\n\t    this._startText = null;\n\t    this._fallbackText = null;\n\t  },\n\t\n\t  /**\n\t   * Get current text of input.\n\t   *\n\t   * @return {string}\n\t   */\n\t  getText: function () {\n\t    if ('value' in this._root) {\n\t      return this._root.value;\n\t    }\n\t    return this._root[getTextContentAccessor()];\n\t  },\n\t\n\t  /**\n\t   * Determine the differing substring between the initially stored\n\t   * text content and the current content.\n\t   *\n\t   * @return {string}\n\t   */\n\t  getData: function () {\n\t    if (this._fallbackText) {\n\t      return this._fallbackText;\n\t    }\n\t\n\t    var start;\n\t    var startValue = this._startText;\n\t    var startLength = startValue.length;\n\t    var end;\n\t    var endValue = this.getText();\n\t    var endLength = endValue.length;\n\t\n\t    for (start = 0; start < startLength; start++) {\n\t      if (startValue[start] !== endValue[start]) {\n\t        break;\n\t      }\n\t    }\n\t\n\t    var minEnd = startLength - start;\n\t    for (end = 1; end <= minEnd; end++) {\n\t      if (startValue[startLength - end] !== endValue[endLength - end]) {\n\t        break;\n\t      }\n\t    }\n\t\n\t    var sliceTail = end > 1 ? 1 - end : undefined;\n\t    this._fallbackText = endValue.slice(start, sliceTail);\n\t    return this._fallbackText;\n\t  }\n\t});\n\t\n\tPooledClass.addPoolingTo(FallbackCompositionState);\n\t\n\tmodule.exports = FallbackCompositionState;\n\n/***/ },\n/* 119 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule HTMLDOMPropertyConfig\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMProperty = __webpack_require__(17);\n\t\n\tvar MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\n\tvar HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\n\tvar HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;\n\tvar HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\n\tvar HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;\n\t\n\tvar HTMLDOMPropertyConfig = {\n\t  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),\n\t  Properties: {\n\t    /**\n\t     * Standard Properties\n\t     */\n\t    accept: 0,\n\t    acceptCharset: 0,\n\t    accessKey: 0,\n\t    action: 0,\n\t    allowFullScreen: HAS_BOOLEAN_VALUE,\n\t    allowTransparency: 0,\n\t    alt: 0,\n\t    // specifies target context for links with `preload` type\n\t    as: 0,\n\t    async: HAS_BOOLEAN_VALUE,\n\t    autoComplete: 0,\n\t    // autoFocus is polyfilled/normalized by AutoFocusUtils\n\t    // autoFocus: HAS_BOOLEAN_VALUE,\n\t    autoPlay: HAS_BOOLEAN_VALUE,\n\t    capture: HAS_BOOLEAN_VALUE,\n\t    cellPadding: 0,\n\t    cellSpacing: 0,\n\t    charSet: 0,\n\t    challenge: 0,\n\t    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    cite: 0,\n\t    classID: 0,\n\t    className: 0,\n\t    cols: HAS_POSITIVE_NUMERIC_VALUE,\n\t    colSpan: 0,\n\t    content: 0,\n\t    contentEditable: 0,\n\t    contextMenu: 0,\n\t    controls: HAS_BOOLEAN_VALUE,\n\t    coords: 0,\n\t    crossOrigin: 0,\n\t    data: 0, // For `<object />` acts as `src`.\n\t    dateTime: 0,\n\t    'default': HAS_BOOLEAN_VALUE,\n\t    defer: HAS_BOOLEAN_VALUE,\n\t    dir: 0,\n\t    disabled: HAS_BOOLEAN_VALUE,\n\t    download: HAS_OVERLOADED_BOOLEAN_VALUE,\n\t    draggable: 0,\n\t    encType: 0,\n\t    form: 0,\n\t    formAction: 0,\n\t    formEncType: 0,\n\t    formMethod: 0,\n\t    formNoValidate: HAS_BOOLEAN_VALUE,\n\t    formTarget: 0,\n\t    frameBorder: 0,\n\t    headers: 0,\n\t    height: 0,\n\t    hidden: HAS_BOOLEAN_VALUE,\n\t    high: 0,\n\t    href: 0,\n\t    hrefLang: 0,\n\t    htmlFor: 0,\n\t    httpEquiv: 0,\n\t    icon: 0,\n\t    id: 0,\n\t    inputMode: 0,\n\t    integrity: 0,\n\t    is: 0,\n\t    keyParams: 0,\n\t    keyType: 0,\n\t    kind: 0,\n\t    label: 0,\n\t    lang: 0,\n\t    list: 0,\n\t    loop: HAS_BOOLEAN_VALUE,\n\t    low: 0,\n\t    manifest: 0,\n\t    marginHeight: 0,\n\t    marginWidth: 0,\n\t    max: 0,\n\t    maxLength: 0,\n\t    media: 0,\n\t    mediaGroup: 0,\n\t    method: 0,\n\t    min: 0,\n\t    minLength: 0,\n\t    // Caution; `option.selected` is not updated if `select.multiple` is\n\t    // disabled with `removeAttribute`.\n\t    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    name: 0,\n\t    nonce: 0,\n\t    noValidate: HAS_BOOLEAN_VALUE,\n\t    open: HAS_BOOLEAN_VALUE,\n\t    optimum: 0,\n\t    pattern: 0,\n\t    placeholder: 0,\n\t    playsInline: HAS_BOOLEAN_VALUE,\n\t    poster: 0,\n\t    preload: 0,\n\t    profile: 0,\n\t    radioGroup: 0,\n\t    readOnly: HAS_BOOLEAN_VALUE,\n\t    referrerPolicy: 0,\n\t    rel: 0,\n\t    required: HAS_BOOLEAN_VALUE,\n\t    reversed: HAS_BOOLEAN_VALUE,\n\t    role: 0,\n\t    rows: HAS_POSITIVE_NUMERIC_VALUE,\n\t    rowSpan: HAS_NUMERIC_VALUE,\n\t    sandbox: 0,\n\t    scope: 0,\n\t    scoped: HAS_BOOLEAN_VALUE,\n\t    scrolling: 0,\n\t    seamless: HAS_BOOLEAN_VALUE,\n\t    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    shape: 0,\n\t    size: HAS_POSITIVE_NUMERIC_VALUE,\n\t    sizes: 0,\n\t    span: HAS_POSITIVE_NUMERIC_VALUE,\n\t    spellCheck: 0,\n\t    src: 0,\n\t    srcDoc: 0,\n\t    srcLang: 0,\n\t    srcSet: 0,\n\t    start: HAS_NUMERIC_VALUE,\n\t    step: 0,\n\t    style: 0,\n\t    summary: 0,\n\t    tabIndex: 0,\n\t    target: 0,\n\t    title: 0,\n\t    // Setting .type throws on non-<input> tags\n\t    type: 0,\n\t    useMap: 0,\n\t    value: 0,\n\t    width: 0,\n\t    wmode: 0,\n\t    wrap: 0,\n\t\n\t    /**\n\t     * RDFa Properties\n\t     */\n\t    about: 0,\n\t    datatype: 0,\n\t    inlist: 0,\n\t    prefix: 0,\n\t    // property is also supported for OpenGraph in meta tags.\n\t    property: 0,\n\t    resource: 0,\n\t    'typeof': 0,\n\t    vocab: 0,\n\t\n\t    /**\n\t     * Non-standard Properties\n\t     */\n\t    // autoCapitalize and autoCorrect are supported in Mobile Safari for\n\t    // keyboard hints.\n\t    autoCapitalize: 0,\n\t    autoCorrect: 0,\n\t    // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n\t    autoSave: 0,\n\t    // color is for Safari mask-icon link\n\t    color: 0,\n\t    // itemProp, itemScope, itemType are for\n\t    // Microdata support. See http://schema.org/docs/gs.html\n\t    itemProp: 0,\n\t    itemScope: HAS_BOOLEAN_VALUE,\n\t    itemType: 0,\n\t    // itemID and itemRef are for Microdata support as well but\n\t    // only specified in the WHATWG spec document. See\n\t    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n\t    itemID: 0,\n\t    itemRef: 0,\n\t    // results show looking glass icon and recent searches on input\n\t    // search fields in WebKit/Blink\n\t    results: 0,\n\t    // IE-only attribute that specifies security restrictions on an iframe\n\t    // as an alternative to the sandbox attribute on IE<10\n\t    security: 0,\n\t    // IE-only attribute that controls focus behavior\n\t    unselectable: 0\n\t  },\n\t  DOMAttributeNames: {\n\t    acceptCharset: 'accept-charset',\n\t    className: 'class',\n\t    htmlFor: 'for',\n\t    httpEquiv: 'http-equiv'\n\t  },\n\t  DOMPropertyNames: {}\n\t};\n\t\n\tmodule.exports = HTMLDOMPropertyConfig;\n\n/***/ },\n/* 120 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule React\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar ReactChildren = __webpack_require__(63);\n\tvar ReactComponent = __webpack_require__(39);\n\tvar ReactPureComponent = __webpack_require__(146);\n\tvar ReactClass = __webpack_require__(64);\n\tvar ReactDOMFactories = __webpack_require__(129);\n\tvar ReactElement = __webpack_require__(9);\n\tvar ReactPropTypes = __webpack_require__(74);\n\tvar ReactVersion = __webpack_require__(75);\n\t\n\tvar onlyChild = __webpack_require__(172);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar createElement = ReactElement.createElement;\n\tvar createFactory = ReactElement.createFactory;\n\tvar cloneElement = ReactElement.cloneElement;\n\t\n\tif (false) {\n\t  var ReactElementValidator = require('./ReactElementValidator');\n\t  createElement = ReactElementValidator.createElement;\n\t  createFactory = ReactElementValidator.createFactory;\n\t  cloneElement = ReactElementValidator.cloneElement;\n\t}\n\t\n\tvar __spread = _assign;\n\t\n\tif (false) {\n\t  var warned = false;\n\t  __spread = function () {\n\t    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;\n\t    warned = true;\n\t    return _assign.apply(null, arguments);\n\t  };\n\t}\n\t\n\tvar React = {\n\t\n\t  // Modern\n\t\n\t  Children: {\n\t    map: ReactChildren.map,\n\t    forEach: ReactChildren.forEach,\n\t    count: ReactChildren.count,\n\t    toArray: ReactChildren.toArray,\n\t    only: onlyChild\n\t  },\n\t\n\t  Component: ReactComponent,\n\t  PureComponent: ReactPureComponent,\n\t\n\t  createElement: createElement,\n\t  cloneElement: cloneElement,\n\t  isValidElement: ReactElement.isValidElement,\n\t\n\t  // Classic\n\t\n\t  PropTypes: ReactPropTypes,\n\t  createClass: ReactClass.createClass,\n\t  createFactory: createFactory,\n\t  createMixin: function (mixin) {\n\t    // Currently a noop. Will be used to validate and trace mixins.\n\t    return mixin;\n\t  },\n\t\n\t  // This looks DOM specific but these are actually isomorphic helpers\n\t  // since they are just generating DOM strings.\n\t  DOM: ReactDOMFactories,\n\t\n\t  version: ReactVersion,\n\t\n\t  // Deprecated hook for JSX spread, don't use this for anything.\n\t  __spread: __spread\n\t};\n\t\n\tmodule.exports = React;\n\n/***/ },\n/* 121 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactChildReconciler\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactReconciler = __webpack_require__(18);\n\t\n\tvar instantiateReactComponent = __webpack_require__(83);\n\tvar KeyEscapeUtils = __webpack_require__(37);\n\tvar shouldUpdateReactComponent = __webpack_require__(53);\n\tvar traverseAllChildren = __webpack_require__(54);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar ReactComponentTreeHook;\n\t\n\tif (typeof process !== 'undefined' && ({\"NODE_ENV\":\"production\",\"PUBLIC_URL\":\"/tinysynth\"}) && (\"production\") === 'test') {\n\t  // Temporary hack.\n\t  // Inline requires don't work well with Jest:\n\t  // https://github.com/facebook/react/issues/7240\n\t  // Remove the inline requires when we don't need them anymore:\n\t  // https://github.com/facebook/react/pull/7178\n\t  ReactComponentTreeHook = __webpack_require__(41);\n\t}\n\t\n\tfunction instantiateChild(childInstances, child, name, selfDebugID) {\n\t  // We found a component instance.\n\t  var keyUnique = childInstances[name] === undefined;\n\t  if (false) {\n\t    if (!ReactComponentTreeHook) {\n\t      ReactComponentTreeHook = require('./ReactComponentTreeHook');\n\t    }\n\t    if (!keyUnique) {\n\t      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n\t    }\n\t  }\n\t  if (child != null && keyUnique) {\n\t    childInstances[name] = instantiateReactComponent(child, true);\n\t  }\n\t}\n\t\n\t/**\n\t * ReactChildReconciler provides helpers for initializing or updating a set of\n\t * children. Its output is suitable for passing it onto ReactMultiChild which\n\t * does diffed reordering and insertion.\n\t */\n\tvar ReactChildReconciler = {\n\t  /**\n\t   * Generates a \"mount image\" for each of the supplied children. In the case\n\t   * of `ReactDOMComponent`, a mount image is a string of markup.\n\t   *\n\t   * @param {?object} nestedChildNodes Nested child maps.\n\t   * @return {?object} A set of child instances.\n\t   * @internal\n\t   */\n\t  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots\n\t  ) {\n\t    if (nestedChildNodes == null) {\n\t      return null;\n\t    }\n\t    var childInstances = {};\n\t\n\t    if (false) {\n\t      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {\n\t        return instantiateChild(childInsts, child, name, selfDebugID);\n\t      }, childInstances);\n\t    } else {\n\t      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);\n\t    }\n\t    return childInstances;\n\t  },\n\t\n\t  /**\n\t   * Updates the rendered children and returns a new set of children.\n\t   *\n\t   * @param {?object} prevChildren Previously initialized set of children.\n\t   * @param {?object} nextChildren Flat child element maps.\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {object} context\n\t   * @return {?object} A new set of child instances.\n\t   * @internal\n\t   */\n\t  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots\n\t  ) {\n\t    // We currently don't have a way to track moves here but if we use iterators\n\t    // instead of for..in we can zip the iterators and check if an item has\n\t    // moved.\n\t    // TODO: If nothing has changed, return the prevChildren object so that we\n\t    // can quickly bailout if nothing has changed.\n\t    if (!nextChildren && !prevChildren) {\n\t      return;\n\t    }\n\t    var name;\n\t    var prevChild;\n\t    for (name in nextChildren) {\n\t      if (!nextChildren.hasOwnProperty(name)) {\n\t        continue;\n\t      }\n\t      prevChild = prevChildren && prevChildren[name];\n\t      var prevElement = prevChild && prevChild._currentElement;\n\t      var nextElement = nextChildren[name];\n\t      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {\n\t        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);\n\t        nextChildren[name] = prevChild;\n\t      } else {\n\t        if (prevChild) {\n\t          removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n\t          ReactReconciler.unmountComponent(prevChild, false);\n\t        }\n\t        // The child must be instantiated before it's mounted.\n\t        var nextChildInstance = instantiateReactComponent(nextElement, true);\n\t        nextChildren[name] = nextChildInstance;\n\t        // Creating mount image now ensures refs are resolved in right order\n\t        // (see https://github.com/facebook/react/pull/7101 for explanation).\n\t        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);\n\t        mountImages.push(nextChildMountImage);\n\t      }\n\t    }\n\t    // Unmount children that are no longer present.\n\t    for (name in prevChildren) {\n\t      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\n\t        prevChild = prevChildren[name];\n\t        removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n\t        ReactReconciler.unmountComponent(prevChild, false);\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unmounts all rendered children. This should be used to clean up children\n\t   * when this component is unmounted.\n\t   *\n\t   * @param {?object} renderedChildren Previously initialized set of children.\n\t   * @internal\n\t   */\n\t  unmountChildren: function (renderedChildren, safely) {\n\t    for (var name in renderedChildren) {\n\t      if (renderedChildren.hasOwnProperty(name)) {\n\t        var renderedChild = renderedChildren[name];\n\t        ReactReconciler.unmountComponent(renderedChild, safely);\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactChildReconciler;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))\n\n/***/ },\n/* 122 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactComponentBrowserEnvironment\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMChildrenOperations = __webpack_require__(33);\n\tvar ReactDOMIDOperations = __webpack_require__(131);\n\t\n\t/**\n\t * Abstracts away all functionality of the reconciler that requires knowledge of\n\t * the browser context. TODO: These callers should be refactored to avoid the\n\t * need for this injection.\n\t */\n\tvar ReactComponentBrowserEnvironment = {\n\t\n\t  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n\t\n\t  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup\n\t\n\t};\n\t\n\tmodule.exports = ReactComponentBrowserEnvironment;\n\n/***/ },\n/* 123 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactCompositeComponent\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar ReactComponentEnvironment = __webpack_require__(40);\n\tvar ReactCurrentOwner = __webpack_require__(15);\n\tvar ReactElement = __webpack_require__(9);\n\tvar ReactErrorUtils = __webpack_require__(42);\n\tvar ReactInstanceMap = __webpack_require__(22);\n\tvar ReactInstrumentation = __webpack_require__(8);\n\tvar ReactNodeTypes = __webpack_require__(73);\n\tvar ReactPropTypeLocations = __webpack_require__(45);\n\tvar ReactReconciler = __webpack_require__(18);\n\t\n\tvar checkReactTypeSpec = __webpack_require__(165);\n\tvar emptyObject = __webpack_require__(19);\n\tvar invariant = __webpack_require__(1);\n\tvar shallowEqual = __webpack_require__(31);\n\tvar shouldUpdateReactComponent = __webpack_require__(53);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar CompositeTypes = {\n\t  ImpureClass: 0,\n\t  PureClass: 1,\n\t  StatelessFunctional: 2\n\t};\n\t\n\tfunction StatelessComponent(Component) {}\n\tStatelessComponent.prototype.render = function () {\n\t  var Component = ReactInstanceMap.get(this)._currentElement.type;\n\t  var element = Component(this.props, this.context, this.updater);\n\t  warnIfInvalidElement(Component, element);\n\t  return element;\n\t};\n\t\n\tfunction warnIfInvalidElement(Component, element) {\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;\n\t    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;\n\t  }\n\t}\n\t\n\tfunction shouldConstruct(Component) {\n\t  return !!(Component.prototype && Component.prototype.isReactComponent);\n\t}\n\t\n\tfunction isPureComponent(Component) {\n\t  return !!(Component.prototype && Component.prototype.isPureReactComponent);\n\t}\n\t\n\t// Separated into a function to contain deoptimizations caused by try/finally.\n\tfunction measureLifeCyclePerf(fn, debugID, timerType) {\n\t  if (debugID === 0) {\n\t    // Top-level wrappers (see ReactMount) and empty components (see\n\t    // ReactDOMEmptyComponent) are invisible to hooks and devtools.\n\t    // Both are implementation details that should go away in the future.\n\t    return fn();\n\t  }\n\t\n\t  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);\n\t  try {\n\t    return fn();\n\t  } finally {\n\t    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);\n\t  }\n\t}\n\t\n\t/**\n\t * ------------------ The Life-Cycle of a Composite Component ------------------\n\t *\n\t * - constructor: Initialization of state. The instance is now retained.\n\t *   - componentWillMount\n\t *   - render\n\t *   - [children's constructors]\n\t *     - [children's componentWillMount and render]\n\t *     - [children's componentDidMount]\n\t *     - componentDidMount\n\t *\n\t *       Update Phases:\n\t *       - componentWillReceiveProps (only called if parent updated)\n\t *       - shouldComponentUpdate\n\t *         - componentWillUpdate\n\t *           - render\n\t *           - [children's constructors or receive props phases]\n\t *         - componentDidUpdate\n\t *\n\t *     - componentWillUnmount\n\t *     - [children's componentWillUnmount]\n\t *   - [children destroyed]\n\t * - (destroyed): The instance is now blank, released by React and ready for GC.\n\t *\n\t * -----------------------------------------------------------------------------\n\t */\n\t\n\t/**\n\t * An incrementing ID assigned to each component when it is mounted. This is\n\t * used to enforce the order in which `ReactUpdates` updates dirty components.\n\t *\n\t * @private\n\t */\n\tvar nextMountID = 1;\n\t\n\t/**\n\t * @lends {ReactCompositeComponent.prototype}\n\t */\n\tvar ReactCompositeComponentMixin = {\n\t\n\t  /**\n\t   * Base constructor for all composite component.\n\t   *\n\t   * @param {ReactElement} element\n\t   * @final\n\t   * @internal\n\t   */\n\t  construct: function (element) {\n\t    this._currentElement = element;\n\t    this._rootNodeID = 0;\n\t    this._compositeType = null;\n\t    this._instance = null;\n\t    this._hostParent = null;\n\t    this._hostContainerInfo = null;\n\t\n\t    // See ReactUpdateQueue\n\t    this._updateBatchNumber = null;\n\t    this._pendingElement = null;\n\t    this._pendingStateQueue = null;\n\t    this._pendingReplaceState = false;\n\t    this._pendingForceUpdate = false;\n\t\n\t    this._renderedNodeType = null;\n\t    this._renderedComponent = null;\n\t    this._context = null;\n\t    this._mountOrder = 0;\n\t    this._topLevelWrapper = null;\n\t\n\t    // See ReactUpdates and ReactUpdateQueue.\n\t    this._pendingCallbacks = null;\n\t\n\t    // ComponentWillUnmount shall only be called once\n\t    this._calledComponentWillUnmount = false;\n\t\n\t    if (false) {\n\t      this._warnedAboutRefsInRender = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Initializes the component, renders markup, and registers event listeners.\n\t   *\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {?object} hostParent\n\t   * @param {?object} hostContainerInfo\n\t   * @param {?object} context\n\t   * @return {?string} Rendered markup to be inserted into the DOM.\n\t   * @final\n\t   * @internal\n\t   */\n\t  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n\t    var _this = this;\n\t\n\t    this._context = context;\n\t    this._mountOrder = nextMountID++;\n\t    this._hostParent = hostParent;\n\t    this._hostContainerInfo = hostContainerInfo;\n\t\n\t    var publicProps = this._currentElement.props;\n\t    var publicContext = this._processContext(context);\n\t\n\t    var Component = this._currentElement.type;\n\t\n\t    var updateQueue = transaction.getUpdateQueue();\n\t\n\t    // Initialize the public class\n\t    var doConstruct = shouldConstruct(Component);\n\t    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);\n\t    var renderedElement;\n\t\n\t    // Support functional components\n\t    if (!doConstruct && (inst == null || inst.render == null)) {\n\t      renderedElement = inst;\n\t      warnIfInvalidElement(Component, renderedElement);\n\t      !(inst === null || inst === false || ReactElement.isValidElement(inst)) ?  false ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;\n\t      inst = new StatelessComponent(Component);\n\t      this._compositeType = CompositeTypes.StatelessFunctional;\n\t    } else {\n\t      if (isPureComponent(Component)) {\n\t        this._compositeType = CompositeTypes.PureClass;\n\t      } else {\n\t        this._compositeType = CompositeTypes.ImpureClass;\n\t      }\n\t    }\n\t\n\t    if (false) {\n\t      // This will throw later in _renderValidatedComponent, but add an early\n\t      // warning now to help debugging\n\t      if (inst.render == null) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;\n\t      }\n\t\n\t      var propsMutated = inst.props !== publicProps;\n\t      var componentName = Component.displayName || Component.name || 'Component';\n\t\n\t      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\\'s constructor was passed.', componentName, componentName) : void 0;\n\t    }\n\t\n\t    // These should be set up in the constructor, but as a convenience for\n\t    // simpler class abstractions, we set them up after the fact.\n\t    inst.props = publicProps;\n\t    inst.context = publicContext;\n\t    inst.refs = emptyObject;\n\t    inst.updater = updateQueue;\n\t\n\t    this._instance = inst;\n\t\n\t    // Store a reference from the instance back to the internal representation\n\t    ReactInstanceMap.set(inst, this);\n\t\n\t    if (false) {\n\t      // Since plain JS classes are defined without any special initialization\n\t      // logic, we can not catch common errors early. Therefore, we have to\n\t      // catch them here, at initialization time, instead.\n\t      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;\n\t    }\n\t\n\t    var initialState = inst.state;\n\t    if (initialState === undefined) {\n\t      inst.state = initialState = null;\n\t    }\n\t    !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;\n\t\n\t    this._pendingStateQueue = null;\n\t    this._pendingReplaceState = false;\n\t    this._pendingForceUpdate = false;\n\t\n\t    var markup;\n\t    if (inst.unstable_handleError) {\n\t      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);\n\t    } else {\n\t      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n\t    }\n\t\n\t    if (inst.componentDidMount) {\n\t      if (false) {\n\t        transaction.getReactMountReady().enqueue(function () {\n\t          measureLifeCyclePerf(function () {\n\t            return inst.componentDidMount();\n\t          }, _this._debugID, 'componentDidMount');\n\t        });\n\t      } else {\n\t        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n\t      }\n\t    }\n\t\n\t    return markup;\n\t  },\n\t\n\t  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {\n\t    if (false) {\n\t      ReactCurrentOwner.current = this;\n\t      try {\n\t        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n\t      } finally {\n\t        ReactCurrentOwner.current = null;\n\t      }\n\t    } else {\n\t      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n\t    }\n\t  },\n\t\n\t  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {\n\t    var Component = this._currentElement.type;\n\t\n\t    if (doConstruct) {\n\t      if (false) {\n\t        return measureLifeCyclePerf(function () {\n\t          return new Component(publicProps, publicContext, updateQueue);\n\t        }, this._debugID, 'ctor');\n\t      } else {\n\t        return new Component(publicProps, publicContext, updateQueue);\n\t      }\n\t    }\n\t\n\t    // This can still be an instance in case of factory components\n\t    // but we'll count this as time spent rendering as the more common case.\n\t    if (false) {\n\t      return measureLifeCyclePerf(function () {\n\t        return Component(publicProps, publicContext, updateQueue);\n\t      }, this._debugID, 'render');\n\t    } else {\n\t      return Component(publicProps, publicContext, updateQueue);\n\t    }\n\t  },\n\t\n\t  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n\t    var markup;\n\t    var checkpoint = transaction.checkpoint();\n\t    try {\n\t      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n\t    } catch (e) {\n\t      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint\n\t      transaction.rollback(checkpoint);\n\t      this._instance.unstable_handleError(e);\n\t      if (this._pendingStateQueue) {\n\t        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);\n\t      }\n\t      checkpoint = transaction.checkpoint();\n\t\n\t      this._renderedComponent.unmountComponent(true);\n\t      transaction.rollback(checkpoint);\n\t\n\t      // Try again - we've informed the component about the error, so they can render an error message this time.\n\t      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).\n\t      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n\t    }\n\t    return markup;\n\t  },\n\t\n\t  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n\t    var inst = this._instance;\n\t\n\t    var debugID = 0;\n\t    if (false) {\n\t      debugID = this._debugID;\n\t    }\n\t\n\t    if (inst.componentWillMount) {\n\t      if (false) {\n\t        measureLifeCyclePerf(function () {\n\t          return inst.componentWillMount();\n\t        }, debugID, 'componentWillMount');\n\t      } else {\n\t        inst.componentWillMount();\n\t      }\n\t      // When mounting, calls to `setState` by `componentWillMount` will set\n\t      // `this._pendingStateQueue` without triggering a re-render.\n\t      if (this._pendingStateQueue) {\n\t        inst.state = this._processPendingState(inst.props, inst.context);\n\t      }\n\t    }\n\t\n\t    // If not a stateless component, we now render\n\t    if (renderedElement === undefined) {\n\t      renderedElement = this._renderValidatedComponent();\n\t    }\n\t\n\t    var nodeType = ReactNodeTypes.getType(renderedElement);\n\t    this._renderedNodeType = nodeType;\n\t    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n\t    );\n\t    this._renderedComponent = child;\n\t\n\t    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);\n\t\n\t    if (false) {\n\t      if (debugID !== 0) {\n\t        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n\t        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n\t      }\n\t    }\n\t\n\t    return markup;\n\t  },\n\t\n\t  getHostNode: function () {\n\t    return ReactReconciler.getHostNode(this._renderedComponent);\n\t  },\n\t\n\t  /**\n\t   * Releases any resources allocated by `mountComponent`.\n\t   *\n\t   * @final\n\t   * @internal\n\t   */\n\t  unmountComponent: function (safely) {\n\t    if (!this._renderedComponent) {\n\t      return;\n\t    }\n\t\n\t    var inst = this._instance;\n\t\n\t    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {\n\t      inst._calledComponentWillUnmount = true;\n\t\n\t      if (safely) {\n\t        var name = this.getName() + '.componentWillUnmount()';\n\t        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));\n\t      } else {\n\t        if (false) {\n\t          measureLifeCyclePerf(function () {\n\t            return inst.componentWillUnmount();\n\t          }, this._debugID, 'componentWillUnmount');\n\t        } else {\n\t          inst.componentWillUnmount();\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._renderedComponent) {\n\t      ReactReconciler.unmountComponent(this._renderedComponent, safely);\n\t      this._renderedNodeType = null;\n\t      this._renderedComponent = null;\n\t      this._instance = null;\n\t    }\n\t\n\t    // Reset pending fields\n\t    // Even if this component is scheduled for another update in ReactUpdates,\n\t    // it would still be ignored because these fields are reset.\n\t    this._pendingStateQueue = null;\n\t    this._pendingReplaceState = false;\n\t    this._pendingForceUpdate = false;\n\t    this._pendingCallbacks = null;\n\t    this._pendingElement = null;\n\t\n\t    // These fields do not really need to be reset since this object is no\n\t    // longer accessible.\n\t    this._context = null;\n\t    this._rootNodeID = 0;\n\t    this._topLevelWrapper = null;\n\t\n\t    // Delete the reference from the instance to this internal representation\n\t    // which allow the internals to be properly cleaned up even if the user\n\t    // leaks a reference to the public instance.\n\t    ReactInstanceMap.remove(inst);\n\t\n\t    // Some existing components rely on inst.props even after they've been\n\t    // destroyed (in event handlers).\n\t    // TODO: inst.props = null;\n\t    // TODO: inst.state = null;\n\t    // TODO: inst.context = null;\n\t  },\n\t\n\t  /**\n\t   * Filters the context object to only contain keys specified in\n\t   * `contextTypes`\n\t   *\n\t   * @param {object} context\n\t   * @return {?object}\n\t   * @private\n\t   */\n\t  _maskContext: function (context) {\n\t    var Component = this._currentElement.type;\n\t    var contextTypes = Component.contextTypes;\n\t    if (!contextTypes) {\n\t      return emptyObject;\n\t    }\n\t    var maskedContext = {};\n\t    for (var contextName in contextTypes) {\n\t      maskedContext[contextName] = context[contextName];\n\t    }\n\t    return maskedContext;\n\t  },\n\t\n\t  /**\n\t   * Filters the context object to only contain keys specified in\n\t   * `contextTypes`, and asserts that they are valid.\n\t   *\n\t   * @param {object} context\n\t   * @return {?object}\n\t   * @private\n\t   */\n\t  _processContext: function (context) {\n\t    var maskedContext = this._maskContext(context);\n\t    if (false) {\n\t      var Component = this._currentElement.type;\n\t      if (Component.contextTypes) {\n\t        this._checkContextTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);\n\t      }\n\t    }\n\t    return maskedContext;\n\t  },\n\t\n\t  /**\n\t   * @param {object} currentContext\n\t   * @return {object}\n\t   * @private\n\t   */\n\t  _processChildContext: function (currentContext) {\n\t    var Component = this._currentElement.type;\n\t    var inst = this._instance;\n\t    var childContext;\n\t\n\t    if (inst.getChildContext) {\n\t      if (false) {\n\t        ReactInstrumentation.debugTool.onBeginProcessingChildContext();\n\t        try {\n\t          childContext = inst.getChildContext();\n\t        } finally {\n\t          ReactInstrumentation.debugTool.onEndProcessingChildContext();\n\t        }\n\t      } else {\n\t        childContext = inst.getChildContext();\n\t      }\n\t    }\n\t\n\t    if (childContext) {\n\t      !(typeof Component.childContextTypes === 'object') ?  false ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;\n\t      if (false) {\n\t        this._checkContextTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);\n\t      }\n\t      for (var name in childContext) {\n\t        !(name in Component.childContextTypes) ?  false ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;\n\t      }\n\t      return _assign({}, currentContext, childContext);\n\t    }\n\t    return currentContext;\n\t  },\n\t\n\t  /**\n\t   * Assert that the context types are valid\n\t   *\n\t   * @param {object} typeSpecs Map of context field to a ReactPropType\n\t   * @param {object} values Runtime values that need to be type-checked\n\t   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n\t   * @private\n\t   */\n\t  _checkContextTypes: function (typeSpecs, values, location) {\n\t    checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);\n\t  },\n\t\n\t  receiveComponent: function (nextElement, transaction, nextContext) {\n\t    var prevElement = this._currentElement;\n\t    var prevContext = this._context;\n\t\n\t    this._pendingElement = null;\n\t\n\t    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);\n\t  },\n\t\n\t  /**\n\t   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n\t   * is set, update the component.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   */\n\t  performUpdateIfNecessary: function (transaction) {\n\t    if (this._pendingElement != null) {\n\t      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);\n\t    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n\t      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);\n\t    } else {\n\t      this._updateBatchNumber = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Perform an update to a mounted component. The componentWillReceiveProps and\n\t   * shouldComponentUpdate methods are called, then (assuming the update isn't\n\t   * skipped) the remaining update lifecycle methods are called and the DOM\n\t   * representation is updated.\n\t   *\n\t   * By default, this implements React's rendering and reconciliation algorithm.\n\t   * Sophisticated clients may wish to override this.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {ReactElement} prevParentElement\n\t   * @param {ReactElement} nextParentElement\n\t   * @internal\n\t   * @overridable\n\t   */\n\t  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {\n\t    var inst = this._instance;\n\t    !(inst != null) ?  false ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;\n\t\n\t    var willReceive = false;\n\t    var nextContext;\n\t\n\t    // Determine if the context has changed or not\n\t    if (this._context === nextUnmaskedContext) {\n\t      nextContext = inst.context;\n\t    } else {\n\t      nextContext = this._processContext(nextUnmaskedContext);\n\t      willReceive = true;\n\t    }\n\t\n\t    var prevProps = prevParentElement.props;\n\t    var nextProps = nextParentElement.props;\n\t\n\t    // Not a simple state update but a props update\n\t    if (prevParentElement !== nextParentElement) {\n\t      willReceive = true;\n\t    }\n\t\n\t    // An update here will schedule an update but immediately set\n\t    // _pendingStateQueue which will ensure that any state updates gets\n\t    // immediately reconciled instead of waiting for the next batch.\n\t    if (willReceive && inst.componentWillReceiveProps) {\n\t      if (false) {\n\t        measureLifeCyclePerf(function () {\n\t          return inst.componentWillReceiveProps(nextProps, nextContext);\n\t        }, this._debugID, 'componentWillReceiveProps');\n\t      } else {\n\t        inst.componentWillReceiveProps(nextProps, nextContext);\n\t      }\n\t    }\n\t\n\t    var nextState = this._processPendingState(nextProps, nextContext);\n\t    var shouldUpdate = true;\n\t\n\t    if (!this._pendingForceUpdate) {\n\t      if (inst.shouldComponentUpdate) {\n\t        if (false) {\n\t          shouldUpdate = measureLifeCyclePerf(function () {\n\t            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n\t          }, this._debugID, 'shouldComponentUpdate');\n\t        } else {\n\t          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n\t        }\n\t      } else {\n\t        if (this._compositeType === CompositeTypes.PureClass) {\n\t          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;\n\t    }\n\t\n\t    this._updateBatchNumber = null;\n\t    if (shouldUpdate) {\n\t      this._pendingForceUpdate = false;\n\t      // Will set `this.props`, `this.state` and `this.context`.\n\t      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);\n\t    } else {\n\t      // If it's determined that a component should not update, we still want\n\t      // to set props and state but we shortcut the rest of the update.\n\t      this._currentElement = nextParentElement;\n\t      this._context = nextUnmaskedContext;\n\t      inst.props = nextProps;\n\t      inst.state = nextState;\n\t      inst.context = nextContext;\n\t    }\n\t  },\n\t\n\t  _processPendingState: function (props, context) {\n\t    var inst = this._instance;\n\t    var queue = this._pendingStateQueue;\n\t    var replace = this._pendingReplaceState;\n\t    this._pendingReplaceState = false;\n\t    this._pendingStateQueue = null;\n\t\n\t    if (!queue) {\n\t      return inst.state;\n\t    }\n\t\n\t    if (replace && queue.length === 1) {\n\t      return queue[0];\n\t    }\n\t\n\t    var nextState = _assign({}, replace ? queue[0] : inst.state);\n\t    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n\t      var partial = queue[i];\n\t      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\n\t    }\n\t\n\t    return nextState;\n\t  },\n\t\n\t  /**\n\t   * Merges new props and state, notifies delegate methods of update and\n\t   * performs update.\n\t   *\n\t   * @param {ReactElement} nextElement Next element\n\t   * @param {object} nextProps Next public object to set as properties.\n\t   * @param {?object} nextState Next object to set as state.\n\t   * @param {?object} nextContext Next public object to set as context.\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {?object} unmaskedContext\n\t   * @private\n\t   */\n\t  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {\n\t    var _this2 = this;\n\t\n\t    var inst = this._instance;\n\t\n\t    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);\n\t    var prevProps;\n\t    var prevState;\n\t    var prevContext;\n\t    if (hasComponentDidUpdate) {\n\t      prevProps = inst.props;\n\t      prevState = inst.state;\n\t      prevContext = inst.context;\n\t    }\n\t\n\t    if (inst.componentWillUpdate) {\n\t      if (false) {\n\t        measureLifeCyclePerf(function () {\n\t          return inst.componentWillUpdate(nextProps, nextState, nextContext);\n\t        }, this._debugID, 'componentWillUpdate');\n\t      } else {\n\t        inst.componentWillUpdate(nextProps, nextState, nextContext);\n\t      }\n\t    }\n\t\n\t    this._currentElement = nextElement;\n\t    this._context = unmaskedContext;\n\t    inst.props = nextProps;\n\t    inst.state = nextState;\n\t    inst.context = nextContext;\n\t\n\t    this._updateRenderedComponent(transaction, unmaskedContext);\n\t\n\t    if (hasComponentDidUpdate) {\n\t      if (false) {\n\t        transaction.getReactMountReady().enqueue(function () {\n\t          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');\n\t        });\n\t      } else {\n\t        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Call the component's `render` method and update the DOM accordingly.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   */\n\t  _updateRenderedComponent: function (transaction, context) {\n\t    var prevComponentInstance = this._renderedComponent;\n\t    var prevRenderedElement = prevComponentInstance._currentElement;\n\t    var nextRenderedElement = this._renderValidatedComponent();\n\t\n\t    var debugID = 0;\n\t    if (false) {\n\t      debugID = this._debugID;\n\t    }\n\t\n\t    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n\t      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));\n\t    } else {\n\t      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);\n\t      ReactReconciler.unmountComponent(prevComponentInstance, false);\n\t\n\t      var nodeType = ReactNodeTypes.getType(nextRenderedElement);\n\t      this._renderedNodeType = nodeType;\n\t      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n\t      );\n\t      this._renderedComponent = child;\n\t\n\t      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);\n\t\n\t      if (false) {\n\t        if (debugID !== 0) {\n\t          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n\t          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n\t        }\n\t      }\n\t\n\t      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Overridden in shallow rendering.\n\t   *\n\t   * @protected\n\t   */\n\t  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {\n\t    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);\n\t  },\n\t\n\t  /**\n\t   * @protected\n\t   */\n\t  _renderValidatedComponentWithoutOwnerOrContext: function () {\n\t    var inst = this._instance;\n\t    var renderedComponent;\n\t\n\t    if (false) {\n\t      renderedComponent = measureLifeCyclePerf(function () {\n\t        return inst.render();\n\t      }, this._debugID, 'render');\n\t    } else {\n\t      renderedComponent = inst.render();\n\t    }\n\t\n\t    if (false) {\n\t      // We allow auto-mocks to proceed as if they're returning null.\n\t      if (renderedComponent === undefined && inst.render._isMockFunction) {\n\t        // This is probably bad practice. Consider warning here and\n\t        // deprecating this convenience.\n\t        renderedComponent = null;\n\t      }\n\t    }\n\t\n\t    return renderedComponent;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _renderValidatedComponent: function () {\n\t    var renderedComponent;\n\t    if ((\"production\") !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {\n\t      ReactCurrentOwner.current = this;\n\t      try {\n\t        renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();\n\t      } finally {\n\t        ReactCurrentOwner.current = null;\n\t      }\n\t    } else {\n\t      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();\n\t    }\n\t    !(\n\t    // TODO: An `isValidNode` function would probably be more appropriate\n\t    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ?  false ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;\n\t\n\t    return renderedComponent;\n\t  },\n\t\n\t  /**\n\t   * Lazily allocates the refs object and stores `component` as `ref`.\n\t   *\n\t   * @param {string} ref Reference name.\n\t   * @param {component} component Component to store as `ref`.\n\t   * @final\n\t   * @private\n\t   */\n\t  attachRef: function (ref, component) {\n\t    var inst = this.getPublicInstance();\n\t    !(inst != null) ?  false ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;\n\t    var publicComponentInstance = component.getPublicInstance();\n\t    if (false) {\n\t      var componentName = component && component.getName ? component.getName() : 'a component';\n\t      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref \"%s\" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;\n\t    }\n\t    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;\n\t    refs[ref] = publicComponentInstance;\n\t  },\n\t\n\t  /**\n\t   * Detaches a reference name.\n\t   *\n\t   * @param {string} ref Name to dereference.\n\t   * @final\n\t   * @private\n\t   */\n\t  detachRef: function (ref) {\n\t    var refs = this.getPublicInstance().refs;\n\t    delete refs[ref];\n\t  },\n\t\n\t  /**\n\t   * Get a text description of the component that can be used to identify it\n\t   * in error messages.\n\t   * @return {string} The name or null.\n\t   * @internal\n\t   */\n\t  getName: function () {\n\t    var type = this._currentElement.type;\n\t    var constructor = this._instance && this._instance.constructor;\n\t    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;\n\t  },\n\t\n\t  /**\n\t   * Get the publicly accessible representation of this component - i.e. what\n\t   * is exposed by refs and returned by render. Can be null for stateless\n\t   * components.\n\t   *\n\t   * @return {ReactComponent} the public component instance.\n\t   * @internal\n\t   */\n\t  getPublicInstance: function () {\n\t    var inst = this._instance;\n\t    if (this._compositeType === CompositeTypes.StatelessFunctional) {\n\t      return null;\n\t    }\n\t    return inst;\n\t  },\n\t\n\t  // Stub\n\t  _instantiateReactComponent: null\n\t\n\t};\n\t\n\tvar ReactCompositeComponent = {\n\t\n\t  Mixin: ReactCompositeComponentMixin\n\t\n\t};\n\t\n\tmodule.exports = ReactCompositeComponent;\n\n/***/ },\n/* 124 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOM\n\t */\n\t\n\t/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/\n\t\n\t'use strict';\n\t\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactDefaultInjection = __webpack_require__(139);\n\tvar ReactMount = __webpack_require__(71);\n\tvar ReactReconciler = __webpack_require__(18);\n\tvar ReactUpdates = __webpack_require__(10);\n\tvar ReactVersion = __webpack_require__(75);\n\t\n\tvar findDOMNode = __webpack_require__(167);\n\tvar getHostComponentFromComposite = __webpack_require__(80);\n\tvar renderSubtreeIntoContainer = __webpack_require__(174);\n\tvar warning = __webpack_require__(3);\n\t\n\tReactDefaultInjection.inject();\n\t\n\tvar ReactDOM = {\n\t  findDOMNode: findDOMNode,\n\t  render: ReactMount.render,\n\t  unmountComponentAtNode: ReactMount.unmountComponentAtNode,\n\t  version: ReactVersion,\n\t\n\t  /* eslint-disable camelcase */\n\t  unstable_batchedUpdates: ReactUpdates.batchedUpdates,\n\t  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer\n\t};\n\t\n\t// Inject the runtime into a devtools global hook regardless of browser.\n\t// Allows for debugging when the hook is injected on the page.\n\t/* eslint-enable camelcase */\n\tif (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {\n\t  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({\n\t    ComponentTree: {\n\t      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,\n\t      getNodeFromInstance: function (inst) {\n\t        // inst is an internal instance (but could be a composite)\n\t        if (inst._renderedComponent) {\n\t          inst = getHostComponentFromComposite(inst);\n\t        }\n\t        if (inst) {\n\t          return ReactDOMComponentTree.getNodeFromInstance(inst);\n\t        } else {\n\t          return null;\n\t        }\n\t      }\n\t    },\n\t    Mount: ReactMount,\n\t    Reconciler: ReactReconciler\n\t  });\n\t}\n\t\n\tif (false) {\n\t  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\t  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {\n\t\n\t    // First check if devtools is not installed\n\t    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n\t      // If we're in Chrome or Firefox, provide a download link if not installed.\n\t      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {\n\t        // Firefox does not have the issue with devtools loaded over file://\n\t        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;\n\t        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');\n\t      }\n\t    }\n\t\n\t    var testFunc = function testFn() {};\n\t    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;\n\t\n\t    // If we're in IE8, check to see if we are in compatibility mode and provide\n\t    // information on preventing compatibility mode\n\t    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;\n\t\n\t    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />') : void 0;\n\t\n\t    var expectedFeatures = [\n\t    // shims\n\t    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];\n\t\n\t    for (var i = 0; i < expectedFeatures.length; i++) {\n\t      if (!expectedFeatures[i]) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;\n\t        break;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tif (false) {\n\t  var ReactInstrumentation = require('./ReactInstrumentation');\n\t  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');\n\t  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');\n\t\n\t  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);\n\t  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);\n\t}\n\t\n\tmodule.exports = ReactDOM;\n\n/***/ },\n/* 125 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMButton\n\t */\n\t\n\t'use strict';\n\t\n\tvar DisabledInputUtils = __webpack_require__(26);\n\t\n\t/**\n\t * Implements a <button> host component that does not receive mouse events\n\t * when `disabled` is set.\n\t */\n\tvar ReactDOMButton = {\n\t  getHostProps: DisabledInputUtils.getHostProps\n\t};\n\t\n\tmodule.exports = ReactDOMButton;\n\n/***/ },\n/* 126 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMComponent\n\t */\n\t\n\t/* global hasOwnProperty:true */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar AutoFocusUtils = __webpack_require__(111);\n\tvar CSSPropertyOperations = __webpack_require__(113);\n\tvar DOMLazyTree = __webpack_require__(16);\n\tvar DOMNamespaces = __webpack_require__(34);\n\tvar DOMProperty = __webpack_require__(17);\n\tvar DOMPropertyOperations = __webpack_require__(62);\n\tvar EventConstants = __webpack_require__(11);\n\tvar EventPluginHub = __webpack_require__(20);\n\tvar EventPluginRegistry = __webpack_require__(35);\n\tvar ReactBrowserEventEmitter = __webpack_require__(27);\n\tvar ReactDOMButton = __webpack_require__(125);\n\tvar ReactDOMComponentFlags = __webpack_require__(65);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactDOMInput = __webpack_require__(132);\n\tvar ReactDOMOption = __webpack_require__(133);\n\tvar ReactDOMSelect = __webpack_require__(66);\n\tvar ReactDOMTextarea = __webpack_require__(136);\n\tvar ReactInstrumentation = __webpack_require__(8);\n\tvar ReactMultiChild = __webpack_require__(144);\n\tvar ReactServerRenderingTransaction = __webpack_require__(149);\n\t\n\tvar emptyFunction = __webpack_require__(7);\n\tvar escapeTextContentForBrowser = __webpack_require__(29);\n\tvar invariant = __webpack_require__(1);\n\tvar isEventSupported = __webpack_require__(52);\n\tvar keyOf = __webpack_require__(13);\n\tvar shallowEqual = __webpack_require__(31);\n\tvar validateDOMNesting = __webpack_require__(55);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar Flags = ReactDOMComponentFlags;\n\tvar deleteListener = EventPluginHub.deleteListener;\n\tvar getNode = ReactDOMComponentTree.getNodeFromInstance;\n\tvar listenTo = ReactBrowserEventEmitter.listenTo;\n\tvar registrationNameModules = EventPluginRegistry.registrationNameModules;\n\t\n\t// For quickly matching children type, to test if can be treated as content.\n\tvar CONTENT_TYPES = { 'string': true, 'number': true };\n\t\n\tvar STYLE = keyOf({ style: null });\n\tvar HTML = keyOf({ __html: null });\n\tvar RESERVED_PROPS = {\n\t  children: null,\n\t  dangerouslySetInnerHTML: null,\n\t  suppressContentEditableWarning: null\n\t};\n\t\n\t// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).\n\tvar DOC_FRAGMENT_TYPE = 11;\n\t\n\tfunction getDeclarationErrorAddendum(internalInstance) {\n\t  if (internalInstance) {\n\t    var owner = internalInstance._currentElement._owner || null;\n\t    if (owner) {\n\t      var name = owner.getName();\n\t      if (name) {\n\t        return ' This DOM node was rendered by `' + name + '`.';\n\t      }\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\tfunction friendlyStringify(obj) {\n\t  if (typeof obj === 'object') {\n\t    if (Array.isArray(obj)) {\n\t      return '[' + obj.map(friendlyStringify).join(', ') + ']';\n\t    } else {\n\t      var pairs = [];\n\t      for (var key in obj) {\n\t        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t          var keyEscaped = /^[a-z$_][\\w$_]*$/i.test(key) ? key : JSON.stringify(key);\n\t          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));\n\t        }\n\t      }\n\t      return '{' + pairs.join(', ') + '}';\n\t    }\n\t  } else if (typeof obj === 'string') {\n\t    return JSON.stringify(obj);\n\t  } else if (typeof obj === 'function') {\n\t    return '[function object]';\n\t  }\n\t  // Differs from JSON.stringify in that undefined because undefined and that\n\t  // inf and nan don't become null\n\t  return String(obj);\n\t}\n\t\n\tvar styleMutationWarning = {};\n\t\n\tfunction checkAndWarnForMutatedStyle(style1, style2, component) {\n\t  if (style1 == null || style2 == null) {\n\t    return;\n\t  }\n\t  if (shallowEqual(style1, style2)) {\n\t    return;\n\t  }\n\t\n\t  var componentName = component._tag;\n\t  var owner = component._currentElement._owner;\n\t  var ownerName;\n\t  if (owner) {\n\t    ownerName = owner.getName();\n\t  }\n\t\n\t  var hash = ownerName + '|' + componentName;\n\t\n\t  if (styleMutationWarning.hasOwnProperty(hash)) {\n\t    return;\n\t  }\n\t\n\t  styleMutationWarning[hash] = true;\n\t\n\t   false ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;\n\t}\n\t\n\t/**\n\t * @param {object} component\n\t * @param {?object} props\n\t */\n\tfunction assertValidProps(component, props) {\n\t  if (!props) {\n\t    return;\n\t  }\n\t  // Note the use of `==` which checks for null or undefined.\n\t  if (voidElementTags[component._tag]) {\n\t    !(props.children == null && props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;\n\t  }\n\t  if (props.dangerouslySetInnerHTML != null) {\n\t    !(props.children == null) ?  false ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;\n\t    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ?  false ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;\n\t  }\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;\n\t    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;\n\t    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;\n\t  }\n\t  !(props.style == null || typeof props.style === 'object') ?  false ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \\'em\\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;\n\t}\n\t\n\tfunction enqueuePutListener(inst, registrationName, listener, transaction) {\n\t  if (transaction instanceof ReactServerRenderingTransaction) {\n\t    return;\n\t  }\n\t  if (false) {\n\t    // IE8 has no API for event capturing and the `onScroll` event doesn't\n\t    // bubble.\n\t    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\\'t support the `onScroll` event') : void 0;\n\t  }\n\t  var containerInfo = inst._hostContainerInfo;\n\t  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;\n\t  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;\n\t  listenTo(registrationName, doc);\n\t  transaction.getReactMountReady().enqueue(putListener, {\n\t    inst: inst,\n\t    registrationName: registrationName,\n\t    listener: listener\n\t  });\n\t}\n\t\n\tfunction putListener() {\n\t  var listenerToPut = this;\n\t  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);\n\t}\n\t\n\tfunction inputPostMount() {\n\t  var inst = this;\n\t  ReactDOMInput.postMountWrapper(inst);\n\t}\n\t\n\tfunction textareaPostMount() {\n\t  var inst = this;\n\t  ReactDOMTextarea.postMountWrapper(inst);\n\t}\n\t\n\tfunction optionPostMount() {\n\t  var inst = this;\n\t  ReactDOMOption.postMountWrapper(inst);\n\t}\n\t\n\tvar setAndValidateContentChildDev = emptyFunction;\n\tif (false) {\n\t  setAndValidateContentChildDev = function (content) {\n\t    var hasExistingContent = this._contentDebugID != null;\n\t    var debugID = this._debugID;\n\t    // This ID represents the inlined child that has no backing instance:\n\t    var contentDebugID = -debugID;\n\t\n\t    if (content == null) {\n\t      if (hasExistingContent) {\n\t        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);\n\t      }\n\t      this._contentDebugID = null;\n\t      return;\n\t    }\n\t\n\t    validateDOMNesting(null, String(content), this, this._ancestorInfo);\n\t    this._contentDebugID = contentDebugID;\n\t    if (hasExistingContent) {\n\t      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);\n\t      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);\n\t    } else {\n\t      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);\n\t      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);\n\t      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);\n\t    }\n\t  };\n\t}\n\t\n\t// There are so many media events, it makes sense to just\n\t// maintain a list rather than create a `trapBubbledEvent` for each\n\tvar mediaEvents = {\n\t  topAbort: 'abort',\n\t  topCanPlay: 'canplay',\n\t  topCanPlayThrough: 'canplaythrough',\n\t  topDurationChange: 'durationchange',\n\t  topEmptied: 'emptied',\n\t  topEncrypted: 'encrypted',\n\t  topEnded: 'ended',\n\t  topError: 'error',\n\t  topLoadedData: 'loadeddata',\n\t  topLoadedMetadata: 'loadedmetadata',\n\t  topLoadStart: 'loadstart',\n\t  topPause: 'pause',\n\t  topPlay: 'play',\n\t  topPlaying: 'playing',\n\t  topProgress: 'progress',\n\t  topRateChange: 'ratechange',\n\t  topSeeked: 'seeked',\n\t  topSeeking: 'seeking',\n\t  topStalled: 'stalled',\n\t  topSuspend: 'suspend',\n\t  topTimeUpdate: 'timeupdate',\n\t  topVolumeChange: 'volumechange',\n\t  topWaiting: 'waiting'\n\t};\n\t\n\tfunction trapBubbledEventsLocal() {\n\t  var inst = this;\n\t  // If a component renders to null or if another component fatals and causes\n\t  // the state of the tree to be corrupted, `node` here can be null.\n\t  !inst._rootNodeID ?  false ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;\n\t  var node = getNode(inst);\n\t  !node ?  false ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;\n\t\n\t  switch (inst._tag) {\n\t    case 'iframe':\n\t    case 'object':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];\n\t      break;\n\t    case 'video':\n\t    case 'audio':\n\t\n\t      inst._wrapperState.listeners = [];\n\t      // Create listener for each media event\n\t      for (var event in mediaEvents) {\n\t        if (mediaEvents.hasOwnProperty(event)) {\n\t          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));\n\t        }\n\t      }\n\t      break;\n\t    case 'source':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node)];\n\t      break;\n\t    case 'img':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];\n\t      break;\n\t    case 'form':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];\n\t      break;\n\t    case 'input':\n\t    case 'select':\n\t    case 'textarea':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];\n\t      break;\n\t  }\n\t}\n\t\n\tfunction postUpdateSelectWrapper() {\n\t  ReactDOMSelect.postUpdateWrapper(this);\n\t}\n\t\n\t// For HTML, certain tags should omit their close tag. We keep a whitelist for\n\t// those special-case tags.\n\t\n\tvar omittedCloseTags = {\n\t  'area': true,\n\t  'base': true,\n\t  'br': true,\n\t  'col': true,\n\t  'embed': true,\n\t  'hr': true,\n\t  'img': true,\n\t  'input': true,\n\t  'keygen': true,\n\t  'link': true,\n\t  'meta': true,\n\t  'param': true,\n\t  'source': true,\n\t  'track': true,\n\t  'wbr': true\n\t};\n\t\n\t// NOTE: menuitem's close tag should be omitted, but that causes problems.\n\tvar newlineEatingTags = {\n\t  'listing': true,\n\t  'pre': true,\n\t  'textarea': true\n\t};\n\t\n\t// For HTML, certain tags cannot have children. This has the same purpose as\n\t// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\t\n\tvar voidElementTags = _assign({\n\t  'menuitem': true\n\t}, omittedCloseTags);\n\t\n\t// We accept any tag to be rendered but since this gets injected into arbitrary\n\t// HTML, we want to make sure that it's a safe tag.\n\t// http://www.w3.org/TR/REC-xml/#NT-Name\n\t\n\tvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\n\tvar validatedTagCache = {};\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\t\n\tfunction validateDangerousTag(tag) {\n\t  if (!hasOwnProperty.call(validatedTagCache, tag)) {\n\t    !VALID_TAG_REGEX.test(tag) ?  false ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;\n\t    validatedTagCache[tag] = true;\n\t  }\n\t}\n\t\n\tfunction isCustomComponent(tagName, props) {\n\t  return tagName.indexOf('-') >= 0 || props.is != null;\n\t}\n\t\n\tvar globalIdCounter = 1;\n\t\n\t/**\n\t * Creates a new React class that is idempotent and capable of containing other\n\t * React components. It accepts event listeners and DOM properties that are\n\t * valid according to `DOMProperty`.\n\t *\n\t *  - Event listeners: `onClick`, `onMouseDown`, etc.\n\t *  - DOM properties: `className`, `name`, `title`, etc.\n\t *\n\t * The `style` property functions differently from the DOM API. It accepts an\n\t * object mapping of style properties to values.\n\t *\n\t * @constructor ReactDOMComponent\n\t * @extends ReactMultiChild\n\t */\n\tfunction ReactDOMComponent(element) {\n\t  var tag = element.type;\n\t  validateDangerousTag(tag);\n\t  this._currentElement = element;\n\t  this._tag = tag.toLowerCase();\n\t  this._namespaceURI = null;\n\t  this._renderedChildren = null;\n\t  this._previousStyle = null;\n\t  this._previousStyleCopy = null;\n\t  this._hostNode = null;\n\t  this._hostParent = null;\n\t  this._rootNodeID = 0;\n\t  this._domID = 0;\n\t  this._hostContainerInfo = null;\n\t  this._wrapperState = null;\n\t  this._topLevelWrapper = null;\n\t  this._flags = 0;\n\t  if (false) {\n\t    this._ancestorInfo = null;\n\t    setAndValidateContentChildDev.call(this, null);\n\t  }\n\t}\n\t\n\tReactDOMComponent.displayName = 'ReactDOMComponent';\n\t\n\tReactDOMComponent.Mixin = {\n\t\n\t  /**\n\t   * Generates root tag markup then recurses. This method has side effects and\n\t   * is not idempotent.\n\t   *\n\t   * @internal\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {?ReactDOMComponent} the parent component instance\n\t   * @param {?object} info about the host container\n\t   * @param {object} context\n\t   * @return {string} The computed markup.\n\t   */\n\t  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n\t    this._rootNodeID = globalIdCounter++;\n\t    this._domID = hostContainerInfo._idCounter++;\n\t    this._hostParent = hostParent;\n\t    this._hostContainerInfo = hostContainerInfo;\n\t\n\t    var props = this._currentElement.props;\n\t\n\t    switch (this._tag) {\n\t      case 'audio':\n\t      case 'form':\n\t      case 'iframe':\n\t      case 'img':\n\t      case 'link':\n\t      case 'object':\n\t      case 'source':\n\t      case 'video':\n\t        this._wrapperState = {\n\t          listeners: null\n\t        };\n\t        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n\t        break;\n\t      case 'button':\n\t        props = ReactDOMButton.getHostProps(this, props, hostParent);\n\t        break;\n\t      case 'input':\n\t        ReactDOMInput.mountWrapper(this, props, hostParent);\n\t        props = ReactDOMInput.getHostProps(this, props);\n\t        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n\t        break;\n\t      case 'option':\n\t        ReactDOMOption.mountWrapper(this, props, hostParent);\n\t        props = ReactDOMOption.getHostProps(this, props);\n\t        break;\n\t      case 'select':\n\t        ReactDOMSelect.mountWrapper(this, props, hostParent);\n\t        props = ReactDOMSelect.getHostProps(this, props);\n\t        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n\t        break;\n\t      case 'textarea':\n\t        ReactDOMTextarea.mountWrapper(this, props, hostParent);\n\t        props = ReactDOMTextarea.getHostProps(this, props);\n\t        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n\t        break;\n\t    }\n\t\n\t    assertValidProps(this, props);\n\t\n\t    // We create tags in the namespace of their parent container, except HTML\n\t    // tags get no namespace.\n\t    var namespaceURI;\n\t    var parentTag;\n\t    if (hostParent != null) {\n\t      namespaceURI = hostParent._namespaceURI;\n\t      parentTag = hostParent._tag;\n\t    } else if (hostContainerInfo._tag) {\n\t      namespaceURI = hostContainerInfo._namespaceURI;\n\t      parentTag = hostContainerInfo._tag;\n\t    }\n\t    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {\n\t      namespaceURI = DOMNamespaces.html;\n\t    }\n\t    if (namespaceURI === DOMNamespaces.html) {\n\t      if (this._tag === 'svg') {\n\t        namespaceURI = DOMNamespaces.svg;\n\t      } else if (this._tag === 'math') {\n\t        namespaceURI = DOMNamespaces.mathml;\n\t      }\n\t    }\n\t    this._namespaceURI = namespaceURI;\n\t\n\t    if (false) {\n\t      var parentInfo;\n\t      if (hostParent != null) {\n\t        parentInfo = hostParent._ancestorInfo;\n\t      } else if (hostContainerInfo._tag) {\n\t        parentInfo = hostContainerInfo._ancestorInfo;\n\t      }\n\t      if (parentInfo) {\n\t        // parentInfo should always be present except for the top-level\n\t        // component when server rendering\n\t        validateDOMNesting(this._tag, null, this, parentInfo);\n\t      }\n\t      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);\n\t    }\n\t\n\t    var mountImage;\n\t    if (transaction.useCreateElement) {\n\t      var ownerDocument = hostContainerInfo._ownerDocument;\n\t      var el;\n\t      if (namespaceURI === DOMNamespaces.html) {\n\t        if (this._tag === 'script') {\n\t          // Create the script via .innerHTML so its \"parser-inserted\" flag is\n\t          // set to true and it does not execute\n\t          var div = ownerDocument.createElement('div');\n\t          var type = this._currentElement.type;\n\t          div.innerHTML = '<' + type + '></' + type + '>';\n\t          el = div.removeChild(div.firstChild);\n\t        } else if (props.is) {\n\t          el = ownerDocument.createElement(this._currentElement.type, props.is);\n\t        } else {\n\t          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.\n\t          // See discussion in https://github.com/facebook/react/pull/6896\n\t          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n\t          el = ownerDocument.createElement(this._currentElement.type);\n\t        }\n\t      } else {\n\t        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);\n\t      }\n\t      ReactDOMComponentTree.precacheNode(this, el);\n\t      this._flags |= Flags.hasCachedChildNodes;\n\t      if (!this._hostParent) {\n\t        DOMPropertyOperations.setAttributeForRoot(el);\n\t      }\n\t      this._updateDOMProperties(null, props, transaction);\n\t      var lazyTree = DOMLazyTree(el);\n\t      this._createInitialChildren(transaction, props, context, lazyTree);\n\t      mountImage = lazyTree;\n\t    } else {\n\t      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);\n\t      var tagContent = this._createContentMarkup(transaction, props, context);\n\t      if (!tagContent && omittedCloseTags[this._tag]) {\n\t        mountImage = tagOpen + '/>';\n\t      } else {\n\t        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';\n\t      }\n\t    }\n\t\n\t    switch (this._tag) {\n\t      case 'input':\n\t        transaction.getReactMountReady().enqueue(inputPostMount, this);\n\t        if (props.autoFocus) {\n\t          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n\t        }\n\t        break;\n\t      case 'textarea':\n\t        transaction.getReactMountReady().enqueue(textareaPostMount, this);\n\t        if (props.autoFocus) {\n\t          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n\t        }\n\t        break;\n\t      case 'select':\n\t        if (props.autoFocus) {\n\t          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n\t        }\n\t        break;\n\t      case 'button':\n\t        if (props.autoFocus) {\n\t          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n\t        }\n\t        break;\n\t      case 'option':\n\t        transaction.getReactMountReady().enqueue(optionPostMount, this);\n\t        break;\n\t    }\n\t\n\t    return mountImage;\n\t  },\n\t\n\t  /**\n\t   * Creates markup for the open tag and all attributes.\n\t   *\n\t   * This method has side effects because events get registered.\n\t   *\n\t   * Iterating over object properties is faster than iterating over arrays.\n\t   * @see http://jsperf.com/obj-vs-arr-iteration\n\t   *\n\t   * @private\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {object} props\n\t   * @return {string} Markup of opening tag.\n\t   */\n\t  _createOpenTagMarkupAndPutListeners: function (transaction, props) {\n\t    var ret = '<' + this._currentElement.type;\n\t\n\t    for (var propKey in props) {\n\t      if (!props.hasOwnProperty(propKey)) {\n\t        continue;\n\t      }\n\t      var propValue = props[propKey];\n\t      if (propValue == null) {\n\t        continue;\n\t      }\n\t      if (registrationNameModules.hasOwnProperty(propKey)) {\n\t        if (propValue) {\n\t          enqueuePutListener(this, propKey, propValue, transaction);\n\t        }\n\t      } else {\n\t        if (propKey === STYLE) {\n\t          if (propValue) {\n\t            if (false) {\n\t              // See `_updateDOMProperties`. style block\n\t              this._previousStyle = propValue;\n\t            }\n\t            propValue = this._previousStyleCopy = _assign({}, props.style);\n\t          }\n\t          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);\n\t        }\n\t        var markup = null;\n\t        if (this._tag != null && isCustomComponent(this._tag, props)) {\n\t          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n\t            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);\n\t          }\n\t        } else {\n\t          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);\n\t        }\n\t        if (markup) {\n\t          ret += ' ' + markup;\n\t        }\n\t      }\n\t    }\n\t\n\t    // For static pages, no need to put React ID and checksum. Saves lots of\n\t    // bytes.\n\t    if (transaction.renderToStaticMarkup) {\n\t      return ret;\n\t    }\n\t\n\t    if (!this._hostParent) {\n\t      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();\n\t    }\n\t    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);\n\t    return ret;\n\t  },\n\t\n\t  /**\n\t   * Creates markup for the content between the tags.\n\t   *\n\t   * @private\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {object} props\n\t   * @param {object} context\n\t   * @return {string} Content markup.\n\t   */\n\t  _createContentMarkup: function (transaction, props, context) {\n\t    var ret = '';\n\t\n\t    // Intentional use of != to avoid catching zero/false.\n\t    var innerHTML = props.dangerouslySetInnerHTML;\n\t    if (innerHTML != null) {\n\t      if (innerHTML.__html != null) {\n\t        ret = innerHTML.__html;\n\t      }\n\t    } else {\n\t      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n\t      var childrenToUse = contentToUse != null ? null : props.children;\n\t      if (contentToUse != null) {\n\t        // TODO: Validate that text is allowed as a child of this node\n\t        ret = escapeTextContentForBrowser(contentToUse);\n\t        if (false) {\n\t          setAndValidateContentChildDev.call(this, contentToUse);\n\t        }\n\t      } else if (childrenToUse != null) {\n\t        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n\t        ret = mountImages.join('');\n\t      }\n\t    }\n\t    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\\n') {\n\t      // text/html ignores the first character in these tags if it's a newline\n\t      // Prefer to break application/xml over text/html (for now) by adding\n\t      // a newline specifically to get eaten by the parser. (Alternately for\n\t      // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n\t      // \\r is normalized out by HTMLTextAreaElement#value.)\n\t      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n\t      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n\t      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n\t      // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n\t      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n\t      return '\\n' + ret;\n\t    } else {\n\t      return ret;\n\t    }\n\t  },\n\t\n\t  _createInitialChildren: function (transaction, props, context, lazyTree) {\n\t    // Intentional use of != to avoid catching zero/false.\n\t    var innerHTML = props.dangerouslySetInnerHTML;\n\t    if (innerHTML != null) {\n\t      if (innerHTML.__html != null) {\n\t        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);\n\t      }\n\t    } else {\n\t      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n\t      var childrenToUse = contentToUse != null ? null : props.children;\n\t      if (contentToUse != null) {\n\t        // TODO: Validate that text is allowed as a child of this node\n\t        if (false) {\n\t          setAndValidateContentChildDev.call(this, contentToUse);\n\t        }\n\t        DOMLazyTree.queueText(lazyTree, contentToUse);\n\t      } else if (childrenToUse != null) {\n\t        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n\t        for (var i = 0; i < mountImages.length; i++) {\n\t          DOMLazyTree.queueChild(lazyTree, mountImages[i]);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Receives a next element and updates the component.\n\t   *\n\t   * @internal\n\t   * @param {ReactElement} nextElement\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {object} context\n\t   */\n\t  receiveComponent: function (nextElement, transaction, context) {\n\t    var prevElement = this._currentElement;\n\t    this._currentElement = nextElement;\n\t    this.updateComponent(transaction, prevElement, nextElement, context);\n\t  },\n\t\n\t  /**\n\t   * Updates a DOM component after it has already been allocated and\n\t   * attached to the DOM. Reconciles the root DOM node, then recurses.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {ReactElement} prevElement\n\t   * @param {ReactElement} nextElement\n\t   * @internal\n\t   * @overridable\n\t   */\n\t  updateComponent: function (transaction, prevElement, nextElement, context) {\n\t    var lastProps = prevElement.props;\n\t    var nextProps = this._currentElement.props;\n\t\n\t    switch (this._tag) {\n\t      case 'button':\n\t        lastProps = ReactDOMButton.getHostProps(this, lastProps);\n\t        nextProps = ReactDOMButton.getHostProps(this, nextProps);\n\t        break;\n\t      case 'input':\n\t        lastProps = ReactDOMInput.getHostProps(this, lastProps);\n\t        nextProps = ReactDOMInput.getHostProps(this, nextProps);\n\t        break;\n\t      case 'option':\n\t        lastProps = ReactDOMOption.getHostProps(this, lastProps);\n\t        nextProps = ReactDOMOption.getHostProps(this, nextProps);\n\t        break;\n\t      case 'select':\n\t        lastProps = ReactDOMSelect.getHostProps(this, lastProps);\n\t        nextProps = ReactDOMSelect.getHostProps(this, nextProps);\n\t        break;\n\t      case 'textarea':\n\t        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);\n\t        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);\n\t        break;\n\t    }\n\t\n\t    assertValidProps(this, nextProps);\n\t    this._updateDOMProperties(lastProps, nextProps, transaction);\n\t    this._updateDOMChildren(lastProps, nextProps, transaction, context);\n\t\n\t    switch (this._tag) {\n\t      case 'input':\n\t        // Update the wrapper around inputs *after* updating props. This has to\n\t        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations\n\t        // raise warnings and prevent the new value from being assigned.\n\t        ReactDOMInput.updateWrapper(this);\n\t        break;\n\t      case 'textarea':\n\t        ReactDOMTextarea.updateWrapper(this);\n\t        break;\n\t      case 'select':\n\t        // <select> value update needs to occur after <option> children\n\t        // reconciliation\n\t        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);\n\t        break;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Reconciles the properties by detecting differences in property values and\n\t   * updating the DOM as necessary. This function is probably the single most\n\t   * critical path for performance optimization.\n\t   *\n\t   * TODO: Benchmark whether checking for changed values in memory actually\n\t   *       improves performance (especially statically positioned elements).\n\t   * TODO: Benchmark the effects of putting this at the top since 99% of props\n\t   *       do not change for a given reconciliation.\n\t   * TODO: Benchmark areas that can be improved with caching.\n\t   *\n\t   * @private\n\t   * @param {object} lastProps\n\t   * @param {object} nextProps\n\t   * @param {?DOMElement} node\n\t   */\n\t  _updateDOMProperties: function (lastProps, nextProps, transaction) {\n\t    var propKey;\n\t    var styleName;\n\t    var styleUpdates;\n\t    for (propKey in lastProps) {\n\t      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {\n\t        continue;\n\t      }\n\t      if (propKey === STYLE) {\n\t        var lastStyle = this._previousStyleCopy;\n\t        for (styleName in lastStyle) {\n\t          if (lastStyle.hasOwnProperty(styleName)) {\n\t            styleUpdates = styleUpdates || {};\n\t            styleUpdates[styleName] = '';\n\t          }\n\t        }\n\t        this._previousStyleCopy = null;\n\t      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n\t        if (lastProps[propKey]) {\n\t          // Only call deleteListener if there was a listener previously or\n\t          // else willDeleteListener gets called when there wasn't actually a\n\t          // listener (e.g., onClick={null})\n\t          deleteListener(this, propKey);\n\t        }\n\t      } else if (isCustomComponent(this._tag, lastProps)) {\n\t        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n\t          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);\n\t        }\n\t      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n\t        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);\n\t      }\n\t    }\n\t    for (propKey in nextProps) {\n\t      var nextProp = nextProps[propKey];\n\t      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;\n\t      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {\n\t        continue;\n\t      }\n\t      if (propKey === STYLE) {\n\t        if (nextProp) {\n\t          if (false) {\n\t            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);\n\t            this._previousStyle = nextProp;\n\t          }\n\t          nextProp = this._previousStyleCopy = _assign({}, nextProp);\n\t        } else {\n\t          this._previousStyleCopy = null;\n\t        }\n\t        if (lastProp) {\n\t          // Unset styles on `lastProp` but not on `nextProp`.\n\t          for (styleName in lastProp) {\n\t            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n\t              styleUpdates = styleUpdates || {};\n\t              styleUpdates[styleName] = '';\n\t            }\n\t          }\n\t          // Update styles that changed since `lastProp`.\n\t          for (styleName in nextProp) {\n\t            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\n\t              styleUpdates = styleUpdates || {};\n\t              styleUpdates[styleName] = nextProp[styleName];\n\t            }\n\t          }\n\t        } else {\n\t          // Relies on `updateStylesByID` not mutating `styleUpdates`.\n\t          styleUpdates = nextProp;\n\t        }\n\t      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n\t        if (nextProp) {\n\t          enqueuePutListener(this, propKey, nextProp, transaction);\n\t        } else if (lastProp) {\n\t          deleteListener(this, propKey);\n\t        }\n\t      } else if (isCustomComponent(this._tag, nextProps)) {\n\t        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n\t          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);\n\t        }\n\t      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n\t        var node = getNode(this);\n\t        // If we're updating to null or undefined, we should remove the property\n\t        // from the DOM node instead of inadvertently setting to a string. This\n\t        // brings us in line with the same behavior we have on initial render.\n\t        if (nextProp != null) {\n\t          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);\n\t        } else {\n\t          DOMPropertyOperations.deleteValueForProperty(node, propKey);\n\t        }\n\t      }\n\t    }\n\t    if (styleUpdates) {\n\t      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Reconciles the children with the various properties that affect the\n\t   * children content.\n\t   *\n\t   * @param {object} lastProps\n\t   * @param {object} nextProps\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {object} context\n\t   */\n\t  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {\n\t    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;\n\t    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;\n\t\n\t    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;\n\t    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;\n\t\n\t    // Note the use of `!=` which checks for null or undefined.\n\t    var lastChildren = lastContent != null ? null : lastProps.children;\n\t    var nextChildren = nextContent != null ? null : nextProps.children;\n\t\n\t    // If we're switching from children to content/html or vice versa, remove\n\t    // the old content\n\t    var lastHasContentOrHtml = lastContent != null || lastHtml != null;\n\t    var nextHasContentOrHtml = nextContent != null || nextHtml != null;\n\t    if (lastChildren != null && nextChildren == null) {\n\t      this.updateChildren(null, transaction, context);\n\t    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {\n\t      this.updateTextContent('');\n\t      if (false) {\n\t        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n\t      }\n\t    }\n\t\n\t    if (nextContent != null) {\n\t      if (lastContent !== nextContent) {\n\t        this.updateTextContent('' + nextContent);\n\t        if (false) {\n\t          setAndValidateContentChildDev.call(this, nextContent);\n\t        }\n\t      }\n\t    } else if (nextHtml != null) {\n\t      if (lastHtml !== nextHtml) {\n\t        this.updateMarkup('' + nextHtml);\n\t      }\n\t      if (false) {\n\t        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n\t      }\n\t    } else if (nextChildren != null) {\n\t      if (false) {\n\t        setAndValidateContentChildDev.call(this, null);\n\t      }\n\t\n\t      this.updateChildren(nextChildren, transaction, context);\n\t    }\n\t  },\n\t\n\t  getHostNode: function () {\n\t    return getNode(this);\n\t  },\n\t\n\t  /**\n\t   * Destroys all event registrations for this instance. Does not remove from\n\t   * the DOM. That must be done by the parent.\n\t   *\n\t   * @internal\n\t   */\n\t  unmountComponent: function (safely) {\n\t    switch (this._tag) {\n\t      case 'audio':\n\t      case 'form':\n\t      case 'iframe':\n\t      case 'img':\n\t      case 'link':\n\t      case 'object':\n\t      case 'source':\n\t      case 'video':\n\t        var listeners = this._wrapperState.listeners;\n\t        if (listeners) {\n\t          for (var i = 0; i < listeners.length; i++) {\n\t            listeners[i].remove();\n\t          }\n\t        }\n\t        break;\n\t      case 'html':\n\t      case 'head':\n\t      case 'body':\n\t        /**\n\t         * Components like <html> <head> and <body> can't be removed or added\n\t         * easily in a cross-browser way, however it's valuable to be able to\n\t         * take advantage of React's reconciliation for styling and <title>\n\t         * management. So we just document it and throw in dangerous cases.\n\t         */\n\t         true ?  false ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;\n\t        break;\n\t    }\n\t\n\t    this.unmountChildren(safely);\n\t    ReactDOMComponentTree.uncacheNode(this);\n\t    EventPluginHub.deleteAllListeners(this);\n\t    this._rootNodeID = 0;\n\t    this._domID = 0;\n\t    this._wrapperState = null;\n\t\n\t    if (false) {\n\t      setAndValidateContentChildDev.call(this, null);\n\t    }\n\t  },\n\t\n\t  getPublicInstance: function () {\n\t    return getNode(this);\n\t  }\n\t\n\t};\n\t\n\t_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);\n\t\n\tmodule.exports = ReactDOMComponent;\n\n/***/ },\n/* 127 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMContainerInfo\n\t */\n\t\n\t'use strict';\n\t\n\tvar validateDOMNesting = __webpack_require__(55);\n\t\n\tvar DOC_NODE_TYPE = 9;\n\t\n\tfunction ReactDOMContainerInfo(topLevelWrapper, node) {\n\t  var info = {\n\t    _topLevelWrapper: topLevelWrapper,\n\t    _idCounter: 1,\n\t    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,\n\t    _node: node,\n\t    _tag: node ? node.nodeName.toLowerCase() : null,\n\t    _namespaceURI: node ? node.namespaceURI : null\n\t  };\n\t  if (false) {\n\t    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;\n\t  }\n\t  return info;\n\t}\n\t\n\tmodule.exports = ReactDOMContainerInfo;\n\n/***/ },\n/* 128 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMEmptyComponent\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar DOMLazyTree = __webpack_require__(16);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\t\n\tvar ReactDOMEmptyComponent = function (instantiate) {\n\t  // ReactCompositeComponent uses this:\n\t  this._currentElement = null;\n\t  // ReactDOMComponentTree uses these:\n\t  this._hostNode = null;\n\t  this._hostParent = null;\n\t  this._hostContainerInfo = null;\n\t  this._domID = 0;\n\t};\n\t_assign(ReactDOMEmptyComponent.prototype, {\n\t  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n\t    var domID = hostContainerInfo._idCounter++;\n\t    this._domID = domID;\n\t    this._hostParent = hostParent;\n\t    this._hostContainerInfo = hostContainerInfo;\n\t\n\t    var nodeValue = ' react-empty: ' + this._domID + ' ';\n\t    if (transaction.useCreateElement) {\n\t      var ownerDocument = hostContainerInfo._ownerDocument;\n\t      var node = ownerDocument.createComment(nodeValue);\n\t      ReactDOMComponentTree.precacheNode(this, node);\n\t      return DOMLazyTree(node);\n\t    } else {\n\t      if (transaction.renderToStaticMarkup) {\n\t        // Normally we'd insert a comment node, but since this is a situation\n\t        // where React won't take over (static pages), we can simply return\n\t        // nothing.\n\t        return '';\n\t      }\n\t      return '<!--' + nodeValue + '-->';\n\t    }\n\t  },\n\t  receiveComponent: function () {},\n\t  getHostNode: function () {\n\t    return ReactDOMComponentTree.getNodeFromInstance(this);\n\t  },\n\t  unmountComponent: function () {\n\t    ReactDOMComponentTree.uncacheNode(this);\n\t  }\n\t});\n\t\n\tmodule.exports = ReactDOMEmptyComponent;\n\n/***/ },\n/* 129 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMFactories\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactElement = __webpack_require__(9);\n\t\n\t/**\n\t * Create a factory that creates HTML tag elements.\n\t *\n\t * @private\n\t */\n\tvar createDOMFactory = ReactElement.createFactory;\n\tif (false) {\n\t  var ReactElementValidator = require('./ReactElementValidator');\n\t  createDOMFactory = ReactElementValidator.createFactory;\n\t}\n\t\n\t/**\n\t * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n\t * This is also accessible via `React.DOM`.\n\t *\n\t * @public\n\t */\n\tvar ReactDOMFactories = {\n\t  a: createDOMFactory('a'),\n\t  abbr: createDOMFactory('abbr'),\n\t  address: createDOMFactory('address'),\n\t  area: createDOMFactory('area'),\n\t  article: createDOMFactory('article'),\n\t  aside: createDOMFactory('aside'),\n\t  audio: createDOMFactory('audio'),\n\t  b: createDOMFactory('b'),\n\t  base: createDOMFactory('base'),\n\t  bdi: createDOMFactory('bdi'),\n\t  bdo: createDOMFactory('bdo'),\n\t  big: createDOMFactory('big'),\n\t  blockquote: createDOMFactory('blockquote'),\n\t  body: createDOMFactory('body'),\n\t  br: createDOMFactory('br'),\n\t  button: createDOMFactory('button'),\n\t  canvas: createDOMFactory('canvas'),\n\t  caption: createDOMFactory('caption'),\n\t  cite: createDOMFactory('cite'),\n\t  code: createDOMFactory('code'),\n\t  col: createDOMFactory('col'),\n\t  colgroup: createDOMFactory('colgroup'),\n\t  data: createDOMFactory('data'),\n\t  datalist: createDOMFactory('datalist'),\n\t  dd: createDOMFactory('dd'),\n\t  del: createDOMFactory('del'),\n\t  details: createDOMFactory('details'),\n\t  dfn: createDOMFactory('dfn'),\n\t  dialog: createDOMFactory('dialog'),\n\t  div: createDOMFactory('div'),\n\t  dl: createDOMFactory('dl'),\n\t  dt: createDOMFactory('dt'),\n\t  em: createDOMFactory('em'),\n\t  embed: createDOMFactory('embed'),\n\t  fieldset: createDOMFactory('fieldset'),\n\t  figcaption: createDOMFactory('figcaption'),\n\t  figure: createDOMFactory('figure'),\n\t  footer: createDOMFactory('footer'),\n\t  form: createDOMFactory('form'),\n\t  h1: createDOMFactory('h1'),\n\t  h2: createDOMFactory('h2'),\n\t  h3: createDOMFactory('h3'),\n\t  h4: createDOMFactory('h4'),\n\t  h5: createDOMFactory('h5'),\n\t  h6: createDOMFactory('h6'),\n\t  head: createDOMFactory('head'),\n\t  header: createDOMFactory('header'),\n\t  hgroup: createDOMFactory('hgroup'),\n\t  hr: createDOMFactory('hr'),\n\t  html: createDOMFactory('html'),\n\t  i: createDOMFactory('i'),\n\t  iframe: createDOMFactory('iframe'),\n\t  img: createDOMFactory('img'),\n\t  input: createDOMFactory('input'),\n\t  ins: createDOMFactory('ins'),\n\t  kbd: createDOMFactory('kbd'),\n\t  keygen: createDOMFactory('keygen'),\n\t  label: createDOMFactory('label'),\n\t  legend: createDOMFactory('legend'),\n\t  li: createDOMFactory('li'),\n\t  link: createDOMFactory('link'),\n\t  main: createDOMFactory('main'),\n\t  map: createDOMFactory('map'),\n\t  mark: createDOMFactory('mark'),\n\t  menu: createDOMFactory('menu'),\n\t  menuitem: createDOMFactory('menuitem'),\n\t  meta: createDOMFactory('meta'),\n\t  meter: createDOMFactory('meter'),\n\t  nav: createDOMFactory('nav'),\n\t  noscript: createDOMFactory('noscript'),\n\t  object: createDOMFactory('object'),\n\t  ol: createDOMFactory('ol'),\n\t  optgroup: createDOMFactory('optgroup'),\n\t  option: createDOMFactory('option'),\n\t  output: createDOMFactory('output'),\n\t  p: createDOMFactory('p'),\n\t  param: createDOMFactory('param'),\n\t  picture: createDOMFactory('picture'),\n\t  pre: createDOMFactory('pre'),\n\t  progress: createDOMFactory('progress'),\n\t  q: createDOMFactory('q'),\n\t  rp: createDOMFactory('rp'),\n\t  rt: createDOMFactory('rt'),\n\t  ruby: createDOMFactory('ruby'),\n\t  s: createDOMFactory('s'),\n\t  samp: createDOMFactory('samp'),\n\t  script: createDOMFactory('script'),\n\t  section: createDOMFactory('section'),\n\t  select: createDOMFactory('select'),\n\t  small: createDOMFactory('small'),\n\t  source: createDOMFactory('source'),\n\t  span: createDOMFactory('span'),\n\t  strong: createDOMFactory('strong'),\n\t  style: createDOMFactory('style'),\n\t  sub: createDOMFactory('sub'),\n\t  summary: createDOMFactory('summary'),\n\t  sup: createDOMFactory('sup'),\n\t  table: createDOMFactory('table'),\n\t  tbody: createDOMFactory('tbody'),\n\t  td: createDOMFactory('td'),\n\t  textarea: createDOMFactory('textarea'),\n\t  tfoot: createDOMFactory('tfoot'),\n\t  th: createDOMFactory('th'),\n\t  thead: createDOMFactory('thead'),\n\t  time: createDOMFactory('time'),\n\t  title: createDOMFactory('title'),\n\t  tr: createDOMFactory('tr'),\n\t  track: createDOMFactory('track'),\n\t  u: createDOMFactory('u'),\n\t  ul: createDOMFactory('ul'),\n\t  'var': createDOMFactory('var'),\n\t  video: createDOMFactory('video'),\n\t  wbr: createDOMFactory('wbr'),\n\t\n\t  // SVG\n\t  circle: createDOMFactory('circle'),\n\t  clipPath: createDOMFactory('clipPath'),\n\t  defs: createDOMFactory('defs'),\n\t  ellipse: createDOMFactory('ellipse'),\n\t  g: createDOMFactory('g'),\n\t  image: createDOMFactory('image'),\n\t  line: createDOMFactory('line'),\n\t  linearGradient: createDOMFactory('linearGradient'),\n\t  mask: createDOMFactory('mask'),\n\t  path: createDOMFactory('path'),\n\t  pattern: createDOMFactory('pattern'),\n\t  polygon: createDOMFactory('polygon'),\n\t  polyline: createDOMFactory('polyline'),\n\t  radialGradient: createDOMFactory('radialGradient'),\n\t  rect: createDOMFactory('rect'),\n\t  stop: createDOMFactory('stop'),\n\t  svg: createDOMFactory('svg'),\n\t  text: createDOMFactory('text'),\n\t  tspan: createDOMFactory('tspan')\n\t};\n\t\n\tmodule.exports = ReactDOMFactories;\n\n/***/ },\n/* 130 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMFeatureFlags\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDOMFeatureFlags = {\n\t  useCreateElement: true\n\t};\n\t\n\tmodule.exports = ReactDOMFeatureFlags;\n\n/***/ },\n/* 131 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMIDOperations\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMChildrenOperations = __webpack_require__(33);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\t\n\t/**\n\t * Operations used to process updates to DOM nodes.\n\t */\n\tvar ReactDOMIDOperations = {\n\t\n\t  /**\n\t   * Updates a component's children by processing a series of updates.\n\t   *\n\t   * @param {array<object>} updates List of update configurations.\n\t   * @internal\n\t   */\n\t  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {\n\t    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);\n\t    DOMChildrenOperations.processUpdates(node, updates);\n\t  }\n\t};\n\t\n\tmodule.exports = ReactDOMIDOperations;\n\n/***/ },\n/* 132 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMInput\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar DisabledInputUtils = __webpack_require__(26);\n\tvar DOMPropertyOperations = __webpack_require__(62);\n\tvar LinkedValueUtils = __webpack_require__(38);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactUpdates = __webpack_require__(10);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar didWarnValueLink = false;\n\tvar didWarnCheckedLink = false;\n\tvar didWarnValueDefaultValue = false;\n\tvar didWarnCheckedDefaultChecked = false;\n\tvar didWarnControlledToUncontrolled = false;\n\tvar didWarnUncontrolledToControlled = false;\n\t\n\tfunction forceUpdateIfMounted() {\n\t  if (this._rootNodeID) {\n\t    // DOM component is still mounted; update\n\t    ReactDOMInput.updateWrapper(this);\n\t  }\n\t}\n\t\n\tfunction isControlled(props) {\n\t  var usesChecked = props.type === 'checkbox' || props.type === 'radio';\n\t  return usesChecked ? props.checked != null : props.value != null;\n\t}\n\t\n\t/**\n\t * Implements an <input> host component that allows setting these optional\n\t * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n\t *\n\t * If `checked` or `value` are not supplied (or null/undefined), user actions\n\t * that affect the checked state or value will trigger updates to the element.\n\t *\n\t * If they are supplied (and not null/undefined), the rendered element will not\n\t * trigger updates to the element. Instead, the props must change in order for\n\t * the rendered element to be updated.\n\t *\n\t * The rendered element will be initialized as unchecked (or `defaultChecked`)\n\t * with an empty value (or `defaultValue`).\n\t *\n\t * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n\t */\n\tvar ReactDOMInput = {\n\t  getHostProps: function (inst, props) {\n\t    var value = LinkedValueUtils.getValue(props);\n\t    var checked = LinkedValueUtils.getChecked(props);\n\t\n\t    var hostProps = _assign({\n\t      // Make sure we set .type before any other properties (setting .value\n\t      // before .type means .value is lost in IE11 and below)\n\t      type: undefined,\n\t      // Make sure we set .step before .value (setting .value before .step\n\t      // means .value is rounded on mount, based upon step precision)\n\t      step: undefined,\n\t      // Make sure we set .min & .max before .value (to ensure proper order\n\t      // in corner cases such as min or max deriving from value, e.g. Issue #7170)\n\t      min: undefined,\n\t      max: undefined\n\t    }, DisabledInputUtils.getHostProps(inst, props), {\n\t      defaultChecked: undefined,\n\t      defaultValue: undefined,\n\t      value: value != null ? value : inst._wrapperState.initialValue,\n\t      checked: checked != null ? checked : inst._wrapperState.initialChecked,\n\t      onChange: inst._wrapperState.onChange\n\t    });\n\t\n\t    return hostProps;\n\t  },\n\t\n\t  mountWrapper: function (inst, props) {\n\t    if (false) {\n\t      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);\n\t\n\t      var owner = inst._currentElement._owner;\n\t\n\t      if (props.valueLink !== undefined && !didWarnValueLink) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n\t        didWarnValueLink = true;\n\t      }\n\t      if (props.checkedLink !== undefined && !didWarnCheckedLink) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n\t        didWarnCheckedLink = true;\n\t      }\n\t      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n\t        didWarnCheckedDefaultChecked = true;\n\t      }\n\t      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n\t        didWarnValueDefaultValue = true;\n\t      }\n\t    }\n\t\n\t    var defaultValue = props.defaultValue;\n\t    inst._wrapperState = {\n\t      initialChecked: props.checked != null ? props.checked : props.defaultChecked,\n\t      initialValue: props.value != null ? props.value : defaultValue,\n\t      listeners: null,\n\t      onChange: _handleChange.bind(inst)\n\t    };\n\t\n\t    if (false) {\n\t      inst._wrapperState.controlled = isControlled(props);\n\t    }\n\t  },\n\t\n\t  updateWrapper: function (inst) {\n\t    var props = inst._currentElement.props;\n\t\n\t    if (false) {\n\t      var controlled = isControlled(props);\n\t      var owner = inst._currentElement._owner;\n\t\n\t      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n\t        didWarnUncontrolledToControlled = true;\n\t      }\n\t      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n\t        didWarnControlledToUncontrolled = true;\n\t      }\n\t    }\n\t\n\t    // TODO: Shouldn't this be getChecked(props)?\n\t    var checked = props.checked;\n\t    if (checked != null) {\n\t      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);\n\t    }\n\t\n\t    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t    var value = LinkedValueUtils.getValue(props);\n\t    if (value != null) {\n\t\n\t      // Cast `value` to a string to ensure the value is set correctly. While\n\t      // browsers typically do this as necessary, jsdom doesn't.\n\t      var newValue = '' + value;\n\t\n\t      // To avoid side effects (such as losing text selection), only set value if changed\n\t      if (newValue !== node.value) {\n\t        node.value = newValue;\n\t      }\n\t    } else {\n\t      if (props.value == null && props.defaultValue != null) {\n\t        node.defaultValue = '' + props.defaultValue;\n\t      }\n\t      if (props.checked == null && props.defaultChecked != null) {\n\t        node.defaultChecked = !!props.defaultChecked;\n\t      }\n\t    }\n\t  },\n\t\n\t  postMountWrapper: function (inst) {\n\t    var props = inst._currentElement.props;\n\t\n\t    // This is in postMount because we need access to the DOM node, which is not\n\t    // available until after the component has mounted.\n\t    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t\n\t    // Detach value from defaultValue. We won't do anything if we're working on\n\t    // submit or reset inputs as those values & defaultValues are linked. They\n\t    // are not resetable nodes so this operation doesn't matter and actually\n\t    // removes browser-default values (eg \"Submit Query\") when no value is\n\t    // provided.\n\t\n\t    switch (props.type) {\n\t      case 'submit':\n\t      case 'reset':\n\t        break;\n\t      case 'color':\n\t      case 'date':\n\t      case 'datetime':\n\t      case 'datetime-local':\n\t      case 'month':\n\t      case 'time':\n\t      case 'week':\n\t        // This fixes the no-show issue on iOS Safari and Android Chrome:\n\t        // https://github.com/facebook/react/issues/7233\n\t        node.value = '';\n\t        node.value = node.defaultValue;\n\t        break;\n\t      default:\n\t        node.value = node.value;\n\t        break;\n\t    }\n\t\n\t    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug\n\t    // this is needed to work around a chrome bug where setting defaultChecked\n\t    // will sometimes influence the value of checked (even after detachment).\n\t    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416\n\t    // We need to temporarily unset name to avoid disrupting radio button groups.\n\t    var name = node.name;\n\t    if (name !== '') {\n\t      node.name = '';\n\t    }\n\t    node.defaultChecked = !node.defaultChecked;\n\t    node.defaultChecked = !node.defaultChecked;\n\t    if (name !== '') {\n\t      node.name = name;\n\t    }\n\t  }\n\t};\n\t\n\tfunction _handleChange(event) {\n\t  var props = this._currentElement.props;\n\t\n\t  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\t\n\t  // Here we use asap to wait until all updates have propagated, which\n\t  // is important when using controlled components within layers:\n\t  // https://github.com/facebook/react/issues/1698\n\t  ReactUpdates.asap(forceUpdateIfMounted, this);\n\t\n\t  var name = props.name;\n\t  if (props.type === 'radio' && name != null) {\n\t    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);\n\t    var queryRoot = rootNode;\n\t\n\t    while (queryRoot.parentNode) {\n\t      queryRoot = queryRoot.parentNode;\n\t    }\n\t\n\t    // If `rootNode.form` was non-null, then we could try `form.elements`,\n\t    // but that sometimes behaves strangely in IE8. We could also try using\n\t    // `form.getElementsByName`, but that will only return direct children\n\t    // and won't include inputs that use the HTML5 `form=` attribute. Since\n\t    // the input might not even be in a form, let's just use the global\n\t    // `querySelectorAll` to ensure we don't miss anything.\n\t    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\t\n\t    for (var i = 0; i < group.length; i++) {\n\t      var otherNode = group[i];\n\t      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n\t        continue;\n\t      }\n\t      // This will throw if radio buttons rendered by different copies of React\n\t      // and the same name are rendered into the same form (same as #1939).\n\t      // That's probably okay; we don't support it just as we don't support\n\t      // mixing React radio buttons with non-React ones.\n\t      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);\n\t      !otherInstance ?  false ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;\n\t      // If this is a controlled radio button group, forcing the input that\n\t      // was previously checked to update will cause it to be come re-checked\n\t      // as appropriate.\n\t      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\n\t    }\n\t  }\n\t\n\t  return returnValue;\n\t}\n\t\n\tmodule.exports = ReactDOMInput;\n\n/***/ },\n/* 133 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMOption\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar ReactChildren = __webpack_require__(63);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactDOMSelect = __webpack_require__(66);\n\t\n\tvar warning = __webpack_require__(3);\n\tvar didWarnInvalidOptionChildren = false;\n\t\n\tfunction flattenChildren(children) {\n\t  var content = '';\n\t\n\t  // Flatten children and warn if they aren't strings or numbers;\n\t  // invalid types are ignored.\n\t  ReactChildren.forEach(children, function (child) {\n\t    if (child == null) {\n\t      return;\n\t    }\n\t    if (typeof child === 'string' || typeof child === 'number') {\n\t      content += child;\n\t    } else if (!didWarnInvalidOptionChildren) {\n\t      didWarnInvalidOptionChildren = true;\n\t       false ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;\n\t    }\n\t  });\n\t\n\t  return content;\n\t}\n\t\n\t/**\n\t * Implements an <option> host component that warns when `selected` is set.\n\t */\n\tvar ReactDOMOption = {\n\t  mountWrapper: function (inst, props, hostParent) {\n\t    // TODO (yungsters): Remove support for `selected` in <option>.\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;\n\t    }\n\t\n\t    // Look up whether this option is 'selected'\n\t    var selectValue = null;\n\t    if (hostParent != null) {\n\t      var selectParent = hostParent;\n\t\n\t      if (selectParent._tag === 'optgroup') {\n\t        selectParent = selectParent._hostParent;\n\t      }\n\t\n\t      if (selectParent != null && selectParent._tag === 'select') {\n\t        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);\n\t      }\n\t    }\n\t\n\t    // If the value is null (e.g., no specified value or after initial mount)\n\t    // or missing (e.g., for <datalist>), we don't change props.selected\n\t    var selected = null;\n\t    if (selectValue != null) {\n\t      var value;\n\t      if (props.value != null) {\n\t        value = props.value + '';\n\t      } else {\n\t        value = flattenChildren(props.children);\n\t      }\n\t      selected = false;\n\t      if (Array.isArray(selectValue)) {\n\t        // multiple\n\t        for (var i = 0; i < selectValue.length; i++) {\n\t          if ('' + selectValue[i] === value) {\n\t            selected = true;\n\t            break;\n\t          }\n\t        }\n\t      } else {\n\t        selected = '' + selectValue === value;\n\t      }\n\t    }\n\t\n\t    inst._wrapperState = { selected: selected };\n\t  },\n\t\n\t  postMountWrapper: function (inst) {\n\t    // value=\"\" should make a value attribute (#6219)\n\t    var props = inst._currentElement.props;\n\t    if (props.value != null) {\n\t      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t      node.setAttribute('value', props.value);\n\t    }\n\t  },\n\t\n\t  getHostProps: function (inst, props) {\n\t    var hostProps = _assign({ selected: undefined, children: undefined }, props);\n\t\n\t    // Read state only from initial mount because <select> updates value\n\t    // manually; we need the initial state only for server rendering\n\t    if (inst._wrapperState.selected != null) {\n\t      hostProps.selected = inst._wrapperState.selected;\n\t    }\n\t\n\t    var content = flattenChildren(props.children);\n\t\n\t    if (content) {\n\t      hostProps.children = content;\n\t    }\n\t\n\t    return hostProps;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactDOMOption;\n\n/***/ },\n/* 134 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMSelection\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar getNodeForCharacterOffset = __webpack_require__(170);\n\tvar getTextContentAccessor = __webpack_require__(82);\n\t\n\t/**\n\t * While `isCollapsed` is available on the Selection object and `collapsed`\n\t * is available on the Range object, IE11 sometimes gets them wrong.\n\t * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n\t */\n\tfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n\t  return anchorNode === focusNode && anchorOffset === focusOffset;\n\t}\n\t\n\t/**\n\t * Get the appropriate anchor and focus node/offset pairs for IE.\n\t *\n\t * The catch here is that IE's selection API doesn't provide information\n\t * about whether the selection is forward or backward, so we have to\n\t * behave as though it's always forward.\n\t *\n\t * IE text differs from modern selection in that it behaves as though\n\t * block elements end with a new line. This means character offsets will\n\t * differ between the two APIs.\n\t *\n\t * @param {DOMElement} node\n\t * @return {object}\n\t */\n\tfunction getIEOffsets(node) {\n\t  var selection = document.selection;\n\t  var selectedRange = selection.createRange();\n\t  var selectedLength = selectedRange.text.length;\n\t\n\t  // Duplicate selection so we can move range without breaking user selection.\n\t  var fromStart = selectedRange.duplicate();\n\t  fromStart.moveToElementText(node);\n\t  fromStart.setEndPoint('EndToStart', selectedRange);\n\t\n\t  var startOffset = fromStart.text.length;\n\t  var endOffset = startOffset + selectedLength;\n\t\n\t  return {\n\t    start: startOffset,\n\t    end: endOffset\n\t  };\n\t}\n\t\n\t/**\n\t * @param {DOMElement} node\n\t * @return {?object}\n\t */\n\tfunction getModernOffsets(node) {\n\t  var selection = window.getSelection && window.getSelection();\n\t\n\t  if (!selection || selection.rangeCount === 0) {\n\t    return null;\n\t  }\n\t\n\t  var anchorNode = selection.anchorNode;\n\t  var anchorOffset = selection.anchorOffset;\n\t  var focusNode = selection.focusNode;\n\t  var focusOffset = selection.focusOffset;\n\t\n\t  var currentRange = selection.getRangeAt(0);\n\t\n\t  // In Firefox, range.startContainer and range.endContainer can be \"anonymous\n\t  // divs\", e.g. the up/down buttons on an <input type=\"number\">. Anonymous\n\t  // divs do not seem to expose properties, triggering a \"Permission denied\n\t  // error\" if any of its properties are accessed. The only seemingly possible\n\t  // way to avoid erroring is to access a property that typically works for\n\t  // non-anonymous divs and catch any error that may otherwise arise. See\n\t  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n\t  try {\n\t    /* eslint-disable no-unused-expressions */\n\t    currentRange.startContainer.nodeType;\n\t    currentRange.endContainer.nodeType;\n\t    /* eslint-enable no-unused-expressions */\n\t  } catch (e) {\n\t    return null;\n\t  }\n\t\n\t  // If the node and offset values are the same, the selection is collapsed.\n\t  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n\t  // this value wrong.\n\t  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\n\t\n\t  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\t\n\t  var tempRange = currentRange.cloneRange();\n\t  tempRange.selectNodeContents(node);\n\t  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\t\n\t  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);\n\t\n\t  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n\t  var end = start + rangeLength;\n\t\n\t  // Detect whether the selection is backward.\n\t  var detectionRange = document.createRange();\n\t  detectionRange.setStart(anchorNode, anchorOffset);\n\t  detectionRange.setEnd(focusNode, focusOffset);\n\t  var isBackward = detectionRange.collapsed;\n\t\n\t  return {\n\t    start: isBackward ? end : start,\n\t    end: isBackward ? start : end\n\t  };\n\t}\n\t\n\t/**\n\t * @param {DOMElement|DOMTextNode} node\n\t * @param {object} offsets\n\t */\n\tfunction setIEOffsets(node, offsets) {\n\t  var range = document.selection.createRange().duplicate();\n\t  var start, end;\n\t\n\t  if (offsets.end === undefined) {\n\t    start = offsets.start;\n\t    end = start;\n\t  } else if (offsets.start > offsets.end) {\n\t    start = offsets.end;\n\t    end = offsets.start;\n\t  } else {\n\t    start = offsets.start;\n\t    end = offsets.end;\n\t  }\n\t\n\t  range.moveToElementText(node);\n\t  range.moveStart('character', start);\n\t  range.setEndPoint('EndToStart', range);\n\t  range.moveEnd('character', end - start);\n\t  range.select();\n\t}\n\t\n\t/**\n\t * In modern non-IE browsers, we can support both forward and backward\n\t * selections.\n\t *\n\t * Note: IE10+ supports the Selection object, but it does not support\n\t * the `extend` method, which means that even in modern IE, it's not possible\n\t * to programmatically create a backward selection. Thus, for all IE\n\t * versions, we use the old IE API to create our selections.\n\t *\n\t * @param {DOMElement|DOMTextNode} node\n\t * @param {object} offsets\n\t */\n\tfunction setModernOffsets(node, offsets) {\n\t  if (!window.getSelection) {\n\t    return;\n\t  }\n\t\n\t  var selection = window.getSelection();\n\t  var length = node[getTextContentAccessor()].length;\n\t  var start = Math.min(offsets.start, length);\n\t  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);\n\t\n\t  // IE 11 uses modern selection, but doesn't support the extend method.\n\t  // Flip backward selections, so we can set with a single range.\n\t  if (!selection.extend && start > end) {\n\t    var temp = end;\n\t    end = start;\n\t    start = temp;\n\t  }\n\t\n\t  var startMarker = getNodeForCharacterOffset(node, start);\n\t  var endMarker = getNodeForCharacterOffset(node, end);\n\t\n\t  if (startMarker && endMarker) {\n\t    var range = document.createRange();\n\t    range.setStart(startMarker.node, startMarker.offset);\n\t    selection.removeAllRanges();\n\t\n\t    if (start > end) {\n\t      selection.addRange(range);\n\t      selection.extend(endMarker.node, endMarker.offset);\n\t    } else {\n\t      range.setEnd(endMarker.node, endMarker.offset);\n\t      selection.addRange(range);\n\t    }\n\t  }\n\t}\n\t\n\tvar useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);\n\t\n\tvar ReactDOMSelection = {\n\t  /**\n\t   * @param {DOMElement} node\n\t   */\n\t  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\t\n\t  /**\n\t   * @param {DOMElement|DOMTextNode} node\n\t   * @param {object} offsets\n\t   */\n\t  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n\t};\n\t\n\tmodule.exports = ReactDOMSelection;\n\n/***/ },\n/* 135 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMTextComponent\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar DOMChildrenOperations = __webpack_require__(33);\n\tvar DOMLazyTree = __webpack_require__(16);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\t\n\tvar escapeTextContentForBrowser = __webpack_require__(29);\n\tvar invariant = __webpack_require__(1);\n\tvar validateDOMNesting = __webpack_require__(55);\n\t\n\t/**\n\t * Text nodes violate a couple assumptions that React makes about components:\n\t *\n\t *  - When mounting text into the DOM, adjacent text nodes are merged.\n\t *  - Text nodes cannot be assigned a React root ID.\n\t *\n\t * This component is used to wrap strings between comment nodes so that they\n\t * can undergo the same reconciliation that is applied to elements.\n\t *\n\t * TODO: Investigate representing React components in the DOM with text nodes.\n\t *\n\t * @class ReactDOMTextComponent\n\t * @extends ReactComponent\n\t * @internal\n\t */\n\tvar ReactDOMTextComponent = function (text) {\n\t  // TODO: This is really a ReactText (ReactNode), not a ReactElement\n\t  this._currentElement = text;\n\t  this._stringText = '' + text;\n\t  // ReactDOMComponentTree uses these:\n\t  this._hostNode = null;\n\t  this._hostParent = null;\n\t\n\t  // Properties\n\t  this._domID = 0;\n\t  this._mountIndex = 0;\n\t  this._closingComment = null;\n\t  this._commentNodes = null;\n\t};\n\t\n\t_assign(ReactDOMTextComponent.prototype, {\n\t\n\t  /**\n\t   * Creates the markup for this text node. This node is not intended to have\n\t   * any features besides containing text content.\n\t   *\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @return {string} Markup for this text node.\n\t   * @internal\n\t   */\n\t  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n\t    if (false) {\n\t      var parentInfo;\n\t      if (hostParent != null) {\n\t        parentInfo = hostParent._ancestorInfo;\n\t      } else if (hostContainerInfo != null) {\n\t        parentInfo = hostContainerInfo._ancestorInfo;\n\t      }\n\t      if (parentInfo) {\n\t        // parentInfo should always be present except for the top-level\n\t        // component when server rendering\n\t        validateDOMNesting(null, this._stringText, this, parentInfo);\n\t      }\n\t    }\n\t\n\t    var domID = hostContainerInfo._idCounter++;\n\t    var openingValue = ' react-text: ' + domID + ' ';\n\t    var closingValue = ' /react-text ';\n\t    this._domID = domID;\n\t    this._hostParent = hostParent;\n\t    if (transaction.useCreateElement) {\n\t      var ownerDocument = hostContainerInfo._ownerDocument;\n\t      var openingComment = ownerDocument.createComment(openingValue);\n\t      var closingComment = ownerDocument.createComment(closingValue);\n\t      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());\n\t      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));\n\t      if (this._stringText) {\n\t        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));\n\t      }\n\t      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));\n\t      ReactDOMComponentTree.precacheNode(this, openingComment);\n\t      this._closingComment = closingComment;\n\t      return lazyTree;\n\t    } else {\n\t      var escapedText = escapeTextContentForBrowser(this._stringText);\n\t\n\t      if (transaction.renderToStaticMarkup) {\n\t        // Normally we'd wrap this between comment nodes for the reasons stated\n\t        // above, but since this is a situation where React won't take over\n\t        // (static pages), we can simply return the text as it is.\n\t        return escapedText;\n\t      }\n\t\n\t      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Updates this component by updating the text content.\n\t   *\n\t   * @param {ReactText} nextText The next text content\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   */\n\t  receiveComponent: function (nextText, transaction) {\n\t    if (nextText !== this._currentElement) {\n\t      this._currentElement = nextText;\n\t      var nextStringText = '' + nextText;\n\t      if (nextStringText !== this._stringText) {\n\t        // TODO: Save this as pending props and use performUpdateIfNecessary\n\t        // and/or updateComponent to do the actual update for consistency with\n\t        // other component types?\n\t        this._stringText = nextStringText;\n\t        var commentNodes = this.getHostNode();\n\t        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);\n\t      }\n\t    }\n\t  },\n\t\n\t  getHostNode: function () {\n\t    var hostNode = this._commentNodes;\n\t    if (hostNode) {\n\t      return hostNode;\n\t    }\n\t    if (!this._closingComment) {\n\t      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);\n\t      var node = openingComment.nextSibling;\n\t      while (true) {\n\t        !(node != null) ?  false ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;\n\t        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {\n\t          this._closingComment = node;\n\t          break;\n\t        }\n\t        node = node.nextSibling;\n\t      }\n\t    }\n\t    hostNode = [this._hostNode, this._closingComment];\n\t    this._commentNodes = hostNode;\n\t    return hostNode;\n\t  },\n\t\n\t  unmountComponent: function () {\n\t    this._closingComment = null;\n\t    this._commentNodes = null;\n\t    ReactDOMComponentTree.uncacheNode(this);\n\t  }\n\t\n\t});\n\t\n\tmodule.exports = ReactDOMTextComponent;\n\n/***/ },\n/* 136 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMTextarea\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar DisabledInputUtils = __webpack_require__(26);\n\tvar LinkedValueUtils = __webpack_require__(38);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactUpdates = __webpack_require__(10);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar didWarnValueLink = false;\n\tvar didWarnValDefaultVal = false;\n\t\n\tfunction forceUpdateIfMounted() {\n\t  if (this._rootNodeID) {\n\t    // DOM component is still mounted; update\n\t    ReactDOMTextarea.updateWrapper(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Implements a <textarea> host component that allows setting `value`, and\n\t * `defaultValue`. This differs from the traditional DOM API because value is\n\t * usually set as PCDATA children.\n\t *\n\t * If `value` is not supplied (or null/undefined), user actions that affect the\n\t * value will trigger updates to the element.\n\t *\n\t * If `value` is supplied (and not null/undefined), the rendered element will\n\t * not trigger updates to the element. Instead, the `value` prop must change in\n\t * order for the rendered element to be updated.\n\t *\n\t * The rendered element will be initialized with an empty value, the prop\n\t * `defaultValue` if specified, or the children content (deprecated).\n\t */\n\tvar ReactDOMTextarea = {\n\t  getHostProps: function (inst, props) {\n\t    !(props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;\n\t\n\t    // Always set children to the same thing. In IE9, the selection range will\n\t    // get reset if `textContent` is mutated.  We could add a check in setTextContent\n\t    // to only set the value if/when the value differs from the node value (which would\n\t    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.\n\t    // The value can be a boolean or object so that's why it's forced to be a string.\n\t    var hostProps = _assign({}, DisabledInputUtils.getHostProps(inst, props), {\n\t      value: undefined,\n\t      defaultValue: undefined,\n\t      children: '' + inst._wrapperState.initialValue,\n\t      onChange: inst._wrapperState.onChange\n\t    });\n\t\n\t    return hostProps;\n\t  },\n\t\n\t  mountWrapper: function (inst, props) {\n\t    if (false) {\n\t      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);\n\t      if (props.valueLink !== undefined && !didWarnValueLink) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;\n\t        didWarnValueLink = true;\n\t      }\n\t      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n\t        didWarnValDefaultVal = true;\n\t      }\n\t    }\n\t\n\t    var value = LinkedValueUtils.getValue(props);\n\t    var initialValue = value;\n\t\n\t    // Only bother fetching default value if we're going to use it\n\t    if (value == null) {\n\t      var defaultValue = props.defaultValue;\n\t      // TODO (yungsters): Remove support for children content in <textarea>.\n\t      var children = props.children;\n\t      if (children != null) {\n\t        if (false) {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;\n\t        }\n\t        !(defaultValue == null) ?  false ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;\n\t        if (Array.isArray(children)) {\n\t          !(children.length <= 1) ?  false ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;\n\t          children = children[0];\n\t        }\n\t\n\t        defaultValue = '' + children;\n\t      }\n\t      if (defaultValue == null) {\n\t        defaultValue = '';\n\t      }\n\t      initialValue = defaultValue;\n\t    }\n\t\n\t    inst._wrapperState = {\n\t      initialValue: '' + initialValue,\n\t      listeners: null,\n\t      onChange: _handleChange.bind(inst)\n\t    };\n\t  },\n\t\n\t  updateWrapper: function (inst) {\n\t    var props = inst._currentElement.props;\n\t\n\t    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t    var value = LinkedValueUtils.getValue(props);\n\t    if (value != null) {\n\t      // Cast `value` to a string to ensure the value is set correctly. While\n\t      // browsers typically do this as necessary, jsdom doesn't.\n\t      var newValue = '' + value;\n\t\n\t      // To avoid side effects (such as losing text selection), only set value if changed\n\t      if (newValue !== node.value) {\n\t        node.value = newValue;\n\t      }\n\t      if (props.defaultValue == null) {\n\t        node.defaultValue = newValue;\n\t      }\n\t    }\n\t    if (props.defaultValue != null) {\n\t      node.defaultValue = props.defaultValue;\n\t    }\n\t  },\n\t\n\t  postMountWrapper: function (inst) {\n\t    // This is in postMount because we need access to the DOM node, which is not\n\t    // available until after the component has mounted.\n\t    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t\n\t    // Warning: node.value may be the empty string at this point (IE11) if placeholder is set.\n\t    node.value = node.textContent; // Detach value from defaultValue\n\t  }\n\t};\n\t\n\tfunction _handleChange(event) {\n\t  var props = this._currentElement.props;\n\t  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\t  ReactUpdates.asap(forceUpdateIfMounted, this);\n\t  return returnValue;\n\t}\n\t\n\tmodule.exports = ReactDOMTextarea;\n\n/***/ },\n/* 137 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMTreeTraversal\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Return the lowest common ancestor of A and B, or null if they are in\n\t * different trees.\n\t */\n\tfunction getLowestCommonAncestor(instA, instB) {\n\t  !('_hostNode' in instA) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\t  !('_hostNode' in instB) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\t\n\t  var depthA = 0;\n\t  for (var tempA = instA; tempA; tempA = tempA._hostParent) {\n\t    depthA++;\n\t  }\n\t  var depthB = 0;\n\t  for (var tempB = instB; tempB; tempB = tempB._hostParent) {\n\t    depthB++;\n\t  }\n\t\n\t  // If A is deeper, crawl up.\n\t  while (depthA - depthB > 0) {\n\t    instA = instA._hostParent;\n\t    depthA--;\n\t  }\n\t\n\t  // If B is deeper, crawl up.\n\t  while (depthB - depthA > 0) {\n\t    instB = instB._hostParent;\n\t    depthB--;\n\t  }\n\t\n\t  // Walk in lockstep until we find a match.\n\t  var depth = depthA;\n\t  while (depth--) {\n\t    if (instA === instB) {\n\t      return instA;\n\t    }\n\t    instA = instA._hostParent;\n\t    instB = instB._hostParent;\n\t  }\n\t  return null;\n\t}\n\t\n\t/**\n\t * Return if A is an ancestor of B.\n\t */\n\tfunction isAncestor(instA, instB) {\n\t  !('_hostNode' in instA) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n\t  !('_hostNode' in instB) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n\t\n\t  while (instB) {\n\t    if (instB === instA) {\n\t      return true;\n\t    }\n\t    instB = instB._hostParent;\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Return the parent instance of the passed-in instance.\n\t */\n\tfunction getParentInstance(inst) {\n\t  !('_hostNode' in inst) ?  false ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;\n\t\n\t  return inst._hostParent;\n\t}\n\t\n\t/**\n\t * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n\t */\n\tfunction traverseTwoPhase(inst, fn, arg) {\n\t  var path = [];\n\t  while (inst) {\n\t    path.push(inst);\n\t    inst = inst._hostParent;\n\t  }\n\t  var i;\n\t  for (i = path.length; i-- > 0;) {\n\t    fn(path[i], false, arg);\n\t  }\n\t  for (i = 0; i < path.length; i++) {\n\t    fn(path[i], true, arg);\n\t  }\n\t}\n\t\n\t/**\n\t * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n\t * should would receive a `mouseEnter` or `mouseLeave` event.\n\t *\n\t * Does not invoke the callback on the nearest common ancestor because nothing\n\t * \"entered\" or \"left\" that element.\n\t */\n\tfunction traverseEnterLeave(from, to, fn, argFrom, argTo) {\n\t  var common = from && to ? getLowestCommonAncestor(from, to) : null;\n\t  var pathFrom = [];\n\t  while (from && from !== common) {\n\t    pathFrom.push(from);\n\t    from = from._hostParent;\n\t  }\n\t  var pathTo = [];\n\t  while (to && to !== common) {\n\t    pathTo.push(to);\n\t    to = to._hostParent;\n\t  }\n\t  var i;\n\t  for (i = 0; i < pathFrom.length; i++) {\n\t    fn(pathFrom[i], true, argFrom);\n\t  }\n\t  for (i = pathTo.length; i-- > 0;) {\n\t    fn(pathTo[i], false, argTo);\n\t  }\n\t}\n\t\n\tmodule.exports = {\n\t  isAncestor: isAncestor,\n\t  getLowestCommonAncestor: getLowestCommonAncestor,\n\t  getParentInstance: getParentInstance,\n\t  traverseTwoPhase: traverseTwoPhase,\n\t  traverseEnterLeave: traverseEnterLeave\n\t};\n\n/***/ },\n/* 138 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDefaultBatchingStrategy\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar ReactUpdates = __webpack_require__(10);\n\tvar Transaction = __webpack_require__(24);\n\t\n\tvar emptyFunction = __webpack_require__(7);\n\t\n\tvar RESET_BATCHED_UPDATES = {\n\t  initialize: emptyFunction,\n\t  close: function () {\n\t    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n\t  }\n\t};\n\t\n\tvar FLUSH_BATCHED_UPDATES = {\n\t  initialize: emptyFunction,\n\t  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n\t};\n\t\n\tvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\t\n\tfunction ReactDefaultBatchingStrategyTransaction() {\n\t  this.reinitializeTransaction();\n\t}\n\t\n\t_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {\n\t  getTransactionWrappers: function () {\n\t    return TRANSACTION_WRAPPERS;\n\t  }\n\t});\n\t\n\tvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\t\n\tvar ReactDefaultBatchingStrategy = {\n\t  isBatchingUpdates: false,\n\t\n\t  /**\n\t   * Call the provided function in a context within which calls to `setState`\n\t   * and friends are batched such that components aren't updated unnecessarily.\n\t   */\n\t  batchedUpdates: function (callback, a, b, c, d, e) {\n\t    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\t\n\t    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\t\n\t    // The code is written this way to avoid extra allocations\n\t    if (alreadyBatchingUpdates) {\n\t      callback(a, b, c, d, e);\n\t    } else {\n\t      transaction.perform(callback, null, a, b, c, d, e);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = ReactDefaultBatchingStrategy;\n\n/***/ },\n/* 139 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDefaultInjection\n\t */\n\t\n\t'use strict';\n\t\n\tvar BeforeInputEventPlugin = __webpack_require__(112);\n\tvar ChangeEventPlugin = __webpack_require__(114);\n\tvar DefaultEventPluginOrder = __webpack_require__(116);\n\tvar EnterLeaveEventPlugin = __webpack_require__(117);\n\tvar HTMLDOMPropertyConfig = __webpack_require__(119);\n\tvar ReactComponentBrowserEnvironment = __webpack_require__(122);\n\tvar ReactDOMComponent = __webpack_require__(126);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactDOMEmptyComponent = __webpack_require__(128);\n\tvar ReactDOMTreeTraversal = __webpack_require__(137);\n\tvar ReactDOMTextComponent = __webpack_require__(135);\n\tvar ReactDefaultBatchingStrategy = __webpack_require__(138);\n\tvar ReactEventListener = __webpack_require__(141);\n\tvar ReactInjection = __webpack_require__(142);\n\tvar ReactReconcileTransaction = __webpack_require__(147);\n\tvar SVGDOMPropertyConfig = __webpack_require__(151);\n\tvar SelectEventPlugin = __webpack_require__(152);\n\tvar SimpleEventPlugin = __webpack_require__(153);\n\t\n\tvar alreadyInjected = false;\n\t\n\tfunction inject() {\n\t  if (alreadyInjected) {\n\t    // TODO: This is currently true because these injections are shared between\n\t    // the client and the server package. They should be built independently\n\t    // and not share any injection state. Then this problem will be solved.\n\t    return;\n\t  }\n\t  alreadyInjected = true;\n\t\n\t  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);\n\t\n\t  /**\n\t   * Inject modules for resolving DOM hierarchy and plugin ordering.\n\t   */\n\t  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n\t  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);\n\t  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);\n\t\n\t  /**\n\t   * Some important event plugins included by default (without having to require\n\t   * them).\n\t   */\n\t  ReactInjection.EventPluginHub.injectEventPluginsByName({\n\t    SimpleEventPlugin: SimpleEventPlugin,\n\t    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n\t    ChangeEventPlugin: ChangeEventPlugin,\n\t    SelectEventPlugin: SelectEventPlugin,\n\t    BeforeInputEventPlugin: BeforeInputEventPlugin\n\t  });\n\t\n\t  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);\n\t\n\t  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);\n\t\n\t  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n\t  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n\t\n\t  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {\n\t    return new ReactDOMEmptyComponent(instantiate);\n\t  });\n\t\n\t  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);\n\t  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n\t\n\t  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n\t}\n\t\n\tmodule.exports = {\n\t  inject: inject\n\t};\n\n/***/ },\n/* 140 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactEventEmitterMixin\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventPluginHub = __webpack_require__(20);\n\t\n\tfunction runEventQueueInBatch(events) {\n\t  EventPluginHub.enqueueEvents(events);\n\t  EventPluginHub.processEventQueue(false);\n\t}\n\t\n\tvar ReactEventEmitterMixin = {\n\t\n\t  /**\n\t   * Streams a fired top-level event to `EventPluginHub` where plugins have the\n\t   * opportunity to create `ReactEvent`s to be dispatched.\n\t   */\n\t  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n\t    runEventQueueInBatch(events);\n\t  }\n\t};\n\t\n\tmodule.exports = ReactEventEmitterMixin;\n\n/***/ },\n/* 141 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactEventListener\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar EventListener = __webpack_require__(56);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar PooledClass = __webpack_require__(14);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactUpdates = __webpack_require__(10);\n\t\n\tvar getEventTarget = __webpack_require__(51);\n\tvar getUnboundedScrollPosition = __webpack_require__(93);\n\t\n\t/**\n\t * Find the deepest React component completely containing the root of the\n\t * passed-in instance (for use when entire React trees are nested within each\n\t * other). If React trees are not nested, returns null.\n\t */\n\tfunction findParent(inst) {\n\t  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n\t  // traversal, but caching is difficult to do correctly without using a\n\t  // mutation observer to listen for all DOM changes.\n\t  while (inst._hostParent) {\n\t    inst = inst._hostParent;\n\t  }\n\t  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t  var container = rootNode.parentNode;\n\t  return ReactDOMComponentTree.getClosestInstanceFromNode(container);\n\t}\n\t\n\t// Used to store ancestor hierarchy in top level callback\n\tfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n\t  this.topLevelType = topLevelType;\n\t  this.nativeEvent = nativeEvent;\n\t  this.ancestors = [];\n\t}\n\t_assign(TopLevelCallbackBookKeeping.prototype, {\n\t  destructor: function () {\n\t    this.topLevelType = null;\n\t    this.nativeEvent = null;\n\t    this.ancestors.length = 0;\n\t  }\n\t});\n\tPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\n\t\n\tfunction handleTopLevelImpl(bookKeeping) {\n\t  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);\n\t  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);\n\t\n\t  // Loop through the hierarchy, in case there's any nested components.\n\t  // It's important that we build the array of ancestors before calling any\n\t  // event handlers, because event handlers can modify the DOM, leading to\n\t  // inconsistencies with ReactMount's node cache. See #1105.\n\t  var ancestor = targetInst;\n\t  do {\n\t    bookKeeping.ancestors.push(ancestor);\n\t    ancestor = ancestor && findParent(ancestor);\n\t  } while (ancestor);\n\t\n\t  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n\t    targetInst = bookKeeping.ancestors[i];\n\t    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n\t  }\n\t}\n\t\n\tfunction scrollValueMonitor(cb) {\n\t  var scrollPosition = getUnboundedScrollPosition(window);\n\t  cb(scrollPosition);\n\t}\n\t\n\tvar ReactEventListener = {\n\t  _enabled: true,\n\t  _handleTopLevel: null,\n\t\n\t  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\t\n\t  setHandleTopLevel: function (handleTopLevel) {\n\t    ReactEventListener._handleTopLevel = handleTopLevel;\n\t  },\n\t\n\t  setEnabled: function (enabled) {\n\t    ReactEventListener._enabled = !!enabled;\n\t  },\n\t\n\t  isEnabled: function () {\n\t    return ReactEventListener._enabled;\n\t  },\n\t\n\t  /**\n\t   * Traps top-level events by using event bubbling.\n\t   *\n\t   * @param {string} topLevelType Record from `EventConstants`.\n\t   * @param {string} handlerBaseName Event name (e.g. \"click\").\n\t   * @param {object} handle Element on which to attach listener.\n\t   * @return {?object} An object with a remove function which will forcefully\n\t   *                  remove the listener.\n\t   * @internal\n\t   */\n\t  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n\t    var element = handle;\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n\t  },\n\t\n\t  /**\n\t   * Traps a top-level event by using event capturing.\n\t   *\n\t   * @param {string} topLevelType Record from `EventConstants`.\n\t   * @param {string} handlerBaseName Event name (e.g. \"click\").\n\t   * @param {object} handle Element on which to attach listener.\n\t   * @return {?object} An object with a remove function which will forcefully\n\t   *                  remove the listener.\n\t   * @internal\n\t   */\n\t  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n\t    var element = handle;\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n\t  },\n\t\n\t  monitorScrollValue: function (refresh) {\n\t    var callback = scrollValueMonitor.bind(null, refresh);\n\t    EventListener.listen(window, 'scroll', callback);\n\t  },\n\t\n\t  dispatchEvent: function (topLevelType, nativeEvent) {\n\t    if (!ReactEventListener._enabled) {\n\t      return;\n\t    }\n\t\n\t    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n\t    try {\n\t      // Event queue being processed in the same cycle allows\n\t      // `preventDefault`.\n\t      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n\t    } finally {\n\t      TopLevelCallbackBookKeeping.release(bookKeeping);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = ReactEventListener;\n\n/***/ },\n/* 142 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactInjection\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMProperty = __webpack_require__(17);\n\tvar EventPluginHub = __webpack_require__(20);\n\tvar EventPluginUtils = __webpack_require__(36);\n\tvar ReactComponentEnvironment = __webpack_require__(40);\n\tvar ReactClass = __webpack_require__(64);\n\tvar ReactEmptyComponent = __webpack_require__(67);\n\tvar ReactBrowserEventEmitter = __webpack_require__(27);\n\tvar ReactHostComponent = __webpack_require__(69);\n\tvar ReactUpdates = __webpack_require__(10);\n\t\n\tvar ReactInjection = {\n\t  Component: ReactComponentEnvironment.injection,\n\t  Class: ReactClass.injection,\n\t  DOMProperty: DOMProperty.injection,\n\t  EmptyComponent: ReactEmptyComponent.injection,\n\t  EventPluginHub: EventPluginHub.injection,\n\t  EventPluginUtils: EventPluginUtils.injection,\n\t  EventEmitter: ReactBrowserEventEmitter.injection,\n\t  HostComponent: ReactHostComponent.injection,\n\t  Updates: ReactUpdates.injection\n\t};\n\t\n\tmodule.exports = ReactInjection;\n\n/***/ },\n/* 143 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactMarkupChecksum\n\t */\n\t\n\t'use strict';\n\t\n\tvar adler32 = __webpack_require__(164);\n\t\n\tvar TAG_END = /\\/?>/;\n\tvar COMMENT_START = /^<\\!\\-\\-/;\n\t\n\tvar ReactMarkupChecksum = {\n\t  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\t\n\t  /**\n\t   * @param {string} markup Markup string\n\t   * @return {string} Markup string with checksum attribute attached\n\t   */\n\t  addChecksumToMarkup: function (markup) {\n\t    var checksum = adler32(markup);\n\t\n\t    // Add checksum (handle both parent tags, comments and self-closing tags)\n\t    if (COMMENT_START.test(markup)) {\n\t      return markup;\n\t    } else {\n\t      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\"$&');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {string} markup to use\n\t   * @param {DOMElement} element root React element\n\t   * @returns {boolean} whether or not the markup is the same\n\t   */\n\t  canReuseMarkup: function (markup, element) {\n\t    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\t    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n\t    var markupChecksum = adler32(markup);\n\t    return markupChecksum === existingChecksum;\n\t  }\n\t};\n\t\n\tmodule.exports = ReactMarkupChecksum;\n\n/***/ },\n/* 144 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactMultiChild\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactComponentEnvironment = __webpack_require__(40);\n\tvar ReactInstanceMap = __webpack_require__(22);\n\tvar ReactInstrumentation = __webpack_require__(8);\n\tvar ReactMultiChildUpdateTypes = __webpack_require__(72);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(15);\n\tvar ReactReconciler = __webpack_require__(18);\n\tvar ReactChildReconciler = __webpack_require__(121);\n\t\n\tvar emptyFunction = __webpack_require__(7);\n\tvar flattenChildren = __webpack_require__(168);\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Make an update for markup to be rendered and inserted at a supplied index.\n\t *\n\t * @param {string} markup Markup that renders into an element.\n\t * @param {number} toIndex Destination index.\n\t * @private\n\t */\n\tfunction makeInsertMarkup(markup, afterNode, toIndex) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  return {\n\t    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,\n\t    content: markup,\n\t    fromIndex: null,\n\t    fromNode: null,\n\t    toIndex: toIndex,\n\t    afterNode: afterNode\n\t  };\n\t}\n\t\n\t/**\n\t * Make an update for moving an existing element to another index.\n\t *\n\t * @param {number} fromIndex Source index of the existing element.\n\t * @param {number} toIndex Destination index of the element.\n\t * @private\n\t */\n\tfunction makeMove(child, afterNode, toIndex) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  return {\n\t    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,\n\t    content: null,\n\t    fromIndex: child._mountIndex,\n\t    fromNode: ReactReconciler.getHostNode(child),\n\t    toIndex: toIndex,\n\t    afterNode: afterNode\n\t  };\n\t}\n\t\n\t/**\n\t * Make an update for removing an element at an index.\n\t *\n\t * @param {number} fromIndex Index of the element to remove.\n\t * @private\n\t */\n\tfunction makeRemove(child, node) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  return {\n\t    type: ReactMultiChildUpdateTypes.REMOVE_NODE,\n\t    content: null,\n\t    fromIndex: child._mountIndex,\n\t    fromNode: node,\n\t    toIndex: null,\n\t    afterNode: null\n\t  };\n\t}\n\t\n\t/**\n\t * Make an update for setting the markup of a node.\n\t *\n\t * @param {string} markup Markup that renders into an element.\n\t * @private\n\t */\n\tfunction makeSetMarkup(markup) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  return {\n\t    type: ReactMultiChildUpdateTypes.SET_MARKUP,\n\t    content: markup,\n\t    fromIndex: null,\n\t    fromNode: null,\n\t    toIndex: null,\n\t    afterNode: null\n\t  };\n\t}\n\t\n\t/**\n\t * Make an update for setting the text content.\n\t *\n\t * @param {string} textContent Text content to set.\n\t * @private\n\t */\n\tfunction makeTextContent(textContent) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  return {\n\t    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,\n\t    content: textContent,\n\t    fromIndex: null,\n\t    fromNode: null,\n\t    toIndex: null,\n\t    afterNode: null\n\t  };\n\t}\n\t\n\t/**\n\t * Push an update, if any, onto the queue. Creates a new queue if none is\n\t * passed and always returns the queue. Mutative.\n\t */\n\tfunction enqueue(queue, update) {\n\t  if (update) {\n\t    queue = queue || [];\n\t    queue.push(update);\n\t  }\n\t  return queue;\n\t}\n\t\n\t/**\n\t * Processes any enqueued updates.\n\t *\n\t * @private\n\t */\n\tfunction processQueue(inst, updateQueue) {\n\t  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);\n\t}\n\t\n\tvar setChildrenForInstrumentation = emptyFunction;\n\tif (false) {\n\t  var getDebugID = function (inst) {\n\t    if (!inst._debugID) {\n\t      // Check for ART-like instances. TODO: This is silly/gross.\n\t      var internal;\n\t      if (internal = ReactInstanceMap.get(inst)) {\n\t        inst = internal;\n\t      }\n\t    }\n\t    return inst._debugID;\n\t  };\n\t  setChildrenForInstrumentation = function (children) {\n\t    var debugID = getDebugID(this);\n\t    // TODO: React Native empty components are also multichild.\n\t    // This means they still get into this method but don't have _debugID.\n\t    if (debugID !== 0) {\n\t      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {\n\t        return children[key]._debugID;\n\t      }) : []);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * ReactMultiChild are capable of reconciling multiple children.\n\t *\n\t * @class ReactMultiChild\n\t * @internal\n\t */\n\tvar ReactMultiChild = {\n\t\n\t  /**\n\t   * Provides common functionality for components that must reconcile multiple\n\t   * children. This is used by `ReactDOMComponent` to mount, update, and\n\t   * unmount child components.\n\t   *\n\t   * @lends {ReactMultiChild.prototype}\n\t   */\n\t  Mixin: {\n\t\n\t    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {\n\t      if (false) {\n\t        var selfDebugID = getDebugID(this);\n\t        if (this._currentElement) {\n\t          try {\n\t            ReactCurrentOwner.current = this._currentElement._owner;\n\t            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);\n\t          } finally {\n\t            ReactCurrentOwner.current = null;\n\t          }\n\t        }\n\t      }\n\t      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);\n\t    },\n\t\n\t    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {\n\t      var nextChildren;\n\t      var selfDebugID = 0;\n\t      if (false) {\n\t        selfDebugID = getDebugID(this);\n\t        if (this._currentElement) {\n\t          try {\n\t            ReactCurrentOwner.current = this._currentElement._owner;\n\t            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n\t          } finally {\n\t            ReactCurrentOwner.current = null;\n\t          }\n\t          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n\t          return nextChildren;\n\t        }\n\t      }\n\t      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n\t      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n\t      return nextChildren;\n\t    },\n\t\n\t    /**\n\t     * Generates a \"mount image\" for each of the supplied children. In the case\n\t     * of `ReactDOMComponent`, a mount image is a string of markup.\n\t     *\n\t     * @param {?object} nestedChildren Nested child maps.\n\t     * @return {array} An array of mounted representations.\n\t     * @internal\n\t     */\n\t    mountChildren: function (nestedChildren, transaction, context) {\n\t      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);\n\t      this._renderedChildren = children;\n\t\n\t      var mountImages = [];\n\t      var index = 0;\n\t      for (var name in children) {\n\t        if (children.hasOwnProperty(name)) {\n\t          var child = children[name];\n\t          var selfDebugID = 0;\n\t          if (false) {\n\t            selfDebugID = getDebugID(this);\n\t          }\n\t          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);\n\t          child._mountIndex = index++;\n\t          mountImages.push(mountImage);\n\t        }\n\t      }\n\t\n\t      if (false) {\n\t        setChildrenForInstrumentation.call(this, children);\n\t      }\n\t\n\t      return mountImages;\n\t    },\n\t\n\t    /**\n\t     * Replaces any rendered children with a text content string.\n\t     *\n\t     * @param {string} nextContent String of content.\n\t     * @internal\n\t     */\n\t    updateTextContent: function (nextContent) {\n\t      var prevChildren = this._renderedChildren;\n\t      // Remove any rendered children.\n\t      ReactChildReconciler.unmountChildren(prevChildren, false);\n\t      for (var name in prevChildren) {\n\t        if (prevChildren.hasOwnProperty(name)) {\n\t           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n\t        }\n\t      }\n\t      // Set new text content.\n\t      var updates = [makeTextContent(nextContent)];\n\t      processQueue(this, updates);\n\t    },\n\t\n\t    /**\n\t     * Replaces any rendered children with a markup string.\n\t     *\n\t     * @param {string} nextMarkup String of markup.\n\t     * @internal\n\t     */\n\t    updateMarkup: function (nextMarkup) {\n\t      var prevChildren = this._renderedChildren;\n\t      // Remove any rendered children.\n\t      ReactChildReconciler.unmountChildren(prevChildren, false);\n\t      for (var name in prevChildren) {\n\t        if (prevChildren.hasOwnProperty(name)) {\n\t           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n\t        }\n\t      }\n\t      var updates = [makeSetMarkup(nextMarkup)];\n\t      processQueue(this, updates);\n\t    },\n\t\n\t    /**\n\t     * Updates the rendered children with new children.\n\t     *\n\t     * @param {?object} nextNestedChildrenElements Nested child element maps.\n\t     * @param {ReactReconcileTransaction} transaction\n\t     * @internal\n\t     */\n\t    updateChildren: function (nextNestedChildrenElements, transaction, context) {\n\t      // Hook used by React ART\n\t      this._updateChildren(nextNestedChildrenElements, transaction, context);\n\t    },\n\t\n\t    /**\n\t     * @param {?object} nextNestedChildrenElements Nested child element maps.\n\t     * @param {ReactReconcileTransaction} transaction\n\t     * @final\n\t     * @protected\n\t     */\n\t    _updateChildren: function (nextNestedChildrenElements, transaction, context) {\n\t      var prevChildren = this._renderedChildren;\n\t      var removedNodes = {};\n\t      var mountImages = [];\n\t      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);\n\t      if (!nextChildren && !prevChildren) {\n\t        return;\n\t      }\n\t      var updates = null;\n\t      var name;\n\t      // `nextIndex` will increment for each child in `nextChildren`, but\n\t      // `lastIndex` will be the last index visited in `prevChildren`.\n\t      var nextIndex = 0;\n\t      var lastIndex = 0;\n\t      // `nextMountIndex` will increment for each newly mounted child.\n\t      var nextMountIndex = 0;\n\t      var lastPlacedNode = null;\n\t      for (name in nextChildren) {\n\t        if (!nextChildren.hasOwnProperty(name)) {\n\t          continue;\n\t        }\n\t        var prevChild = prevChildren && prevChildren[name];\n\t        var nextChild = nextChildren[name];\n\t        if (prevChild === nextChild) {\n\t          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));\n\t          lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n\t          prevChild._mountIndex = nextIndex;\n\t        } else {\n\t          if (prevChild) {\n\t            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.\n\t            lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n\t            // The `removedNodes` loop below will actually remove the child.\n\t          }\n\t          // The child must be instantiated before it's mounted.\n\t          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));\n\t          nextMountIndex++;\n\t        }\n\t        nextIndex++;\n\t        lastPlacedNode = ReactReconciler.getHostNode(nextChild);\n\t      }\n\t      // Remove children that are no longer present.\n\t      for (name in removedNodes) {\n\t        if (removedNodes.hasOwnProperty(name)) {\n\t          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));\n\t        }\n\t      }\n\t      if (updates) {\n\t        processQueue(this, updates);\n\t      }\n\t      this._renderedChildren = nextChildren;\n\t\n\t      if (false) {\n\t        setChildrenForInstrumentation.call(this, nextChildren);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Unmounts all rendered children. This should be used to clean up children\n\t     * when this component is unmounted. It does not actually perform any\n\t     * backend operations.\n\t     *\n\t     * @internal\n\t     */\n\t    unmountChildren: function (safely) {\n\t      var renderedChildren = this._renderedChildren;\n\t      ReactChildReconciler.unmountChildren(renderedChildren, safely);\n\t      this._renderedChildren = null;\n\t    },\n\t\n\t    /**\n\t     * Moves a child component to the supplied index.\n\t     *\n\t     * @param {ReactComponent} child Component to move.\n\t     * @param {number} toIndex Destination index of the element.\n\t     * @param {number} lastIndex Last index visited of the siblings of `child`.\n\t     * @protected\n\t     */\n\t    moveChild: function (child, afterNode, toIndex, lastIndex) {\n\t      // If the index of `child` is less than `lastIndex`, then it needs to\n\t      // be moved. Otherwise, we do not need to move it because a child will be\n\t      // inserted or moved before `child`.\n\t      if (child._mountIndex < lastIndex) {\n\t        return makeMove(child, afterNode, toIndex);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Creates a child component.\n\t     *\n\t     * @param {ReactComponent} child Component to create.\n\t     * @param {string} mountImage Markup to insert.\n\t     * @protected\n\t     */\n\t    createChild: function (child, afterNode, mountImage) {\n\t      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);\n\t    },\n\t\n\t    /**\n\t     * Removes a child component.\n\t     *\n\t     * @param {ReactComponent} child Child to remove.\n\t     * @protected\n\t     */\n\t    removeChild: function (child, node) {\n\t      return makeRemove(child, node);\n\t    },\n\t\n\t    /**\n\t     * Mounts a child with the supplied name.\n\t     *\n\t     * NOTE: This is part of `updateChildren` and is here for readability.\n\t     *\n\t     * @param {ReactComponent} child Component to mount.\n\t     * @param {string} name Name of the child.\n\t     * @param {number} index Index at which to insert the child.\n\t     * @param {ReactReconcileTransaction} transaction\n\t     * @private\n\t     */\n\t    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {\n\t      child._mountIndex = index;\n\t      return this.createChild(child, afterNode, mountImage);\n\t    },\n\t\n\t    /**\n\t     * Unmounts a rendered child.\n\t     *\n\t     * NOTE: This is part of `updateChildren` and is here for readability.\n\t     *\n\t     * @param {ReactComponent} child Component to unmount.\n\t     * @private\n\t     */\n\t    _unmountChild: function (child, node) {\n\t      var update = this.removeChild(child, node);\n\t      child._mountIndex = null;\n\t      return update;\n\t    }\n\t\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactMultiChild;\n\n/***/ },\n/* 145 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactOwner\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * ReactOwners are capable of storing references to owned components.\n\t *\n\t * All components are capable of //being// referenced by owner components, but\n\t * only ReactOwner components are capable of //referencing// owned components.\n\t * The named reference is known as a \"ref\".\n\t *\n\t * Refs are available when mounted and updated during reconciliation.\n\t *\n\t *   var MyComponent = React.createClass({\n\t *     render: function() {\n\t *       return (\n\t *         <div onClick={this.handleClick}>\n\t *           <CustomComponent ref=\"custom\" />\n\t *         </div>\n\t *       );\n\t *     },\n\t *     handleClick: function() {\n\t *       this.refs.custom.handleClick();\n\t *     },\n\t *     componentDidMount: function() {\n\t *       this.refs.custom.initialize();\n\t *     }\n\t *   });\n\t *\n\t * Refs should rarely be used. When refs are used, they should only be done to\n\t * control data that is not handled by React's data flow.\n\t *\n\t * @class ReactOwner\n\t */\n\tvar ReactOwner = {\n\t\n\t  /**\n\t   * @param {?object} object\n\t   * @return {boolean} True if `object` is a valid owner.\n\t   * @final\n\t   */\n\t  isValidOwner: function (object) {\n\t    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');\n\t  },\n\t\n\t  /**\n\t   * Adds a component by ref to an owner component.\n\t   *\n\t   * @param {ReactComponent} component Component to reference.\n\t   * @param {string} ref Name by which to refer to the component.\n\t   * @param {ReactOwner} owner Component on which to record the ref.\n\t   * @final\n\t   * @internal\n\t   */\n\t  addComponentAsRefTo: function (component, ref, owner) {\n\t    !ReactOwner.isValidOwner(owner) ?  false ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;\n\t    owner.attachRef(ref, component);\n\t  },\n\t\n\t  /**\n\t   * Removes a component by ref from an owner component.\n\t   *\n\t   * @param {ReactComponent} component Component to dereference.\n\t   * @param {string} ref Name of the ref to remove.\n\t   * @param {ReactOwner} owner Component on which the ref is recorded.\n\t   * @final\n\t   * @internal\n\t   */\n\t  removeComponentAsRefFrom: function (component, ref, owner) {\n\t    !ReactOwner.isValidOwner(owner) ?  false ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;\n\t    var ownerPublicInstance = owner.getPublicInstance();\n\t    // Check that `component`'s owner is still alive and that `component` is still the current ref\n\t    // because we do not want to detach the ref if another component stole it.\n\t    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {\n\t      owner.detachRef(ref);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactOwner;\n\n/***/ },\n/* 146 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactPureComponent\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar ReactComponent = __webpack_require__(39);\n\tvar ReactNoopUpdateQueue = __webpack_require__(43);\n\t\n\tvar emptyObject = __webpack_require__(19);\n\t\n\t/**\n\t * Base class helpers for the updating state of a component.\n\t */\n\tfunction ReactPureComponent(props, context, updater) {\n\t  // Duplicated from ReactComponent.\n\t  this.props = props;\n\t  this.context = context;\n\t  this.refs = emptyObject;\n\t  // We initialize the default updater but the real one gets injected by the\n\t  // renderer.\n\t  this.updater = updater || ReactNoopUpdateQueue;\n\t}\n\t\n\tfunction ComponentDummy() {}\n\tComponentDummy.prototype = ReactComponent.prototype;\n\tReactPureComponent.prototype = new ComponentDummy();\n\tReactPureComponent.prototype.constructor = ReactPureComponent;\n\t// Avoid an extra prototype jump for these methods.\n\t_assign(ReactPureComponent.prototype, ReactComponent.prototype);\n\tReactPureComponent.prototype.isPureReactComponent = true;\n\t\n\tmodule.exports = ReactPureComponent;\n\n/***/ },\n/* 147 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactReconcileTransaction\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar CallbackQueue = __webpack_require__(61);\n\tvar PooledClass = __webpack_require__(14);\n\tvar ReactBrowserEventEmitter = __webpack_require__(27);\n\tvar ReactInputSelection = __webpack_require__(70);\n\tvar ReactInstrumentation = __webpack_require__(8);\n\tvar Transaction = __webpack_require__(24);\n\tvar ReactUpdateQueue = __webpack_require__(47);\n\t\n\t/**\n\t * Ensures that, when possible, the selection range (currently selected text\n\t * input) is not disturbed by performing the transaction.\n\t */\n\tvar SELECTION_RESTORATION = {\n\t  /**\n\t   * @return {Selection} Selection information.\n\t   */\n\t  initialize: ReactInputSelection.getSelectionInformation,\n\t  /**\n\t   * @param {Selection} sel Selection information returned from `initialize`.\n\t   */\n\t  close: ReactInputSelection.restoreSelection\n\t};\n\t\n\t/**\n\t * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n\t * high level DOM manipulations (like temporarily removing a text input from the\n\t * DOM).\n\t */\n\tvar EVENT_SUPPRESSION = {\n\t  /**\n\t   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n\t   * the reconciliation.\n\t   */\n\t  initialize: function () {\n\t    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n\t    ReactBrowserEventEmitter.setEnabled(false);\n\t    return currentlyEnabled;\n\t  },\n\t\n\t  /**\n\t   * @param {boolean} previouslyEnabled Enabled status of\n\t   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`\n\t   *   restores the previous value.\n\t   */\n\t  close: function (previouslyEnabled) {\n\t    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n\t  }\n\t};\n\t\n\t/**\n\t * Provides a queue for collecting `componentDidMount` and\n\t * `componentDidUpdate` callbacks during the transaction.\n\t */\n\tvar ON_DOM_READY_QUEUEING = {\n\t  /**\n\t   * Initializes the internal `onDOMReady` queue.\n\t   */\n\t  initialize: function () {\n\t    this.reactMountReady.reset();\n\t  },\n\t\n\t  /**\n\t   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n\t   */\n\t  close: function () {\n\t    this.reactMountReady.notifyAll();\n\t  }\n\t};\n\t\n\t/**\n\t * Executed within the scope of the `Transaction` instance. Consider these as\n\t * being member methods, but with an implied ordering while being isolated from\n\t * each other.\n\t */\n\tvar TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];\n\t\n\tif (false) {\n\t  TRANSACTION_WRAPPERS.push({\n\t    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n\t    close: ReactInstrumentation.debugTool.onEndFlush\n\t  });\n\t}\n\t\n\t/**\n\t * Currently:\n\t * - The order that these are listed in the transaction is critical:\n\t * - Suppresses events.\n\t * - Restores selection range.\n\t *\n\t * Future:\n\t * - Restore document/overflow scroll positions that were unintentionally\n\t *   modified via DOM insertions above the top viewport boundary.\n\t * - Implement/integrate with customized constraint based layout system and keep\n\t *   track of which dimensions must be remeasured.\n\t *\n\t * @class ReactReconcileTransaction\n\t */\n\tfunction ReactReconcileTransaction(useCreateElement) {\n\t  this.reinitializeTransaction();\n\t  // Only server-side rendering really needs this option (see\n\t  // `ReactServerRendering`), but server-side uses\n\t  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n\t  // accessible and defaults to false when `ReactDOMComponent` and\n\t  // `ReactDOMTextComponent` checks it in `mountComponent`.`\n\t  this.renderToStaticMarkup = false;\n\t  this.reactMountReady = CallbackQueue.getPooled(null);\n\t  this.useCreateElement = useCreateElement;\n\t}\n\t\n\tvar Mixin = {\n\t  /**\n\t   * @see Transaction\n\t   * @abstract\n\t   * @final\n\t   * @return {array<object>} List of operation wrap procedures.\n\t   *   TODO: convert to array<TransactionWrapper>\n\t   */\n\t  getTransactionWrappers: function () {\n\t    return TRANSACTION_WRAPPERS;\n\t  },\n\t\n\t  /**\n\t   * @return {object} The queue to collect `onDOMReady` callbacks with.\n\t   */\n\t  getReactMountReady: function () {\n\t    return this.reactMountReady;\n\t  },\n\t\n\t  /**\n\t   * @return {object} The queue to collect React async events.\n\t   */\n\t  getUpdateQueue: function () {\n\t    return ReactUpdateQueue;\n\t  },\n\t\n\t  /**\n\t   * Save current transaction state -- if the return value from this method is\n\t   * passed to `rollback`, the transaction will be reset to that state.\n\t   */\n\t  checkpoint: function () {\n\t    // reactMountReady is the our only stateful wrapper\n\t    return this.reactMountReady.checkpoint();\n\t  },\n\t\n\t  rollback: function (checkpoint) {\n\t    this.reactMountReady.rollback(checkpoint);\n\t  },\n\t\n\t  /**\n\t   * `PooledClass` looks for this, and will invoke this before allowing this\n\t   * instance to be reused.\n\t   */\n\t  destructor: function () {\n\t    CallbackQueue.release(this.reactMountReady);\n\t    this.reactMountReady = null;\n\t  }\n\t};\n\t\n\t_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);\n\t\n\tPooledClass.addPoolingTo(ReactReconcileTransaction);\n\t\n\tmodule.exports = ReactReconcileTransaction;\n\n/***/ },\n/* 148 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactRef\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactOwner = __webpack_require__(145);\n\t\n\tvar ReactRef = {};\n\t\n\tfunction attachRef(ref, component, owner) {\n\t  if (typeof ref === 'function') {\n\t    ref(component.getPublicInstance());\n\t  } else {\n\t    // Legacy ref\n\t    ReactOwner.addComponentAsRefTo(component, ref, owner);\n\t  }\n\t}\n\t\n\tfunction detachRef(ref, component, owner) {\n\t  if (typeof ref === 'function') {\n\t    ref(null);\n\t  } else {\n\t    // Legacy ref\n\t    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\n\t  }\n\t}\n\t\n\tReactRef.attachRefs = function (instance, element) {\n\t  if (element === null || element === false) {\n\t    return;\n\t  }\n\t  var ref = element.ref;\n\t  if (ref != null) {\n\t    attachRef(ref, instance, element._owner);\n\t  }\n\t};\n\t\n\tReactRef.shouldUpdateRefs = function (prevElement, nextElement) {\n\t  // If either the owner or a `ref` has changed, make sure the newest owner\n\t  // has stored a reference to `this`, and the previous owner (if different)\n\t  // has forgotten the reference to `this`. We use the element instead\n\t  // of the public this.props because the post processing cannot determine\n\t  // a ref. The ref conceptually lives on the element.\n\t\n\t  // TODO: Should this even be possible? The owner cannot change because\n\t  // it's forbidden by shouldUpdateReactComponent. The ref can change\n\t  // if you swap the keys of but not the refs. Reconsider where this check\n\t  // is made. It probably belongs where the key checking and\n\t  // instantiateReactComponent is done.\n\t\n\t  var prevEmpty = prevElement === null || prevElement === false;\n\t  var nextEmpty = nextElement === null || nextElement === false;\n\t\n\t  return (\n\t    // This has a few false positives w/r/t empty components.\n\t    prevEmpty || nextEmpty || nextElement.ref !== prevElement.ref ||\n\t    // If owner changes but we have an unchanged function ref, don't update refs\n\t    typeof nextElement.ref === 'string' && nextElement._owner !== prevElement._owner\n\t  );\n\t};\n\t\n\tReactRef.detachRefs = function (instance, element) {\n\t  if (element === null || element === false) {\n\t    return;\n\t  }\n\t  var ref = element.ref;\n\t  if (ref != null) {\n\t    detachRef(ref, instance, element._owner);\n\t  }\n\t};\n\t\n\tmodule.exports = ReactRef;\n\n/***/ },\n/* 149 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactServerRenderingTransaction\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar PooledClass = __webpack_require__(14);\n\tvar Transaction = __webpack_require__(24);\n\tvar ReactInstrumentation = __webpack_require__(8);\n\tvar ReactServerUpdateQueue = __webpack_require__(150);\n\t\n\t/**\n\t * Executed within the scope of the `Transaction` instance. Consider these as\n\t * being member methods, but with an implied ordering while being isolated from\n\t * each other.\n\t */\n\tvar TRANSACTION_WRAPPERS = [];\n\t\n\tif (false) {\n\t  TRANSACTION_WRAPPERS.push({\n\t    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n\t    close: ReactInstrumentation.debugTool.onEndFlush\n\t  });\n\t}\n\t\n\tvar noopCallbackQueue = {\n\t  enqueue: function () {}\n\t};\n\t\n\t/**\n\t * @class ReactServerRenderingTransaction\n\t * @param {boolean} renderToStaticMarkup\n\t */\n\tfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n\t  this.reinitializeTransaction();\n\t  this.renderToStaticMarkup = renderToStaticMarkup;\n\t  this.useCreateElement = false;\n\t  this.updateQueue = new ReactServerUpdateQueue(this);\n\t}\n\t\n\tvar Mixin = {\n\t  /**\n\t   * @see Transaction\n\t   * @abstract\n\t   * @final\n\t   * @return {array} Empty list of operation wrap procedures.\n\t   */\n\t  getTransactionWrappers: function () {\n\t    return TRANSACTION_WRAPPERS;\n\t  },\n\t\n\t  /**\n\t   * @return {object} The queue to collect `onDOMReady` callbacks with.\n\t   */\n\t  getReactMountReady: function () {\n\t    return noopCallbackQueue;\n\t  },\n\t\n\t  /**\n\t   * @return {object} The queue to collect React async events.\n\t   */\n\t  getUpdateQueue: function () {\n\t    return this.updateQueue;\n\t  },\n\t\n\t  /**\n\t   * `PooledClass` looks for this, and will invoke this before allowing this\n\t   * instance to be reused.\n\t   */\n\t  destructor: function () {},\n\t\n\t  checkpoint: function () {},\n\t\n\t  rollback: function () {}\n\t};\n\t\n\t_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);\n\t\n\tPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\t\n\tmodule.exports = ReactServerRenderingTransaction;\n\n/***/ },\n/* 150 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactServerUpdateQueue\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ReactUpdateQueue = __webpack_require__(47);\n\tvar Transaction = __webpack_require__(24);\n\tvar warning = __webpack_require__(3);\n\t\n\tfunction warnNoop(publicInstance, callerName) {\n\t  if (false) {\n\t    var constructor = publicInstance.constructor;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n\t  }\n\t}\n\t\n\t/**\n\t * This is the update queue used for server rendering.\n\t * It delegates to ReactUpdateQueue while server rendering is in progress and\n\t * switches to ReactNoopUpdateQueue after the transaction has completed.\n\t * @class ReactServerUpdateQueue\n\t * @param {Transaction} transaction\n\t */\n\t\n\tvar ReactServerUpdateQueue = function () {\n\t  /* :: transaction: Transaction; */\n\t\n\t  function ReactServerUpdateQueue(transaction) {\n\t    _classCallCheck(this, ReactServerUpdateQueue);\n\t\n\t    this.transaction = transaction;\n\t  }\n\t\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @param {ReactClass} publicInstance The instance we want to test.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t\n\t\n\t  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * Enqueue a callback that will be executed after all the pending updates\n\t   * have processed.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance to use as `this` context.\n\t   * @param {?function} callback Called after state is updated.\n\t   * @internal\n\t   */\n\t\n\t\n\t  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {\n\t    if (this.transaction.isInTransaction()) {\n\t      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Forces an update. This should only be invoked when it is known with\n\t   * certainty that we are **not** in a DOM transaction.\n\t   *\n\t   * You may want to call this when you know that some deeper aspect of the\n\t   * component's state has changed but `setState` was not called.\n\t   *\n\t   * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t   * `componentWillUpdate` and `componentDidUpdate`.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @internal\n\t   */\n\t\n\t\n\t  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {\n\t    if (this.transaction.isInTransaction()) {\n\t      ReactUpdateQueue.enqueueForceUpdate(publicInstance);\n\t    } else {\n\t      warnNoop(publicInstance, 'forceUpdate');\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Replaces all of the state. Always use this or `setState` to mutate state.\n\t   * You should treat `this.state` as immutable.\n\t   *\n\t   * There is no guarantee that `this.state` will be immediately updated, so\n\t   * accessing `this.state` after calling this method may return the old value.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object|function} completeState Next state.\n\t   * @internal\n\t   */\n\t\n\t\n\t  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {\n\t    if (this.transaction.isInTransaction()) {\n\t      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);\n\t    } else {\n\t      warnNoop(publicInstance, 'replaceState');\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Sets a subset of the state. This only exists because _pendingState is\n\t   * internal. This provides a merging strategy that is not available to deep\n\t   * properties which is confusing. TODO: Expose pendingState or don't use it\n\t   * during the merge.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object|function} partialState Next partial state to be merged with state.\n\t   * @internal\n\t   */\n\t\n\t\n\t  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {\n\t    if (this.transaction.isInTransaction()) {\n\t      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);\n\t    } else {\n\t      warnNoop(publicInstance, 'setState');\n\t    }\n\t  };\n\t\n\t  return ReactServerUpdateQueue;\n\t}();\n\t\n\tmodule.exports = ReactServerUpdateQueue;\n\n/***/ },\n/* 151 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SVGDOMPropertyConfig\n\t */\n\t\n\t'use strict';\n\t\n\tvar NS = {\n\t  xlink: 'http://www.w3.org/1999/xlink',\n\t  xml: 'http://www.w3.org/XML/1998/namespace'\n\t};\n\t\n\t// We use attributes for everything SVG so let's avoid some duplication and run\n\t// code instead.\n\t// The following are all specified in the HTML config already so we exclude here.\n\t// - class (as className)\n\t// - color\n\t// - height\n\t// - id\n\t// - lang\n\t// - max\n\t// - media\n\t// - method\n\t// - min\n\t// - name\n\t// - style\n\t// - target\n\t// - type\n\t// - width\n\tvar ATTRS = {\n\t  accentHeight: 'accent-height',\n\t  accumulate: 0,\n\t  additive: 0,\n\t  alignmentBaseline: 'alignment-baseline',\n\t  allowReorder: 'allowReorder',\n\t  alphabetic: 0,\n\t  amplitude: 0,\n\t  arabicForm: 'arabic-form',\n\t  ascent: 0,\n\t  attributeName: 'attributeName',\n\t  attributeType: 'attributeType',\n\t  autoReverse: 'autoReverse',\n\t  azimuth: 0,\n\t  baseFrequency: 'baseFrequency',\n\t  baseProfile: 'baseProfile',\n\t  baselineShift: 'baseline-shift',\n\t  bbox: 0,\n\t  begin: 0,\n\t  bias: 0,\n\t  by: 0,\n\t  calcMode: 'calcMode',\n\t  capHeight: 'cap-height',\n\t  clip: 0,\n\t  clipPath: 'clip-path',\n\t  clipRule: 'clip-rule',\n\t  clipPathUnits: 'clipPathUnits',\n\t  colorInterpolation: 'color-interpolation',\n\t  colorInterpolationFilters: 'color-interpolation-filters',\n\t  colorProfile: 'color-profile',\n\t  colorRendering: 'color-rendering',\n\t  contentScriptType: 'contentScriptType',\n\t  contentStyleType: 'contentStyleType',\n\t  cursor: 0,\n\t  cx: 0,\n\t  cy: 0,\n\t  d: 0,\n\t  decelerate: 0,\n\t  descent: 0,\n\t  diffuseConstant: 'diffuseConstant',\n\t  direction: 0,\n\t  display: 0,\n\t  divisor: 0,\n\t  dominantBaseline: 'dominant-baseline',\n\t  dur: 0,\n\t  dx: 0,\n\t  dy: 0,\n\t  edgeMode: 'edgeMode',\n\t  elevation: 0,\n\t  enableBackground: 'enable-background',\n\t  end: 0,\n\t  exponent: 0,\n\t  externalResourcesRequired: 'externalResourcesRequired',\n\t  fill: 0,\n\t  fillOpacity: 'fill-opacity',\n\t  fillRule: 'fill-rule',\n\t  filter: 0,\n\t  filterRes: 'filterRes',\n\t  filterUnits: 'filterUnits',\n\t  floodColor: 'flood-color',\n\t  floodOpacity: 'flood-opacity',\n\t  focusable: 0,\n\t  fontFamily: 'font-family',\n\t  fontSize: 'font-size',\n\t  fontSizeAdjust: 'font-size-adjust',\n\t  fontStretch: 'font-stretch',\n\t  fontStyle: 'font-style',\n\t  fontVariant: 'font-variant',\n\t  fontWeight: 'font-weight',\n\t  format: 0,\n\t  from: 0,\n\t  fx: 0,\n\t  fy: 0,\n\t  g1: 0,\n\t  g2: 0,\n\t  glyphName: 'glyph-name',\n\t  glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n\t  glyphOrientationVertical: 'glyph-orientation-vertical',\n\t  glyphRef: 'glyphRef',\n\t  gradientTransform: 'gradientTransform',\n\t  gradientUnits: 'gradientUnits',\n\t  hanging: 0,\n\t  horizAdvX: 'horiz-adv-x',\n\t  horizOriginX: 'horiz-origin-x',\n\t  ideographic: 0,\n\t  imageRendering: 'image-rendering',\n\t  'in': 0,\n\t  in2: 0,\n\t  intercept: 0,\n\t  k: 0,\n\t  k1: 0,\n\t  k2: 0,\n\t  k3: 0,\n\t  k4: 0,\n\t  kernelMatrix: 'kernelMatrix',\n\t  kernelUnitLength: 'kernelUnitLength',\n\t  kerning: 0,\n\t  keyPoints: 'keyPoints',\n\t  keySplines: 'keySplines',\n\t  keyTimes: 'keyTimes',\n\t  lengthAdjust: 'lengthAdjust',\n\t  letterSpacing: 'letter-spacing',\n\t  lightingColor: 'lighting-color',\n\t  limitingConeAngle: 'limitingConeAngle',\n\t  local: 0,\n\t  markerEnd: 'marker-end',\n\t  markerMid: 'marker-mid',\n\t  markerStart: 'marker-start',\n\t  markerHeight: 'markerHeight',\n\t  markerUnits: 'markerUnits',\n\t  markerWidth: 'markerWidth',\n\t  mask: 0,\n\t  maskContentUnits: 'maskContentUnits',\n\t  maskUnits: 'maskUnits',\n\t  mathematical: 0,\n\t  mode: 0,\n\t  numOctaves: 'numOctaves',\n\t  offset: 0,\n\t  opacity: 0,\n\t  operator: 0,\n\t  order: 0,\n\t  orient: 0,\n\t  orientation: 0,\n\t  origin: 0,\n\t  overflow: 0,\n\t  overlinePosition: 'overline-position',\n\t  overlineThickness: 'overline-thickness',\n\t  paintOrder: 'paint-order',\n\t  panose1: 'panose-1',\n\t  pathLength: 'pathLength',\n\t  patternContentUnits: 'patternContentUnits',\n\t  patternTransform: 'patternTransform',\n\t  patternUnits: 'patternUnits',\n\t  pointerEvents: 'pointer-events',\n\t  points: 0,\n\t  pointsAtX: 'pointsAtX',\n\t  pointsAtY: 'pointsAtY',\n\t  pointsAtZ: 'pointsAtZ',\n\t  preserveAlpha: 'preserveAlpha',\n\t  preserveAspectRatio: 'preserveAspectRatio',\n\t  primitiveUnits: 'primitiveUnits',\n\t  r: 0,\n\t  radius: 0,\n\t  refX: 'refX',\n\t  refY: 'refY',\n\t  renderingIntent: 'rendering-intent',\n\t  repeatCount: 'repeatCount',\n\t  repeatDur: 'repeatDur',\n\t  requiredExtensions: 'requiredExtensions',\n\t  requiredFeatures: 'requiredFeatures',\n\t  restart: 0,\n\t  result: 0,\n\t  rotate: 0,\n\t  rx: 0,\n\t  ry: 0,\n\t  scale: 0,\n\t  seed: 0,\n\t  shapeRendering: 'shape-rendering',\n\t  slope: 0,\n\t  spacing: 0,\n\t  specularConstant: 'specularConstant',\n\t  specularExponent: 'specularExponent',\n\t  speed: 0,\n\t  spreadMethod: 'spreadMethod',\n\t  startOffset: 'startOffset',\n\t  stdDeviation: 'stdDeviation',\n\t  stemh: 0,\n\t  stemv: 0,\n\t  stitchTiles: 'stitchTiles',\n\t  stopColor: 'stop-color',\n\t  stopOpacity: 'stop-opacity',\n\t  strikethroughPosition: 'strikethrough-position',\n\t  strikethroughThickness: 'strikethrough-thickness',\n\t  string: 0,\n\t  stroke: 0,\n\t  strokeDasharray: 'stroke-dasharray',\n\t  strokeDashoffset: 'stroke-dashoffset',\n\t  strokeLinecap: 'stroke-linecap',\n\t  strokeLinejoin: 'stroke-linejoin',\n\t  strokeMiterlimit: 'stroke-miterlimit',\n\t  strokeOpacity: 'stroke-opacity',\n\t  strokeWidth: 'stroke-width',\n\t  surfaceScale: 'surfaceScale',\n\t  systemLanguage: 'systemLanguage',\n\t  tableValues: 'tableValues',\n\t  targetX: 'targetX',\n\t  targetY: 'targetY',\n\t  textAnchor: 'text-anchor',\n\t  textDecoration: 'text-decoration',\n\t  textRendering: 'text-rendering',\n\t  textLength: 'textLength',\n\t  to: 0,\n\t  transform: 0,\n\t  u1: 0,\n\t  u2: 0,\n\t  underlinePosition: 'underline-position',\n\t  underlineThickness: 'underline-thickness',\n\t  unicode: 0,\n\t  unicodeBidi: 'unicode-bidi',\n\t  unicodeRange: 'unicode-range',\n\t  unitsPerEm: 'units-per-em',\n\t  vAlphabetic: 'v-alphabetic',\n\t  vHanging: 'v-hanging',\n\t  vIdeographic: 'v-ideographic',\n\t  vMathematical: 'v-mathematical',\n\t  values: 0,\n\t  vectorEffect: 'vector-effect',\n\t  version: 0,\n\t  vertAdvY: 'vert-adv-y',\n\t  vertOriginX: 'vert-origin-x',\n\t  vertOriginY: 'vert-origin-y',\n\t  viewBox: 'viewBox',\n\t  viewTarget: 'viewTarget',\n\t  visibility: 0,\n\t  widths: 0,\n\t  wordSpacing: 'word-spacing',\n\t  writingMode: 'writing-mode',\n\t  x: 0,\n\t  xHeight: 'x-height',\n\t  x1: 0,\n\t  x2: 0,\n\t  xChannelSelector: 'xChannelSelector',\n\t  xlinkActuate: 'xlink:actuate',\n\t  xlinkArcrole: 'xlink:arcrole',\n\t  xlinkHref: 'xlink:href',\n\t  xlinkRole: 'xlink:role',\n\t  xlinkShow: 'xlink:show',\n\t  xlinkTitle: 'xlink:title',\n\t  xlinkType: 'xlink:type',\n\t  xmlBase: 'xml:base',\n\t  xmlns: 0,\n\t  xmlnsXlink: 'xmlns:xlink',\n\t  xmlLang: 'xml:lang',\n\t  xmlSpace: 'xml:space',\n\t  y: 0,\n\t  y1: 0,\n\t  y2: 0,\n\t  yChannelSelector: 'yChannelSelector',\n\t  z: 0,\n\t  zoomAndPan: 'zoomAndPan'\n\t};\n\t\n\tvar SVGDOMPropertyConfig = {\n\t  Properties: {},\n\t  DOMAttributeNamespaces: {\n\t    xlinkActuate: NS.xlink,\n\t    xlinkArcrole: NS.xlink,\n\t    xlinkHref: NS.xlink,\n\t    xlinkRole: NS.xlink,\n\t    xlinkShow: NS.xlink,\n\t    xlinkTitle: NS.xlink,\n\t    xlinkType: NS.xlink,\n\t    xmlBase: NS.xml,\n\t    xmlLang: NS.xml,\n\t    xmlSpace: NS.xml\n\t  },\n\t  DOMAttributeNames: {}\n\t};\n\t\n\tObject.keys(ATTRS).forEach(function (key) {\n\t  SVGDOMPropertyConfig.Properties[key] = 0;\n\t  if (ATTRS[key]) {\n\t    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];\n\t  }\n\t});\n\t\n\tmodule.exports = SVGDOMPropertyConfig;\n\n/***/ },\n/* 152 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SelectEventPlugin\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventConstants = __webpack_require__(11);\n\tvar EventPropagators = __webpack_require__(21);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactInputSelection = __webpack_require__(70);\n\tvar SyntheticEvent = __webpack_require__(12);\n\t\n\tvar getActiveElement = __webpack_require__(58);\n\tvar isTextInputElement = __webpack_require__(84);\n\tvar keyOf = __webpack_require__(13);\n\tvar shallowEqual = __webpack_require__(31);\n\t\n\tvar topLevelTypes = EventConstants.topLevelTypes;\n\t\n\tvar skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\t\n\tvar eventTypes = {\n\t  select: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onSelect: null }),\n\t      captured: keyOf({ onSelectCapture: null })\n\t    },\n\t    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]\n\t  }\n\t};\n\t\n\tvar activeElement = null;\n\tvar activeElementInst = null;\n\tvar lastSelection = null;\n\tvar mouseDown = false;\n\t\n\t// Track whether a listener exists for this plugin. If none exist, we do\n\t// not extract events. See #3639.\n\tvar hasListener = false;\n\tvar ON_SELECT_KEY = keyOf({ onSelect: null });\n\t\n\t/**\n\t * Get an object which is a unique representation of the current selection.\n\t *\n\t * The return value will not be consistent across nodes or browsers, but\n\t * two identical selections on the same node will return identical objects.\n\t *\n\t * @param {DOMElement} node\n\t * @return {object}\n\t */\n\tfunction getSelection(node) {\n\t  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {\n\t    return {\n\t      start: node.selectionStart,\n\t      end: node.selectionEnd\n\t    };\n\t  } else if (window.getSelection) {\n\t    var selection = window.getSelection();\n\t    return {\n\t      anchorNode: selection.anchorNode,\n\t      anchorOffset: selection.anchorOffset,\n\t      focusNode: selection.focusNode,\n\t      focusOffset: selection.focusOffset\n\t    };\n\t  } else if (document.selection) {\n\t    var range = document.selection.createRange();\n\t    return {\n\t      parentElement: range.parentElement(),\n\t      text: range.text,\n\t      top: range.boundingTop,\n\t      left: range.boundingLeft\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Poll selection to see whether it's changed.\n\t *\n\t * @param {object} nativeEvent\n\t * @return {?SyntheticEvent}\n\t */\n\tfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n\t  // Ensure we have the right element, and that the user is not dragging a\n\t  // selection (this matches native `select` event behavior). In HTML5, select\n\t  // fires only on input and textarea thus if there's no focused element we\n\t  // won't dispatch.\n\t  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {\n\t    return null;\n\t  }\n\t\n\t  // Only fire when selection has actually changed.\n\t  var currentSelection = getSelection(activeElement);\n\t  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n\t    lastSelection = currentSelection;\n\t\n\t    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);\n\t\n\t    syntheticEvent.type = 'select';\n\t    syntheticEvent.target = activeElement;\n\t\n\t    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\t\n\t    return syntheticEvent;\n\t  }\n\t\n\t  return null;\n\t}\n\t\n\t/**\n\t * This plugin creates an `onSelect` event that normalizes select events\n\t * across form elements.\n\t *\n\t * Supported elements are:\n\t * - input (see `isTextInputElement`)\n\t * - textarea\n\t * - contentEditable\n\t *\n\t * This differs from native browser implementations in the following ways:\n\t * - Fires on contentEditable fields as well as inputs.\n\t * - Fires for collapsed selection.\n\t * - Fires after user input.\n\t */\n\tvar SelectEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    if (!hasListener) {\n\t      return null;\n\t    }\n\t\n\t    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\t\n\t    switch (topLevelType) {\n\t      // Track the input node that has focus.\n\t      case topLevelTypes.topFocus:\n\t        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {\n\t          activeElement = targetNode;\n\t          activeElementInst = targetInst;\n\t          lastSelection = null;\n\t        }\n\t        break;\n\t      case topLevelTypes.topBlur:\n\t        activeElement = null;\n\t        activeElementInst = null;\n\t        lastSelection = null;\n\t        break;\n\t\n\t      // Don't fire the event while the user is dragging. This matches the\n\t      // semantics of the native select event.\n\t      case topLevelTypes.topMouseDown:\n\t        mouseDown = true;\n\t        break;\n\t      case topLevelTypes.topContextMenu:\n\t      case topLevelTypes.topMouseUp:\n\t        mouseDown = false;\n\t        return constructSelectEvent(nativeEvent, nativeEventTarget);\n\t\n\t      // Chrome and IE fire non-standard event when selection is changed (and\n\t      // sometimes when it hasn't). IE's event fires out of order with respect\n\t      // to key and input events on deletion, so we discard it.\n\t      //\n\t      // Firefox doesn't support selectionchange, so check selection status\n\t      // after each key entry. The selection changes after keydown and before\n\t      // keyup, but we check on keydown as well in the case of holding down a\n\t      // key, when multiple keydown events are fired but only one keyup is.\n\t      // This is also our approach for IE handling, for the reason above.\n\t      case topLevelTypes.topSelectionChange:\n\t        if (skipSelectionChangeEvent) {\n\t          break;\n\t        }\n\t      // falls through\n\t      case topLevelTypes.topKeyDown:\n\t      case topLevelTypes.topKeyUp:\n\t        return constructSelectEvent(nativeEvent, nativeEventTarget);\n\t    }\n\t\n\t    return null;\n\t  },\n\t\n\t  didPutListener: function (inst, registrationName, listener) {\n\t    if (registrationName === ON_SELECT_KEY) {\n\t      hasListener = true;\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = SelectEventPlugin;\n\n/***/ },\n/* 153 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SimpleEventPlugin\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar EventConstants = __webpack_require__(11);\n\tvar EventListener = __webpack_require__(56);\n\tvar EventPropagators = __webpack_require__(21);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar SyntheticAnimationEvent = __webpack_require__(154);\n\tvar SyntheticClipboardEvent = __webpack_require__(155);\n\tvar SyntheticEvent = __webpack_require__(12);\n\tvar SyntheticFocusEvent = __webpack_require__(158);\n\tvar SyntheticKeyboardEvent = __webpack_require__(160);\n\tvar SyntheticMouseEvent = __webpack_require__(28);\n\tvar SyntheticDragEvent = __webpack_require__(157);\n\tvar SyntheticTouchEvent = __webpack_require__(161);\n\tvar SyntheticTransitionEvent = __webpack_require__(162);\n\tvar SyntheticUIEvent = __webpack_require__(23);\n\tvar SyntheticWheelEvent = __webpack_require__(163);\n\t\n\tvar emptyFunction = __webpack_require__(7);\n\tvar getEventCharCode = __webpack_require__(49);\n\tvar invariant = __webpack_require__(1);\n\tvar keyOf = __webpack_require__(13);\n\t\n\tvar topLevelTypes = EventConstants.topLevelTypes;\n\t\n\tvar eventTypes = {\n\t  abort: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onAbort: true }),\n\t      captured: keyOf({ onAbortCapture: true })\n\t    }\n\t  },\n\t  animationEnd: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onAnimationEnd: true }),\n\t      captured: keyOf({ onAnimationEndCapture: true })\n\t    }\n\t  },\n\t  animationIteration: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onAnimationIteration: true }),\n\t      captured: keyOf({ onAnimationIterationCapture: true })\n\t    }\n\t  },\n\t  animationStart: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onAnimationStart: true }),\n\t      captured: keyOf({ onAnimationStartCapture: true })\n\t    }\n\t  },\n\t  blur: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onBlur: true }),\n\t      captured: keyOf({ onBlurCapture: true })\n\t    }\n\t  },\n\t  canPlay: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onCanPlay: true }),\n\t      captured: keyOf({ onCanPlayCapture: true })\n\t    }\n\t  },\n\t  canPlayThrough: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onCanPlayThrough: true }),\n\t      captured: keyOf({ onCanPlayThroughCapture: true })\n\t    }\n\t  },\n\t  click: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onClick: true }),\n\t      captured: keyOf({ onClickCapture: true })\n\t    }\n\t  },\n\t  contextMenu: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onContextMenu: true }),\n\t      captured: keyOf({ onContextMenuCapture: true })\n\t    }\n\t  },\n\t  copy: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onCopy: true }),\n\t      captured: keyOf({ onCopyCapture: true })\n\t    }\n\t  },\n\t  cut: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onCut: true }),\n\t      captured: keyOf({ onCutCapture: true })\n\t    }\n\t  },\n\t  doubleClick: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDoubleClick: true }),\n\t      captured: keyOf({ onDoubleClickCapture: true })\n\t    }\n\t  },\n\t  drag: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDrag: true }),\n\t      captured: keyOf({ onDragCapture: true })\n\t    }\n\t  },\n\t  dragEnd: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDragEnd: true }),\n\t      captured: keyOf({ onDragEndCapture: true })\n\t    }\n\t  },\n\t  dragEnter: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDragEnter: true }),\n\t      captured: keyOf({ onDragEnterCapture: true })\n\t    }\n\t  },\n\t  dragExit: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDragExit: true }),\n\t      captured: keyOf({ onDragExitCapture: true })\n\t    }\n\t  },\n\t  dragLeave: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDragLeave: true }),\n\t      captured: keyOf({ onDragLeaveCapture: true })\n\t    }\n\t  },\n\t  dragOver: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDragOver: true }),\n\t      captured: keyOf({ onDragOverCapture: true })\n\t    }\n\t  },\n\t  dragStart: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDragStart: true }),\n\t      captured: keyOf({ onDragStartCapture: true })\n\t    }\n\t  },\n\t  drop: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDrop: true }),\n\t      captured: keyOf({ onDropCapture: true })\n\t    }\n\t  },\n\t  durationChange: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDurationChange: true }),\n\t      captured: keyOf({ onDurationChangeCapture: true })\n\t    }\n\t  },\n\t  emptied: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onEmptied: true }),\n\t      captured: keyOf({ onEmptiedCapture: true })\n\t    }\n\t  },\n\t  encrypted: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onEncrypted: true }),\n\t      captured: keyOf({ onEncryptedCapture: true })\n\t    }\n\t  },\n\t  ended: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onEnded: true }),\n\t      captured: keyOf({ onEndedCapture: true })\n\t    }\n\t  },\n\t  error: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onError: true }),\n\t      captured: keyOf({ onErrorCapture: true })\n\t    }\n\t  },\n\t  focus: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onFocus: true }),\n\t      captured: keyOf({ onFocusCapture: true })\n\t    }\n\t  },\n\t  input: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onInput: true }),\n\t      captured: keyOf({ onInputCapture: true })\n\t    }\n\t  },\n\t  invalid: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onInvalid: true }),\n\t      captured: keyOf({ onInvalidCapture: true })\n\t    }\n\t  },\n\t  keyDown: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onKeyDown: true }),\n\t      captured: keyOf({ onKeyDownCapture: true })\n\t    }\n\t  },\n\t  keyPress: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onKeyPress: true }),\n\t      captured: keyOf({ onKeyPressCapture: true })\n\t    }\n\t  },\n\t  keyUp: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onKeyUp: true }),\n\t      captured: keyOf({ onKeyUpCapture: true })\n\t    }\n\t  },\n\t  load: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onLoad: true }),\n\t      captured: keyOf({ onLoadCapture: true })\n\t    }\n\t  },\n\t  loadedData: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onLoadedData: true }),\n\t      captured: keyOf({ onLoadedDataCapture: true })\n\t    }\n\t  },\n\t  loadedMetadata: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onLoadedMetadata: true }),\n\t      captured: keyOf({ onLoadedMetadataCapture: true })\n\t    }\n\t  },\n\t  loadStart: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onLoadStart: true }),\n\t      captured: keyOf({ onLoadStartCapture: true })\n\t    }\n\t  },\n\t  // Note: We do not allow listening to mouseOver events. Instead, use the\n\t  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.\n\t  mouseDown: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onMouseDown: true }),\n\t      captured: keyOf({ onMouseDownCapture: true })\n\t    }\n\t  },\n\t  mouseMove: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onMouseMove: true }),\n\t      captured: keyOf({ onMouseMoveCapture: true })\n\t    }\n\t  },\n\t  mouseOut: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onMouseOut: true }),\n\t      captured: keyOf({ onMouseOutCapture: true })\n\t    }\n\t  },\n\t  mouseOver: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onMouseOver: true }),\n\t      captured: keyOf({ onMouseOverCapture: true })\n\t    }\n\t  },\n\t  mouseUp: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onMouseUp: true }),\n\t      captured: keyOf({ onMouseUpCapture: true })\n\t    }\n\t  },\n\t  paste: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onPaste: true }),\n\t      captured: keyOf({ onPasteCapture: true })\n\t    }\n\t  },\n\t  pause: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onPause: true }),\n\t      captured: keyOf({ onPauseCapture: true })\n\t    }\n\t  },\n\t  play: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onPlay: true }),\n\t      captured: keyOf({ onPlayCapture: true })\n\t    }\n\t  },\n\t  playing: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onPlaying: true }),\n\t      captured: keyOf({ onPlayingCapture: true })\n\t    }\n\t  },\n\t  progress: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onProgress: true }),\n\t      captured: keyOf({ onProgressCapture: true })\n\t    }\n\t  },\n\t  rateChange: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onRateChange: true }),\n\t      captured: keyOf({ onRateChangeCapture: true })\n\t    }\n\t  },\n\t  reset: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onReset: true }),\n\t      captured: keyOf({ onResetCapture: true })\n\t    }\n\t  },\n\t  scroll: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onScroll: true }),\n\t      captured: keyOf({ onScrollCapture: true })\n\t    }\n\t  },\n\t  seeked: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onSeeked: true }),\n\t      captured: keyOf({ onSeekedCapture: true })\n\t    }\n\t  },\n\t  seeking: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onSeeking: true }),\n\t      captured: keyOf({ onSeekingCapture: true })\n\t    }\n\t  },\n\t  stalled: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onStalled: true }),\n\t      captured: keyOf({ onStalledCapture: true })\n\t    }\n\t  },\n\t  submit: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onSubmit: true }),\n\t      captured: keyOf({ onSubmitCapture: true })\n\t    }\n\t  },\n\t  suspend: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onSuspend: true }),\n\t      captured: keyOf({ onSuspendCapture: true })\n\t    }\n\t  },\n\t  timeUpdate: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onTimeUpdate: true }),\n\t      captured: keyOf({ onTimeUpdateCapture: true })\n\t    }\n\t  },\n\t  touchCancel: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onTouchCancel: true }),\n\t      captured: keyOf({ onTouchCancelCapture: true })\n\t    }\n\t  },\n\t  touchEnd: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onTouchEnd: true }),\n\t      captured: keyOf({ onTouchEndCapture: true })\n\t    }\n\t  },\n\t  touchMove: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onTouchMove: true }),\n\t      captured: keyOf({ onTouchMoveCapture: true })\n\t    }\n\t  },\n\t  touchStart: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onTouchStart: true }),\n\t      captured: keyOf({ onTouchStartCapture: true })\n\t    }\n\t  },\n\t  transitionEnd: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onTransitionEnd: true }),\n\t      captured: keyOf({ onTransitionEndCapture: true })\n\t    }\n\t  },\n\t  volumeChange: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onVolumeChange: true }),\n\t      captured: keyOf({ onVolumeChangeCapture: true })\n\t    }\n\t  },\n\t  waiting: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onWaiting: true }),\n\t      captured: keyOf({ onWaitingCapture: true })\n\t    }\n\t  },\n\t  wheel: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onWheel: true }),\n\t      captured: keyOf({ onWheelCapture: true })\n\t    }\n\t  }\n\t};\n\t\n\tvar topLevelEventsToDispatchConfig = {\n\t  topAbort: eventTypes.abort,\n\t  topAnimationEnd: eventTypes.animationEnd,\n\t  topAnimationIteration: eventTypes.animationIteration,\n\t  topAnimationStart: eventTypes.animationStart,\n\t  topBlur: eventTypes.blur,\n\t  topCanPlay: eventTypes.canPlay,\n\t  topCanPlayThrough: eventTypes.canPlayThrough,\n\t  topClick: eventTypes.click,\n\t  topContextMenu: eventTypes.contextMenu,\n\t  topCopy: eventTypes.copy,\n\t  topCut: eventTypes.cut,\n\t  topDoubleClick: eventTypes.doubleClick,\n\t  topDrag: eventTypes.drag,\n\t  topDragEnd: eventTypes.dragEnd,\n\t  topDragEnter: eventTypes.dragEnter,\n\t  topDragExit: eventTypes.dragExit,\n\t  topDragLeave: eventTypes.dragLeave,\n\t  topDragOver: eventTypes.dragOver,\n\t  topDragStart: eventTypes.dragStart,\n\t  topDrop: eventTypes.drop,\n\t  topDurationChange: eventTypes.durationChange,\n\t  topEmptied: eventTypes.emptied,\n\t  topEncrypted: eventTypes.encrypted,\n\t  topEnded: eventTypes.ended,\n\t  topError: eventTypes.error,\n\t  topFocus: eventTypes.focus,\n\t  topInput: eventTypes.input,\n\t  topInvalid: eventTypes.invalid,\n\t  topKeyDown: eventTypes.keyDown,\n\t  topKeyPress: eventTypes.keyPress,\n\t  topKeyUp: eventTypes.keyUp,\n\t  topLoad: eventTypes.load,\n\t  topLoadedData: eventTypes.loadedData,\n\t  topLoadedMetadata: eventTypes.loadedMetadata,\n\t  topLoadStart: eventTypes.loadStart,\n\t  topMouseDown: eventTypes.mouseDown,\n\t  topMouseMove: eventTypes.mouseMove,\n\t  topMouseOut: eventTypes.mouseOut,\n\t  topMouseOver: eventTypes.mouseOver,\n\t  topMouseUp: eventTypes.mouseUp,\n\t  topPaste: eventTypes.paste,\n\t  topPause: eventTypes.pause,\n\t  topPlay: eventTypes.play,\n\t  topPlaying: eventTypes.playing,\n\t  topProgress: eventTypes.progress,\n\t  topRateChange: eventTypes.rateChange,\n\t  topReset: eventTypes.reset,\n\t  topScroll: eventTypes.scroll,\n\t  topSeeked: eventTypes.seeked,\n\t  topSeeking: eventTypes.seeking,\n\t  topStalled: eventTypes.stalled,\n\t  topSubmit: eventTypes.submit,\n\t  topSuspend: eventTypes.suspend,\n\t  topTimeUpdate: eventTypes.timeUpdate,\n\t  topTouchCancel: eventTypes.touchCancel,\n\t  topTouchEnd: eventTypes.touchEnd,\n\t  topTouchMove: eventTypes.touchMove,\n\t  topTouchStart: eventTypes.touchStart,\n\t  topTransitionEnd: eventTypes.transitionEnd,\n\t  topVolumeChange: eventTypes.volumeChange,\n\t  topWaiting: eventTypes.waiting,\n\t  topWheel: eventTypes.wheel\n\t};\n\t\n\tfor (var type in topLevelEventsToDispatchConfig) {\n\t  topLevelEventsToDispatchConfig[type].dependencies = [type];\n\t}\n\t\n\tvar ON_CLICK_KEY = keyOf({ onClick: null });\n\tvar onClickListeners = {};\n\t\n\tfunction getDictionaryKey(inst) {\n\t  // Prevents V8 performance issue:\n\t  // https://github.com/facebook/react/pull/7232\n\t  return '.' + inst._rootNodeID;\n\t}\n\t\n\tvar SimpleEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n\t    if (!dispatchConfig) {\n\t      return null;\n\t    }\n\t    var EventConstructor;\n\t    switch (topLevelType) {\n\t      case topLevelTypes.topAbort:\n\t      case topLevelTypes.topCanPlay:\n\t      case topLevelTypes.topCanPlayThrough:\n\t      case topLevelTypes.topDurationChange:\n\t      case topLevelTypes.topEmptied:\n\t      case topLevelTypes.topEncrypted:\n\t      case topLevelTypes.topEnded:\n\t      case topLevelTypes.topError:\n\t      case topLevelTypes.topInput:\n\t      case topLevelTypes.topInvalid:\n\t      case topLevelTypes.topLoad:\n\t      case topLevelTypes.topLoadedData:\n\t      case topLevelTypes.topLoadedMetadata:\n\t      case topLevelTypes.topLoadStart:\n\t      case topLevelTypes.topPause:\n\t      case topLevelTypes.topPlay:\n\t      case topLevelTypes.topPlaying:\n\t      case topLevelTypes.topProgress:\n\t      case topLevelTypes.topRateChange:\n\t      case topLevelTypes.topReset:\n\t      case topLevelTypes.topSeeked:\n\t      case topLevelTypes.topSeeking:\n\t      case topLevelTypes.topStalled:\n\t      case topLevelTypes.topSubmit:\n\t      case topLevelTypes.topSuspend:\n\t      case topLevelTypes.topTimeUpdate:\n\t      case topLevelTypes.topVolumeChange:\n\t      case topLevelTypes.topWaiting:\n\t        // HTML Events\n\t        // @see http://www.w3.org/TR/html5/index.html#events-0\n\t        EventConstructor = SyntheticEvent;\n\t        break;\n\t      case topLevelTypes.topKeyPress:\n\t        // Firefox creates a keypress event for function keys too. This removes\n\t        // the unwanted keypress events. Enter is however both printable and\n\t        // non-printable. One would expect Tab to be as well (but it isn't).\n\t        if (getEventCharCode(nativeEvent) === 0) {\n\t          return null;\n\t        }\n\t      /* falls through */\n\t      case topLevelTypes.topKeyDown:\n\t      case topLevelTypes.topKeyUp:\n\t        EventConstructor = SyntheticKeyboardEvent;\n\t        break;\n\t      case topLevelTypes.topBlur:\n\t      case topLevelTypes.topFocus:\n\t        EventConstructor = SyntheticFocusEvent;\n\t        break;\n\t      case topLevelTypes.topClick:\n\t        // Firefox creates a click event on right mouse clicks. This removes the\n\t        // unwanted click events.\n\t        if (nativeEvent.button === 2) {\n\t          return null;\n\t        }\n\t      /* falls through */\n\t      case topLevelTypes.topContextMenu:\n\t      case topLevelTypes.topDoubleClick:\n\t      case topLevelTypes.topMouseDown:\n\t      case topLevelTypes.topMouseMove:\n\t      case topLevelTypes.topMouseOut:\n\t      case topLevelTypes.topMouseOver:\n\t      case topLevelTypes.topMouseUp:\n\t        EventConstructor = SyntheticMouseEvent;\n\t        break;\n\t      case topLevelTypes.topDrag:\n\t      case topLevelTypes.topDragEnd:\n\t      case topLevelTypes.topDragEnter:\n\t      case topLevelTypes.topDragExit:\n\t      case topLevelTypes.topDragLeave:\n\t      case topLevelTypes.topDragOver:\n\t      case topLevelTypes.topDragStart:\n\t      case topLevelTypes.topDrop:\n\t        EventConstructor = SyntheticDragEvent;\n\t        break;\n\t      case topLevelTypes.topTouchCancel:\n\t      case topLevelTypes.topTouchEnd:\n\t      case topLevelTypes.topTouchMove:\n\t      case topLevelTypes.topTouchStart:\n\t        EventConstructor = SyntheticTouchEvent;\n\t        break;\n\t      case topLevelTypes.topAnimationEnd:\n\t      case topLevelTypes.topAnimationIteration:\n\t      case topLevelTypes.topAnimationStart:\n\t        EventConstructor = SyntheticAnimationEvent;\n\t        break;\n\t      case topLevelTypes.topTransitionEnd:\n\t        EventConstructor = SyntheticTransitionEvent;\n\t        break;\n\t      case topLevelTypes.topScroll:\n\t        EventConstructor = SyntheticUIEvent;\n\t        break;\n\t      case topLevelTypes.topWheel:\n\t        EventConstructor = SyntheticWheelEvent;\n\t        break;\n\t      case topLevelTypes.topCopy:\n\t      case topLevelTypes.topCut:\n\t      case topLevelTypes.topPaste:\n\t        EventConstructor = SyntheticClipboardEvent;\n\t        break;\n\t    }\n\t    !EventConstructor ?  false ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;\n\t    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);\n\t    EventPropagators.accumulateTwoPhaseDispatches(event);\n\t    return event;\n\t  },\n\t\n\t  didPutListener: function (inst, registrationName, listener) {\n\t    // Mobile Safari does not fire properly bubble click events on\n\t    // non-interactive elements, which means delegated click listeners do not\n\t    // fire. The workaround for this bug involves attaching an empty click\n\t    // listener on the target node.\n\t    if (registrationName === ON_CLICK_KEY) {\n\t      var key = getDictionaryKey(inst);\n\t      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t      if (!onClickListeners[key]) {\n\t        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);\n\t      }\n\t    }\n\t  },\n\t\n\t  willDeleteListener: function (inst, registrationName) {\n\t    if (registrationName === ON_CLICK_KEY) {\n\t      var key = getDictionaryKey(inst);\n\t      onClickListeners[key].remove();\n\t      delete onClickListeners[key];\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = SimpleEventPlugin;\n\n/***/ },\n/* 154 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticAnimationEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(12);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\n\t */\n\tvar AnimationEventInterface = {\n\t  animationName: null,\n\t  elapsedTime: null,\n\t  pseudoElement: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticEvent}\n\t */\n\tfunction SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);\n\t\n\tmodule.exports = SyntheticAnimationEvent;\n\n/***/ },\n/* 155 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticClipboardEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(12);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/clipboard-apis/\n\t */\n\tvar ClipboardEventInterface = {\n\t  clipboardData: function (event) {\n\t    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n\t  }\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\n\t\n\tmodule.exports = SyntheticClipboardEvent;\n\n/***/ },\n/* 156 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticCompositionEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(12);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n\t */\n\tvar CompositionEventInterface = {\n\t  data: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);\n\t\n\tmodule.exports = SyntheticCompositionEvent;\n\n/***/ },\n/* 157 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticDragEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticMouseEvent = __webpack_require__(28);\n\t\n\t/**\n\t * @interface DragEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar DragEventInterface = {\n\t  dataTransfer: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);\n\t\n\tmodule.exports = SyntheticDragEvent;\n\n/***/ },\n/* 158 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticFocusEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticUIEvent = __webpack_require__(23);\n\t\n\t/**\n\t * @interface FocusEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar FocusEventInterface = {\n\t  relatedTarget: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);\n\t\n\tmodule.exports = SyntheticFocusEvent;\n\n/***/ },\n/* 159 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticInputEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(12);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n\t *      /#events-inputevents\n\t */\n\tvar InputEventInterface = {\n\t  data: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);\n\t\n\tmodule.exports = SyntheticInputEvent;\n\n/***/ },\n/* 160 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticKeyboardEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticUIEvent = __webpack_require__(23);\n\t\n\tvar getEventCharCode = __webpack_require__(49);\n\tvar getEventKey = __webpack_require__(169);\n\tvar getEventModifierState = __webpack_require__(50);\n\t\n\t/**\n\t * @interface KeyboardEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar KeyboardEventInterface = {\n\t  key: getEventKey,\n\t  location: null,\n\t  ctrlKey: null,\n\t  shiftKey: null,\n\t  altKey: null,\n\t  metaKey: null,\n\t  repeat: null,\n\t  locale: null,\n\t  getModifierState: getEventModifierState,\n\t  // Legacy Interface\n\t  charCode: function (event) {\n\t    // `charCode` is the result of a KeyPress event and represents the value of\n\t    // the actual printable character.\n\t\n\t    // KeyPress is deprecated, but its replacement is not yet final and not\n\t    // implemented in any major browser. Only KeyPress has charCode.\n\t    if (event.type === 'keypress') {\n\t      return getEventCharCode(event);\n\t    }\n\t    return 0;\n\t  },\n\t  keyCode: function (event) {\n\t    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n\t    // physical keyboard key.\n\t\n\t    // The actual meaning of the value depends on the users' keyboard layout\n\t    // which cannot be detected. Assuming that it is a US keyboard layout\n\t    // provides a surprisingly accurate mapping for US and European users.\n\t    // Due to this, it is left to the user to implement at this time.\n\t    if (event.type === 'keydown' || event.type === 'keyup') {\n\t      return event.keyCode;\n\t    }\n\t    return 0;\n\t  },\n\t  which: function (event) {\n\t    // `which` is an alias for either `keyCode` or `charCode` depending on the\n\t    // type of the event.\n\t    if (event.type === 'keypress') {\n\t      return getEventCharCode(event);\n\t    }\n\t    if (event.type === 'keydown' || event.type === 'keyup') {\n\t      return event.keyCode;\n\t    }\n\t    return 0;\n\t  }\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\n\t\n\tmodule.exports = SyntheticKeyboardEvent;\n\n/***/ },\n/* 161 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticTouchEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticUIEvent = __webpack_require__(23);\n\t\n\tvar getEventModifierState = __webpack_require__(50);\n\t\n\t/**\n\t * @interface TouchEvent\n\t * @see http://www.w3.org/TR/touch-events/\n\t */\n\tvar TouchEventInterface = {\n\t  touches: null,\n\t  targetTouches: null,\n\t  changedTouches: null,\n\t  altKey: null,\n\t  metaKey: null,\n\t  ctrlKey: null,\n\t  shiftKey: null,\n\t  getModifierState: getEventModifierState\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\n\t\n\tmodule.exports = SyntheticTouchEvent;\n\n/***/ },\n/* 162 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticTransitionEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(12);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\n\t */\n\tvar TransitionEventInterface = {\n\t  propertyName: null,\n\t  elapsedTime: null,\n\t  pseudoElement: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticEvent}\n\t */\n\tfunction SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);\n\t\n\tmodule.exports = SyntheticTransitionEvent;\n\n/***/ },\n/* 163 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticWheelEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticMouseEvent = __webpack_require__(28);\n\t\n\t/**\n\t * @interface WheelEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar WheelEventInterface = {\n\t  deltaX: function (event) {\n\t    return 'deltaX' in event ? event.deltaX :\n\t    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n\t    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n\t  },\n\t  deltaY: function (event) {\n\t    return 'deltaY' in event ? event.deltaY :\n\t    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n\t    'wheelDeltaY' in event ? -event.wheelDeltaY :\n\t    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n\t    'wheelDelta' in event ? -event.wheelDelta : 0;\n\t  },\n\t  deltaZ: null,\n\t\n\t  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n\t  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n\t  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n\t  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n\t  deltaMode: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticMouseEvent}\n\t */\n\tfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\n\t\n\tmodule.exports = SyntheticWheelEvent;\n\n/***/ },\n/* 164 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule adler32\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar MOD = 65521;\n\t\n\t// adler32 is not cryptographically strong, and is only used to sanity check that\n\t// markup generated on the server matches the markup generated on the client.\n\t// This implementation (a modified version of the SheetJS version) has been optimized\n\t// for our use case, at the expense of conforming to the adler32 specification\n\t// for non-ascii inputs.\n\tfunction adler32(data) {\n\t  var a = 1;\n\t  var b = 0;\n\t  var i = 0;\n\t  var l = data.length;\n\t  var m = l & ~0x3;\n\t  while (i < m) {\n\t    var n = Math.min(i + 4096, m);\n\t    for (; i < n; i += 4) {\n\t      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));\n\t    }\n\t    a %= MOD;\n\t    b %= MOD;\n\t  }\n\t  for (; i < l; i++) {\n\t    b += a += data.charCodeAt(i);\n\t  }\n\t  a %= MOD;\n\t  b %= MOD;\n\t  return a | b << 16;\n\t}\n\t\n\tmodule.exports = adler32;\n\n/***/ },\n/* 165 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule checkReactTypeSpec\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactPropTypeLocationNames = __webpack_require__(44);\n\tvar ReactPropTypesSecret = __webpack_require__(46);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar ReactComponentTreeHook;\n\t\n\tif (typeof process !== 'undefined' && ({\"NODE_ENV\":\"production\",\"PUBLIC_URL\":\"/tinysynth\"}) && (\"production\") === 'test') {\n\t  // Temporary hack.\n\t  // Inline requires don't work well with Jest:\n\t  // https://github.com/facebook/react/issues/7240\n\t  // Remove the inline requires when we don't need them anymore:\n\t  // https://github.com/facebook/react/pull/7178\n\t  ReactComponentTreeHook = __webpack_require__(41);\n\t}\n\t\n\tvar loggedTypeFailures = {};\n\t\n\t/**\n\t * Assert that the values match with the type specs.\n\t * Error messages are memorized and will only be shown once.\n\t *\n\t * @param {object} typeSpecs Map of name to a ReactPropType\n\t * @param {object} values Runtime values that need to be type-checked\n\t * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n\t * @param {string} componentName Name of the component for error messages.\n\t * @param {?object} element The React element that is being type-checked\n\t * @param {?number} debugID The React component instance that is being type-checked\n\t * @private\n\t */\n\tfunction checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {\n\t  for (var typeSpecName in typeSpecs) {\n\t    if (typeSpecs.hasOwnProperty(typeSpecName)) {\n\t      var error;\n\t      // Prop type validation may throw. In case they do, we don't want to\n\t      // fail the render phase where it didn't fail before. So we log it.\n\t      // After these have been cleaned up, we'll let them throw.\n\t      try {\n\t        // This is intentionally an invariant that gets caught. It's the same\n\t        // behavior as without this statement except with a better message.\n\t        !(typeof typeSpecs[typeSpecName] === 'function') ?  false ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;\n\t        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n\t      } catch (ex) {\n\t        error = ex;\n\t      }\n\t       false ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;\n\t      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n\t        // Only monitor this failure once because there tends to be a lot of the\n\t        // same error.\n\t        loggedTypeFailures[error.message] = true;\n\t\n\t        var componentStackInfo = '';\n\t\n\t        if (false) {\n\t          if (!ReactComponentTreeHook) {\n\t            ReactComponentTreeHook = require('./ReactComponentTreeHook');\n\t          }\n\t          if (debugID !== null) {\n\t            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);\n\t          } else if (element !== null) {\n\t            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);\n\t          }\n\t        }\n\t\n\t         false ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = checkReactTypeSpec;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))\n\n/***/ },\n/* 166 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule dangerousStyleValue\n\t */\n\t\n\t'use strict';\n\t\n\tvar CSSProperty = __webpack_require__(60);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\n\tvar styleWarnings = {};\n\t\n\t/**\n\t * Convert a value into the proper css writable value. The style name `name`\n\t * should be logical (no hyphens), as specified\n\t * in `CSSProperty.isUnitlessNumber`.\n\t *\n\t * @param {string} name CSS property name such as `topMargin`.\n\t * @param {*} value CSS property value such as `10px`.\n\t * @param {ReactDOMComponent} component\n\t * @return {string} Normalized style value with dimensions applied.\n\t */\n\tfunction dangerousStyleValue(name, value, component) {\n\t  // Note that we've removed escapeTextForBrowser() calls here since the\n\t  // whole string will be escaped when the attribute is injected into\n\t  // the markup. If you provide unsafe user data here they can inject\n\t  // arbitrary CSS which may be problematic (I couldn't repro this):\n\t  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n\t  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n\t  // This is not an XSS hole but instead a potential CSS injection issue\n\t  // which has lead to a greater discussion about how we're going to\n\t  // trust URLs moving forward. See #2115901\n\t\n\t  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n\t  if (isEmpty) {\n\t    return '';\n\t  }\n\t\n\t  var isNonNumeric = isNaN(value);\n\t  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n\t    return '' + value; // cast to string\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    if (false) {\n\t      // Allow '0' to pass through without warning. 0 is already special and\n\t      // doesn't require units, so we don't need to warn about it.\n\t      if (component && value !== '0') {\n\t        var owner = component._currentElement._owner;\n\t        var ownerName = owner ? owner.getName() : null;\n\t        if (ownerName && !styleWarnings[ownerName]) {\n\t          styleWarnings[ownerName] = {};\n\t        }\n\t        var warned = false;\n\t        if (ownerName) {\n\t          var warnings = styleWarnings[ownerName];\n\t          warned = warnings[name];\n\t          if (!warned) {\n\t            warnings[name] = true;\n\t          }\n\t        }\n\t        if (!warned) {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;\n\t        }\n\t      }\n\t    }\n\t    value = value.trim();\n\t  }\n\t  return value + 'px';\n\t}\n\t\n\tmodule.exports = dangerousStyleValue;\n\n/***/ },\n/* 167 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule findDOMNode\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(15);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactInstanceMap = __webpack_require__(22);\n\t\n\tvar getHostComponentFromComposite = __webpack_require__(80);\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\t/**\n\t * Returns the DOM node rendered by this element.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode\n\t *\n\t * @param {ReactComponent|DOMElement} componentOrElement\n\t * @return {?DOMElement} The root node of this element.\n\t */\n\tfunction findDOMNode(componentOrElement) {\n\t  if (false) {\n\t    var owner = ReactCurrentOwner.current;\n\t    if (owner !== null) {\n\t      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n\t      owner._warnedAboutRefsInRender = true;\n\t    }\n\t  }\n\t  if (componentOrElement == null) {\n\t    return null;\n\t  }\n\t  if (componentOrElement.nodeType === 1) {\n\t    return componentOrElement;\n\t  }\n\t\n\t  var inst = ReactInstanceMap.get(componentOrElement);\n\t  if (inst) {\n\t    inst = getHostComponentFromComposite(inst);\n\t    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;\n\t  }\n\t\n\t  if (typeof componentOrElement.render === 'function') {\n\t     true ?  false ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;\n\t  } else {\n\t     true ?  false ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;\n\t  }\n\t}\n\t\n\tmodule.exports = findDOMNode;\n\n/***/ },\n/* 168 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule flattenChildren\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar KeyEscapeUtils = __webpack_require__(37);\n\tvar traverseAllChildren = __webpack_require__(54);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar ReactComponentTreeHook;\n\t\n\tif (typeof process !== 'undefined' && ({\"NODE_ENV\":\"production\",\"PUBLIC_URL\":\"/tinysynth\"}) && (\"production\") === 'test') {\n\t  // Temporary hack.\n\t  // Inline requires don't work well with Jest:\n\t  // https://github.com/facebook/react/issues/7240\n\t  // Remove the inline requires when we don't need them anymore:\n\t  // https://github.com/facebook/react/pull/7178\n\t  ReactComponentTreeHook = __webpack_require__(41);\n\t}\n\t\n\t/**\n\t * @param {function} traverseContext Context passed through traversal.\n\t * @param {?ReactComponent} child React child component.\n\t * @param {!string} name String name of key path to child.\n\t * @param {number=} selfDebugID Optional debugID of the current internal instance.\n\t */\n\tfunction flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {\n\t  // We found a component instance.\n\t  if (traverseContext && typeof traverseContext === 'object') {\n\t    var result = traverseContext;\n\t    var keyUnique = result[name] === undefined;\n\t    if (false) {\n\t      if (!ReactComponentTreeHook) {\n\t        ReactComponentTreeHook = require('./ReactComponentTreeHook');\n\t      }\n\t      if (!keyUnique) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n\t      }\n\t    }\n\t    if (keyUnique && child != null) {\n\t      result[name] = child;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Flattens children that are typically specified as `props.children`. Any null\n\t * children will not be included in the resulting object.\n\t * @return {!object} flattened children keyed by name.\n\t */\n\tfunction flattenChildren(children, selfDebugID) {\n\t  if (children == null) {\n\t    return children;\n\t  }\n\t  var result = {};\n\t\n\t  if (false) {\n\t    traverseAllChildren(children, function (traverseContext, child, name) {\n\t      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);\n\t    }, result);\n\t  } else {\n\t    traverseAllChildren(children, flattenSingleChildIntoContext, result);\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = flattenChildren;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))\n\n/***/ },\n/* 169 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getEventKey\n\t */\n\t\n\t'use strict';\n\t\n\tvar getEventCharCode = __webpack_require__(49);\n\t\n\t/**\n\t * Normalization of deprecated HTML5 `key` values\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n\t */\n\tvar normalizeKey = {\n\t  'Esc': 'Escape',\n\t  'Spacebar': ' ',\n\t  'Left': 'ArrowLeft',\n\t  'Up': 'ArrowUp',\n\t  'Right': 'ArrowRight',\n\t  'Down': 'ArrowDown',\n\t  'Del': 'Delete',\n\t  'Win': 'OS',\n\t  'Menu': 'ContextMenu',\n\t  'Apps': 'ContextMenu',\n\t  'Scroll': 'ScrollLock',\n\t  'MozPrintableKey': 'Unidentified'\n\t};\n\t\n\t/**\n\t * Translation from legacy `keyCode` to HTML5 `key`\n\t * Only special keys supported, all others depend on keyboard layout or browser\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n\t */\n\tvar translateToKey = {\n\t  8: 'Backspace',\n\t  9: 'Tab',\n\t  12: 'Clear',\n\t  13: 'Enter',\n\t  16: 'Shift',\n\t  17: 'Control',\n\t  18: 'Alt',\n\t  19: 'Pause',\n\t  20: 'CapsLock',\n\t  27: 'Escape',\n\t  32: ' ',\n\t  33: 'PageUp',\n\t  34: 'PageDown',\n\t  35: 'End',\n\t  36: 'Home',\n\t  37: 'ArrowLeft',\n\t  38: 'ArrowUp',\n\t  39: 'ArrowRight',\n\t  40: 'ArrowDown',\n\t  45: 'Insert',\n\t  46: 'Delete',\n\t  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',\n\t  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',\n\t  144: 'NumLock',\n\t  145: 'ScrollLock',\n\t  224: 'Meta'\n\t};\n\t\n\t/**\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {string} Normalized `key` property.\n\t */\n\tfunction getEventKey(nativeEvent) {\n\t  if (nativeEvent.key) {\n\t    // Normalize inconsistent values reported by browsers due to\n\t    // implementations of a working draft specification.\n\t\n\t    // FireFox implements `key` but returns `MozPrintableKey` for all\n\t    // printable characters (normalized to `Unidentified`), ignore it.\n\t    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n\t    if (key !== 'Unidentified') {\n\t      return key;\n\t    }\n\t  }\n\t\n\t  // Browser does not implement `key`, polyfill as much of it as we can.\n\t  if (nativeEvent.type === 'keypress') {\n\t    var charCode = getEventCharCode(nativeEvent);\n\t\n\t    // The enter-key is technically both printable and non-printable and can\n\t    // thus be captured by `keypress`, no other non-printable key should.\n\t    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n\t  }\n\t  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n\t    // While user keyboard layout determines the actual meaning of each\n\t    // `keyCode` value, almost all function keys have a universal value.\n\t    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n\t  }\n\t  return '';\n\t}\n\t\n\tmodule.exports = getEventKey;\n\n/***/ },\n/* 170 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getNodeForCharacterOffset\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Given any node return the first leaf node without children.\n\t *\n\t * @param {DOMElement|DOMTextNode} node\n\t * @return {DOMElement|DOMTextNode}\n\t */\n\t\n\tfunction getLeafNode(node) {\n\t  while (node && node.firstChild) {\n\t    node = node.firstChild;\n\t  }\n\t  return node;\n\t}\n\t\n\t/**\n\t * Get the next sibling within a container. This will walk up the\n\t * DOM if a node's siblings have been exhausted.\n\t *\n\t * @param {DOMElement|DOMTextNode} node\n\t * @return {?DOMElement|DOMTextNode}\n\t */\n\tfunction getSiblingNode(node) {\n\t  while (node) {\n\t    if (node.nextSibling) {\n\t      return node.nextSibling;\n\t    }\n\t    node = node.parentNode;\n\t  }\n\t}\n\t\n\t/**\n\t * Get object describing the nodes which contain characters at offset.\n\t *\n\t * @param {DOMElement|DOMTextNode} root\n\t * @param {number} offset\n\t * @return {?object}\n\t */\n\tfunction getNodeForCharacterOffset(root, offset) {\n\t  var node = getLeafNode(root);\n\t  var nodeStart = 0;\n\t  var nodeEnd = 0;\n\t\n\t  while (node) {\n\t    if (node.nodeType === 3) {\n\t      nodeEnd = nodeStart + node.textContent.length;\n\t\n\t      if (nodeStart <= offset && nodeEnd >= offset) {\n\t        return {\n\t          node: node,\n\t          offset: offset - nodeStart\n\t        };\n\t      }\n\t\n\t      nodeStart = nodeEnd;\n\t    }\n\t\n\t    node = getLeafNode(getSiblingNode(node));\n\t  }\n\t}\n\t\n\tmodule.exports = getNodeForCharacterOffset;\n\n/***/ },\n/* 171 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getVendorPrefixedEventName\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\t/**\n\t * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n\t *\n\t * @param {string} styleProp\n\t * @param {string} eventName\n\t * @returns {object}\n\t */\n\tfunction makePrefixMap(styleProp, eventName) {\n\t  var prefixes = {};\n\t\n\t  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n\t  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n\t  prefixes['Moz' + styleProp] = 'moz' + eventName;\n\t  prefixes['ms' + styleProp] = 'MS' + eventName;\n\t  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();\n\t\n\t  return prefixes;\n\t}\n\t\n\t/**\n\t * A list of event names to a configurable list of vendor prefixes.\n\t */\n\tvar vendorPrefixes = {\n\t  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n\t  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n\t  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n\t  transitionend: makePrefixMap('Transition', 'TransitionEnd')\n\t};\n\t\n\t/**\n\t * Event names that have already been detected and prefixed (if applicable).\n\t */\n\tvar prefixedEventNames = {};\n\t\n\t/**\n\t * Element to check for prefixes on.\n\t */\n\tvar style = {};\n\t\n\t/**\n\t * Bootstrap if a DOM exists.\n\t */\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  style = document.createElement('div').style;\n\t\n\t  // On some platforms, in particular some releases of Android 4.x,\n\t  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n\t  // style object but the events that fire will still be prefixed, so we need\n\t  // to check if the un-prefixed events are usable, and if not remove them from the map.\n\t  if (!('AnimationEvent' in window)) {\n\t    delete vendorPrefixes.animationend.animation;\n\t    delete vendorPrefixes.animationiteration.animation;\n\t    delete vendorPrefixes.animationstart.animation;\n\t  }\n\t\n\t  // Same as above\n\t  if (!('TransitionEvent' in window)) {\n\t    delete vendorPrefixes.transitionend.transition;\n\t  }\n\t}\n\t\n\t/**\n\t * Attempts to determine the correct vendor prefixed event name.\n\t *\n\t * @param {string} eventName\n\t * @returns {string}\n\t */\n\tfunction getVendorPrefixedEventName(eventName) {\n\t  if (prefixedEventNames[eventName]) {\n\t    return prefixedEventNames[eventName];\n\t  } else if (!vendorPrefixes[eventName]) {\n\t    return eventName;\n\t  }\n\t\n\t  var prefixMap = vendorPrefixes[eventName];\n\t\n\t  for (var styleProp in prefixMap) {\n\t    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n\t      return prefixedEventNames[eventName] = prefixMap[styleProp];\n\t    }\n\t  }\n\t\n\t  return '';\n\t}\n\t\n\tmodule.exports = getVendorPrefixedEventName;\n\n/***/ },\n/* 172 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule onlyChild\n\t */\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactElement = __webpack_require__(9);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Returns the first child in a collection of children and verifies that there\n\t * is only one child in the collection.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only\n\t *\n\t * The current implementation of this function assumes that a single child gets\n\t * passed without a wrapper, but the purpose of this helper function is to\n\t * abstract away the particular structure of children.\n\t *\n\t * @param {?object} children Child collection structure.\n\t * @return {ReactElement} The first and only `ReactElement` contained in the\n\t * structure.\n\t */\n\tfunction onlyChild(children) {\n\t  !ReactElement.isValidElement(children) ?  false ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;\n\t  return children;\n\t}\n\t\n\tmodule.exports = onlyChild;\n\n/***/ },\n/* 173 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule quoteAttributeValueForBrowser\n\t */\n\t\n\t'use strict';\n\t\n\tvar escapeTextContentForBrowser = __webpack_require__(29);\n\t\n\t/**\n\t * Escapes attribute value to prevent scripting attacks.\n\t *\n\t * @param {*} value Value to escape.\n\t * @return {string} An escaped string.\n\t */\n\tfunction quoteAttributeValueForBrowser(value) {\n\t  return '\"' + escapeTextContentForBrowser(value) + '\"';\n\t}\n\t\n\tmodule.exports = quoteAttributeValueForBrowser;\n\n/***/ },\n/* 174 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t* @providesModule renderSubtreeIntoContainer\n\t*/\n\t\n\t'use strict';\n\t\n\tvar ReactMount = __webpack_require__(71);\n\t\n\tmodule.exports = ReactMount.renderSubtreeIntoContainer;\n\n/***/ },\n/* 175 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory){\n\t\n\t\t//UMD\n\t\tif ( true ) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn factory();\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (typeof module === \"object\") {\n\t\t\tmodule.exports = factory();\n\t \t} else {\n\t\t\troot.Tone = factory();\n\t\t}\n\t\n\t}(this, function(){\n\t\n\t\t\"use strict\";\n\t\t\n\t\tvar Tone;\n\t\t//constructs the main Tone object\n\t\tfunction Main(func){\n\t\t\tTone = func();\n\t\t}\n\t\t//invokes each of the modules with the main Tone object as the argument\n\t\tfunction Module(func){\n\t\t\tfunc(Tone);\n\t\t}\t/**\n\t\t *  Tone.js\n\t\t *  @author Yotam Mann\n\t\t *  @license http://opensource.org/licenses/MIT MIT License\n\t\t *  @copyright 2014-2016 Yotam Mann\n\t\t */\n\t\tMain(function () {\n\t\t    \n\t\t    //////////////////////////////////////////////////////////////////////////\n\t\t    //\tWEB AUDIO CONTEXT\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    function isUndef(val) {\n\t\t        return typeof val === 'undefined';\n\t\t    }\n\t\t    function isFunction(val) {\n\t\t        return typeof val === 'function';\n\t\t    }\n\t\t    var audioContext;\n\t\t    //polyfill for AudioContext and OfflineAudioContext\n\t\t    if (isUndef(window.AudioContext)) {\n\t\t        window.AudioContext = window.webkitAudioContext;\n\t\t    }\n\t\t    if (isUndef(window.OfflineAudioContext)) {\n\t\t        window.OfflineAudioContext = window.webkitOfflineAudioContext;\n\t\t    }\n\t\t    if (!isUndef(AudioContext)) {\n\t\t        audioContext = new AudioContext();\n\t\t    } else {\n\t\t        throw new Error('Web Audio is not supported in this browser');\n\t\t    }\n\t\t    //SHIMS////////////////////////////////////////////////////////////////////\n\t\t    if (!isFunction(AudioContext.prototype.createGain)) {\n\t\t        AudioContext.prototype.createGain = AudioContext.prototype.createGainNode;\n\t\t    }\n\t\t    if (!isFunction(AudioContext.prototype.createDelay)) {\n\t\t        AudioContext.prototype.createDelay = AudioContext.prototype.createDelayNode;\n\t\t    }\n\t\t    if (!isFunction(AudioContext.prototype.createPeriodicWave)) {\n\t\t        AudioContext.prototype.createPeriodicWave = AudioContext.prototype.createWaveTable;\n\t\t    }\n\t\t    if (!isFunction(AudioBufferSourceNode.prototype.start)) {\n\t\t        AudioBufferSourceNode.prototype.start = AudioBufferSourceNode.prototype.noteGrainOn;\n\t\t    }\n\t\t    if (!isFunction(AudioBufferSourceNode.prototype.stop)) {\n\t\t        AudioBufferSourceNode.prototype.stop = AudioBufferSourceNode.prototype.noteOff;\n\t\t    }\n\t\t    if (!isFunction(OscillatorNode.prototype.start)) {\n\t\t        OscillatorNode.prototype.start = OscillatorNode.prototype.noteOn;\n\t\t    }\n\t\t    if (!isFunction(OscillatorNode.prototype.stop)) {\n\t\t        OscillatorNode.prototype.stop = OscillatorNode.prototype.noteOff;\n\t\t    }\n\t\t    if (!isFunction(OscillatorNode.prototype.setPeriodicWave)) {\n\t\t        OscillatorNode.prototype.setPeriodicWave = OscillatorNode.prototype.setWaveTable;\n\t\t    }\n\t\t    //extend the connect function to include Tones\n\t\t    if (isUndef(AudioNode.prototype._nativeConnect)) {\n\t\t        AudioNode.prototype._nativeConnect = AudioNode.prototype.connect;\n\t\t        AudioNode.prototype.connect = function (B, outNum, inNum) {\n\t\t            if (B.input) {\n\t\t                if (Array.isArray(B.input)) {\n\t\t                    if (isUndef(inNum)) {\n\t\t                        inNum = 0;\n\t\t                    }\n\t\t                    this.connect(B.input[inNum]);\n\t\t                } else {\n\t\t                    this.connect(B.input, outNum, inNum);\n\t\t                }\n\t\t            } else {\n\t\t                try {\n\t\t                    if (B instanceof AudioNode) {\n\t\t                        this._nativeConnect(B, outNum, inNum);\n\t\t                    } else {\n\t\t                        this._nativeConnect(B, outNum);\n\t\t                    }\n\t\t                } catch (e) {\n\t\t                    throw new Error('error connecting to node: ' + B);\n\t\t                }\n\t\t            }\n\t\t        };\n\t\t    }\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tTONE\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  @class  Tone is the base class of all other classes. It provides \n\t\t\t *          a lot of methods and functionality to all classes that extend\n\t\t\t *          it. \n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @alias Tone\n\t\t\t *  @param {number} [inputs=1] the number of input nodes\n\t\t\t *  @param {number} [outputs=1] the number of output nodes\n\t\t\t */\n\t\t    var Tone = function (inputs, outputs) {\n\t\t        /**\n\t\t\t\t *  the input node(s)\n\t\t\t\t *  @type {GainNode|Array}\n\t\t\t\t */\n\t\t        if (isUndef(inputs) || inputs === 1) {\n\t\t            this.input = this.context.createGain();\n\t\t        } else if (inputs > 1) {\n\t\t            this.input = new Array(inputs);\n\t\t        }\n\t\t        /**\n\t\t\t\t *  the output node(s)\n\t\t\t\t *  @type {GainNode|Array}\n\t\t\t\t */\n\t\t        if (isUndef(outputs) || outputs === 1) {\n\t\t            this.output = this.context.createGain();\n\t\t        } else if (outputs > 1) {\n\t\t            this.output = new Array(inputs);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Set the parameters at once. Either pass in an\n\t\t\t *  object mapping parameters to values, or to set a\n\t\t\t *  single parameter, by passing in a string and value.\n\t\t\t *  The last argument is an optional ramp time which \n\t\t\t *  will ramp any signal values to their destination value\n\t\t\t *  over the duration of the rampTime.\n\t\t\t *  @param {Object|string} params\n\t\t\t *  @param {number=} value\n\t\t\t *  @param {Time=} rampTime\n\t\t\t *  @returns {Tone} this\n\t\t\t *  @example\n\t\t\t * //set values using an object\n\t\t\t * filter.set({\n\t\t\t * \t\"frequency\" : 300,\n\t\t\t * \t\"type\" : highpass\n\t\t\t * });\n\t\t\t *  @example\n\t\t\t * filter.set(\"type\", \"highpass\");\n\t\t\t *  @example\n\t\t\t * //ramp to the value 220 over 3 seconds. \n\t\t\t * oscillator.set({\n\t\t\t * \t\"frequency\" : 220\n\t\t\t * }, 3);\n\t\t\t */\n\t\t    Tone.prototype.set = function (params, value, rampTime) {\n\t\t        if (this.isObject(params)) {\n\t\t            rampTime = value;\n\t\t        } else if (this.isString(params)) {\n\t\t            var tmpObj = {};\n\t\t            tmpObj[params] = value;\n\t\t            params = tmpObj;\n\t\t        }\n\t\t        for (var attr in params) {\n\t\t            value = params[attr];\n\t\t            var parent = this;\n\t\t            if (attr.indexOf('.') !== -1) {\n\t\t                var attrSplit = attr.split('.');\n\t\t                for (var i = 0; i < attrSplit.length - 1; i++) {\n\t\t                    parent = parent[attrSplit[i]];\n\t\t                }\n\t\t                attr = attrSplit[attrSplit.length - 1];\n\t\t            }\n\t\t            var param = parent[attr];\n\t\t            if (isUndef(param)) {\n\t\t                continue;\n\t\t            }\n\t\t            if (Tone.Signal && param instanceof Tone.Signal || Tone.Param && param instanceof Tone.Param) {\n\t\t                if (param.value !== value) {\n\t\t                    if (isUndef(rampTime)) {\n\t\t                        param.value = value;\n\t\t                    } else {\n\t\t                        param.rampTo(value, rampTime);\n\t\t                    }\n\t\t                }\n\t\t            } else if (param instanceof AudioParam) {\n\t\t                if (param.value !== value) {\n\t\t                    param.value = value;\n\t\t                }\n\t\t            } else if (param instanceof Tone) {\n\t\t                param.set(value);\n\t\t            } else if (param !== value) {\n\t\t                parent[attr] = value;\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the object's attributes. Given no arguments get\n\t\t\t *  will return all available object properties and their corresponding\n\t\t\t *  values. Pass in a single attribute to retrieve or an array\n\t\t\t *  of attributes. The attribute strings can also include a \".\"\n\t\t\t *  to access deeper properties.\n\t\t\t *  @example\n\t\t\t * osc.get();\n\t\t\t * //returns {\"type\" : \"sine\", \"frequency\" : 440, ...etc}\n\t\t\t *  @example\n\t\t\t * osc.get(\"type\");\n\t\t\t * //returns { \"type\" : \"sine\"}\n\t\t\t * @example\n\t\t\t * //use dot notation to access deep properties\n\t\t\t * synth.get([\"envelope.attack\", \"envelope.release\"]);\n\t\t\t * //returns {\"envelope\" : {\"attack\" : 0.2, \"release\" : 0.4}}\n\t\t\t *  @param {Array=|string|undefined} params the parameters to get, otherwise will return \n\t\t\t *  \t\t\t\t\t                  all available.\n\t\t\t *  @returns {Object}\n\t\t\t */\n\t\t    Tone.prototype.get = function (params) {\n\t\t        if (isUndef(params)) {\n\t\t            params = this._collectDefaults(this.constructor);\n\t\t        } else if (this.isString(params)) {\n\t\t            params = [params];\n\t\t        }\n\t\t        var ret = {};\n\t\t        for (var i = 0; i < params.length; i++) {\n\t\t            var attr = params[i];\n\t\t            var parent = this;\n\t\t            var subRet = ret;\n\t\t            if (attr.indexOf('.') !== -1) {\n\t\t                var attrSplit = attr.split('.');\n\t\t                for (var j = 0; j < attrSplit.length - 1; j++) {\n\t\t                    var subAttr = attrSplit[j];\n\t\t                    subRet[subAttr] = subRet[subAttr] || {};\n\t\t                    subRet = subRet[subAttr];\n\t\t                    parent = parent[subAttr];\n\t\t                }\n\t\t                attr = attrSplit[attrSplit.length - 1];\n\t\t            }\n\t\t            var param = parent[attr];\n\t\t            if (this.isObject(params[attr])) {\n\t\t                subRet[attr] = param.get();\n\t\t            } else if (Tone.Signal && param instanceof Tone.Signal) {\n\t\t                subRet[attr] = param.value;\n\t\t            } else if (Tone.Param && param instanceof Tone.Param) {\n\t\t                subRet[attr] = param.value;\n\t\t            } else if (param instanceof AudioParam) {\n\t\t                subRet[attr] = param.value;\n\t\t            } else if (param instanceof Tone) {\n\t\t                subRet[attr] = param.get();\n\t\t            } else if (!isFunction(param) && !isUndef(param)) {\n\t\t                subRet[attr] = param;\n\t\t            }\n\t\t        }\n\t\t        return ret;\n\t\t    };\n\t\t    /**\n\t\t\t *  collect all of the default attributes in one\n\t\t\t *  @private\n\t\t\t *  @param {function} constr the constructor to find the defaults from\n\t\t\t *  @return {Array} all of the attributes which belong to the class\n\t\t\t */\n\t\t    Tone.prototype._collectDefaults = function (constr) {\n\t\t        var ret = [];\n\t\t        if (!isUndef(constr.defaults)) {\n\t\t            ret = Object.keys(constr.defaults);\n\t\t        }\n\t\t        if (!isUndef(constr._super)) {\n\t\t            var superDefs = this._collectDefaults(constr._super);\n\t\t            //filter out repeats\n\t\t            for (var i = 0; i < superDefs.length; i++) {\n\t\t                if (ret.indexOf(superDefs[i]) === -1) {\n\t\t                    ret.push(superDefs[i]);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return ret;\n\t\t    };\n\t\t    /**\n\t\t\t *  @returns {string} returns the name of the class as a string\n\t\t\t */\n\t\t    Tone.prototype.toString = function () {\n\t\t        for (var className in Tone) {\n\t\t            var isLetter = className[0].match(/^[A-Z]$/);\n\t\t            var sameConstructor = Tone[className] === this.constructor;\n\t\t            if (isFunction(Tone[className]) && isLetter && sameConstructor) {\n\t\t                return className;\n\t\t            }\n\t\t        }\n\t\t        return 'Tone';\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tCLASS VARS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  A static pointer to the audio context accessible as Tone.context. \n\t\t\t *  @type {AudioContext}\n\t\t\t */\n\t\t    Tone.context = audioContext;\n\t\t    /**\n\t\t\t *  The audio context.\n\t\t\t *  @type {AudioContext}\n\t\t\t */\n\t\t    Tone.prototype.context = Tone.context;\n\t\t    /**\n\t\t\t *  the default buffer size\n\t\t\t *  @type {number}\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.prototype.bufferSize = 2048;\n\t\t    /**\n\t\t\t *  The delay time of a single frame (128 samples according to the spec). \n\t\t\t *  @type {number}\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.prototype.blockTime = 128 / Tone.context.sampleRate;\n\t\t    /**\n\t\t\t *  The time of a single sample\n\t\t\t *  @type {number}\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.prototype.sampleTime = 1 / Tone.context.sampleRate;\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tCONNECTIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  disconnect and dispose\n\t\t\t *  @returns {Tone} this\n\t\t\t */\n\t\t    Tone.prototype.dispose = function () {\n\t\t        if (!this.isUndef(this.input)) {\n\t\t            if (this.input instanceof AudioNode) {\n\t\t                this.input.disconnect();\n\t\t            }\n\t\t            this.input = null;\n\t\t        }\n\t\t        if (!this.isUndef(this.output)) {\n\t\t            if (this.output instanceof AudioNode) {\n\t\t                this.output.disconnect();\n\t\t            }\n\t\t            this.output = null;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  a silent connection to the DesinationNode\n\t\t\t *  which will ensure that anything connected to it\n\t\t\t *  will not be garbage collected\n\t\t\t *  \n\t\t\t *  @private\n\t\t\t */\n\t\t    var _silentNode = null;\n\t\t    /**\n\t\t\t *  makes a connection to ensure that the node will not be garbage collected\n\t\t\t *  until 'dispose' is explicitly called\n\t\t\t *\n\t\t\t *  use carefully. circumvents JS and WebAudio's normal Garbage Collection behavior\n\t\t\t *  @returns {Tone} this\n\t\t\t */\n\t\t    Tone.prototype.noGC = function () {\n\t\t        this.output.connect(_silentNode);\n\t\t        return this;\n\t\t    };\n\t\t    AudioNode.prototype.noGC = function () {\n\t\t        this.connect(_silentNode);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  connect the output of a ToneNode to an AudioParam, AudioNode, or ToneNode\n\t\t\t *  @param  {Tone | AudioParam | AudioNode} unit \n\t\t\t *  @param {number} [outputNum=0] optionally which output to connect from\n\t\t\t *  @param {number} [inputNum=0] optionally which input to connect to\n\t\t\t *  @returns {Tone} this\n\t\t\t */\n\t\t    Tone.prototype.connect = function (unit, outputNum, inputNum) {\n\t\t        if (Array.isArray(this.output)) {\n\t\t            outputNum = this.defaultArg(outputNum, 0);\n\t\t            this.output[outputNum].connect(unit, 0, inputNum);\n\t\t        } else {\n\t\t            this.output.connect(unit, outputNum, inputNum);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  disconnect the output\n\t\t\t *  @param {Number|AudioNode} output Either the output index to disconnect\n\t\t\t *                                   if the output is an array, or the\n\t\t\t *                                   node to disconnect from.\n\t\t\t *  @returns {Tone} this\n\t\t\t */\n\t\t    Tone.prototype.disconnect = function (output) {\n\t\t        if (Array.isArray(this.output)) {\n\t\t            output = this.defaultArg(output, 0);\n\t\t            this.output[output].disconnect();\n\t\t        } else if (!this.isUndef(output)) {\n\t\t            this.output.disconnect(output);\n\t\t        } else {\n\t\t            this.output.disconnect();\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  connect together all of the arguments in series\n\t\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t\t *  @returns {Tone} this\n\t\t\t */\n\t\t    Tone.prototype.connectSeries = function () {\n\t\t        if (arguments.length > 1) {\n\t\t            var currentUnit = arguments[0];\n\t\t            for (var i = 1; i < arguments.length; i++) {\n\t\t                var toUnit = arguments[i];\n\t\t                currentUnit.connect(toUnit);\n\t\t                currentUnit = toUnit;\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Connect the output of this node to the rest of the nodes in series.\n\t\t\t *  @example\n\t\t\t *  //connect a node to an effect, panVol and then to the master output\n\t\t\t *  node.chain(effect, panVol, Tone.Master);\n\t\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t\t *  @returns {Tone} this\n\t\t\t */\n\t\t    Tone.prototype.chain = function () {\n\t\t        if (arguments.length > 0) {\n\t\t            var currentUnit = this;\n\t\t            for (var i = 0; i < arguments.length; i++) {\n\t\t                var toUnit = arguments[i];\n\t\t                currentUnit.connect(toUnit);\n\t\t                currentUnit = toUnit;\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  connect the output of this node to the rest of the nodes in parallel.\n\t\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t\t *  @returns {Tone} this\n\t\t\t */\n\t\t    Tone.prototype.fan = function () {\n\t\t        if (arguments.length > 0) {\n\t\t            for (var i = 0; i < arguments.length; i++) {\n\t\t                this.connect(arguments[i]);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    //give native nodes chain and fan methods\n\t\t    AudioNode.prototype.chain = Tone.prototype.chain;\n\t\t    AudioNode.prototype.fan = Tone.prototype.fan;\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tUTILITIES / HELPERS / MATHS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  If the `given` parameter is undefined, use the `fallback`. \n\t\t\t *  If both `given` and `fallback` are object literals, it will\n\t\t\t *  return a deep copy which includes all of the parameters from both \n\t\t\t *  objects. If a parameter is undefined in given, it will return\n\t\t\t *  the fallback property. \n\t\t\t *  <br><br>\n\t\t\t *  WARNING: if object is self referential, it will go into an an \n\t\t\t *  infinite recursive loop.\n\t\t\t *  \n\t\t\t *  @param  {*} given    \n\t\t\t *  @param  {*} fallback \n\t\t\t *  @return {*}          \n\t\t\t */\n\t\t    Tone.prototype.defaultArg = function (given, fallback) {\n\t\t        if (this.isObject(given) && this.isObject(fallback)) {\n\t\t            var ret = {};\n\t\t            //make a deep copy of the given object\n\t\t            for (var givenProp in given) {\n\t\t                ret[givenProp] = this.defaultArg(fallback[givenProp], given[givenProp]);\n\t\t            }\n\t\t            for (var fallbackProp in fallback) {\n\t\t                ret[fallbackProp] = this.defaultArg(given[fallbackProp], fallback[fallbackProp]);\n\t\t            }\n\t\t            return ret;\n\t\t        } else {\n\t\t            return isUndef(given) ? fallback : given;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  returns the args as an options object with given arguments\n\t\t\t *  mapped to the names provided. \n\t\t\t *\n\t\t\t *  if the args given is an array containing only one object, it is assumed\n\t\t\t *  that that's already the options object and will just return it. \n\t\t\t *  \n\t\t\t *  @param  {Array} values  the 'arguments' object of the function\n\t\t\t *  @param  {Array} keys the names of the arguments as they\n\t\t\t *                                 should appear in the options object\n\t\t\t *  @param {Object=} defaults optional defaults to mixin to the returned \n\t\t\t *                            options object                              \n\t\t\t *  @return {Object}       the options object with the names mapped to the arguments\n\t\t\t */\n\t\t    Tone.prototype.optionsObject = function (values, keys, defaults) {\n\t\t        var options = {};\n\t\t        if (values.length === 1 && this.isObject(values[0])) {\n\t\t            options = values[0];\n\t\t        } else {\n\t\t            for (var i = 0; i < keys.length; i++) {\n\t\t                options[keys[i]] = values[i];\n\t\t            }\n\t\t        }\n\t\t        if (!this.isUndef(defaults)) {\n\t\t            return this.defaultArg(options, defaults);\n\t\t        } else {\n\t\t            return options;\n\t\t        }\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    // TYPE CHECKING\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  test if the arg is undefined\n\t\t\t *  @param {*} arg the argument to test\n\t\t\t *  @returns {boolean} true if the arg is undefined\n\t\t\t *  @function\n\t\t\t */\n\t\t    Tone.prototype.isUndef = isUndef;\n\t\t    /**\n\t\t\t *  test if the arg is a function\n\t\t\t *  @param {*} arg the argument to test\n\t\t\t *  @returns {boolean} true if the arg is a function\n\t\t\t *  @function\n\t\t\t */\n\t\t    Tone.prototype.isFunction = isFunction;\n\t\t    /**\n\t\t\t *  Test if the argument is a number.\n\t\t\t *  @param {*} arg the argument to test\n\t\t\t *  @returns {boolean} true if the arg is a number\n\t\t\t */\n\t\t    Tone.prototype.isNumber = function (arg) {\n\t\t        return typeof arg === 'number';\n\t\t    };\n\t\t    /**\n\t\t\t *  Test if the given argument is an object literal (i.e. `{}`);\n\t\t\t *  @param {*} arg the argument to test\n\t\t\t *  @returns {boolean} true if the arg is an object literal.\n\t\t\t */\n\t\t    Tone.prototype.isObject = function (arg) {\n\t\t        return Object.prototype.toString.call(arg) === '[object Object]' && arg.constructor === Object;\n\t\t    };\n\t\t    /**\n\t\t\t *  Test if the argument is a boolean.\n\t\t\t *  @param {*} arg the argument to test\n\t\t\t *  @returns {boolean} true if the arg is a boolean\n\t\t\t */\n\t\t    Tone.prototype.isBoolean = function (arg) {\n\t\t        return typeof arg === 'boolean';\n\t\t    };\n\t\t    /**\n\t\t\t *  Test if the argument is an Array\n\t\t\t *  @param {*} arg the argument to test\n\t\t\t *  @returns {boolean} true if the arg is an array\n\t\t\t */\n\t\t    Tone.prototype.isArray = function (arg) {\n\t\t        return Array.isArray(arg);\n\t\t    };\n\t\t    /**\n\t\t\t *  Test if the argument is a string.\n\t\t\t *  @param {*} arg the argument to test\n\t\t\t *  @returns {boolean} true if the arg is a string\n\t\t\t */\n\t\t    Tone.prototype.isString = function (arg) {\n\t\t        return typeof arg === 'string';\n\t\t    };\n\t\t    /**\n\t\t\t *  An empty function.\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.noOp = function () {\n\t\t    };\n\t\t    /**\n\t\t\t *  Make the property not writable. Internal use only. \n\t\t\t *  @private\n\t\t\t *  @param  {string}  property  the property to make not writable\n\t\t\t */\n\t\t    Tone.prototype._readOnly = function (property) {\n\t\t        if (Array.isArray(property)) {\n\t\t            for (var i = 0; i < property.length; i++) {\n\t\t                this._readOnly(property[i]);\n\t\t            }\n\t\t        } else {\n\t\t            Object.defineProperty(this, property, {\n\t\t                writable: false,\n\t\t                enumerable: true\n\t\t            });\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Make an attribute writeable. Interal use only. \n\t\t\t *  @private\n\t\t\t *  @param  {string}  property  the property to make writable\n\t\t\t */\n\t\t    Tone.prototype._writable = function (property) {\n\t\t        if (Array.isArray(property)) {\n\t\t            for (var i = 0; i < property.length; i++) {\n\t\t                this._writable(property[i]);\n\t\t            }\n\t\t        } else {\n\t\t            Object.defineProperty(this, property, { writable: true });\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * Possible play states. \n\t\t\t * @enum {string}\n\t\t\t */\n\t\t    Tone.State = {\n\t\t        Started: 'started',\n\t\t        Stopped: 'stopped',\n\t\t        Paused: 'paused'\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    // GAIN CONVERSIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Equal power gain scale. Good for cross-fading.\n\t\t\t *  @param  {NormalRange} percent (0-1)\n\t\t\t *  @return {Number}         output gain (0-1)\n\t\t\t */\n\t\t    Tone.prototype.equalPowerScale = function (percent) {\n\t\t        var piFactor = 0.5 * Math.PI;\n\t\t        return Math.sin(percent * piFactor);\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert decibels into gain.\n\t\t\t *  @param  {Decibels} db\n\t\t\t *  @return {Number}   \n\t\t\t */\n\t\t    Tone.prototype.dbToGain = function (db) {\n\t\t        return Math.pow(2, db / 6);\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert gain to decibels.\n\t\t\t *  @param  {Number} gain (0-1)\n\t\t\t *  @return {Decibels}   \n\t\t\t */\n\t\t    Tone.prototype.gainToDb = function (gain) {\n\t\t        return 20 * (Math.log(gain) / Math.LN10);\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert an interval (in semitones) to a frequency ratio.\n\t\t\t *  @param  {Interval} interval the number of semitones above the base note\n\t\t\t *  @return {number}          the frequency ratio\n\t\t\t *  @example\n\t\t\t * tone.intervalToFrequencyRatio(0); // 1\n\t\t\t * tone.intervalToFrequencyRatio(12); // 2\n\t\t\t * tone.intervalToFrequencyRatio(-12); // 0.5\n\t\t\t */\n\t\t    Tone.prototype.intervalToFrequencyRatio = function (interval) {\n\t\t        return Math.pow(2, interval / 12);\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tTIMING\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Return the current time of the AudioContext clock.\n\t\t\t *  @return {Number} the currentTime from the AudioContext\n\t\t\t */\n\t\t    Tone.prototype.now = function () {\n\t\t        return this.context.currentTime;\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the current time of the AudioContext clock.\n\t\t\t *  @return {Number} the currentTime from the AudioContext\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.now = function () {\n\t\t        return Tone.context.currentTime;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tINHERITANCE\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  have a child inherit all of Tone's (or a parent's) prototype\n\t\t\t *  to inherit the parent's properties, make sure to call \n\t\t\t *  Parent.call(this) in the child's constructor\n\t\t\t *\n\t\t\t *  based on closure library's inherit function\n\t\t\t *\n\t\t\t *  @static\n\t\t\t *  @param  {function} \tchild  \n\t\t\t *  @param  {function=} parent (optional) parent to inherit from\n\t\t\t *                             if no parent is supplied, the child\n\t\t\t *                             will inherit from Tone\n\t\t\t */\n\t\t    Tone.extend = function (child, parent) {\n\t\t        if (isUndef(parent)) {\n\t\t            parent = Tone;\n\t\t        }\n\t\t        function TempConstructor() {\n\t\t        }\n\t\t        TempConstructor.prototype = parent.prototype;\n\t\t        child.prototype = new TempConstructor();\n\t\t        /** @override */\n\t\t        child.prototype.constructor = child;\n\t\t        child._super = parent;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tCONTEXT\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  array of callbacks to be invoked when a new context is added\n\t\t\t *  @private \n\t\t\t *  @private\n\t\t\t */\n\t\t    var newContextCallbacks = [];\n\t\t    /**\n\t\t\t *  invoke this callback when a new context is added\n\t\t\t *  will be invoked initially with the first context\n\t\t\t *  @private \n\t\t\t *  @static\n\t\t\t *  @param {function(AudioContext)} callback the callback to be invoked\n\t\t\t *                                           with the audio context\n\t\t\t */\n\t\t    Tone._initAudioContext = function (callback) {\n\t\t        //invoke the callback with the existing AudioContext\n\t\t        callback(Tone.context);\n\t\t        //add it to the array\n\t\t        newContextCallbacks.push(callback);\n\t\t    };\n\t\t    /**\n\t\t\t *  Tone automatically creates a context on init, but if you are working\n\t\t\t *  with other libraries which also create an AudioContext, it can be\n\t\t\t *  useful to set your own. If you are going to set your own context, \n\t\t\t *  be sure to do it at the start of your code, before creating any objects.\n\t\t\t *  @static\n\t\t\t *  @param {AudioContext} ctx The new audio context to set\n\t\t\t */\n\t\t    Tone.setContext = function (ctx) {\n\t\t        //set the prototypes\n\t\t        Tone.prototype.context = ctx;\n\t\t        Tone.context = ctx;\n\t\t        //invoke all the callbacks\n\t\t        for (var i = 0; i < newContextCallbacks.length; i++) {\n\t\t            newContextCallbacks[i](ctx);\n\t\t        }\n\t\t    };\n\t\t    //setup the context\n\t\t    Tone._initAudioContext(function (audioContext) {\n\t\t        //set the blockTime\n\t\t        Tone.prototype.blockTime = 128 / audioContext.sampleRate;\n\t\t        Tone.prototype.sampleTime = 1 / audioContext.sampleRate;\n\t\t        _silentNode = audioContext.createGain();\n\t\t        _silentNode.gain.value = 0;\n\t\t        _silentNode.connect(audioContext.destination);\n\t\t    });\n\t\t    Tone.version = 'r8';\n\t\t    // allow optional silencing of this log\n\t\t    if (!window.TONE_SILENCE_VERSION_LOGGING) {\n\t\t        console.log('%c * Tone.js ' + Tone.version + ' * ', 'background: #000; color: #fff');\n\t\t    }\n\t\t    return Tone;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Base class for all Signals. Used Internally. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t */\n\t\t    Tone.SignalBase = function () {\n\t\t    };\n\t\t    Tone.extend(Tone.SignalBase);\n\t\t    /**\n\t\t\t *  When signals connect to other signals or AudioParams, \n\t\t\t *  they take over the output value of that signal or AudioParam. \n\t\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>. \n\t\t\t *\n\t\t\t *  @override\n\t\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node \n\t\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t\t *  @returns {Tone.SignalBase} this\n\t\t\t */\n\t\t    Tone.SignalBase.prototype.connect = function (node, outputNumber, inputNumber) {\n\t\t        //zero it out so that the signal can have full control\n\t\t        if (Tone.Signal && Tone.Signal === node.constructor || Tone.Param && Tone.Param === node.constructor || Tone.TimelineSignal && Tone.TimelineSignal === node.constructor) {\n\t\t            //cancel changes\n\t\t            node._param.cancelScheduledValues(0);\n\t\t            //reset the value\n\t\t            node._param.value = 0;\n\t\t            //mark the value as overridden\n\t\t            node.overridden = true;\n\t\t        } else if (node instanceof AudioParam) {\n\t\t            node.cancelScheduledValues(0);\n\t\t            node.value = 0;\n\t\t        }\n\t\t        Tone.prototype.connect.call(this, node, outputNumber, inputNumber);\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.SignalBase;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Wraps the native Web Audio API \n\t\t\t *         [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n\t\t\t *\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @constructor\n\t\t\t *  @param {function|Array|Number} mapping The function used to define the values. \n\t\t\t *                                    The mapping function should take two arguments: \n\t\t\t *                                    the first is the value at the current position \n\t\t\t *                                    and the second is the array position. \n\t\t\t *                                    If the argument is an array, that array will be\n\t\t\t *                                    set as the wave shaping function. The input\n\t\t\t *                                    signal is an AudioRange [-1, 1] value and the output\n\t\t\t *                                    signal can take on any numerical values. \n\t\t\t *                                    \n\t\t\t *  @param {Number} [bufferLen=1024] The length of the WaveShaperNode buffer.\n\t\t\t *  @example\n\t\t\t * var timesTwo = new Tone.WaveShaper(function(val){\n\t\t\t * \treturn val * 2;\n\t\t\t * }, 2048);\n\t\t\t *  @example\n\t\t\t * //a waveshaper can also be constructed with an array of values\n\t\t\t * var invert = new Tone.WaveShaper([1, -1]);\n\t\t\t */\n\t\t    Tone.WaveShaper = function (mapping, bufferLen) {\n\t\t        /**\n\t\t\t\t *  the waveshaper\n\t\t\t\t *  @type {WaveShaperNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._shaper = this.input = this.output = this.context.createWaveShaper();\n\t\t        /**\n\t\t\t\t *  the waveshapers curve\n\t\t\t\t *  @type {Float32Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._curve = null;\n\t\t        if (Array.isArray(mapping)) {\n\t\t            this.curve = mapping;\n\t\t        } else if (isFinite(mapping) || this.isUndef(mapping)) {\n\t\t            this._curve = new Float32Array(this.defaultArg(mapping, 1024));\n\t\t        } else if (this.isFunction(mapping)) {\n\t\t            this._curve = new Float32Array(this.defaultArg(bufferLen, 1024));\n\t\t            this.setMap(mapping);\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.WaveShaper, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  Uses a mapping function to set the value of the curve. \n\t\t\t *  @param {function} mapping The function used to define the values. \n\t\t\t *                            The mapping function take two arguments: \n\t\t\t *                            the first is the value at the current position \n\t\t\t *                            which goes from -1 to 1 over the number of elements\n\t\t\t *                            in the curve array. The second argument is the array position. \n\t\t\t *  @returns {Tone.WaveShaper} this\n\t\t\t *  @example\n\t\t\t * //map the input signal from [-1, 1] to [0, 10]\n\t\t\t * shaper.setMap(function(val, index){\n\t\t\t * \treturn (val + 1) * 5;\n\t\t\t * })\n\t\t\t */\n\t\t    Tone.WaveShaper.prototype.setMap = function (mapping) {\n\t\t        for (var i = 0, len = this._curve.length; i < len; i++) {\n\t\t            var normalized = i / (len - 1) * 2 - 1;\n\t\t            this._curve[i] = mapping(normalized, i);\n\t\t        }\n\t\t        this._shaper.curve = this._curve;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * The array to set as the waveshaper curve. For linear curves\n\t\t\t * array length does not make much difference, but for complex curves\n\t\t\t * longer arrays will provide smoother interpolation. \n\t\t\t * @memberOf Tone.WaveShaper#\n\t\t\t * @type {Array}\n\t\t\t * @name curve\n\t\t\t */\n\t\t    Object.defineProperty(Tone.WaveShaper.prototype, 'curve', {\n\t\t        get: function () {\n\t\t            return this._shaper.curve;\n\t\t        },\n\t\t        set: function (mapping) {\n\t\t            this._curve = new Float32Array(mapping);\n\t\t            this._shaper.curve = this._curve;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * Specifies what type of oversampling (if any) should be used when \n\t\t\t * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\". \n\t\t\t * @memberOf Tone.WaveShaper#\n\t\t\t * @type {string}\n\t\t\t * @name oversample\n\t\t\t */\n\t\t    Object.defineProperty(Tone.WaveShaper.prototype, 'oversample', {\n\t\t        get: function () {\n\t\t            return this._shaper.oversample;\n\t\t        },\n\t\t        set: function (oversampling) {\n\t\t            if ([\n\t\t                    'none',\n\t\t                    '2x',\n\t\t                    '4x'\n\t\t                ].indexOf(oversampling) !== -1) {\n\t\t                this._shaper.oversample = oversampling;\n\t\t            } else {\n\t\t                throw new RangeError('Tone.WaveShaper: oversampling must be either \\'none\\', \\'2x\\', or \\'4x\\'');\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.WaveShaper} this\n\t\t\t */\n\t\t    Tone.WaveShaper.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._shaper.disconnect();\n\t\t        this._shaper = null;\n\t\t        this._curve = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.WaveShaper;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.TimeBase is a flexible encoding of time\n\t\t\t *         which can be evaluated to and from a string.\n\t\t\t *         Parsing code modified from https://code.google.com/p/tapdigit/\n\t\t\t *         Copyright 2011 2012 Ariya Hidayat, New BSD License\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param  {Time}  val    The time value as a number or string\n\t\t\t *  @param  {String=}  units  Unit values\n\t\t\t *  @example\n\t\t\t * Tone.TimeBase(4, \"n\")\n\t\t\t * Tone.TimeBase(2, \"t\")\n\t\t\t * Tone.TimeBase(\"2t\").add(\"1m\")\n\t\t\t * Tone.TimeBase(\"2t + 1m\");\n\t\t\t */\n\t\t    Tone.TimeBase = function (val, units) {\n\t\t        //allows it to be constructed with or without 'new'\n\t\t        if (this instanceof Tone.TimeBase) {\n\t\t            /**\n\t\t\t\t\t *  Any expressions parsed from the Time\n\t\t\t\t\t *  @type  {Array}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._expr = this._noOp;\n\t\t            if (val instanceof Tone.TimeBase) {\n\t\t                this.copy(val);\n\t\t            } else if (!this.isUndef(units) || this.isNumber(val)) {\n\t\t                //default units\n\t\t                units = this.defaultArg(units, this._defaultUnits);\n\t\t                var method = this._primaryExpressions[units].method;\n\t\t                this._expr = method.bind(this, val);\n\t\t            } else if (this.isString(val)) {\n\t\t                this.set(val);\n\t\t            } else if (this.isUndef(val)) {\n\t\t                //default expression\n\t\t                this._expr = this._defaultExpr();\n\t\t            }\n\t\t        } else {\n\t\t            return new Tone.TimeBase(val, units);\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.TimeBase);\n\t\t    /**\n\t\t\t *  Repalce the current time value with the value\n\t\t\t *  given by the expression string.\n\t\t\t *  @param  {String}  exprString\n\t\t\t *  @return {Tone.TimeBase} this\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.set = function (exprString) {\n\t\t        this._expr = this._parseExprString(exprString);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Return a clone of the TimeBase object.\n\t\t\t *  @return  {Tone.TimeBase} The new cloned Tone.TimeBase\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.clone = function () {\n\t\t        var instance = new this.constructor();\n\t\t        instance.copy(this);\n\t\t        return instance;\n\t\t    };\n\t\t    /**\n\t\t\t *  Copies the value of time to this Time\n\t\t\t *  @param {Tone.TimeBase} time\n\t\t\t *  @return  {TimeBase}\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.copy = function (time) {\n\t\t        var val = time._expr();\n\t\t        return this.set(val);\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tABSTRACT SYNTAX TREE PARSER\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  All the primary expressions.\n\t\t\t *  @private\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._primaryExpressions = {\n\t\t        'n': {\n\t\t            regexp: /^(\\d+)n/i,\n\t\t            method: function (value) {\n\t\t                value = parseInt(value);\n\t\t                if (value === 1) {\n\t\t                    return this._beatsToUnits(this._timeSignature());\n\t\t                } else {\n\t\t                    return this._beatsToUnits(4 / value);\n\t\t                }\n\t\t            }\n\t\t        },\n\t\t        't': {\n\t\t            regexp: /^(\\d+)t/i,\n\t\t            method: function (value) {\n\t\t                value = parseInt(value);\n\t\t                return this._beatsToUnits(8 / (parseInt(value) * 3));\n\t\t            }\n\t\t        },\n\t\t        'm': {\n\t\t            regexp: /^(\\d+)m/i,\n\t\t            method: function (value) {\n\t\t                return this._beatsToUnits(parseInt(value) * this._timeSignature());\n\t\t            }\n\t\t        },\n\t\t        'i': {\n\t\t            regexp: /^(\\d+)i/i,\n\t\t            method: function (value) {\n\t\t                return this._ticksToUnits(parseInt(value));\n\t\t            }\n\t\t        },\n\t\t        'hz': {\n\t\t            regexp: /^(\\d+(?:\\.\\d+)?)hz/i,\n\t\t            method: function (value) {\n\t\t                return this._frequencyToUnits(parseFloat(value));\n\t\t            }\n\t\t        },\n\t\t        'tr': {\n\t\t            regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t\t            method: function (m, q, s) {\n\t\t                var total = 0;\n\t\t                if (m && m !== '0') {\n\t\t                    total += this._beatsToUnits(this._timeSignature() * parseFloat(m));\n\t\t                }\n\t\t                if (q && q !== '0') {\n\t\t                    total += this._beatsToUnits(parseFloat(q));\n\t\t                }\n\t\t                if (s && s !== '0') {\n\t\t                    total += this._beatsToUnits(parseFloat(s) / 4);\n\t\t                }\n\t\t                return total;\n\t\t            }\n\t\t        },\n\t\t        's': {\n\t\t            regexp: /^(\\d+(?:\\.\\d+)?s)/,\n\t\t            method: function (value) {\n\t\t                return this._secondsToUnits(parseFloat(value));\n\t\t            }\n\t\t        },\n\t\t        'samples': {\n\t\t            regexp: /^(\\d+)samples/,\n\t\t            method: function (value) {\n\t\t                return parseInt(value) / this.context.sampleRate;\n\t\t            }\n\t\t        },\n\t\t        'default': {\n\t\t            regexp: /^(\\d+(?:\\.\\d+)?)/,\n\t\t            method: function (value) {\n\t\t                return this._primaryExpressions[this._defaultUnits].method.call(this, value);\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  All the binary expressions that TimeBase can accept.\n\t\t\t *  @private\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._binaryExpressions = {\n\t\t        '+': {\n\t\t            regexp: /^\\+/,\n\t\t            precedence: 2,\n\t\t            method: function (lh, rh) {\n\t\t                return lh() + rh();\n\t\t            }\n\t\t        },\n\t\t        '-': {\n\t\t            regexp: /^\\-/,\n\t\t            precedence: 2,\n\t\t            method: function (lh, rh) {\n\t\t                return lh() - rh();\n\t\t            }\n\t\t        },\n\t\t        '*': {\n\t\t            regexp: /^\\*/,\n\t\t            precedence: 1,\n\t\t            method: function (lh, rh) {\n\t\t                return lh() * rh();\n\t\t            }\n\t\t        },\n\t\t        '/': {\n\t\t            regexp: /^\\//,\n\t\t            precedence: 1,\n\t\t            method: function (lh, rh) {\n\t\t                return lh() / rh();\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  All the unary expressions.\n\t\t\t *  @private\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._unaryExpressions = {\n\t\t        'neg': {\n\t\t            regexp: /^\\-/,\n\t\t            method: function (lh) {\n\t\t                return -lh();\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Syntactic glue which holds expressions together\n\t\t\t *  @private\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._syntaxGlue = {\n\t\t        '(': { regexp: /^\\(/ },\n\t\t        ')': { regexp: /^\\)/ }\n\t\t    };\n\t\t    /**\n\t\t\t *  tokenize the expression based on the Expressions object\n\t\t\t *  @param   {string} expr \n\t\t\t *  @return  {Object}      returns two methods on the tokenized list, next and peek\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._tokenize = function (expr) {\n\t\t        var position = -1;\n\t\t        var tokens = [];\n\t\t        while (expr.length > 0) {\n\t\t            expr = expr.trim();\n\t\t            var token = getNextToken(expr, this);\n\t\t            tokens.push(token);\n\t\t            expr = expr.substr(token.value.length);\n\t\t        }\n\t\t        function getNextToken(expr, context) {\n\t\t            var expressions = [\n\t\t                '_binaryExpressions',\n\t\t                '_unaryExpressions',\n\t\t                '_primaryExpressions',\n\t\t                '_syntaxGlue'\n\t\t            ];\n\t\t            for (var i = 0; i < expressions.length; i++) {\n\t\t                var group = context[expressions[i]];\n\t\t                for (var opName in group) {\n\t\t                    var op = group[opName];\n\t\t                    var reg = op.regexp;\n\t\t                    var match = expr.match(reg);\n\t\t                    if (match !== null) {\n\t\t                        return {\n\t\t                            method: op.method,\n\t\t                            precedence: op.precedence,\n\t\t                            regexp: op.regexp,\n\t\t                            value: match[0]\n\t\t                        };\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            throw new SyntaxError('Tone.TimeBase: Unexpected token ' + expr);\n\t\t        }\n\t\t        return {\n\t\t            next: function () {\n\t\t                return tokens[++position];\n\t\t            },\n\t\t            peek: function () {\n\t\t                return tokens[position + 1];\n\t\t            }\n\t\t        };\n\t\t    };\n\t\t    /**\n\t\t\t *  Given a token, find the value within the groupName\n\t\t\t *  @param {Object} token\n\t\t\t *  @param {String} groupName\n\t\t\t *  @param {Number} precedence\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._matchGroup = function (token, group, prec) {\n\t\t        var ret = false;\n\t\t        if (!this.isUndef(token)) {\n\t\t            for (var opName in group) {\n\t\t                var op = group[opName];\n\t\t                if (op.regexp.test(token.value)) {\n\t\t                    if (!this.isUndef(prec)) {\n\t\t                        if (op.precedence === prec) {\n\t\t                            return op;\n\t\t                        }\n\t\t                    } else {\n\t\t                        return op;\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return ret;\n\t\t    };\n\t\t    /**\n\t\t\t *  Match a binary expression given the token and the precedence\n\t\t\t *  @param {Lexer} lexer\n\t\t\t *  @param {Number} precedence\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._parseBinary = function (lexer, precedence) {\n\t\t        if (this.isUndef(precedence)) {\n\t\t            precedence = 2;\n\t\t        }\n\t\t        var expr;\n\t\t        if (precedence < 0) {\n\t\t            expr = this._parseUnary(lexer);\n\t\t        } else {\n\t\t            expr = this._parseBinary(lexer, precedence - 1);\n\t\t        }\n\t\t        var token = lexer.peek();\n\t\t        while (token && this._matchGroup(token, this._binaryExpressions, precedence)) {\n\t\t            token = lexer.next();\n\t\t            expr = token.method.bind(this, expr, this._parseBinary(lexer, precedence - 1));\n\t\t            token = lexer.peek();\n\t\t        }\n\t\t        return expr;\n\t\t    };\n\t\t    /**\n\t\t\t *  Match a unary expression.\n\t\t\t *  @param {Lexer} lexer\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._parseUnary = function (lexer) {\n\t\t        var token, expr;\n\t\t        token = lexer.peek();\n\t\t        var op = this._matchGroup(token, this._unaryExpressions);\n\t\t        if (op) {\n\t\t            token = lexer.next();\n\t\t            expr = this._parseUnary(lexer);\n\t\t            return op.method.bind(this, expr);\n\t\t        }\n\t\t        return this._parsePrimary(lexer);\n\t\t    };\n\t\t    /**\n\t\t\t *  Match a primary expression (a value).\n\t\t\t *  @param {Lexer} lexer\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._parsePrimary = function (lexer) {\n\t\t        var token, expr;\n\t\t        token = lexer.peek();\n\t\t        if (this.isUndef(token)) {\n\t\t            throw new SyntaxError('Tone.TimeBase: Unexpected end of expression');\n\t\t        }\n\t\t        if (this._matchGroup(token, this._primaryExpressions)) {\n\t\t            token = lexer.next();\n\t\t            var matching = token.value.match(token.regexp);\n\t\t            return token.method.bind(this, matching[1], matching[2], matching[3]);\n\t\t        }\n\t\t        if (token && token.value === '(') {\n\t\t            lexer.next();\n\t\t            expr = this._parseBinary(lexer);\n\t\t            token = lexer.next();\n\t\t            if (!(token && token.value === ')')) {\n\t\t                throw new SyntaxError('Expected )');\n\t\t            }\n\t\t            return expr;\n\t\t        }\n\t\t        throw new SyntaxError('Tone.TimeBase: Cannot process token ' + token.value);\n\t\t    };\n\t\t    /**\n\t\t\t *  Recursively parse the string expression into a syntax tree.\n\t\t\t *  @param   {string} expr \n\t\t\t *  @return  {Function} the bound method to be evaluated later\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._parseExprString = function (exprString) {\n\t\t        if (!this.isString(exprString)) {\n\t\t            exprString = exprString.toString();\n\t\t        }\n\t\t        var lexer = this._tokenize(exprString);\n\t\t        var tree = this._parseBinary(lexer);\n\t\t        return tree;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tDEFAULTS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  The initial expression value\n\t\t\t *  @return  {Number}  The initial value 0\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._noOp = function () {\n\t\t        return 0;\n\t\t    };\n\t\t    /**\n\t\t\t *  The default expression value if no arguments are given\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._defaultExpr = function () {\n\t\t        return this._noOp;\n\t\t    };\n\t\t    /**\n\t\t\t *  The default units if none are given.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._defaultUnits = 's';\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tUNIT CONVERSIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Returns the value of a frequency in the current units\n\t\t\t *  @param {Frequency} freq\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._frequencyToUnits = function (freq) {\n\t\t        return 1 / freq;\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the value of the beats in the current units\n\t\t\t *  @param {Number} beats\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._beatsToUnits = function (beats) {\n\t\t        return 60 / Tone.Transport.bpm.value * beats;\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the value of a second in the current units\n\t\t\t *  @param {Seconds} seconds\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._secondsToUnits = function (seconds) {\n\t\t        return seconds;\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the value of a tick in the current time units\n\t\t\t *  @param {Ticks} ticks\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._ticksToUnits = function (ticks) {\n\t\t        return ticks * (this._beatsToUnits(1) / Tone.Transport.PPQ);\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time signature.\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._timeSignature = function () {\n\t\t        return Tone.Transport.timeSignature;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tEXPRESSIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Push an expression onto the expression list\n\t\t\t *  @param  {Time}  val\n\t\t\t *  @param  {String}  type\n\t\t\t *  @param  {String}  units\n\t\t\t *  @return  {Tone.TimeBase} \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._pushExpr = function (val, name, units) {\n\t\t        //create the expression\n\t\t        if (!(val instanceof Tone.TimeBase)) {\n\t\t            val = new this.constructor(val, units);\n\t\t        }\n\t\t        this._expr = this._binaryExpressions[name].method.bind(this, this._expr, val._expr);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Add to the current value.\n\t\t\t *  @param  {Time}  val    The value to add\n\t\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t\t *  @return  {Tone.TimeBase}  this\n\t\t\t *  @example\n\t\t\t * Tone.TimeBase(\"2m\").add(\"1m\"); //\"3m\"\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.add = function (val, units) {\n\t\t        return this._pushExpr(val, '+', units);\n\t\t    };\n\t\t    /**\n\t\t\t *  Subtract the value from the current time.\n\t\t\t *  @param  {Time}  val    The value to subtract\n\t\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t\t *  @return  {Tone.TimeBase}  this\n\t\t\t *  @example\n\t\t\t * Tone.TimeBase(\"2m\").sub(\"1m\"); //\"1m\"\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.sub = function (val, units) {\n\t\t        return this._pushExpr(val, '-', units);\n\t\t    };\n\t\t    /**\n\t\t\t *  Multiply the current value by the given time.\n\t\t\t *  @param  {Time}  val    The value to multiply\n\t\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t\t *  @return  {Tone.TimeBase}  this\n\t\t\t *  @example\n\t\t\t * Tone.TimeBase(\"2m\").mult(\"2\"); //\"4m\"\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.mult = function (val, units) {\n\t\t        return this._pushExpr(val, '*', units);\n\t\t    };\n\t\t    /**\n\t\t\t *  Divide the current value by the given time.\n\t\t\t *  @param  {Time}  val    The value to divide by\n\t\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t\t *  @return  {Tone.TimeBase}  this\n\t\t\t *  @example\n\t\t\t * Tone.TimeBase(\"2m\").div(2); //\"1m\"\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.div = function (val, units) {\n\t\t        return this._pushExpr(val, '/', units);\n\t\t    };\n\t\t    /**\n\t\t\t *  Evaluate the time value. Returns the time\n\t\t\t *  in seconds.\n\t\t\t *  @return  {Seconds} \n\t\t\t */\n\t\t    Tone.TimeBase.prototype.eval = function () {\n\t\t        return this._expr();\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return {Tone.TimeBase} this\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.dispose = function () {\n\t\t        this._expr = null;\n\t\t    };\n\t\t    return Tone.TimeBase;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.Time is a primitive type for encoding Time values. \n\t\t\t *         Eventually all time values are evaluated to seconds\n\t\t\t *         using the `eval` method. Tone.Time can be constructed\n\t\t\t *         with or without the `new` keyword. Tone.Time can be passed\n\t\t\t *         into the parameter of any method which takes time as an argument. \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.TimeBase}\n\t\t\t *  @param  {String|Number}  val    The time value.\n\t\t\t *  @param  {String=}  units  The units of the value.\n\t\t\t *  @example\n\t\t\t * var t = Tone.Time(\"4n\");//encodes a quarter note\n\t\t\t * t.mult(4); // multiply that value by 4\n\t\t\t * t.toNotation(); //returns \"1m\"\n\t\t\t */\n\t\t    Tone.Time = function (val, units) {\n\t\t        if (this instanceof Tone.Time) {\n\t\t            /**\n\t\t\t\t\t *  If the current clock time should\n\t\t\t\t\t *  be added to the output\n\t\t\t\t\t *  @type  {Boolean}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._plusNow = false;\n\t\t            Tone.TimeBase.call(this, val, units);\n\t\t        } else {\n\t\t            return new Tone.Time(val, units);\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.Time, Tone.TimeBase);\n\t\t    //clone the expressions so that \n\t\t    //we can add more without modifying the original\n\t\t    Tone.Time.prototype._unaryExpressions = Object.create(Tone.TimeBase.prototype._unaryExpressions);\n\t\t    /*\n\t\t\t *  Adds an additional unary expression\n\t\t\t *  which quantizes values to the next subdivision\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Time.prototype._unaryExpressions.quantize = {\n\t\t        regexp: /^@/,\n\t\t        method: function (rh) {\n\t\t            return Tone.Transport.nextSubdivision(rh());\n\t\t        }\n\t\t    };\n\t\t    /*\n\t\t\t *  Adds an additional unary expression\n\t\t\t *  which adds the current clock time.\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Time.prototype._unaryExpressions.now = {\n\t\t        regexp: /^\\+/,\n\t\t        method: function (lh) {\n\t\t            this._plusNow = true;\n\t\t            return lh();\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Quantize the time by the given subdivision. Optionally add a\n\t\t\t *  percentage which will move the time value towards the ideal\n\t\t\t *  quantized value by that percentage. \n\t\t\t *  @param  {Number|Time}  val    The subdivision to quantize to\n\t\t\t *  @param  {NormalRange}  [percent=1]  Move the time value\n\t\t\t *                                   towards the quantized value by\n\t\t\t *                                   a percentage.\n\t\t\t *  @return  {Tone.Time}  this\n\t\t\t *  @example\n\t\t\t * Tone.Time(21).quantize(2).eval() //returns 22\n\t\t\t * Tone.Time(0.6).quantize(\"4n\", 0.5).eval() //returns 0.55\n\t\t\t */\n\t\t    Tone.Time.prototype.quantize = function (subdiv, percent) {\n\t\t        percent = this.defaultArg(percent, 1);\n\t\t        this._expr = function (expr, subdivision, percent) {\n\t\t            expr = expr();\n\t\t            subdivision = subdivision.toSeconds();\n\t\t            var multiple = Math.round(expr / subdivision);\n\t\t            var ideal = multiple * subdivision;\n\t\t            var diff = ideal - expr;\n\t\t            return expr + diff * percent;\n\t\t        }.bind(this, this._expr, new this.constructor(subdiv), percent);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Adds the clock time to the time expression at the \n\t\t\t *  moment of evaluation. \n\t\t\t *  @return  {Tone.Time}  this\n\t\t\t */\n\t\t    Tone.Time.prototype.addNow = function () {\n\t\t        this._plusNow = true;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  @override\n\t\t\t *  Override the default value return when no arguments are passed in.\n\t\t\t *  The default value is 'now'\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Time.prototype._defaultExpr = function () {\n\t\t        this._plusNow = true;\n\t\t        return this._noOp;\n\t\t    };\n\t\t    /**\n\t\t\t *  Copies the value of time to this Time\n\t\t\t *  @param {Tone.Time} time\n\t\t\t *  @return  {Time}\n\t\t\t */\n\t\t    Tone.Time.prototype.copy = function (time) {\n\t\t        Tone.TimeBase.prototype.copy.call(this, time);\n\t\t        this._plusNow = time._plusNow;\n\t\t        return this;\n\t\t    };\n\t\t    //CONVERSIONS//////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Convert a Time to Notation. Values will be thresholded to the nearest 128th note. \n\t\t\t *  @return {Notation} \n\t\t\t *  @example\n\t\t\t * //if the Transport is at 120bpm:\n\t\t\t * Tone.Time(2).toNotation();//returns \"1m\"\n\t\t\t */\n\t\t    Tone.Time.prototype.toNotation = function () {\n\t\t        var time = this.toSeconds();\n\t\t        var testNotations = [\n\t\t            '1m',\n\t\t            '2n',\n\t\t            '4n',\n\t\t            '8n',\n\t\t            '16n',\n\t\t            '32n',\n\t\t            '64n',\n\t\t            '128n'\n\t\t        ];\n\t\t        var retNotation = this._toNotationHelper(time, testNotations);\n\t\t        //try the same thing but with tripelets\n\t\t        var testTripletNotations = [\n\t\t            '1m',\n\t\t            '2n',\n\t\t            '2t',\n\t\t            '4n',\n\t\t            '4t',\n\t\t            '8n',\n\t\t            '8t',\n\t\t            '16n',\n\t\t            '16t',\n\t\t            '32n',\n\t\t            '32t',\n\t\t            '64n',\n\t\t            '64t',\n\t\t            '128n'\n\t\t        ];\n\t\t        var retTripletNotation = this._toNotationHelper(time, testTripletNotations);\n\t\t        //choose the simpler expression of the two\n\t\t        if (retTripletNotation.split('+').length < retNotation.split('+').length) {\n\t\t            return retTripletNotation;\n\t\t        } else {\n\t\t            return retNotation;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Helper method for Tone.toNotation\n\t\t\t *  @param {Number} units \n\t\t\t *  @param {Array} testNotations\n\t\t\t *  @return {String}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Time.prototype._toNotationHelper = function (units, testNotations) {\n\t\t        //the threshold is the last value in the array\n\t\t        var threshold = this._notationToUnits(testNotations[testNotations.length - 1]);\n\t\t        var retNotation = '';\n\t\t        for (var i = 0; i < testNotations.length; i++) {\n\t\t            var notationTime = this._notationToUnits(testNotations[i]);\n\t\t            //account for floating point errors (i.e. round up if the value is 0.999999)\n\t\t            var multiple = units / notationTime;\n\t\t            var floatingPointError = 0.000001;\n\t\t            if (1 - multiple % 1 < floatingPointError) {\n\t\t                multiple += floatingPointError;\n\t\t            }\n\t\t            multiple = Math.floor(multiple);\n\t\t            if (multiple > 0) {\n\t\t                if (multiple === 1) {\n\t\t                    retNotation += testNotations[i];\n\t\t                } else {\n\t\t                    retNotation += multiple.toString() + '*' + testNotations[i];\n\t\t                }\n\t\t                units -= multiple * notationTime;\n\t\t                if (units < threshold) {\n\t\t                    break;\n\t\t                } else {\n\t\t                    retNotation += ' + ';\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        if (retNotation === '') {\n\t\t            retNotation = '0';\n\t\t        }\n\t\t        return retNotation;\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert a notation value to the current units\n\t\t\t *  @param  {Notation}  notation \n\t\t\t *  @return  {Number} \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Time.prototype._notationToUnits = function (notation) {\n\t\t        var primaryExprs = this._primaryExpressions;\n\t\t        var notationExprs = [\n\t\t            primaryExprs.n,\n\t\t            primaryExprs.t,\n\t\t            primaryExprs.m\n\t\t        ];\n\t\t        for (var i = 0; i < notationExprs.length; i++) {\n\t\t            var expr = notationExprs[i];\n\t\t            var match = notation.match(expr.regexp);\n\t\t            if (match) {\n\t\t                return expr.method.call(this, match[1]);\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time encoded as Bars:Beats:Sixteenths.\n\t\t\t *  @return  {BarsBeatsSixteenths}\n\t\t\t */\n\t\t    Tone.Time.prototype.toBarsBeatsSixteenths = function () {\n\t\t        var quarterTime = this._beatsToUnits(1);\n\t\t        var quarters = this.toSeconds() / quarterTime;\n\t\t        var measures = Math.floor(quarters / this._timeSignature());\n\t\t        var sixteenths = quarters % 1 * 4;\n\t\t        quarters = Math.floor(quarters) % this._timeSignature();\n\t\t        sixteenths = sixteenths.toString();\n\t\t        if (sixteenths.length > 3) {\n\t\t            sixteenths = parseFloat(sixteenths).toFixed(3);\n\t\t        }\n\t\t        var progress = [\n\t\t            measures,\n\t\t            quarters,\n\t\t            sixteenths\n\t\t        ];\n\t\t        return progress.join(':');\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time in ticks.\n\t\t\t *  @return  {Ticks}\n\t\t\t */\n\t\t    Tone.Time.prototype.toTicks = function () {\n\t\t        var quarterTime = this._beatsToUnits(1);\n\t\t        var quarters = this.eval() / quarterTime;\n\t\t        return Math.floor(quarters * Tone.Transport.PPQ);\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time in samples\n\t\t\t *  @return  {Samples}  \n\t\t\t */\n\t\t    Tone.Time.prototype.toSamples = function () {\n\t\t        return this.toSeconds() * this.context.sampleRate;\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time as a frequency value\n\t\t\t *  @return  {Frequency} \n\t\t\t *  @example\n\t\t\t * Tone.Time(2).toFrequency(); //0.5\n\t\t\t */\n\t\t    Tone.Time.prototype.toFrequency = function () {\n\t\t        return 1 / this.toSeconds();\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time in seconds.\n\t\t\t *  @return  {Seconds} \n\t\t\t */\n\t\t    Tone.Time.prototype.toSeconds = function () {\n\t\t        return this.eval();\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time in milliseconds.\n\t\t\t *  @return  {Milliseconds} \n\t\t\t */\n\t\t    Tone.Time.prototype.toMilliseconds = function () {\n\t\t        return this.toSeconds() * 1000;\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time in seconds.\n\t\t\t *  @return  {Seconds} \n\t\t\t */\n\t\t    Tone.Time.prototype.eval = function () {\n\t\t        var val = this._expr();\n\t\t        return val + (this._plusNow ? this.now() : 0);\n\t\t    };\n\t\t    return Tone.Time;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.Frequency is a primitive type for encoding Frequency values. \n\t\t\t *         Eventually all time values are evaluated to hertz\n\t\t\t *         using the `eval` method. \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.TimeBase}\n\t\t\t *  @param  {String|Number}  val    The time value.\n\t\t\t *  @param  {String=}  units  The units of the value.\n\t\t\t *  @example\n\t\t\t * Tone.Frequency(\"C3\").eval() // 261\n\t\t\t * Tone.Frequency(38, \"midi\").eval() //\n\t\t\t * Tone.Frequency(\"C3\").transpose(4).eval();\n\t\t\t */\n\t\t    Tone.Frequency = function (val, units) {\n\t\t        if (this instanceof Tone.Frequency) {\n\t\t            Tone.TimeBase.call(this, val, units);\n\t\t        } else {\n\t\t            return new Tone.Frequency(val, units);\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.Frequency, Tone.TimeBase);\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tAUGMENT BASE EXPRESSIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //clone the expressions so that \n\t\t    //we can add more without modifying the original\n\t\t    Tone.Frequency.prototype._primaryExpressions = Object.create(Tone.TimeBase.prototype._primaryExpressions);\n\t\t    /*\n\t\t\t *  midi type primary expression\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._primaryExpressions.midi = {\n\t\t        regexp: /^(\\d+(?:\\.\\d+)?midi)/,\n\t\t        method: function (value) {\n\t\t            return this.midiToFrequency(value);\n\t\t        }\n\t\t    };\n\t\t    /*\n\t\t\t *  note type primary expression\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._primaryExpressions.note = {\n\t\t        regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n\t\t        method: function (pitch, octave) {\n\t\t            var index = noteToScaleIndex[pitch.toLowerCase()];\n\t\t            var noteNumber = index + (parseInt(octave) + 1) * 12;\n\t\t            return this.midiToFrequency(noteNumber);\n\t\t        }\n\t\t    };\n\t\t    /*\n\t\t\t *  BeatsBarsSixteenths type primary expression\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._primaryExpressions.tr = {\n\t\t        regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t\t        method: function (m, q, s) {\n\t\t            var total = 1;\n\t\t            if (m && m !== '0') {\n\t\t                total *= this._beatsToUnits(this._timeSignature() * parseFloat(m));\n\t\t            }\n\t\t            if (q && q !== '0') {\n\t\t                total *= this._beatsToUnits(parseFloat(q));\n\t\t            }\n\t\t            if (s && s !== '0') {\n\t\t                total *= this._beatsToUnits(parseFloat(s) / 4);\n\t\t            }\n\t\t            return total;\n\t\t        }\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tEXPRESSIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Transposes the frequency by the given number of semitones.\n\t\t\t *  @param  {Interval}  interval\n\t\t\t *  @return  {Tone.Frequency} this\n\t\t\t *  @example\n\t\t\t * Tone.Frequency(\"A4\").transpose(3); //\"C5\"\n\t\t\t */\n\t\t    Tone.Frequency.prototype.transpose = function (interval) {\n\t\t        this._expr = function (expr, interval) {\n\t\t            var val = expr();\n\t\t            return val * this.intervalToFrequencyRatio(interval);\n\t\t        }.bind(this, this._expr, interval);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Takes an array of semitone intervals and returns\n\t\t\t *  an array of frequencies transposed by those intervals.\n\t\t\t *  @param  {Array}  intervals\n\t\t\t *  @return  {Tone.Frequency} this\n\t\t\t *  @example\n\t\t\t * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); //[\"A4\", \"C5\", \"E5\"]\n\t\t\t */\n\t\t    Tone.Frequency.prototype.harmonize = function (intervals) {\n\t\t        this._expr = function (expr, intervals) {\n\t\t            var val = expr();\n\t\t            var ret = [];\n\t\t            for (var i = 0; i < intervals.length; i++) {\n\t\t                ret[i] = val * this.intervalToFrequencyRatio(intervals[i]);\n\t\t            }\n\t\t            return ret;\n\t\t        }.bind(this, this._expr, intervals);\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tUNIT CONVERSIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Return the value of the frequency as a MIDI note\n\t\t\t *  @return  {MIDI}\n\t\t\t *  @example\n\t\t\t * Tone.Frequency(\"C4\").toMidi(); //60\n\t\t\t */\n\t\t    Tone.Frequency.prototype.toMidi = function () {\n\t\t        return this.frequencyToMidi(this.eval());\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the value of the frequency in Scientific Pitch Notation\n\t\t\t *  @return  {Note}\n\t\t\t *  @example\n\t\t\t * Tone.Frequency(69, \"midi\").toNote(); //\"A4\"\n\t\t\t */\n\t\t    Tone.Frequency.prototype.toNote = function () {\n\t\t        var freq = this.eval();\n\t\t        var log = Math.log(freq / Tone.Frequency.A4) / Math.LN2;\n\t\t        var noteNumber = Math.round(12 * log) + 57;\n\t\t        var octave = Math.floor(noteNumber / 12);\n\t\t        if (octave < 0) {\n\t\t            noteNumber += -12 * octave;\n\t\t        }\n\t\t        var noteName = scaleIndexToNote[noteNumber % 12];\n\t\t        return noteName + octave.toString();\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the duration of one cycle in seconds.\n\t\t\t *  @return  {Seconds}\n\t\t\t */\n\t\t    Tone.Frequency.prototype.toSeconds = function () {\n\t\t        return 1 / this.eval();\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the value in Hertz\n\t\t\t *  @return  {Frequency}\n\t\t\t */\n\t\t    Tone.Frequency.prototype.toFrequency = function () {\n\t\t        return this.eval();\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the duration of one cycle in ticks\n\t\t\t *  @return  {Ticks}\n\t\t\t */\n\t\t    Tone.Frequency.prototype.toTicks = function () {\n\t\t        var quarterTime = this._beatsToUnits(1);\n\t\t        var quarters = this.eval() / quarterTime;\n\t\t        return Math.floor(quarters * Tone.Transport.PPQ);\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tUNIT CONVERSIONS HELPERS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Returns the value of a frequency in the current units\n\t\t\t *  @param {Frequency} freq\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._frequencyToUnits = function (freq) {\n\t\t        return freq;\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the value of a tick in the current time units\n\t\t\t *  @param {Ticks} ticks\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._ticksToUnits = function (ticks) {\n\t\t        return 1 / (ticks * 60 / (Tone.Transport.bpm.value * Tone.Transport.PPQ));\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the value of the beats in the current units\n\t\t\t *  @param {Number} beats\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._beatsToUnits = function (beats) {\n\t\t        return 1 / Tone.TimeBase.prototype._beatsToUnits.call(this, beats);\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the value of a second in the current units\n\t\t\t *  @param {Seconds} seconds\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._secondsToUnits = function (seconds) {\n\t\t        return 1 / seconds;\n\t\t    };\n\t\t    /**\n\t\t\t *  The default units if none are given.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._defaultUnits = 'hz';\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tFREQUENCY CONVERSIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Note to scale index\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    var noteToScaleIndex = {\n\t\t        'cbb': -2,\n\t\t        'cb': -1,\n\t\t        'c': 0,\n\t\t        'c#': 1,\n\t\t        'cx': 2,\n\t\t        'dbb': 0,\n\t\t        'db': 1,\n\t\t        'd': 2,\n\t\t        'd#': 3,\n\t\t        'dx': 4,\n\t\t        'ebb': 2,\n\t\t        'eb': 3,\n\t\t        'e': 4,\n\t\t        'e#': 5,\n\t\t        'ex': 6,\n\t\t        'fbb': 3,\n\t\t        'fb': 4,\n\t\t        'f': 5,\n\t\t        'f#': 6,\n\t\t        'fx': 7,\n\t\t        'gbb': 5,\n\t\t        'gb': 6,\n\t\t        'g': 7,\n\t\t        'g#': 8,\n\t\t        'gx': 9,\n\t\t        'abb': 7,\n\t\t        'ab': 8,\n\t\t        'a': 9,\n\t\t        'a#': 10,\n\t\t        'ax': 11,\n\t\t        'bbb': 9,\n\t\t        'bb': 10,\n\t\t        'b': 11,\n\t\t        'b#': 12,\n\t\t        'bx': 13\n\t\t    };\n\t\t    /**\n\t\t\t *  scale index to note (sharps)\n\t\t\t *  @type  {Array}\n\t\t\t */\n\t\t    var scaleIndexToNote = [\n\t\t        'C',\n\t\t        'C#',\n\t\t        'D',\n\t\t        'D#',\n\t\t        'E',\n\t\t        'F',\n\t\t        'F#',\n\t\t        'G',\n\t\t        'G#',\n\t\t        'A',\n\t\t        'A#',\n\t\t        'B'\n\t\t    ];\n\t\t    /**\n\t\t\t *  The [concert pitch](https://en.wikipedia.org/wiki/Concert_pitch)\n\t\t\t *  A4's values in Hertz. \n\t\t\t *  @type {Frequency}\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.Frequency.A4 = 440;\n\t\t    /**\n\t\t\t *  Convert a MIDI note to frequency value. \n\t\t\t *  @param  {MIDI} midi The midi number to convert.\n\t\t\t *  @return {Frequency} the corresponding frequency value\n\t\t\t *  @example\n\t\t\t * tone.midiToFrequency(69); // returns 440\n\t\t\t */\n\t\t    Tone.Frequency.prototype.midiToFrequency = function (midi) {\n\t\t        return Tone.Frequency.A4 * Math.pow(2, (midi - 69) / 12);\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert a frequency value to a MIDI note.\n\t\t\t *  @param {Frequency} frequency The value to frequency value to convert.\n\t\t\t *  @returns  {MIDI}\n\t\t\t *  @example\n\t\t\t * tone.midiToFrequency(440); // returns 69\n\t\t\t */\n\t\t    Tone.Frequency.prototype.frequencyToMidi = function (frequency) {\n\t\t        return 69 + 12 * Math.log(frequency / Tone.Frequency.A4) / Math.LN2;\n\t\t    };\n\t\t    return Tone.Frequency;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.TransportTime is a the time along the Transport's\n\t\t\t *         timeline. It is similar to Tone.Time, but instead of evaluating\n\t\t\t *         against the AudioContext's clock, it is evaluated against\n\t\t\t *         the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n\t\t\t *  @constructor\n\t\t\t *  @param  {Time}  val    The time value as a number or string\n\t\t\t *  @param  {String=}  units  Unit values\n\t\t\t *  @extends {Tone.Time}\n\t\t\t */\n\t\t    Tone.TransportTime = function (val, units) {\n\t\t        if (this instanceof Tone.TransportTime) {\n\t\t            Tone.Time.call(this, val, units);\n\t\t        } else {\n\t\t            return new Tone.TransportTime(val, units);\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.TransportTime, Tone.Time);\n\t\t    //clone the expressions so that \n\t\t    //we can add more without modifying the original\n\t\t    Tone.TransportTime.prototype._unaryExpressions = Object.create(Tone.Time.prototype._unaryExpressions);\n\t\t    /**\n\t\t\t *  Adds an additional unary expression\n\t\t\t *  which quantizes values to the next subdivision\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TransportTime.prototype._unaryExpressions.quantize = {\n\t\t        regexp: /^@/,\n\t\t        method: function (rh) {\n\t\t            var subdivision = this._secondsToTicks(rh());\n\t\t            var multiple = Math.ceil(Tone.Transport.ticks / subdivision);\n\t\t            return this._ticksToUnits(multiple * subdivision);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert seconds into ticks\n\t\t\t *  @param {Seconds} seconds\n\t\t\t *  @return  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TransportTime.prototype._secondsToTicks = function (seconds) {\n\t\t        var quarterTime = this._beatsToUnits(1);\n\t\t        var quarters = seconds / quarterTime;\n\t\t        return Math.round(quarters * Tone.Transport.PPQ);\n\t\t    };\n\t\t    /**\n\t\t\t *  Evaluate the time expression. Returns values in ticks\n\t\t\t *  @return {Ticks}\n\t\t\t */\n\t\t    Tone.TransportTime.prototype.eval = function () {\n\t\t        var val = this._secondsToTicks(this._expr());\n\t\t        return val + (this._plusNow ? Tone.Transport.ticks : 0);\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time in ticks.\n\t\t\t *  @return  {Ticks}\n\t\t\t */\n\t\t    Tone.TransportTime.prototype.toTicks = function () {\n\t\t        return this.eval();\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time in seconds.\n\t\t\t *  @return  {Seconds}\n\t\t\t */\n\t\t    Tone.TransportTime.prototype.toSeconds = function () {\n\t\t        var val = this._expr();\n\t\t        return val + (this._plusNow ? Tone.Transport.seconds : 0);\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time as a frequency value\n\t\t\t *  @return  {Frequency} \n\t\t\t */\n\t\t    Tone.TransportTime.prototype.toFrequency = function () {\n\t\t        return 1 / this.toSeconds();\n\t\t    };\n\t\t    return Tone.TransportTime;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tTYPES\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t * Units which a value can take on.\n\t\t\t * @enum {String}\n\t\t\t */\n\t\t    Tone.Type = {\n\t\t        /** \n\t\t\t\t *  Default units\n\t\t\t\t *  @typedef {Default}\n\t\t\t\t */\n\t\t        Default: 'number',\n\t\t        /**\n\t\t\t\t *  Time can be described in a number of ways. Read more [Time](https://github.com/Tonejs/Tone.js/wiki/Time).\n\t\t\t\t *\n\t\t\t\t *  <ul>\n\t\t\t\t *  <li>Numbers, which will be taken literally as the time (in seconds).</li>\n\t\t\t\t *  <li>Notation, (\"4n\", \"8t\") describes time in BPM and time signature relative values.</li>\n\t\t\t\t *  <li>TransportTime, (\"4:3:2\") will also provide tempo and time signature relative times \n\t\t\t\t *  in the form BARS:QUARTERS:SIXTEENTHS.</li>\n\t\t\t\t *  <li>Frequency, (\"8hz\") is converted to the length of the cycle in seconds.</li>\n\t\t\t\t *  <li>Now-Relative, (\"+1\") prefix any of the above with \"+\" and it will be interpreted as \n\t\t\t\t *  \"the current time plus whatever expression follows\".</li>\n\t\t\t\t *  <li>Expressions, (\"3:0 + 2 - (1m / 7)\") any of the above can also be combined \n\t\t\t\t *  into a mathematical expression which will be evaluated to compute the desired time.</li>\n\t\t\t\t *  <li>No Argument, for methods which accept time, no argument will be interpreted as \n\t\t\t\t *  \"now\" (i.e. the currentTime).</li>\n\t\t\t\t *  </ul>\n\t\t\t\t *  \n\t\t\t\t *  @typedef {Time}\n\t\t\t\t */\n\t\t        Time: 'time',\n\t\t        /**\n\t\t\t\t *  Frequency can be described similar to time, except ultimately the\n\t\t\t\t *  values are converted to frequency instead of seconds. A number\n\t\t\t\t *  is taken literally as the value in hertz. Additionally any of the \n\t\t\t\t *  Time encodings can be used. Note names in the form\n\t\t\t\t *  of NOTE OCTAVE (i.e. C4) are also accepted and converted to their\n\t\t\t\t *  frequency value. \n\t\t\t\t *  @typedef {Frequency}\n\t\t\t\t */\n\t\t        Frequency: 'frequency',\n\t\t        /**\n\t\t\t\t *  TransportTime describes a position along the Transport's timeline. It is\n\t\t\t\t *  similar to Time in that it uses all the same encodings, but TransportTime specifically\n\t\t\t\t *  pertains to the Transport's timeline, which is startable, stoppable, loopable, and seekable. \n\t\t\t\t *  [Read more](https://github.com/Tonejs/Tone.js/wiki/TransportTime)\n\t\t\t\t *  @typedef {TransportTime}\n\t\t\t\t */\n\t\t        TransportTime: 'transportTime',\n\t\t        /** \n\t\t\t\t *  Ticks are the basic subunit of the Transport. They are\n\t\t\t\t *  the smallest unit of time that the Transport supports.\n\t\t\t\t *  @typedef {Ticks}\n\t\t\t\t */\n\t\t        Ticks: 'ticks',\n\t\t        /** \n\t\t\t\t *  Normal values are within the range [0, 1].\n\t\t\t\t *  @typedef {NormalRange}\n\t\t\t\t */\n\t\t        NormalRange: 'normalRange',\n\t\t        /** \n\t\t\t\t *  AudioRange values are between [-1, 1].\n\t\t\t\t *  @typedef {AudioRange}\n\t\t\t\t */\n\t\t        AudioRange: 'audioRange',\n\t\t        /** \n\t\t\t\t *  Decibels are a logarithmic unit of measurement which is useful for volume\n\t\t\t\t *  because of the logarithmic way that we perceive loudness. 0 decibels \n\t\t\t\t *  means no change in volume. -10db is approximately half as loud and 10db \n\t\t\t\t *  is twice is loud. \n\t\t\t\t *  @typedef {Decibels}\n\t\t\t\t */\n\t\t        Decibels: 'db',\n\t\t        /** \n\t\t\t\t *  Half-step note increments, i.e. 12 is an octave above the root. and 1 is a half-step up.\n\t\t\t\t *  @typedef {Interval}\n\t\t\t\t */\n\t\t        Interval: 'interval',\n\t\t        /** \n\t\t\t\t *  Beats per minute. \n\t\t\t\t *  @typedef {BPM}\n\t\t\t\t */\n\t\t        BPM: 'bpm',\n\t\t        /** \n\t\t\t\t *  The value must be greater than or equal to 0.\n\t\t\t\t *  @typedef {Positive}\n\t\t\t\t */\n\t\t        Positive: 'positive',\n\t\t        /** \n\t\t\t\t *  A cent is a hundredth of a semitone. \n\t\t\t\t *  @typedef {Cents}\n\t\t\t\t */\n\t\t        Cents: 'cents',\n\t\t        /** \n\t\t\t\t *  Angle between 0 and 360. \n\t\t\t\t *  @typedef {Degrees}\n\t\t\t\t */\n\t\t        Degrees: 'degrees',\n\t\t        /** \n\t\t\t\t *  A number representing a midi note.\n\t\t\t\t *  @typedef {MIDI}\n\t\t\t\t */\n\t\t        MIDI: 'midi',\n\t\t        /** \n\t\t\t\t *  A colon-separated representation of time in the form of\n\t\t\t\t *  Bars:Beats:Sixteenths. \n\t\t\t\t *  @typedef {BarsBeatsSixteenths}\n\t\t\t\t */\n\t\t        BarsBeatsSixteenths: 'barsBeatsSixteenths',\n\t\t        /** \n\t\t\t\t *  Sampling is the reduction of a continuous signal to a discrete signal.\n\t\t\t\t *  Audio is typically sampled 44100 times per second. \n\t\t\t\t *  @typedef {Samples}\n\t\t\t\t */\n\t\t        Samples: 'samples',\n\t\t        /** \n\t\t\t\t *  Hertz are a frequency representation defined as one cycle per second.\n\t\t\t\t *  @typedef {Hertz}\n\t\t\t\t */\n\t\t        Hertz: 'hertz',\n\t\t        /** \n\t\t\t\t *  A frequency represented by a letter name, \n\t\t\t\t *  accidental and octave. This system is known as\n\t\t\t\t *  [Scientific Pitch Notation](https://en.wikipedia.org/wiki/Scientific_pitch_notation).\n\t\t\t\t *  @typedef {Note}\n\t\t\t\t */\n\t\t        Note: 'note',\n\t\t        /** \n\t\t\t\t *  One millisecond is a thousandth of a second. \n\t\t\t\t *  @typedef {Milliseconds}\n\t\t\t\t */\n\t\t        Milliseconds: 'milliseconds',\n\t\t        /** \n\t\t\t\t *  Seconds are the time unit of the AudioContext. In the end, \n\t\t\t\t *  all values need to be evaluated to seconds. \n\t\t\t\t *  @typedef {Seconds}\n\t\t\t\t */\n\t\t        Seconds: 'seconds',\n\t\t        /** \n\t\t\t\t *  A string representing a duration relative to a measure. \n\t\t\t\t *  <ul>\n\t\t\t\t *  \t<li>\"4n\" = quarter note</li>\n\t\t\t\t *   \t<li>\"2m\" = two measures</li>\n\t\t\t\t *    \t<li>\"8t\" = eighth-note triplet</li>\n\t\t\t\t *  </ul>\n\t\t\t\t *  @typedef {Notation}\n\t\t\t\t */\n\t\t        Notation: 'notation'\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    // AUGMENT TONE's PROTOTYPE\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Convert Time into seconds.\n\t\t\t *  \n\t\t\t *  Unlike the method which it overrides, this takes into account \n\t\t\t *  transporttime and musical notation.\n\t\t\t *\n\t\t\t *  Time : 1.40\n\t\t\t *  Notation: 4n|1m|2t\n\t\t\t *  Now Relative: +3n\n\t\t\t *  Math: 3n+16n or even complicated expressions ((3n*2)/6 + 1)\n\t\t\t *\n\t\t\t *  @param  {Time} time \n\t\t\t *  @return {Seconds} \n\t\t\t */\n\t\t    Tone.prototype.toSeconds = function (time) {\n\t\t        if (this.isNumber(time)) {\n\t\t            return time;\n\t\t        } else if (this.isUndef(time)) {\n\t\t            return this.now();\n\t\t        } else if (this.isString(time)) {\n\t\t            return new Tone.Time(time).toSeconds();\n\t\t        } else if (time instanceof Tone.TimeBase) {\n\t\t            return time.toSeconds();\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert a frequency representation into a number.\n\t\t\t *  @param  {Frequency} freq \n\t\t\t *  @return {Hertz}      the frequency in hertz\n\t\t\t */\n\t\t    Tone.prototype.toFrequency = function (freq) {\n\t\t        if (this.isNumber(freq)) {\n\t\t            return freq;\n\t\t        } else if (this.isString(freq) || this.isUndef(freq)) {\n\t\t            return new Tone.Frequency(freq).eval();\n\t\t        } else if (freq instanceof Tone.TimeBase) {\n\t\t            return freq.toFrequency();\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert a time representation into ticks.\n\t\t\t *  @param  {Time} time\n\t\t\t *  @return {Ticks}  the time in ticks\n\t\t\t */\n\t\t    Tone.prototype.toTicks = function (time) {\n\t\t        if (this.isNumber(time) || this.isString(time)) {\n\t\t            return new Tone.TransportTime(time).toTicks();\n\t\t        } else if (this.isUndef(time)) {\n\t\t            return Tone.Transport.ticks;\n\t\t        } else if (time instanceof Tone.TimeBase) {\n\t\t            return time.toTicks();\n\t\t        }\n\t\t    };\n\t\t    return Tone;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Param wraps the native Web Audio's AudioParam to provide\n\t\t\t *         additional unit conversion functionality. It also\n\t\t\t *         serves as a base-class for classes which have a single,\n\t\t\t *         automatable parameter. \n\t\t\t *  @extends {Tone}\n\t\t\t *  @param  {AudioParam}  param  The parameter to wrap.\n\t\t\t *  @param  {Tone.Type} units The units of the audio param.\n\t\t\t *  @param  {Boolean} convert If the param should be converted.\n\t\t\t */\n\t\t    Tone.Param = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'param',\n\t\t            'units',\n\t\t            'convert'\n\t\t        ], Tone.Param.defaults);\n\t\t        /**\n\t\t\t\t *  The native parameter to control\n\t\t\t\t *  @type  {AudioParam}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._param = this.input = options.param;\n\t\t        /**\n\t\t\t\t *  The units of the parameter\n\t\t\t\t *  @type {Tone.Type}\n\t\t\t\t */\n\t\t        this.units = options.units;\n\t\t        /**\n\t\t\t\t *  If the value should be converted or not\n\t\t\t\t *  @type {Boolean}\n\t\t\t\t */\n\t\t        this.convert = options.convert;\n\t\t        /**\n\t\t\t\t *  True if the signal value is being overridden by \n\t\t\t\t *  a connected signal.\n\t\t\t\t *  @readOnly\n\t\t\t\t *  @type  {boolean}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.overridden = false;\n\t\t        /**\n\t\t\t\t *  If there is an LFO, this is where it is held.\n\t\t\t\t *  @type  {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfo = null;\n\t\t        if (this.isObject(options.lfo)) {\n\t\t            this.value = options.lfo;\n\t\t        } else if (!this.isUndef(options.value)) {\n\t\t            this.value = options.value;\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.Param);\n\t\t    /**\n\t\t\t *  Defaults\n\t\t\t *  @type  {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Param.defaults = {\n\t\t        'units': Tone.Type.Default,\n\t\t        'convert': true,\n\t\t        'param': undefined\n\t\t    };\n\t\t    /**\n\t\t\t * The current value of the parameter. \n\t\t\t * @memberOf Tone.Param#\n\t\t\t * @type {Number}\n\t\t\t * @name value\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Param.prototype, 'value', {\n\t\t        get: function () {\n\t\t            return this._toUnits(this._param.value);\n\t\t        },\n\t\t        set: function (value) {\n\t\t            if (this.isObject(value)) {\n\t\t                //throw an error if the LFO needs to be included\n\t\t                if (this.isUndef(Tone.LFO)) {\n\t\t                    throw new Error('Include \\'Tone.LFO\\' to use an LFO as a Param value.');\n\t\t                }\n\t\t                //remove the old one\n\t\t                if (this._lfo) {\n\t\t                    this._lfo.dispose();\n\t\t                }\n\t\t                this._lfo = new Tone.LFO(value).start();\n\t\t                this._lfo.connect(this.input);\n\t\t            } else {\n\t\t                var convertedVal = this._fromUnits(value);\n\t\t                this._param.cancelScheduledValues(0);\n\t\t                this._param.value = convertedVal;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Convert the given value from the type specified by Tone.Param.units\n\t\t\t *  into the destination value (such as Gain or Frequency).\n\t\t\t *  @private\n\t\t\t *  @param  {*} val the value to convert\n\t\t\t *  @return {number}     the number which the value should be set to\n\t\t\t */\n\t\t    Tone.Param.prototype._fromUnits = function (val) {\n\t\t        if (this.convert || this.isUndef(this.convert)) {\n\t\t            switch (this.units) {\n\t\t            case Tone.Type.Time:\n\t\t                return this.toSeconds(val);\n\t\t            case Tone.Type.Frequency:\n\t\t                return this.toFrequency(val);\n\t\t            case Tone.Type.Decibels:\n\t\t                return this.dbToGain(val);\n\t\t            case Tone.Type.NormalRange:\n\t\t                return Math.min(Math.max(val, 0), 1);\n\t\t            case Tone.Type.AudioRange:\n\t\t                return Math.min(Math.max(val, -1), 1);\n\t\t            case Tone.Type.Positive:\n\t\t                return Math.max(val, 0);\n\t\t            default:\n\t\t                return val;\n\t\t            }\n\t\t        } else {\n\t\t            return val;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * Convert the parameters value into the units specified by Tone.Param.units.\n\t\t\t * @private\n\t\t\t * @param  {number} val the value to convert\n\t\t\t * @return {number}\n\t\t\t */\n\t\t    Tone.Param.prototype._toUnits = function (val) {\n\t\t        if (this.convert || this.isUndef(this.convert)) {\n\t\t            switch (this.units) {\n\t\t            case Tone.Type.Decibels:\n\t\t                return this.gainToDb(val);\n\t\t            default:\n\t\t                return val;\n\t\t            }\n\t\t        } else {\n\t\t            return val;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  the minimum output value\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Param.prototype._minOutput = 0.00001;\n\t\t    /**\n\t\t\t *  Schedules a parameter value change at the given time.\n\t\t\t *  @param {*}\tvalue The value to set the signal.\n\t\t\t *  @param {Time}  time The time when the change should occur.\n\t\t\t *  @returns {Tone.Param} this\n\t\t\t *  @example\n\t\t\t * //set the frequency to \"G4\" in exactly 1 second from now. \n\t\t\t * freq.setValueAtTime(\"G4\", \"+1\");\n\t\t\t */\n\t\t    Tone.Param.prototype.setValueAtTime = function (value, time) {\n\t\t        value = this._fromUnits(value);\n\t\t        time = this.toSeconds(time);\n\t\t        if (time <= this.now() + this.blockTime) {\n\t\t            this._param.value = value;\n\t\t        } else {\n\t\t            this._param.setValueAtTime(value, time);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Creates a schedule point with the current value at the current time.\n\t\t\t *  This is useful for creating an automation anchor point in order to \n\t\t\t *  schedule changes from the current value. \n\t\t\t *\n\t\t\t *  @param {number=} now (Optionally) pass the now value in. \n\t\t\t *  @returns {Tone.Param} this\n\t\t\t */\n\t\t    Tone.Param.prototype.setRampPoint = function (now) {\n\t\t        now = this.defaultArg(now, this.now());\n\t\t        var currentVal = this._param.value;\n\t\t        // exponentialRampToValueAt cannot ever ramp from or to 0\n\t\t        // More info: https://bugzilla.mozilla.org/show_bug.cgi?id=1125600#c2\n\t\t        if (currentVal === 0) {\n\t\t            currentVal = this._minOutput;\n\t\t        }\n\t\t        this._param.setValueAtTime(currentVal, now);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedules a linear continuous change in parameter value from the \n\t\t\t *  previous scheduled parameter value to the given value.\n\t\t\t *  \n\t\t\t *  @param  {number} value   \n\t\t\t *  @param  {Time} endTime \n\t\t\t *  @returns {Tone.Param} this\n\t\t\t */\n\t\t    Tone.Param.prototype.linearRampToValueAtTime = function (value, endTime) {\n\t\t        value = this._fromUnits(value);\n\t\t        this._param.linearRampToValueAtTime(value, this.toSeconds(endTime));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedules an exponential continuous change in parameter value from \n\t\t\t *  the previous scheduled parameter value to the given value.\n\t\t\t *  \n\t\t\t *  @param  {number} value   \n\t\t\t *  @param  {Time} endTime \n\t\t\t *  @returns {Tone.Param} this\n\t\t\t */\n\t\t    Tone.Param.prototype.exponentialRampToValueAtTime = function (value, endTime) {\n\t\t        value = this._fromUnits(value);\n\t\t        value = Math.max(this._minOutput, value);\n\t\t        this._param.exponentialRampToValueAtTime(value, this.toSeconds(endTime));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedules an exponential continuous change in parameter value from \n\t\t\t *  the current time and current value to the given value over the \n\t\t\t *  duration of the rampTime.\n\t\t\t *  \n\t\t\t *  @param  {number} value   The value to ramp to.\n\t\t\t *  @param  {Time} rampTime the time that it takes the \n\t\t\t *                               value to ramp from it's current value\n\t\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start. \n\t\t\t *  @returns {Tone.Param} this\n\t\t\t *  @example\n\t\t\t * //exponentially ramp to the value 2 over 4 seconds. \n\t\t\t * signal.exponentialRampToValue(2, 4);\n\t\t\t */\n\t\t    Tone.Param.prototype.exponentialRampToValue = function (value, rampTime, startTime) {\n\t\t        startTime = this.toSeconds(startTime);\n\t\t        this.setRampPoint(startTime);\n\t\t        this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedules an linear continuous change in parameter value from \n\t\t\t *  the current time and current value to the given value over the \n\t\t\t *  duration of the rampTime.\n\t\t\t *  \n\t\t\t *  @param  {number} value   The value to ramp to.\n\t\t\t *  @param  {Time} rampTime the time that it takes the \n\t\t\t *                               value to ramp from it's current value\n\t\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start. \n\t\t\t *  @returns {Tone.Param} this\n\t\t\t *  @example\n\t\t\t * //linearly ramp to the value 4 over 3 seconds. \n\t\t\t * signal.linearRampToValue(4, 3);\n\t\t\t */\n\t\t    Tone.Param.prototype.linearRampToValue = function (value, rampTime, startTime) {\n\t\t        startTime = this.toSeconds(startTime);\n\t\t        this.setRampPoint(startTime);\n\t\t        this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Start exponentially approaching the target value at the given time with\n\t\t\t *  a rate having the given time constant.\n\t\t\t *  @param {number} value        \n\t\t\t *  @param {Time} startTime    \n\t\t\t *  @param {number} timeConstant \n\t\t\t *  @returns {Tone.Param} this \n\t\t\t */\n\t\t    Tone.Param.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n\t\t        value = this._fromUnits(value);\n\t\t        // The value will never be able to approach without timeConstant > 0.\n\t\t        // http://www.w3.org/TR/webaudio/#dfn-setTargetAtTime, where the equation\n\t\t        // is described. 0 results in a division by 0.\n\t\t        value = Math.max(this._minOutput, value);\n\t\t        timeConstant = Math.max(this._minOutput, timeConstant);\n\t\t        this._param.setTargetAtTime(value, this.toSeconds(startTime), timeConstant);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Sets an array of arbitrary parameter values starting at the given time\n\t\t\t *  for the given duration.\n\t\t\t *  \t\n\t\t\t *  @param {Array} values    \n\t\t\t *  @param {Time} startTime \n\t\t\t *  @param {Time} duration  \n\t\t\t *  @returns {Tone.Param} this\n\t\t\t */\n\t\t    Tone.Param.prototype.setValueCurveAtTime = function (values, startTime, duration) {\n\t\t        for (var i = 0; i < values.length; i++) {\n\t\t            values[i] = this._fromUnits(values[i]);\n\t\t        }\n\t\t        this._param.setValueCurveAtTime(values, this.toSeconds(startTime), this.toSeconds(duration));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancels all scheduled parameter changes with times greater than or \n\t\t\t *  equal to startTime.\n\t\t\t *  \n\t\t\t *  @param  {Time} startTime\n\t\t\t *  @returns {Tone.Param} this\n\t\t\t */\n\t\t    Tone.Param.prototype.cancelScheduledValues = function (startTime) {\n\t\t        this._param.cancelScheduledValues(this.toSeconds(startTime));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Ramps to the given value over the duration of the rampTime. \n\t\t\t *  Automatically selects the best ramp type (exponential or linear)\n\t\t\t *  depending on the `units` of the signal\n\t\t\t *  \n\t\t\t *  @param  {number} value   \n\t\t\t *  @param  {Time} rampTime \tThe time that it takes the \n\t\t\t *                              value to ramp from it's current value\n\t\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start. \n\t\t\t *  @returns {Tone.Param} this\n\t\t\t *  @example\n\t\t\t * //ramp to the value either linearly or exponentially \n\t\t\t * //depending on the \"units\" value of the signal\n\t\t\t * signal.rampTo(0, 10);\n\t\t\t *  @example\n\t\t\t * //schedule it to ramp starting at a specific time\n\t\t\t * signal.rampTo(0, 10, 5)\n\t\t\t */\n\t\t    Tone.Param.prototype.rampTo = function (value, rampTime, startTime) {\n\t\t        rampTime = this.defaultArg(rampTime, 0);\n\t\t        if (this.units === Tone.Type.Frequency || this.units === Tone.Type.BPM) {\n\t\t            this.exponentialRampToValue(value, rampTime, startTime);\n\t\t        } else {\n\t\t            this.linearRampToValue(value, rampTime, startTime);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The LFO created by the signal instance. If none\n\t\t\t *  was created, this is null.\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.Param#\n\t\t\t *  @name lfo\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Param.prototype, 'lfo', {\n\t\t        get: function () {\n\t\t            return this._lfo;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @returns {Tone.Param} this\n\t\t\t */\n\t\t    Tone.Param.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._param = null;\n\t\t        if (this._lfo) {\n\t\t            this._lfo.dispose();\n\t\t            this._lfo = null;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Param;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class A thin wrapper around the Native Web Audio GainNode.\n\t\t\t *         The GainNode is a basic building block of the Web Audio\n\t\t\t *         API and is useful for routing audio and adjusting gains. \n\t\t\t *  @extends {Tone}\n\t\t\t *  @param  {Number=}  gain  The initial gain of the GainNode\n\t\t\t *  @param {Tone.Type=} units The units of the gain parameter. \n\t\t\t */\n\t\t    Tone.Gain = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'gain',\n\t\t            'units'\n\t\t        ], Tone.Gain.defaults);\n\t\t        /**\n\t\t\t\t *  The GainNode\n\t\t\t\t *  @type  {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.input = this.output = this._gainNode = this.context.createGain();\n\t\t        /**\n\t\t\t\t *  The gain parameter of the gain node.\n\t\t\t\t *  @type {Tone.Param}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.gain = new Tone.Param({\n\t\t            'param': this._gainNode.gain,\n\t\t            'units': options.units,\n\t\t            'value': options.gain,\n\t\t            'convert': options.convert\n\t\t        });\n\t\t        this._readOnly('gain');\n\t\t    };\n\t\t    Tone.extend(Tone.Gain);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.Gain.defaults = {\n\t\t        'gain': 1,\n\t\t        'convert': true\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.Gain}  this\n\t\t\t */\n\t\t    Tone.Gain.prototype.dispose = function () {\n\t\t        Tone.Param.prototype.dispose.call(this);\n\t\t        this._gainNode.disconnect();\n\t\t        this._gainNode = null;\n\t\t        this._writable('gain');\n\t\t        this.gain.dispose();\n\t\t        this.gain = null;\n\t\t    };\n\t\t    //STATIC///////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Create input and outputs for this object.\n\t\t\t *  @param  {Number}  input   The number of inputs\n\t\t\t *  @param  {Number=}  outputs  The number of outputs\n\t\t\t *  @return  {Tone}  this\n\t\t\t *  @internal\n\t\t\t */\n\t\t    Tone.prototype.createInsOuts = function (inputs, outputs) {\n\t\t        if (inputs === 1) {\n\t\t            this.input = new Tone.Gain();\n\t\t        } else if (inputs > 1) {\n\t\t            this.input = new Array(inputs);\n\t\t        }\n\t\t        if (outputs === 1) {\n\t\t            this.output = new Tone.Gain();\n\t\t        } else if (outputs > 1) {\n\t\t            this.output = new Array(inputs);\n\t\t        }\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    return Tone.Gain;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  A signal is an audio-rate value. Tone.Signal is a core component of the library.\n\t\t\t *          Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n\t\t\t *          has all of the methods available to native Web Audio \n\t\t\t *          [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n\t\t\t *          as well as additional conveniences. Read more about working with signals \n\t\t\t *          [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Param}\n\t\t\t *  @param {Number|AudioParam} [value] Initial value of the signal. If an AudioParam\n\t\t\t *                                     is passed in, that parameter will be wrapped\n\t\t\t *                                     and controlled by the Signal. \n\t\t\t *  @param {string} [units=Number] unit The units the signal is in. \n\t\t\t *  @example\n\t\t\t * var signal = new Tone.Signal(10);\n\t\t\t */\n\t\t    Tone.Signal = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'value',\n\t\t            'units'\n\t\t        ], Tone.Signal.defaults);\n\t\t        /**\n\t\t\t\t * The node where the constant signal value is scaled.\n\t\t\t\t * @type {GainNode}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this.output = this._gain = this.context.createGain();\n\t\t        options.param = this._gain.gain;\n\t\t        Tone.Param.call(this, options);\n\t\t        /**\n\t\t\t\t * The node where the value is set.\n\t\t\t\t * @type {Tone.Param}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this.input = this._param = this._gain.gain;\n\t\t        //connect the const output to the node output\n\t\t        Tone.Signal._constant.chain(this._gain);\n\t\t    };\n\t\t    Tone.extend(Tone.Signal, Tone.Param);\n\t\t    /**\n\t\t\t *  The default values\n\t\t\t *  @type  {Object}\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Signal.defaults = {\n\t\t        'value': 0,\n\t\t        'units': Tone.Type.Default,\n\t\t        'convert': true\n\t\t    };\n\t\t    /**\n\t\t\t *  When signals connect to other signals or AudioParams, \n\t\t\t *  they take over the output value of that signal or AudioParam. \n\t\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>. \n\t\t\t *\n\t\t\t *  @override\n\t\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node \n\t\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t\t *  @returns {Tone.SignalBase} this\n\t\t\t *  @method\n\t\t\t */\n\t\t    Tone.Signal.prototype.connect = Tone.SignalBase.prototype.connect;\n\t\t    /**\n\t\t\t *  dispose and disconnect\n\t\t\t *  @returns {Tone.Signal} this\n\t\t\t */\n\t\t    Tone.Signal.prototype.dispose = function () {\n\t\t        Tone.Param.prototype.dispose.call(this);\n\t\t        this._param = null;\n\t\t        this._gain.disconnect();\n\t\t        this._gain = null;\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tSTATIC\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Generates a constant output of 1.\n\t\t\t *  @static\n\t\t\t *  @private\n\t\t\t *  @const\n\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t */\n\t\t    Tone.Signal._constant = null;\n\t\t    /**\n\t\t\t *  initializer function\n\t\t\t */\n\t\t    Tone._initAudioContext(function (audioContext) {\n\t\t        var buffer = audioContext.createBuffer(1, 128, audioContext.sampleRate);\n\t\t        var arr = buffer.getChannelData(0);\n\t\t        for (var i = 0; i < arr.length; i++) {\n\t\t            arr[i] = 1;\n\t\t        }\n\t\t        Tone.Signal._constant = audioContext.createBufferSource();\n\t\t        Tone.Signal._constant.channelCount = 1;\n\t\t        Tone.Signal._constant.channelCountMode = 'explicit';\n\t\t        Tone.Signal._constant.buffer = buffer;\n\t\t        Tone.Signal._constant.loop = true;\n\t\t        Tone.Signal._constant.start(0);\n\t\t        Tone.Signal._constant.noGC();\n\t\t    });\n\t\t    return Tone.Signal;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class A Timeline class for scheduling and maintaining state\n\t\t\t *         along a timeline. All events must have a \"time\" property. \n\t\t\t *         Internally, events are stored in time order for fast \n\t\t\t *         retrieval.\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Positive} [memory=Infinity] The number of previous events that are retained.\n\t\t\t */\n\t\t    Tone.Timeline = function () {\n\t\t        var options = this.optionsObject(arguments, ['memory'], Tone.Timeline.defaults);\n\t\t        /**\n\t\t\t\t *  The array of scheduled timeline events\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._timeline = [];\n\t\t        /**\n\t\t\t\t *  An array of items to remove from the list. \n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._toRemove = [];\n\t\t        /**\n\t\t\t\t *  Flag if the tieline is mid iteration\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Boolean}\n\t\t\t\t */\n\t\t        this._iterating = false;\n\t\t        /**\n\t\t\t\t *  The memory of the timeline, i.e.\n\t\t\t\t *  how many events in the past it will retain\n\t\t\t\t *  @type {Positive}\n\t\t\t\t */\n\t\t        this.memory = options.memory;\n\t\t    };\n\t\t    Tone.extend(Tone.Timeline);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Timeline.defaults = { 'memory': Infinity };\n\t\t    /**\n\t\t\t *  The number of items in the timeline.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Timeline#\n\t\t\t *  @name length\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Timeline.prototype, 'length', {\n\t\t        get: function () {\n\t\t            return this._timeline.length;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Insert an event object onto the timeline. Events must have a \"time\" attribute.\n\t\t\t *  @param  {Object}  event  The event object to insert into the \n\t\t\t *                           timeline. \n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.addEvent = function (event) {\n\t\t        //the event needs to have a time attribute\n\t\t        if (this.isUndef(event.time)) {\n\t\t            throw new Error('Tone.Timeline: events must have a time attribute');\n\t\t        }\n\t\t        if (this._timeline.length) {\n\t\t            var index = this._search(event.time);\n\t\t            this._timeline.splice(index + 1, 0, event);\n\t\t        } else {\n\t\t            this._timeline.push(event);\n\t\t        }\n\t\t        //if the length is more than the memory, remove the previous ones\n\t\t        if (this.length > this.memory) {\n\t\t            var diff = this.length - this.memory;\n\t\t            this._timeline.splice(0, diff);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove an event from the timeline.\n\t\t\t *  @param  {Object}  event  The event object to remove from the list.\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.removeEvent = function (event) {\n\t\t        if (this._iterating) {\n\t\t            this._toRemove.push(event);\n\t\t        } else {\n\t\t            var index = this._timeline.indexOf(event);\n\t\t            if (index !== -1) {\n\t\t                this._timeline.splice(index, 1);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the nearest event whose time is less than or equal to the given time.\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t *  @returns {Object} The event object set after that time.\n\t\t\t */\n\t\t    Tone.Timeline.prototype.getEvent = function (time) {\n\t\t        var index = this._search(time);\n\t\t        if (index !== -1) {\n\t\t            return this._timeline[index];\n\t\t        } else {\n\t\t            return null;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the event which is scheduled after the given time.\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t *  @returns {Object} The event object after the given time\n\t\t\t */\n\t\t    Tone.Timeline.prototype.getEventAfter = function (time) {\n\t\t        var index = this._search(time);\n\t\t        if (index + 1 < this._timeline.length) {\n\t\t            return this._timeline[index + 1];\n\t\t        } else {\n\t\t            return null;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the event before the event at the given time.\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t *  @returns {Object} The event object before the given time\n\t\t\t */\n\t\t    Tone.Timeline.prototype.getEventBefore = function (time) {\n\t\t        var len = this._timeline.length;\n\t\t        //if it's after the last item, return the last item\n\t\t        if (len > 0 && this._timeline[len - 1].time < time) {\n\t\t            return this._timeline[len - 1];\n\t\t        }\n\t\t        var index = this._search(time);\n\t\t        if (index - 1 >= 0) {\n\t\t            return this._timeline[index - 1];\n\t\t        } else {\n\t\t            return null;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancel events after the given time\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.cancel = function (after) {\n\t\t        if (this._timeline.length > 1) {\n\t\t            var index = this._search(after);\n\t\t            if (index >= 0) {\n\t\t                if (this._timeline[index].time === after) {\n\t\t                    //get the first item with that time\n\t\t                    for (var i = index; i >= 0; i--) {\n\t\t                        if (this._timeline[i].time === after) {\n\t\t                            index = i;\n\t\t                        } else {\n\t\t                            break;\n\t\t                        }\n\t\t                    }\n\t\t                    this._timeline = this._timeline.slice(0, index);\n\t\t                } else {\n\t\t                    this._timeline = this._timeline.slice(0, index + 1);\n\t\t                }\n\t\t            } else {\n\t\t                this._timeline = [];\n\t\t            }\n\t\t        } else if (this._timeline.length === 1) {\n\t\t            //the first item's time\n\t\t            if (this._timeline[0].time >= after) {\n\t\t                this._timeline = [];\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancel events before or equal to the given time.\n\t\t\t *  @param  {Number}  time  The time to cancel before.\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.cancelBefore = function (time) {\n\t\t        if (this._timeline.length) {\n\t\t            var index = this._search(time);\n\t\t            if (index >= 0) {\n\t\t                this._timeline = this._timeline.slice(index + 1);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Does a binary serach on the timeline array and returns the \n\t\t\t *  nearest event index whose time is after or equal to the given time.\n\t\t\t *  If a time is searched before the first index in the timeline, -1 is returned.\n\t\t\t *  If the time is after the end, the index of the last item is returned.\n\t\t\t *  @param  {Number}  time  \n\t\t\t *  @return  {Number} the index in the timeline array \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Timeline.prototype._search = function (time) {\n\t\t        var beginning = 0;\n\t\t        var len = this._timeline.length;\n\t\t        var end = len;\n\t\t        if (len > 0 && this._timeline[len - 1].time <= time) {\n\t\t            return len - 1;\n\t\t        }\n\t\t        while (beginning < end) {\n\t\t            // calculate the midpoint for roughly equal partition\n\t\t            var midPoint = Math.floor(beginning + (end - beginning) / 2);\n\t\t            var event = this._timeline[midPoint];\n\t\t            var nextEvent = this._timeline[midPoint + 1];\n\t\t            if (event.time === time) {\n\t\t                //choose the last one that has the same time\n\t\t                for (var i = midPoint; i < this._timeline.length; i++) {\n\t\t                    var testEvent = this._timeline[i];\n\t\t                    if (testEvent.time === time) {\n\t\t                        midPoint = i;\n\t\t                    }\n\t\t                }\n\t\t                return midPoint;\n\t\t            } else if (event.time < time && nextEvent.time > time) {\n\t\t                return midPoint;\n\t\t            } else if (event.time > time) {\n\t\t                //search lower\n\t\t                end = midPoint;\n\t\t            } else if (event.time < time) {\n\t\t                //search upper\n\t\t                beginning = midPoint + 1;\n\t\t            }\n\t\t        }\n\t\t        return -1;\n\t\t    };\n\t\t    /**\n\t\t\t *  Internal iterator. Applies extra safety checks for \n\t\t\t *  removing items from the array. \n\t\t\t *  @param  {Function}  callback \n\t\t\t *  @param  {Number=}    lowerBound     \n\t\t\t *  @param  {Number=}    upperBound    \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Timeline.prototype._iterate = function (callback, lowerBound, upperBound) {\n\t\t        this._iterating = true;\n\t\t        lowerBound = this.defaultArg(lowerBound, 0);\n\t\t        upperBound = this.defaultArg(upperBound, this._timeline.length - 1);\n\t\t        for (var i = lowerBound; i <= upperBound; i++) {\n\t\t            callback(this._timeline[i]);\n\t\t        }\n\t\t        this._iterating = false;\n\t\t        if (this._toRemove.length > 0) {\n\t\t            for (var j = 0; j < this._toRemove.length; j++) {\n\t\t                var index = this._timeline.indexOf(this._toRemove[j]);\n\t\t                if (index !== -1) {\n\t\t                    this._timeline.splice(index, 1);\n\t\t                }\n\t\t            }\n\t\t            this._toRemove = [];\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the array\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.forEach = function (callback) {\n\t\t        this._iterate(callback);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the array at or before the given time.\n\t\t\t *  @param  {Number}  time The time to check if items are before\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.forEachBefore = function (time, callback) {\n\t\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t\t        var upperBound = this._search(time);\n\t\t        if (upperBound !== -1) {\n\t\t            this._iterate(callback, 0, upperBound);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the array after the given time.\n\t\t\t *  @param  {Number}  time The time to check if items are before\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.forEachAfter = function (time, callback) {\n\t\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t\t        var lowerBound = this._search(time);\n\t\t        this._iterate(callback, lowerBound + 1);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the array at or after the given time. Similar to \n\t\t\t *  forEachAfter, but includes the item(s) at the given time.\n\t\t\t *  @param  {Number}  time The time to check if items are before\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.forEachFrom = function (time, callback) {\n\t\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t\t        var lowerBound = this._search(time);\n\t\t        //work backwards until the event time is less than time\n\t\t        while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n\t\t            lowerBound--;\n\t\t        }\n\t\t        this._iterate(callback, lowerBound + 1);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the array at the given time\n\t\t\t *  @param  {Number}  time The time to check if items are before\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.forEachAtTime = function (time, callback) {\n\t\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t\t        var upperBound = this._search(time);\n\t\t        if (upperBound !== -1) {\n\t\t            this._iterate(function (event) {\n\t\t                if (event.time === time) {\n\t\t                    callback(event);\n\t\t                }\n\t\t            }, 0, upperBound);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.Timeline}  this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._timeline = null;\n\t\t        this._toRemove = null;\n\t\t    };\n\t\t    return Tone.Timeline;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class A signal which adds the method getValueAtTime. \n\t\t\t *         Code and inspiration from https://github.com/jsantell/web-audio-automation-timeline\n\t\t\t *  @extends {Tone.Param}\n\t\t\t *  @param {Number=} value The initial value of the signal\n\t\t\t *  @param {String=} units The conversion units of the signal.\n\t\t\t */\n\t\t    Tone.TimelineSignal = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'value',\n\t\t            'units'\n\t\t        ], Tone.Signal.defaults);\n\t\t        /**\n\t\t\t\t *  The scheduled events\n\t\t\t\t *  @type {Tone.Timeline}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._events = new Tone.Timeline(10);\n\t\t        //constructors\n\t\t        Tone.Signal.apply(this, options);\n\t\t        options.param = this._param;\n\t\t        Tone.Param.call(this, options);\n\t\t        /**\n\t\t\t\t *  The initial scheduled value\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._initial = this._fromUnits(this._param.value);\n\t\t    };\n\t\t    Tone.extend(Tone.TimelineSignal, Tone.Param);\n\t\t    /**\n\t\t\t *  The event types of a schedulable signal.\n\t\t\t *  @enum {String}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimelineSignal.Type = {\n\t\t        Linear: 'linear',\n\t\t        Exponential: 'exponential',\n\t\t        Target: 'target',\n\t\t        Curve: 'curve',\n\t\t        Set: 'set'\n\t\t    };\n\t\t    /**\n\t\t\t * The current value of the signal. \n\t\t\t * @memberOf Tone.TimelineSignal#\n\t\t\t * @type {Number}\n\t\t\t * @name value\n\t\t\t */\n\t\t    Object.defineProperty(Tone.TimelineSignal.prototype, 'value', {\n\t\t        get: function () {\n\t\t            var now = this.now();\n\t\t            var val = this.getValueAtTime(now);\n\t\t            return this._toUnits(val);\n\t\t        },\n\t\t        set: function (value) {\n\t\t            var convertedVal = this._fromUnits(value);\n\t\t            this._initial = convertedVal;\n\t\t            this.cancelScheduledValues();\n\t\t            this._param.value = convertedVal;\n\t\t        }\n\t\t    });\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tSCHEDULING\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Schedules a parameter value change at the given time.\n\t\t\t *  @param {*}\tvalue The value to set the signal.\n\t\t\t *  @param {Time}  time The time when the change should occur.\n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t *  @example\n\t\t\t * //set the frequency to \"G4\" in exactly 1 second from now. \n\t\t\t * freq.setValueAtTime(\"G4\", \"+1\");\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.setValueAtTime = function (value, startTime) {\n\t\t        value = this._fromUnits(value);\n\t\t        startTime = this.toSeconds(startTime);\n\t\t        this._events.addEvent({\n\t\t            'type': Tone.TimelineSignal.Type.Set,\n\t\t            'value': value,\n\t\t            'time': startTime\n\t\t        });\n\t\t        //invoke the original event\n\t\t        this._param.setValueAtTime(value, startTime);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedules a linear continuous change in parameter value from the \n\t\t\t *  previous scheduled parameter value to the given value.\n\t\t\t *  \n\t\t\t *  @param  {number} value   \n\t\t\t *  @param  {Time} endTime \n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.linearRampToValueAtTime = function (value, endTime) {\n\t\t        value = this._fromUnits(value);\n\t\t        endTime = this.toSeconds(endTime);\n\t\t        this._events.addEvent({\n\t\t            'type': Tone.TimelineSignal.Type.Linear,\n\t\t            'value': value,\n\t\t            'time': endTime\n\t\t        });\n\t\t        this._param.linearRampToValueAtTime(value, endTime);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedules an exponential continuous change in parameter value from \n\t\t\t *  the previous scheduled parameter value to the given value.\n\t\t\t *  \n\t\t\t *  @param  {number} value   \n\t\t\t *  @param  {Time} endTime \n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.exponentialRampToValueAtTime = function (value, endTime) {\n\t\t        //get the previous event and make sure it's not starting from 0\n\t\t        endTime = this.toSeconds(endTime);\n\t\t        var beforeEvent = this._searchBefore(endTime);\n\t\t        if (beforeEvent && beforeEvent.value === 0) {\n\t\t            //reschedule that event\n\t\t            this.setValueAtTime(this._minOutput, beforeEvent.time);\n\t\t        }\n\t\t        value = this._fromUnits(value);\n\t\t        var setValue = Math.max(value, this._minOutput);\n\t\t        this._events.addEvent({\n\t\t            'type': Tone.TimelineSignal.Type.Exponential,\n\t\t            'value': setValue,\n\t\t            'time': endTime\n\t\t        });\n\t\t        //if the ramped to value is 0, make it go to the min output, and then set to 0.\n\t\t        if (value < this._minOutput) {\n\t\t            this._param.exponentialRampToValueAtTime(this._minOutput, endTime - this.sampleTime);\n\t\t            this.setValueAtTime(0, endTime);\n\t\t        } else {\n\t\t            this._param.exponentialRampToValueAtTime(value, endTime);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Start exponentially approaching the target value at the given time with\n\t\t\t *  a rate having the given time constant.\n\t\t\t *  @param {number} value        \n\t\t\t *  @param {Time} startTime    \n\t\t\t *  @param {number} timeConstant \n\t\t\t *  @returns {Tone.TimelineSignal} this \n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n\t\t        value = this._fromUnits(value);\n\t\t        value = Math.max(this._minOutput, value);\n\t\t        timeConstant = Math.max(this._minOutput, timeConstant);\n\t\t        startTime = this.toSeconds(startTime);\n\t\t        this._events.addEvent({\n\t\t            'type': Tone.TimelineSignal.Type.Target,\n\t\t            'value': value,\n\t\t            'time': startTime,\n\t\t            'constant': timeConstant\n\t\t        });\n\t\t        this._param.setTargetAtTime(value, startTime, timeConstant);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Set an array of arbitrary values starting at the given time for the given duration.\n\t\t\t *  @param {Float32Array} values        \n\t\t\t *  @param {Time} startTime    \n\t\t\t *  @param {Time} duration\n\t\t\t *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value\n\t\t\t *  @returns {Tone.TimelineSignal} this \n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n\t\t        scaling = this.defaultArg(scaling, 1);\n\t\t        //copy the array\n\t\t        var floats = new Array(values.length);\n\t\t        for (var i = 0; i < floats.length; i++) {\n\t\t            floats[i] = this._fromUnits(values[i]) * scaling;\n\t\t        }\n\t\t        startTime = this.toSeconds(startTime);\n\t\t        duration = this.toSeconds(duration);\n\t\t        this._events.addEvent({\n\t\t            'type': Tone.TimelineSignal.Type.Curve,\n\t\t            'value': floats,\n\t\t            'time': startTime,\n\t\t            'duration': duration\n\t\t        });\n\t\t        //set the first value\n\t\t        this._param.setValueAtTime(floats[0], startTime);\n\t\t        //schedule a lienar ramp for each of the segments\n\t\t        for (var j = 1; j < floats.length; j++) {\n\t\t            var segmentTime = startTime + j / (floats.length - 1) * duration;\n\t\t            this._param.linearRampToValueAtTime(floats[j], segmentTime);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancels all scheduled parameter changes with times greater than or \n\t\t\t *  equal to startTime.\n\t\t\t *  \n\t\t\t *  @param  {Time} startTime\n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.cancelScheduledValues = function (after) {\n\t\t        after = this.toSeconds(after);\n\t\t        this._events.cancel(after);\n\t\t        this._param.cancelScheduledValues(after);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Sets the computed value at the given time. This provides\n\t\t\t *  a point from which a linear or exponential curve\n\t\t\t *  can be scheduled after. Will cancel events after \n\t\t\t *  the given time and shorten the currently scheduled\n\t\t\t *  linear or exponential ramp so that it ends at `time` .\n\t\t\t *  This is to avoid discontinuities and clicks in envelopes. \n\t\t\t *  @param {Time} time When to set the ramp point\n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.setRampPoint = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        //get the value at the given time\n\t\t        var val = this._toUnits(this.getValueAtTime(time));\n\t\t        //if there is an event at the given time\n\t\t        //and that even is not a \"set\"\n\t\t        var before = this._searchBefore(time);\n\t\t        if (before && before.time === time) {\n\t\t            //remove everything after\n\t\t            this.cancelScheduledValues(time + this.sampleTime);\n\t\t        } else if (before && before.type === Tone.TimelineSignal.Type.Curve && before.time + before.duration > time) {\n\t\t            //if the curve is still playing\n\t\t            //cancel the curve\n\t\t            this.cancelScheduledValues(time);\n\t\t            this.linearRampToValueAtTime(val, time);\n\t\t        } else {\n\t\t            //reschedule the next event to end at the given time\n\t\t            var after = this._searchAfter(time);\n\t\t            if (after) {\n\t\t                //cancel the next event(s)\n\t\t                this.cancelScheduledValues(time);\n\t\t                if (after.type === Tone.TimelineSignal.Type.Linear) {\n\t\t                    this.linearRampToValueAtTime(val, time);\n\t\t                } else if (after.type === Tone.TimelineSignal.Type.Exponential) {\n\t\t                    this.exponentialRampToValueAtTime(val, time);\n\t\t                }\n\t\t            }\n\t\t            this.setValueAtTime(val, time);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Do a linear ramp to the given value between the start and finish times.\n\t\t\t *  @param {Number} value The value to ramp to.\n\t\t\t *  @param {Time} start The beginning anchor point to do the linear ramp\n\t\t\t *  @param {Time} finish The ending anchor point by which the value of\n\t\t\t *                       the signal will equal the given value.\n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.linearRampToValueBetween = function (value, start, finish) {\n\t\t        this.setRampPoint(start);\n\t\t        this.linearRampToValueAtTime(value, finish);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Do a exponential ramp to the given value between the start and finish times.\n\t\t\t *  @param {Number} value The value to ramp to.\n\t\t\t *  @param {Time} start The beginning anchor point to do the exponential ramp\n\t\t\t *  @param {Time} finish The ending anchor point by which the value of\n\t\t\t *                       the signal will equal the given value.\n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.exponentialRampToValueBetween = function (value, start, finish) {\n\t\t        this.setRampPoint(start);\n\t\t        this.exponentialRampToValueAtTime(value, finish);\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tGETTING SCHEDULED VALUES\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Returns the value before or equal to the given time\n\t\t\t *  @param  {Number}  time  The time to query\n\t\t\t *  @return  {Object}  The event at or before the given time.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype._searchBefore = function (time) {\n\t\t        return this._events.getEvent(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  The event after the given time\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t *  @return  {Object}  The next event after the given time\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype._searchAfter = function (time) {\n\t\t        return this._events.getEventAfter(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the scheduled value at the given time. This will\n\t\t\t *  return the unconverted (raw) value.\n\t\t\t *  @param  {Number}  time  The time in seconds.\n\t\t\t *  @return  {Number}  The scheduled value at the given time.\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.getValueAtTime = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        var after = this._searchAfter(time);\n\t\t        var before = this._searchBefore(time);\n\t\t        var value = this._initial;\n\t\t        //if it was set by\n\t\t        if (before === null) {\n\t\t            value = this._initial;\n\t\t        } else if (before.type === Tone.TimelineSignal.Type.Target) {\n\t\t            var previous = this._events.getEventBefore(before.time);\n\t\t            var previouVal;\n\t\t            if (previous === null) {\n\t\t                previouVal = this._initial;\n\t\t            } else {\n\t\t                previouVal = previous.value;\n\t\t            }\n\t\t            value = this._exponentialApproach(before.time, previouVal, before.value, before.constant, time);\n\t\t        } else if (before.type === Tone.TimelineSignal.Type.Curve) {\n\t\t            value = this._curveInterpolate(before.time, before.value, before.duration, time);\n\t\t        } else if (after === null) {\n\t\t            value = before.value;\n\t\t        } else if (after.type === Tone.TimelineSignal.Type.Linear) {\n\t\t            value = this._linearInterpolate(before.time, before.value, after.time, after.value, time);\n\t\t        } else if (after.type === Tone.TimelineSignal.Type.Exponential) {\n\t\t            value = this._exponentialInterpolate(before.time, before.value, after.time, after.value, time);\n\t\t        } else {\n\t\t            value = before.value;\n\t\t        }\n\t\t        return value;\n\t\t    };\n\t\t    /**\n\t\t\t *  When signals connect to other signals or AudioParams, \n\t\t\t *  they take over the output value of that signal or AudioParam. \n\t\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>. \n\t\t\t *\n\t\t\t *  @override\n\t\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node \n\t\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t *  @method\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.connect = Tone.SignalBase.prototype.connect;\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tAUTOMATION CURVE CALCULATIONS\n\t\t    //\tMIT License, copyright (c) 2014 Jordan Santell\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Calculates the the value along the curve produced by setTargetAtTime\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype._exponentialApproach = function (t0, v0, v1, timeConstant, t) {\n\t\t        return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n\t\t    };\n\t\t    /**\n\t\t\t *  Calculates the the value along the curve produced by linearRampToValueAtTime\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype._linearInterpolate = function (t0, v0, t1, v1, t) {\n\t\t        return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n\t\t    };\n\t\t    /**\n\t\t\t *  Calculates the the value along the curve produced by exponentialRampToValueAtTime\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype._exponentialInterpolate = function (t0, v0, t1, v1, t) {\n\t\t        v0 = Math.max(this._minOutput, v0);\n\t\t        return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n\t\t    };\n\t\t    /**\n\t\t\t *  Calculates the the value along the curve produced by setValueCurveAtTime\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype._curveInterpolate = function (start, curve, duration, time) {\n\t\t        var len = curve.length;\n\t\t        // If time is after duration, return the last curve value\n\t\t        if (time >= start + duration) {\n\t\t            return curve[len - 1];\n\t\t        } else if (time <= start) {\n\t\t            return curve[0];\n\t\t        } else {\n\t\t            var progress = (time - start) / duration;\n\t\t            var lowerIndex = Math.floor((len - 1) * progress);\n\t\t            var upperIndex = Math.ceil((len - 1) * progress);\n\t\t            var lowerVal = curve[lowerIndex];\n\t\t            var upperVal = curve[upperIndex];\n\t\t            if (upperIndex === lowerIndex) {\n\t\t                return lowerVal;\n\t\t            } else {\n\t\t                return this._linearInterpolate(lowerIndex, lowerVal, upperIndex, upperVal, progress * (len - 1));\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return {Tone.TimelineSignal} this\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.dispose = function () {\n\t\t        Tone.Signal.prototype.dispose.call(this);\n\t\t        Tone.Param.prototype.dispose.call(this);\n\t\t        this._events.dispose();\n\t\t        this._events = null;\n\t\t    };\n\t\t    return Tone.TimelineSignal;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Pow applies an exponent to the incoming signal. The incoming signal\n\t\t\t *         must be AudioRange.\n\t\t\t *\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @constructor\n\t\t\t *  @param {Positive} exp The exponent to apply to the incoming signal, must be at least 2. \n\t\t\t *  @example\n\t\t\t * var pow = new Tone.Pow(2);\n\t\t\t * var sig = new Tone.Signal(0.5).connect(pow);\n\t\t\t * //output of pow is 0.25. \n\t\t\t */\n\t\t    Tone.Pow = function (exp) {\n\t\t        /**\n\t\t\t\t * the exponent\n\t\t\t\t * @private\n\t\t\t\t * @type {number}\n\t\t\t\t */\n\t\t        this._exp = this.defaultArg(exp, 1);\n\t\t        /**\n\t\t\t\t *  @type {WaveShaperNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._expScaler = this.input = this.output = new Tone.WaveShaper(this._expFunc(this._exp), 8192);\n\t\t    };\n\t\t    Tone.extend(Tone.Pow, Tone.SignalBase);\n\t\t    /**\n\t\t\t * The value of the exponent.\n\t\t\t * @memberOf Tone.Pow#\n\t\t\t * @type {number}\n\t\t\t * @name value\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Pow.prototype, 'value', {\n\t\t        get: function () {\n\t\t            return this._exp;\n\t\t        },\n\t\t        set: function (exp) {\n\t\t            this._exp = exp;\n\t\t            this._expScaler.setMap(this._expFunc(this._exp));\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  the function which maps the waveshaper\n\t\t\t *  @param   {number} exp\n\t\t\t *  @return {function}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Pow.prototype._expFunc = function (exp) {\n\t\t        return function (val) {\n\t\t            return Math.pow(Math.abs(val), exp);\n\t\t        };\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Pow} this\n\t\t\t */\n\t\t    Tone.Pow.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._expScaler.dispose();\n\t\t        this._expScaler = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Pow;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n\t\t\t *          envelope generator. Tone.Envelope outputs a signal which \n\t\t\t *          can be connected to an AudioParam or Tone.Signal. \n\t\t\t *          <img src=\"https://upload.wikimedia.org/wikipedia/commons/e/ea/ADSR_parameter.svg\">\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Time} [attack] The amount of time it takes for the envelope to go from \n\t\t\t *                         0 to it's maximum value. \n\t\t\t *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n\t\t\t *                       \tto fall to the sustain value. \n\t\t\t *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n\t\t\t *                                \tthe release is triggered. \n\t\t\t *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0. \n\t\t\t *  @example\n\t\t\t * //an amplitude envelope\n\t\t\t * var gainNode = Tone.context.createGain();\n\t\t\t * var env = new Tone.Envelope({\n\t\t\t * \t\"attack\" : 0.1,\n\t\t\t * \t\"decay\" : 0.2,\n\t\t\t * \t\"sustain\" : 1,\n\t\t\t * \t\"release\" : 0.8,\n\t\t\t * });\n\t\t\t * env.connect(gainNode.gain);\n\t\t\t */\n\t\t    Tone.Envelope = function () {\n\t\t        //get all of the defaults\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'attack',\n\t\t            'decay',\n\t\t            'sustain',\n\t\t            'release'\n\t\t        ], Tone.Envelope.defaults);\n\t\t        /** \n\t\t\t\t *  When triggerAttack is called, the attack time is the amount of\n\t\t\t\t *  time it takes for the envelope to reach it's maximum value. \n\t\t\t\t *  @type {Time}\n\t\t\t\t */\n\t\t        this.attack = options.attack;\n\t\t        /**\n\t\t\t\t *  After the attack portion of the envelope, the value will fall\n\t\t\t\t *  over the duration of the decay time to it's sustain value. \n\t\t\t\t *  @type {Time}\n\t\t\t\t */\n\t\t        this.decay = options.decay;\n\t\t        /**\n\t\t\t\t * \tThe sustain value is the value \n\t\t\t\t * \twhich the envelope rests at after triggerAttack is\n\t\t\t\t * \tcalled, but before triggerRelease is invoked. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t */\n\t\t        this.sustain = options.sustain;\n\t\t        /**\n\t\t\t\t *  After triggerRelease is called, the envelope's\n\t\t\t\t *  value will fall to it's miminum value over the\n\t\t\t\t *  duration of the release time. \n\t\t\t\t *  @type {Time}\n\t\t\t\t */\n\t\t        this.release = options.release;\n\t\t        /**\n\t\t\t\t *  the next time the envelope is at standby\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._attackCurve = 'linear';\n\t\t        /**\n\t\t\t\t *  the next time the envelope is at standby\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._releaseCurve = 'exponential';\n\t\t        /**\n\t\t\t\t *  the signal\n\t\t\t\t *  @type {Tone.TimelineSignal}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sig = this.output = new Tone.TimelineSignal();\n\t\t        this._sig.setValueAtTime(0, 0);\n\t\t        //set the attackCurve initially\n\t\t        this.attackCurve = options.attackCurve;\n\t\t        this.releaseCurve = options.releaseCurve;\n\t\t    };\n\t\t    Tone.extend(Tone.Envelope);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Envelope.defaults = {\n\t\t        'attack': 0.01,\n\t\t        'decay': 0.1,\n\t\t        'sustain': 0.5,\n\t\t        'release': 1,\n\t\t        'attackCurve': 'linear',\n\t\t        'releaseCurve': 'exponential'\n\t\t    };\n\t\t    /**\n\t\t\t * Read the current value of the envelope. Useful for \n\t\t\t * syncronizing visual output to the envelope. \n\t\t\t * @memberOf Tone.Envelope#\n\t\t\t * @type {Number}\n\t\t\t * @name value\n\t\t\t * @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Envelope.prototype, 'value', {\n\t\t        get: function () {\n\t\t            return this.getValueAtTime(this.now());\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The shape of the attack. \n\t\t\t * Can be any of these strings:\n\t\t\t * <ul>\n\t\t\t *   <li>linear</li>\n\t\t\t *   <li>exponential</li>\n\t\t\t *   <li>sine</li>\n\t\t\t *   <li>ease</li>\n\t\t\t *   <li>bounce</li>\n\t\t\t *   <li>ripple</li>\n\t\t\t *   <li>step</li>\n\t\t\t * </ul>\n\t\t\t * Can also be an array which describes the curve. Values\n\t\t\t * in the array are evenly subdivided and linearly\n\t\t\t * interpolated over the duration of the attack. \n\t\t\t * @memberOf Tone.Envelope#\n\t\t\t * @type {String|Array}\n\t\t\t * @name attackCurve\n\t\t\t * @example\n\t\t\t * env.attackCurve = \"linear\";\n\t\t\t * @example\n\t\t\t * //can also be an array\n\t\t\t * env.attackCurve = [0, 0.2, 0.3, 0.4, 1]\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Envelope.prototype, 'attackCurve', {\n\t\t        get: function () {\n\t\t            if (this.isString(this._attackCurve)) {\n\t\t                return this._attackCurve;\n\t\t            } else if (this.isArray(this._attackCurve)) {\n\t\t                //look up the name in the curves array\n\t\t                for (var type in Tone.Envelope.Type) {\n\t\t                    if (Tone.Envelope.Type[type].In === this._attackCurve) {\n\t\t                        return type;\n\t\t                    }\n\t\t                }\n\t\t                //otherwise just return the array\n\t\t                return this._attackCurve;\n\t\t            }\n\t\t        },\n\t\t        set: function (curve) {\n\t\t            //check if it's a valid type\n\t\t            if (Tone.Envelope.Type.hasOwnProperty(curve)) {\n\t\t                var curveDef = Tone.Envelope.Type[curve];\n\t\t                if (this.isObject(curveDef)) {\n\t\t                    this._attackCurve = curveDef.In;\n\t\t                } else {\n\t\t                    this._attackCurve = curveDef;\n\t\t                }\n\t\t            } else if (this.isArray(curve)) {\n\t\t                this._attackCurve = curve;\n\t\t            } else {\n\t\t                throw new Error('Tone.Envelope: invalid curve: ' + curve);\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The shape of the release. See the attack curve types. \n\t\t\t * @memberOf Tone.Envelope#\n\t\t\t * @type {String|Array}\n\t\t\t * @name releaseCurve\n\t\t\t * @example\n\t\t\t * env.releaseCurve = \"linear\";\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Envelope.prototype, 'releaseCurve', {\n\t\t        get: function () {\n\t\t            if (this.isString(this._releaseCurve)) {\n\t\t                return this._releaseCurve;\n\t\t            } else if (this.isArray(this._releaseCurve)) {\n\t\t                //look up the name in the curves array\n\t\t                for (var type in Tone.Envelope.Type) {\n\t\t                    if (Tone.Envelope.Type[type].Out === this._releaseCurve) {\n\t\t                        return type;\n\t\t                    }\n\t\t                }\n\t\t                //otherwise just return the array\n\t\t                return this._releaseCurve;\n\t\t            }\n\t\t        },\n\t\t        set: function (curve) {\n\t\t            //check if it's a valid type\n\t\t            if (Tone.Envelope.Type.hasOwnProperty(curve)) {\n\t\t                var curveDef = Tone.Envelope.Type[curve];\n\t\t                if (this.isObject(curveDef)) {\n\t\t                    this._releaseCurve = curveDef.Out;\n\t\t                } else {\n\t\t                    this._releaseCurve = curveDef;\n\t\t                }\n\t\t            } else if (this.isArray(curve)) {\n\t\t                this._releaseCurve = curve;\n\t\t            } else {\n\t\t                throw new Error('Tone.Envelope: invalid curve: ' + curve);\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Trigger the attack/decay portion of the ADSR envelope. \n\t\t\t *  @param  {Time} [time=now] When the attack should start.\n\t\t\t *  @param {NormalRange} [velocity=1] The velocity of the envelope scales the vales.\n\t\t\t *                               number between 0-1\n\t\t\t *  @returns {Tone.Envelope} this\n\t\t\t *  @example\n\t\t\t *  //trigger the attack 0.5 seconds from now with a velocity of 0.2\n\t\t\t *  env.triggerAttack(\"+0.5\", 0.2);\n\t\t\t */\n\t\t    Tone.Envelope.prototype.triggerAttack = function (time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        var originalAttack = this.toSeconds(this.attack);\n\t\t        var attack = originalAttack;\n\t\t        var decay = this.toSeconds(this.decay);\n\t\t        velocity = this.defaultArg(velocity, 1);\n\t\t        //check if it's not a complete attack\n\t\t        var currentValue = this.getValueAtTime(time);\n\t\t        if (currentValue > 0) {\n\t\t            //subtract the current value from the attack time\n\t\t            var attackRate = 1 / attack;\n\t\t            var remainingDistance = 1 - currentValue;\n\t\t            //the attack is now the remaining time\n\t\t            attack = remainingDistance / attackRate;\n\t\t        }\n\t\t        //attack\n\t\t        if (this._attackCurve === 'linear') {\n\t\t            this._sig.linearRampToValue(velocity, attack, time);\n\t\t        } else if (this._attackCurve === 'exponential') {\n\t\t            this._sig.exponentialRampToValue(velocity, attack, time);\n\t\t        } else if (attack > 0) {\n\t\t            this._sig.setRampPoint(time);\n\t\t            var curve = this._attackCurve;\n\t\t            //take only a portion of the curve\n\t\t            if (attack < originalAttack) {\n\t\t                var percentComplete = 1 - attack / originalAttack;\n\t\t                var sliceIndex = Math.floor(percentComplete * this._attackCurve.length);\n\t\t                curve = this._attackCurve.slice(sliceIndex);\n\t\t                //the first index is the current value\n\t\t                curve[0] = currentValue;\n\t\t            }\n\t\t            this._sig.setValueCurveAtTime(curve, time, attack, velocity);\n\t\t        }\n\t\t        //decay\n\t\t        this._sig.exponentialRampToValue(velocity * this.sustain, decay, attack + time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Triggers the release of the envelope.\n\t\t\t *  @param  {Time} [time=now] When the release portion of the envelope should start. \n\t\t\t *  @returns {Tone.Envelope} this\n\t\t\t *  @example\n\t\t\t *  //trigger release immediately\n\t\t\t *  env.triggerRelease();\n\t\t\t */\n\t\t    Tone.Envelope.prototype.triggerRelease = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        var currentValue = this.getValueAtTime(time);\n\t\t        if (currentValue > 0) {\n\t\t            var release = this.toSeconds(this.release);\n\t\t            if (this._releaseCurve === 'linear') {\n\t\t                this._sig.linearRampToValue(0, release, time);\n\t\t            } else if (this._releaseCurve === 'exponential') {\n\t\t                this._sig.exponentialRampToValue(0, release, time);\n\t\t            } else {\n\t\t                var curve = this._releaseCurve;\n\t\t                if (this.isArray(curve)) {\n\t\t                    this._sig.setRampPoint(time);\n\t\t                    this._sig.setValueCurveAtTime(curve, time, release, currentValue);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the scheduled value at the given time. This will\n\t\t\t *  return the unconverted (raw) value.\n\t\t\t *  @param  {Number}  time  The time in seconds.\n\t\t\t *  @return  {Number}  The scheduled value at the given time.\n\t\t\t */\n\t\t    Tone.Envelope.prototype.getValueAtTime = function (time) {\n\t\t        return this._sig.getValueAtTime(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  triggerAttackRelease is shorthand for triggerAttack, then waiting\n\t\t\t *  some duration, then triggerRelease. \n\t\t\t *  @param {Time} duration The duration of the sustain.\n\t\t\t *  @param {Time} [time=now] When the attack should be triggered.\n\t\t\t *  @param {number} [velocity=1] The velocity of the envelope. \n\t\t\t *  @returns {Tone.Envelope} this\n\t\t\t *  @example\n\t\t\t * //trigger the attack and then the release after 0.6 seconds.\n\t\t\t * env.triggerAttackRelease(0.6);\n\t\t\t */\n\t\t    Tone.Envelope.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        this.triggerAttack(time, velocity);\n\t\t        this.triggerRelease(time + this.toSeconds(duration));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancels all scheduled envelope changes after the given time.\n\t\t\t *  @param  {Time} after\n\t\t\t *  @returns {Tone.Envelope} this\n\t\t\t */\n\t\t    Tone.Envelope.prototype.cancel = function (after) {\n\t\t        this._sig.cancelScheduledValues(after);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Borrows the connect method from Tone.Signal. \n\t\t\t *  @function\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Envelope.prototype.connect = Tone.Signal.prototype.connect;\n\t\t    /**\n\t\t \t *  Generate some complex envelope curves. \n\t\t \t */\n\t\t    (function _createCurves() {\n\t\t        var curveLen = 128;\n\t\t        var i, k;\n\t\t        //cosine curve\n\t\t        var cosineCurve = [];\n\t\t        for (i = 0; i < curveLen; i++) {\n\t\t            cosineCurve[i] = Math.sin(i / (curveLen - 1) * (Math.PI / 2));\n\t\t        }\n\t\t        //ripple curve\n\t\t        var rippleCurve = [];\n\t\t        var rippleCurveFreq = 6.4;\n\t\t        for (i = 0; i < curveLen - 1; i++) {\n\t\t            k = i / (curveLen - 1);\n\t\t            var sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n\t\t            rippleCurve[i] = sineWave / 10 + k * 0.83;\n\t\t        }\n\t\t        rippleCurve[curveLen - 1] = 1;\n\t\t        //stairs curve\n\t\t        var stairsCurve = [];\n\t\t        var steps = 5;\n\t\t        for (i = 0; i < curveLen; i++) {\n\t\t            stairsCurve[i] = Math.ceil(i / (curveLen - 1) * steps) / steps;\n\t\t        }\n\t\t        //in-out easing curve\n\t\t        var sineCurve = [];\n\t\t        for (i = 0; i < curveLen; i++) {\n\t\t            k = i / (curveLen - 1);\n\t\t            sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n\t\t        }\n\t\t        //a bounce curve\n\t\t        var bounceCurve = [];\n\t\t        for (i = 0; i < curveLen; i++) {\n\t\t            k = i / (curveLen - 1);\n\t\t            var freq = Math.pow(k, 3) * 4 + 0.2;\n\t\t            var val = Math.cos(freq * Math.PI * 2 * k);\n\t\t            bounceCurve[i] = Math.abs(val * (1 - k));\n\t\t        }\n\t\t        /**\n\t\t\t\t *  Invert a value curve to make it work for the release\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        function invertCurve(curve) {\n\t\t            var out = new Array(curve.length);\n\t\t            for (var j = 0; j < curve.length; j++) {\n\t\t                out[j] = 1 - curve[j];\n\t\t            }\n\t\t            return out;\n\t\t        }\n\t\t        /**\n\t\t\t\t *  reverse the curve\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        function reverseCurve(curve) {\n\t\t            return curve.slice(0).reverse();\n\t\t        }\n\t\t        /**\n\t\t\t\t *  attack and release curve arrays\n\t\t\t\t *  @type  {Object}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        Tone.Envelope.Type = {\n\t\t            'linear': 'linear',\n\t\t            'exponential': 'exponential',\n\t\t            'bounce': {\n\t\t                In: invertCurve(bounceCurve),\n\t\t                Out: bounceCurve\n\t\t            },\n\t\t            'cosine': {\n\t\t                In: cosineCurve,\n\t\t                Out: reverseCurve(cosineCurve)\n\t\t            },\n\t\t            'step': {\n\t\t                In: stairsCurve,\n\t\t                Out: invertCurve(stairsCurve)\n\t\t            },\n\t\t            'ripple': {\n\t\t                In: rippleCurve,\n\t\t                Out: invertCurve(rippleCurve)\n\t\t            },\n\t\t            'sine': {\n\t\t                In: sineCurve,\n\t\t                Out: invertCurve(sineCurve)\n\t\t            }\n\t\t        };\n\t\t    }());\n\t\t    /**\n\t\t\t *  Disconnect and dispose.\n\t\t\t *  @returns {Tone.Envelope} this\n\t\t\t */\n\t\t    Tone.Envelope.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._sig.dispose();\n\t\t        this._sig = null;\n\t\t        this._attackCurve = null;\n\t\t        this._releaseCurve = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Envelope;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.AmplitudeEnvelope is a Tone.Envelope connected to a gain node. \n\t\t\t *          Unlike Tone.Envelope, which outputs the envelope's value, Tone.AmplitudeEnvelope accepts\n\t\t\t *          an audio signal as the input and will apply the envelope to the amplitude\n\t\t\t *          of the signal. Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Envelope}\n\t\t\t *  @param {Time|Object} [attack] The amount of time it takes for the envelope to go from \n\t\t\t *                               0 to it's maximum value. \n\t\t\t *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n\t\t\t *                       \tto fall to the sustain value. \n\t\t\t *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n\t\t\t *                                \tthe release is triggered. \n\t\t\t *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0. \n\t\t\t *  @example\n\t\t\t * var ampEnv = new Tone.AmplitudeEnvelope({\n\t\t\t * \t\"attack\": 0.1,\n\t\t\t * \t\"decay\": 0.2,\n\t\t\t * \t\"sustain\": 1.0,\n\t\t\t * \t\"release\": 0.8\n\t\t\t * }).toMaster();\n\t\t\t * //create an oscillator and connect it\n\t\t\t * var osc = new Tone.Oscillator().connect(ampEnv).start();\n\t\t\t * //trigger the envelopes attack and release \"8t\" apart\n\t\t\t * ampEnv.triggerAttackRelease(\"8t\");\n\t\t\t */\n\t\t    Tone.AmplitudeEnvelope = function () {\n\t\t        Tone.Envelope.apply(this, arguments);\n\t\t        /**\n\t\t\t\t *  the input node\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.input = this.output = new Tone.Gain();\n\t\t        this._sig.connect(this.output.gain);\n\t\t    };\n\t\t    Tone.extend(Tone.AmplitudeEnvelope, Tone.Envelope);\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.AmplitudeEnvelope}  this\n\t\t\t */\n\t\t    Tone.AmplitudeEnvelope.prototype.dispose = function () {\n\t\t        this.input.dispose();\n\t\t        this.input = null;\n\t\t        Tone.Envelope.prototype.dispose.call(this);\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.AmplitudeEnvelope;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Wrapper around the native Web Audio's \n\t\t\t *          [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).\n\t\t\t *          Extracts FFT or Waveform data from the incoming signal.\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {String=} type The return type of the analysis, either \"fft\", or \"waveform\". \n\t\t\t *  @param {Number=} size The size of the FFT. Value must be a power of \n\t\t\t *                       two in the range 32 to 32768.\n\t\t\t */\n\t\t    Tone.Analyser = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'type',\n\t\t            'size'\n\t\t        ], Tone.Analyser.defaults);\n\t\t        /**\n\t\t\t\t *  The analyser node.\n\t\t\t\t *  @private\n\t\t\t\t *  @type {AnalyserNode}\n\t\t\t\t */\n\t\t        this._analyser = this.input = this.output = this.context.createAnalyser();\n\t\t        /**\n\t\t\t\t *  The analysis type\n\t\t\t\t *  @type {String}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._type = options.type;\n\t\t        /**\n\t\t\t\t *  The return type of the analysis\n\t\t\t\t *  @type {String}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._returnType = options.returnType;\n\t\t        /**\n\t\t\t\t *  The buffer that the FFT data is written to\n\t\t\t\t *  @type {TypedArray}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._buffer = null;\n\t\t        //set the values initially\n\t\t        this.size = options.size;\n\t\t        this.type = options.type;\n\t\t        this.returnType = options.returnType;\n\t\t        this.minDecibels = options.minDecibels;\n\t\t        this.maxDecibels = options.maxDecibels;\n\t\t    };\n\t\t    Tone.extend(Tone.Analyser);\n\t\t    /**\n\t\t\t *  The default values.\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Analyser.defaults = {\n\t\t        'size': 1024,\n\t\t        'returnType': 'byte',\n\t\t        'type': 'fft',\n\t\t        'smoothing': 0.8,\n\t\t        'maxDecibels': -30,\n\t\t        'minDecibels': -100\n\t\t    };\n\t\t    /**\n\t\t\t *  Possible return types of Tone.Analyser.analyse()\n\t\t\t *  @enum {String}\n\t\t\t */\n\t\t    Tone.Analyser.Type = {\n\t\t        Waveform: 'waveform',\n\t\t        FFT: 'fft'\n\t\t    };\n\t\t    /**\n\t\t\t *  Possible return types of Tone.Analyser.analyse(). \n\t\t\t *  byte values are between [0,255]. float values are between \n\t\t\t *  [-1, 1] when the type is set to \"waveform\" and between \n\t\t\t *  [minDecibels,maxDecibels] when the type is \"fft\".\n\t\t\t *  @enum {String}\n\t\t\t */\n\t\t    Tone.Analyser.ReturnType = {\n\t\t        Byte: 'byte',\n\t\t        Float: 'float'\n\t\t    };\n\t\t    /**\n\t\t\t *  Run the analysis given the current settings and return the \n\t\t\t *  result as a TypedArray. \n\t\t\t *  @returns {TypedArray}\n\t\t\t */\n\t\t    Tone.Analyser.prototype.analyse = function () {\n\t\t        if (this._type === Tone.Analyser.Type.FFT) {\n\t\t            if (this._returnType === Tone.Analyser.ReturnType.Byte) {\n\t\t                this._analyser.getByteFrequencyData(this._buffer);\n\t\t            } else {\n\t\t                this._analyser.getFloatFrequencyData(this._buffer);\n\t\t            }\n\t\t        } else if (this._type === Tone.Analyser.Type.Waveform) {\n\t\t            if (this._returnType === Tone.Analyser.ReturnType.Byte) {\n\t\t                this._analyser.getByteTimeDomainData(this._buffer);\n\t\t            } else {\n\t\t                if (this.isFunction(AnalyserNode.prototype.getFloatTimeDomainData)) {\n\t\t                    this._analyser.getFloatTimeDomainData(this._buffer);\n\t\t                } else {\n\t\t                    var uint8 = new Uint8Array(this._buffer.length);\n\t\t                    this._analyser.getByteTimeDomainData(uint8);\n\t\t                    //referenced https://github.com/mohayonao/get-float-time-domain-data \n\t\t                    // POLYFILL\n\t\t                    for (var i = 0; i < uint8.length; i++) {\n\t\t                        this._buffer[i] = (uint8[i] - 128) * 0.0078125;\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this._buffer;\n\t\t    };\n\t\t    /**\n\t\t\t *  The size of analysis. This must be a power of two in the range 32 to 32768.\n\t\t\t *  @memberOf Tone.Analyser#\n\t\t\t *  @type {Number}\n\t\t\t *  @name size\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Analyser.prototype, 'size', {\n\t\t        get: function () {\n\t\t            return this._analyser.frequencyBinCount;\n\t\t        },\n\t\t        set: function (size) {\n\t\t            this._analyser.fftSize = size * 2;\n\t\t            this.type = this._type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The return type of Tone.Analyser.analyse(), either \"byte\" or \"float\". \n\t\t\t *  When the type is set to \"byte\" the range of values returned in the array\n\t\t\t *  are between 0-255. \"float\" values are between \n\t\t\t *  [-1, 1] when the type is set to \"waveform\" and between \n\t\t\t *  [minDecibels,maxDecibels] when the type is \"fft\".\n\t\t\t *  @memberOf Tone.Analyser#\n\t\t\t *  @type {String}\n\t\t\t *  @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Analyser.prototype, 'returnType', {\n\t\t        get: function () {\n\t\t            return this._returnType;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            if (type === Tone.Analyser.ReturnType.Byte) {\n\t\t                this._buffer = new Uint8Array(this._analyser.frequencyBinCount);\n\t\t            } else if (type === Tone.Analyser.ReturnType.Float) {\n\t\t                this._buffer = new Float32Array(this._analyser.frequencyBinCount);\n\t\t            } else {\n\t\t                throw new TypeError('Tone.Analayser: invalid return type: ' + type);\n\t\t            }\n\t\t            this._returnType = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The analysis function returned by Tone.Analyser.analyse(), either \"fft\" or \"waveform\". \n\t\t\t *  @memberOf Tone.Analyser#\n\t\t\t *  @type {String}\n\t\t\t *  @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Analyser.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            if (type !== Tone.Analyser.Type.Waveform && type !== Tone.Analyser.Type.FFT) {\n\t\t                throw new TypeError('Tone.Analyser: invalid type: ' + type);\n\t\t            }\n\t\t            this._type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  0 represents no time averaging with the last analysis frame.\n\t\t\t *  @memberOf Tone.Analyser#\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @name smoothing\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Analyser.prototype, 'smoothing', {\n\t\t        get: function () {\n\t\t            return this._analyser.smoothingTimeConstant;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            this._analyser.smoothingTimeConstant = val;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The smallest decibel value which is analysed by the FFT. \n\t\t\t *  @memberOf Tone.Analyser#\n\t\t\t *  @type {Decibels}\n\t\t\t *  @name minDecibels\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Analyser.prototype, 'minDecibels', {\n\t\t        get: function () {\n\t\t            return this._analyser.minDecibels;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            this._analyser.minDecibels = val;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The largest decibel value which is analysed by the FFT. \n\t\t\t *  @memberOf Tone.Analyser#\n\t\t\t *  @type {Decibels}\n\t\t\t *  @name maxDecibels\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Analyser.prototype, 'maxDecibels', {\n\t\t        get: function () {\n\t\t            return this._analyser.maxDecibels;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            this._analyser.maxDecibels = val;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.Analyser}  this\n\t\t\t */\n\t\t    Tone.Analyser.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._analyser.disconnect();\n\t\t        this._analyser = null;\n\t\t        this._buffer = null;\n\t\t    };\n\t\t    return Tone.Analyser;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Compressor is a thin wrapper around the Web Audio \n\t\t\t *         [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).\n\t\t\t *         Compression reduces the volume of loud sounds or amplifies quiet sounds \n\t\t\t *         by narrowing or \"compressing\" an audio signal's dynamic range. \n\t\t\t *         Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {Decibels|Object} [threshold] The value above which the compression starts to be applied.\n\t\t\t *  @param {Positive} [ratio] The gain reduction ratio.\n\t\t\t *  @example\n\t\t\t * var comp = new Tone.Compressor(-30, 3);\n\t\t\t */\n\t\t    Tone.Compressor = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'threshold',\n\t\t            'ratio'\n\t\t        ], Tone.Compressor.defaults);\n\t\t        /**\n\t\t\t\t *  the compressor node\n\t\t\t\t *  @type {DynamicsCompressorNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._compressor = this.input = this.output = this.context.createDynamicsCompressor();\n\t\t        /**\n\t\t\t\t *  the threshold vaue\n\t\t\t\t *  @type {Decibels}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.threshold = this._compressor.threshold;\n\t\t        /**\n\t\t\t\t *  The attack parameter\n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.attack = new Tone.Param(this._compressor.attack, Tone.Type.Time);\n\t\t        /**\n\t\t\t\t *  The release parameter\n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.release = new Tone.Param(this._compressor.release, Tone.Type.Time);\n\t\t        /**\n\t\t\t\t *  The knee parameter\n\t\t\t\t *  @type {Decibels}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.knee = this._compressor.knee;\n\t\t        /**\n\t\t\t\t *  The ratio value\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.ratio = this._compressor.ratio;\n\t\t        //set the defaults\n\t\t        this._readOnly([\n\t\t            'knee',\n\t\t            'release',\n\t\t            'attack',\n\t\t            'ratio',\n\t\t            'threshold'\n\t\t        ]);\n\t\t        this.set(options);\n\t\t    };\n\t\t    Tone.extend(Tone.Compressor);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Compressor.defaults = {\n\t\t        'ratio': 12,\n\t\t        'threshold': -24,\n\t\t        'release': 0.25,\n\t\t        'attack': 0.003,\n\t\t        'knee': 30\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Compressor} this\n\t\t\t */\n\t\t    Tone.Compressor.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'knee',\n\t\t            'release',\n\t\t            'attack',\n\t\t            'ratio',\n\t\t            'threshold'\n\t\t        ]);\n\t\t        this._compressor.disconnect();\n\t\t        this._compressor = null;\n\t\t        this.attack.dispose();\n\t\t        this.attack = null;\n\t\t        this.release.dispose();\n\t\t        this.release = null;\n\t\t        this.threshold = null;\n\t\t        this.ratio = null;\n\t\t        this.knee = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Compressor;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Add a signal and a number or two signals. When no value is\n\t\t\t *         passed into the constructor, Tone.Add will sum <code>input[0]</code>\n\t\t\t *         and <code>input[1]</code>. If a value is passed into the constructor, \n\t\t\t *         the it will be added to the input.\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Signal}\n\t\t\t *  @param {number=} value If no value is provided, Tone.Add will sum the first\n\t\t\t *                         and second inputs. \n\t\t\t *  @example\n\t\t\t * var signal = new Tone.Signal(2);\n\t\t\t * var add = new Tone.Add(2);\n\t\t\t * signal.connect(add);\n\t\t\t * //the output of add equals 4\n\t\t\t *  @example\n\t\t\t * //if constructed with no arguments\n\t\t\t * //it will add the first and second inputs\n\t\t\t * var add = new Tone.Add();\n\t\t\t * var sig0 = new Tone.Signal(3).connect(add, 0, 0);\n\t\t\t * var sig1 = new Tone.Signal(4).connect(add, 0, 1);\n\t\t\t * //the output of add equals 7. \n\t\t\t */\n\t\t    Tone.Add = function (value) {\n\t\t        this.createInsOuts(2, 0);\n\t\t        /**\n\t\t\t\t *  the summing node\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sum = this.input[0] = this.input[1] = this.output = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Signal}\n\t\t\t\t */\n\t\t        this._param = this.input[1] = new Tone.Signal(value);\n\t\t        this._param.connect(this._sum);\n\t\t    };\n\t\t    Tone.extend(Tone.Add, Tone.Signal);\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Add} this\n\t\t\t */\n\t\t    Tone.Add.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._sum.dispose();\n\t\t        this._sum = null;\n\t\t        this._param.dispose();\n\t\t        this._param = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Add;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Multiply two incoming signals. Or, if a number is given in the constructor, \n\t\t\t *          multiplies the incoming signal by that value. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Signal}\n\t\t\t *  @param {number=} value Constant value to multiple. If no value is provided,\n\t\t\t *                         it will return the product of the first and second inputs\n\t\t\t *  @example\n\t\t\t * var mult = new Tone.Multiply();\n\t\t\t * var sigA = new Tone.Signal(3);\n\t\t\t * var sigB = new Tone.Signal(4);\n\t\t\t * sigA.connect(mult, 0, 0);\n\t\t\t * sigB.connect(mult, 0, 1);\n\t\t\t * //output of mult is 12.\n\t\t\t *  @example\n\t\t\t * var mult = new Tone.Multiply(10);\n\t\t\t * var sig = new Tone.Signal(2).connect(mult);\n\t\t\t * //the output of mult is 20. \n\t\t\t */\n\t\t    Tone.Multiply = function (value) {\n\t\t        this.createInsOuts(2, 0);\n\t\t        /**\n\t\t\t\t *  the input node is the same as the output node\n\t\t\t\t *  it is also the GainNode which handles the scaling of incoming signal\n\t\t\t\t *  \n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._mult = this.input[0] = this.output = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  the scaling parameter\n\t\t\t\t *  @type {AudioParam}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._param = this.input[1] = this.output.gain;\n\t\t        this._param.value = this.defaultArg(value, 0);\n\t\t    };\n\t\t    Tone.extend(Tone.Multiply, Tone.Signal);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Multiply} this\n\t\t\t */\n\t\t    Tone.Multiply.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._mult.dispose();\n\t\t        this._mult = null;\n\t\t        this._param = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Multiply;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Negate the incoming signal. i.e. an input signal of 10 will output -10\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @example\n\t\t\t * var neg = new Tone.Negate();\n\t\t\t * var sig = new Tone.Signal(-2).connect(neg);\n\t\t\t * //output of neg is positive 2. \n\t\t\t */\n\t\t    Tone.Negate = function () {\n\t\t        /**\n\t\t\t\t *  negation is done by multiplying by -1\n\t\t\t\t *  @type {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._multiply = this.input = this.output = new Tone.Multiply(-1);\n\t\t    };\n\t\t    Tone.extend(Tone.Negate, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Negate} this\n\t\t\t */\n\t\t    Tone.Negate.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._multiply.dispose();\n\t\t        this._multiply = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Negate;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Subtract the signal connected to <code>input[1]</code> from the signal connected \n\t\t\t *         to <code>input[0]</code>. If an argument is provided in the constructor, the \n\t\t\t *         signals <code>.value</code> will be subtracted from the incoming signal.\n\t\t\t *\n\t\t\t *  @extends {Tone.Signal}\n\t\t\t *  @constructor\n\t\t\t *  @param {number=} value The value to subtract from the incoming signal. If the value\n\t\t\t *                         is omitted, it will subtract the second signal from the first.\n\t\t\t *  @example\n\t\t\t * var sub = new Tone.Subtract(1);\n\t\t\t * var sig = new Tone.Signal(4).connect(sub);\n\t\t\t * //the output of sub is 3. \n\t\t\t *  @example\n\t\t\t * var sub = new Tone.Subtract();\n\t\t\t * var sigA = new Tone.Signal(10);\n\t\t\t * var sigB = new Tone.Signal(2.5);\n\t\t\t * sigA.connect(sub, 0, 0);\n\t\t\t * sigB.connect(sub, 0, 1);\n\t\t\t * //output of sub is 7.5\n\t\t\t */\n\t\t    Tone.Subtract = function (value) {\n\t\t        this.createInsOuts(2, 0);\n\t\t        /**\n\t\t\t\t *  the summing node\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sum = this.input[0] = this.output = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  negate the input of the second input before connecting it\n\t\t\t\t *  to the summing node.\n\t\t\t\t *  @type {Tone.Negate}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._neg = new Tone.Negate();\n\t\t        /**\n\t\t\t\t *  the node where the value is set\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Signal}\n\t\t\t\t */\n\t\t        this._param = this.input[1] = new Tone.Signal(value);\n\t\t        this._param.chain(this._neg, this._sum);\n\t\t    };\n\t\t    Tone.extend(Tone.Subtract, Tone.Signal);\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.SignalBase} this\n\t\t\t */\n\t\t    Tone.Subtract.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._neg.dispose();\n\t\t        this._neg = null;\n\t\t        this._sum.disconnect();\n\t\t        this._sum = null;\n\t\t        this._param.dispose();\n\t\t        this._param = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Subtract;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  GreaterThanZero outputs 1 when the input is strictly greater than zero\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @example\n\t\t\t * var gt0 = new Tone.GreaterThanZero();\n\t\t\t * var sig = new Tone.Signal(0.01).connect(gt0);\n\t\t\t * //the output of gt0 is 1. \n\t\t\t * sig.value = 0;\n\t\t\t * //the output of gt0 is 0. \n\t\t\t */\n\t\t    Tone.GreaterThanZero = function () {\n\t\t        /**\n\t\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._thresh = this.output = new Tone.WaveShaper(function (val) {\n\t\t            if (val <= 0) {\n\t\t                return 0;\n\t\t            } else {\n\t\t                return 1;\n\t\t            }\n\t\t        }, 127);\n\t\t        /**\n\t\t\t\t *  scale the first thresholded signal by a large value.\n\t\t\t\t *  this will help with values which are very close to 0\n\t\t\t\t *  @type {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scale = this.input = new Tone.Multiply(10000);\n\t\t        //connections\n\t\t        this._scale.connect(this._thresh);\n\t\t    };\n\t\t    Tone.extend(Tone.GreaterThanZero, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  dispose method\n\t\t\t *  @returns {Tone.GreaterThanZero} this\n\t\t\t */\n\t\t    Tone.GreaterThanZero.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._scale.dispose();\n\t\t        this._scale = null;\n\t\t        this._thresh.dispose();\n\t\t        this._thresh = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.GreaterThanZero;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Output 1 if the signal is greater than the value, otherwise outputs 0.\n\t\t\t *          can compare two signals or a signal and a number. \n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Signal}\n\t\t\t *  @param {number} [value=0] the value to compare to the incoming signal\n\t\t\t *  @example\n\t\t\t * var gt = new Tone.GreaterThan(2);\n\t\t\t * var sig = new Tone.Signal(4).connect(gt);\n\t\t\t * //output of gt is equal 1. \n\t\t\t */\n\t\t    Tone.GreaterThan = function (value) {\n\t\t        this.createInsOuts(2, 0);\n\t\t        /**\n\t\t\t\t *  subtract the amount from the incoming signal\n\t\t\t\t *  @type {Tone.Subtract}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._param = this.input[0] = new Tone.Subtract(value);\n\t\t        this.input[1] = this._param.input[1];\n\t\t        /**\n\t\t\t\t *  compare that amount to zero\n\t\t\t\t *  @type {Tone.GreaterThanZero}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._gtz = this.output = new Tone.GreaterThanZero();\n\t\t        //connect\n\t\t        this._param.connect(this._gtz);\n\t\t    };\n\t\t    Tone.extend(Tone.GreaterThan, Tone.Signal);\n\t\t    /**\n\t\t\t *  dispose method\n\t\t\t *  @returns {Tone.GreaterThan} this\n\t\t\t */\n\t\t    Tone.GreaterThan.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._param.dispose();\n\t\t        this._param = null;\n\t\t        this._gtz.dispose();\n\t\t        this._gtz = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.GreaterThan;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Return the absolute value of an incoming signal. \n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @example\n\t\t\t * var signal = new Tone.Signal(-1);\n\t\t\t * var abs = new Tone.Abs();\n\t\t\t * signal.connect(abs);\n\t\t\t * //the output of abs is 1. \n\t\t\t */\n\t\t    Tone.Abs = function () {\n\t\t        /**\n\t\t\t\t *  @type {Tone.LessThan}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._abs = this.input = this.output = new Tone.WaveShaper(function (val) {\n\t\t            if (val === 0) {\n\t\t                return 0;\n\t\t            } else {\n\t\t                return Math.abs(val);\n\t\t            }\n\t\t        }, 127);\n\t\t    };\n\t\t    Tone.extend(Tone.Abs, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  dispose method\n\t\t\t *  @returns {Tone.Abs} this\n\t\t\t */\n\t\t    Tone.Abs.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._abs.dispose();\n\t\t        this._abs = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Abs;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Signal-rate modulo operator. Only works in AudioRange [-1, 1] and for modulus\n\t\t\t *         values in the NormalRange. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @param {NormalRange} modulus The modulus to apply.\n\t\t\t *  @example\n\t\t\t * var mod = new Tone.Modulo(0.2)\n\t\t\t * var sig = new Tone.Signal(0.5).connect(mod);\n\t\t\t * //mod outputs 0.1\n\t\t\t */\n\t\t    Tone.Modulo = function (modulus) {\n\t\t        this.createInsOuts(1, 0);\n\t\t        /**\n\t\t\t\t *  A waveshaper gets the integer multiple of \n\t\t\t\t *  the input signal and the modulus.\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t\t */\n\t\t        this._shaper = new Tone.WaveShaper(Math.pow(2, 16));\n\t\t        /**\n\t\t\t\t *  the integer multiple is multiplied by the modulus\n\t\t\t\t *  @type  {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._multiply = new Tone.Multiply();\n\t\t        /**\n\t\t\t\t *  and subtracted from the input signal\n\t\t\t\t *  @type  {Tone.Subtract}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._subtract = this.output = new Tone.Subtract();\n\t\t        /**\n\t\t\t\t *  the modulus signal\n\t\t\t\t *  @type  {Tone.Signal}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modSignal = new Tone.Signal(modulus);\n\t\t        //connections\n\t\t        this.input.fan(this._shaper, this._subtract);\n\t\t        this._modSignal.connect(this._multiply, 0, 0);\n\t\t        this._shaper.connect(this._multiply, 0, 1);\n\t\t        this._multiply.connect(this._subtract, 0, 1);\n\t\t        this._setWaveShaper(modulus);\n\t\t    };\n\t\t    Tone.extend(Tone.Modulo, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  @param  {number}  mod  the modulus to apply\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Modulo.prototype._setWaveShaper = function (mod) {\n\t\t        this._shaper.setMap(function (val) {\n\t\t            var multiple = Math.floor((val + 0.0001) / mod);\n\t\t            return multiple;\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t\t * The modulus value.\n\t\t\t * @memberOf Tone.Modulo#\n\t\t\t * @type {NormalRange}\n\t\t\t * @name value\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Modulo.prototype, 'value', {\n\t\t        get: function () {\n\t\t            return this._modSignal.value;\n\t\t        },\n\t\t        set: function (mod) {\n\t\t            this._modSignal.value = mod;\n\t\t            this._setWaveShaper(mod);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * clean up\n\t\t\t *  @returns {Tone.Modulo} this\n\t\t\t */\n\t\t    Tone.Modulo.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._shaper.dispose();\n\t\t        this._shaper = null;\n\t\t        this._multiply.dispose();\n\t\t        this._multiply = null;\n\t\t        this._subtract.dispose();\n\t\t        this._subtract = null;\n\t\t        this._modSignal.dispose();\n\t\t        this._modSignal = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Modulo;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1]. \n\t\t\t *         See Tone.GainToAudio.\n\t\t\t *\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @constructor\n\t\t\t *  @example\n\t\t\t *  var a2g = new Tone.AudioToGain();\n\t\t\t */\n\t\t    Tone.AudioToGain = function () {\n\t\t        /**\n\t\t\t\t *  @type {WaveShaperNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._norm = this.input = this.output = new Tone.WaveShaper(function (x) {\n\t\t            return (x + 1) / 2;\n\t\t        });\n\t\t    };\n\t\t    Tone.extend(Tone.AudioToGain, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.AudioToGain} this\n\t\t\t */\n\t\t    Tone.AudioToGain.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._norm.dispose();\n\t\t        this._norm = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.AudioToGain;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Evaluate an expression at audio rate. <br><br>\n\t\t\t *         Parsing code modified from https://code.google.com/p/tapdigit/\n\t\t\t *         Copyright 2011 2012 Ariya Hidayat, New BSD License\n\t\t\t *\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @constructor\n\t\t\t *  @param {string} expr the expression to generate\n\t\t\t *  @example\n\t\t\t * //adds the signals from input[0] and input[1].\n\t\t\t * var expr = new Tone.Expr(\"$0 + $1\");\n\t\t\t */\n\t\t    Tone.Expr = function () {\n\t\t        var expr = this._replacements(Array.prototype.slice.call(arguments));\n\t\t        var inputCount = this._parseInputs(expr);\n\t\t        /**\n\t\t\t\t *  hold onto all of the nodes for disposal\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._nodes = [];\n\t\t        /**\n\t\t\t\t *  The inputs. The length is determined by the expression. \n\t\t\t\t *  @type {Array}\n\t\t\t\t */\n\t\t        this.input = new Array(inputCount);\n\t\t        //create a gain for each input\n\t\t        for (var i = 0; i < inputCount; i++) {\n\t\t            this.input[i] = this.context.createGain();\n\t\t        }\n\t\t        //parse the syntax tree\n\t\t        var tree = this._parseTree(expr);\n\t\t        //evaluate the results\n\t\t        var result;\n\t\t        try {\n\t\t            result = this._eval(tree);\n\t\t        } catch (e) {\n\t\t            this._disposeNodes();\n\t\t            throw new Error('Tone.Expr: Could evaluate expression: ' + expr);\n\t\t        }\n\t\t        /**\n\t\t\t\t *  The output node is the result of the expression\n\t\t\t\t *  @type {Tone}\n\t\t\t\t */\n\t\t        this.output = result;\n\t\t    };\n\t\t    Tone.extend(Tone.Expr, Tone.SignalBase);\n\t\t    //some helpers to cut down the amount of code\n\t\t    function applyBinary(Constructor, args, self) {\n\t\t        var op = new Constructor();\n\t\t        self._eval(args[0]).connect(op, 0, 0);\n\t\t        self._eval(args[1]).connect(op, 0, 1);\n\t\t        return op;\n\t\t    }\n\t\t    function applyUnary(Constructor, args, self) {\n\t\t        var op = new Constructor();\n\t\t        self._eval(args[0]).connect(op, 0, 0);\n\t\t        return op;\n\t\t    }\n\t\t    function getNumber(arg) {\n\t\t        return arg ? parseFloat(arg) : undefined;\n\t\t    }\n\t\t    function literalNumber(arg) {\n\t\t        return arg && arg.args ? parseFloat(arg.args) : undefined;\n\t\t    }\n\t\t    /*\n\t\t\t *  the Expressions that Tone.Expr can parse.\n\t\t\t *\n\t\t\t *  each expression belongs to a group and contains a regexp \n\t\t\t *  for selecting the operator as well as that operators method\n\t\t\t *  \n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Expr._Expressions = {\n\t\t        //values\n\t\t        'value': {\n\t\t            'signal': {\n\t\t                regexp: /^\\d+\\.\\d+|^\\d+/,\n\t\t                method: function (arg) {\n\t\t                    var sig = new Tone.Signal(getNumber(arg));\n\t\t                    return sig;\n\t\t                }\n\t\t            },\n\t\t            'input': {\n\t\t                regexp: /^\\$\\d/,\n\t\t                method: function (arg, self) {\n\t\t                    return self.input[getNumber(arg.substr(1))];\n\t\t                }\n\t\t            }\n\t\t        },\n\t\t        //syntactic glue\n\t\t        'glue': {\n\t\t            '(': { regexp: /^\\(/ },\n\t\t            ')': { regexp: /^\\)/ },\n\t\t            ',': { regexp: /^,/ }\n\t\t        },\n\t\t        //functions\n\t\t        'func': {\n\t\t            'abs': {\n\t\t                regexp: /^abs/,\n\t\t                method: applyUnary.bind(this, Tone.Abs)\n\t\t            },\n\t\t            'mod': {\n\t\t                regexp: /^mod/,\n\t\t                method: function (args, self) {\n\t\t                    var modulus = literalNumber(args[1]);\n\t\t                    var op = new Tone.Modulo(modulus);\n\t\t                    self._eval(args[0]).connect(op);\n\t\t                    return op;\n\t\t                }\n\t\t            },\n\t\t            'pow': {\n\t\t                regexp: /^pow/,\n\t\t                method: function (args, self) {\n\t\t                    var exp = literalNumber(args[1]);\n\t\t                    var op = new Tone.Pow(exp);\n\t\t                    self._eval(args[0]).connect(op);\n\t\t                    return op;\n\t\t                }\n\t\t            },\n\t\t            'a2g': {\n\t\t                regexp: /^a2g/,\n\t\t                method: function (args, self) {\n\t\t                    var op = new Tone.AudioToGain();\n\t\t                    self._eval(args[0]).connect(op);\n\t\t                    return op;\n\t\t                }\n\t\t            }\n\t\t        },\n\t\t        //binary expressions\n\t\t        'binary': {\n\t\t            '+': {\n\t\t                regexp: /^\\+/,\n\t\t                precedence: 1,\n\t\t                method: applyBinary.bind(this, Tone.Add)\n\t\t            },\n\t\t            '-': {\n\t\t                regexp: /^\\-/,\n\t\t                precedence: 1,\n\t\t                method: function (args, self) {\n\t\t                    //both unary and binary op\n\t\t                    if (args.length === 1) {\n\t\t                        return applyUnary(Tone.Negate, args, self);\n\t\t                    } else {\n\t\t                        return applyBinary(Tone.Subtract, args, self);\n\t\t                    }\n\t\t                }\n\t\t            },\n\t\t            '*': {\n\t\t                regexp: /^\\*/,\n\t\t                precedence: 0,\n\t\t                method: applyBinary.bind(this, Tone.Multiply)\n\t\t            }\n\t\t        },\n\t\t        //unary expressions\n\t\t        'unary': {\n\t\t            '-': {\n\t\t                regexp: /^\\-/,\n\t\t                method: applyUnary.bind(this, Tone.Negate)\n\t\t            },\n\t\t            '!': {\n\t\t                regexp: /^\\!/,\n\t\t                method: applyUnary.bind(this, Tone.NOT)\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  @param   {string} expr the expression string\n\t\t\t *  @return  {number}      the input count\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Expr.prototype._parseInputs = function (expr) {\n\t\t        var inputArray = expr.match(/\\$\\d/g);\n\t\t        var inputMax = 0;\n\t\t        if (inputArray !== null) {\n\t\t            for (var i = 0; i < inputArray.length; i++) {\n\t\t                var inputNum = parseInt(inputArray[i].substr(1)) + 1;\n\t\t                inputMax = Math.max(inputMax, inputNum);\n\t\t            }\n\t\t        }\n\t\t        return inputMax;\n\t\t    };\n\t\t    /**\n\t\t\t *  @param   {Array} args \tan array of arguments\n\t\t\t *  @return  {string} the results of the replacements being replaced\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Expr.prototype._replacements = function (args) {\n\t\t        var expr = args.shift();\n\t\t        for (var i = 0; i < args.length; i++) {\n\t\t            expr = expr.replace(/\\%/i, args[i]);\n\t\t        }\n\t\t        return expr;\n\t\t    };\n\t\t    /**\n\t\t\t *  tokenize the expression based on the Expressions object\n\t\t\t *  @param   {string} expr \n\t\t\t *  @return  {Object}      returns two methods on the tokenized list, next and peek\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Expr.prototype._tokenize = function (expr) {\n\t\t        var position = -1;\n\t\t        var tokens = [];\n\t\t        while (expr.length > 0) {\n\t\t            expr = expr.trim();\n\t\t            var token = getNextToken(expr);\n\t\t            tokens.push(token);\n\t\t            expr = expr.substr(token.value.length);\n\t\t        }\n\t\t        function getNextToken(expr) {\n\t\t            for (var type in Tone.Expr._Expressions) {\n\t\t                var group = Tone.Expr._Expressions[type];\n\t\t                for (var opName in group) {\n\t\t                    var op = group[opName];\n\t\t                    var reg = op.regexp;\n\t\t                    var match = expr.match(reg);\n\t\t                    if (match !== null) {\n\t\t                        return {\n\t\t                            type: type,\n\t\t                            value: match[0],\n\t\t                            method: op.method\n\t\t                        };\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            throw new SyntaxError('Tone.Expr: Unexpected token ' + expr);\n\t\t        }\n\t\t        return {\n\t\t            next: function () {\n\t\t                return tokens[++position];\n\t\t            },\n\t\t            peek: function () {\n\t\t                return tokens[position + 1];\n\t\t            }\n\t\t        };\n\t\t    };\n\t\t    /**\n\t\t\t *  recursively parse the string expression into a syntax tree\n\t\t\t *  \n\t\t\t *  @param   {string} expr \n\t\t\t *  @return  {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Expr.prototype._parseTree = function (expr) {\n\t\t        var lexer = this._tokenize(expr);\n\t\t        var isUndef = this.isUndef.bind(this);\n\t\t        function matchSyntax(token, syn) {\n\t\t            return !isUndef(token) && token.type === 'glue' && token.value === syn;\n\t\t        }\n\t\t        function matchGroup(token, groupName, prec) {\n\t\t            var ret = false;\n\t\t            var group = Tone.Expr._Expressions[groupName];\n\t\t            if (!isUndef(token)) {\n\t\t                for (var opName in group) {\n\t\t                    var op = group[opName];\n\t\t                    if (op.regexp.test(token.value)) {\n\t\t                        if (!isUndef(prec)) {\n\t\t                            if (op.precedence === prec) {\n\t\t                                return true;\n\t\t                            }\n\t\t                        } else {\n\t\t                            return true;\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return ret;\n\t\t        }\n\t\t        function parseExpression(precedence) {\n\t\t            if (isUndef(precedence)) {\n\t\t                precedence = 5;\n\t\t            }\n\t\t            var expr;\n\t\t            if (precedence < 0) {\n\t\t                expr = parseUnary();\n\t\t            } else {\n\t\t                expr = parseExpression(precedence - 1);\n\t\t            }\n\t\t            var token = lexer.peek();\n\t\t            while (matchGroup(token, 'binary', precedence)) {\n\t\t                token = lexer.next();\n\t\t                expr = {\n\t\t                    operator: token.value,\n\t\t                    method: token.method,\n\t\t                    args: [\n\t\t                        expr,\n\t\t                        parseExpression(precedence - 1)\n\t\t                    ]\n\t\t                };\n\t\t                token = lexer.peek();\n\t\t            }\n\t\t            return expr;\n\t\t        }\n\t\t        function parseUnary() {\n\t\t            var token, expr;\n\t\t            token = lexer.peek();\n\t\t            if (matchGroup(token, 'unary')) {\n\t\t                token = lexer.next();\n\t\t                expr = parseUnary();\n\t\t                return {\n\t\t                    operator: token.value,\n\t\t                    method: token.method,\n\t\t                    args: [expr]\n\t\t                };\n\t\t            }\n\t\t            return parsePrimary();\n\t\t        }\n\t\t        function parsePrimary() {\n\t\t            var token, expr;\n\t\t            token = lexer.peek();\n\t\t            if (isUndef(token)) {\n\t\t                throw new SyntaxError('Tone.Expr: Unexpected termination of expression');\n\t\t            }\n\t\t            if (token.type === 'func') {\n\t\t                token = lexer.next();\n\t\t                return parseFunctionCall(token);\n\t\t            }\n\t\t            if (token.type === 'value') {\n\t\t                token = lexer.next();\n\t\t                return {\n\t\t                    method: token.method,\n\t\t                    args: token.value\n\t\t                };\n\t\t            }\n\t\t            if (matchSyntax(token, '(')) {\n\t\t                lexer.next();\n\t\t                expr = parseExpression();\n\t\t                token = lexer.next();\n\t\t                if (!matchSyntax(token, ')')) {\n\t\t                    throw new SyntaxError('Expected )');\n\t\t                }\n\t\t                return expr;\n\t\t            }\n\t\t            throw new SyntaxError('Tone.Expr: Parse error, cannot process token ' + token.value);\n\t\t        }\n\t\t        function parseFunctionCall(func) {\n\t\t            var token, args = [];\n\t\t            token = lexer.next();\n\t\t            if (!matchSyntax(token, '(')) {\n\t\t                throw new SyntaxError('Tone.Expr: Expected ( in a function call \"' + func.value + '\"');\n\t\t            }\n\t\t            token = lexer.peek();\n\t\t            if (!matchSyntax(token, ')')) {\n\t\t                args = parseArgumentList();\n\t\t            }\n\t\t            token = lexer.next();\n\t\t            if (!matchSyntax(token, ')')) {\n\t\t                throw new SyntaxError('Tone.Expr: Expected ) in a function call \"' + func.value + '\"');\n\t\t            }\n\t\t            return {\n\t\t                method: func.method,\n\t\t                args: args,\n\t\t                name: name\n\t\t            };\n\t\t        }\n\t\t        function parseArgumentList() {\n\t\t            var token, expr, args = [];\n\t\t            while (true) {\n\t\t                expr = parseExpression();\n\t\t                if (isUndef(expr)) {\n\t\t                    // TODO maybe throw exception?\n\t\t                    break;\n\t\t                }\n\t\t                args.push(expr);\n\t\t                token = lexer.peek();\n\t\t                if (!matchSyntax(token, ',')) {\n\t\t                    break;\n\t\t                }\n\t\t                lexer.next();\n\t\t            }\n\t\t            return args;\n\t\t        }\n\t\t        return parseExpression();\n\t\t    };\n\t\t    /**\n\t\t\t *  recursively evaluate the expression tree\n\t\t\t *  @param   {Object} tree \n\t\t\t *  @return  {AudioNode}      the resulting audio node from the expression\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Expr.prototype._eval = function (tree) {\n\t\t        if (!this.isUndef(tree)) {\n\t\t            var node = tree.method(tree.args, this);\n\t\t            this._nodes.push(node);\n\t\t            return node;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  dispose all the nodes\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Expr.prototype._disposeNodes = function () {\n\t\t        for (var i = 0; i < this._nodes.length; i++) {\n\t\t            var node = this._nodes[i];\n\t\t            if (this.isFunction(node.dispose)) {\n\t\t                node.dispose();\n\t\t            } else if (this.isFunction(node.disconnect)) {\n\t\t                node.disconnect();\n\t\t            }\n\t\t            node = null;\n\t\t            this._nodes[i] = null;\n\t\t        }\n\t\t        this._nodes = null;\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t */\n\t\t    Tone.Expr.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._disposeNodes();\n\t\t    };\n\t\t    return Tone.Expr;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Convert an incoming signal between 0, 1 to an equal power gain scale.\n\t\t\t *\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @constructor\n\t\t\t *  @example\n\t\t\t * var eqPowGain = new Tone.EqualPowerGain();\n\t\t\t */\n\t\t    Tone.EqualPowerGain = function () {\n\t\t        /**\n\t\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._eqPower = this.input = this.output = new Tone.WaveShaper(function (val) {\n\t\t            if (Math.abs(val) < 0.001) {\n\t\t                //should output 0 when input is 0\n\t\t                return 0;\n\t\t            } else {\n\t\t                return this.equalPowerScale(val);\n\t\t            }\n\t\t        }.bind(this), 4096);\n\t\t    };\n\t\t    Tone.extend(Tone.EqualPowerGain, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.EqualPowerGain} this\n\t\t\t */\n\t\t    Tone.EqualPowerGain.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._eqPower.dispose();\n\t\t        this._eqPower = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.EqualPowerGain;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t * @class  Tone.Crossfade provides equal power fading between two inputs. \n\t\t\t *         More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n\t\t\t *\n\t\t\t * @constructor\n\t\t\t * @extends {Tone}\n\t\t\t * @param {NormalRange} [initialFade=0.5]\n\t\t\t * @example\n\t\t\t * var crossFade = new Tone.CrossFade(0.5);\n\t\t\t * //connect effect A to crossfade from\n\t\t\t * //effect output 0 to crossfade input 0\n\t\t\t * effectA.connect(crossFade, 0, 0);\n\t\t\t * //connect effect B to crossfade from\n\t\t\t * //effect output 0 to crossfade input 1\n\t\t\t * effectB.connect(crossFade, 0, 1);\n\t\t\t * crossFade.fade.value = 0;\n\t\t\t * // ^ only effectA is output\n\t\t\t * crossFade.fade.value = 1;\n\t\t\t * // ^ only effectB is output\n\t\t\t * crossFade.fade.value = 0.5;\n\t\t\t * // ^ the two signals are mixed equally. \n\t\t\t */\n\t\t    Tone.CrossFade = function (initialFade) {\n\t\t        this.createInsOuts(2, 1);\n\t\t        /**\n\t\t\t\t *  Alias for <code>input[0]</code>. \n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t */\n\t\t        this.a = this.input[0] = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  Alias for <code>input[1]</code>. \n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t */\n\t\t        this.b = this.input[1] = new Tone.Gain();\n\t\t        /**\n\t\t\t\t * \tThe mix between the two inputs. A fade value of 0\n\t\t\t\t * \twill output 100% <code>input[0]</code> and \n\t\t\t\t * \ta value of 1 will output 100% <code>input[1]</code>. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.fade = new Tone.Signal(this.defaultArg(initialFade, 0.5), Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  equal power gain cross fade\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.EqualPowerGain}\n\t\t\t\t */\n\t\t        this._equalPowerA = new Tone.EqualPowerGain();\n\t\t        /**\n\t\t\t\t *  equal power gain cross fade\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.EqualPowerGain}\n\t\t\t\t */\n\t\t        this._equalPowerB = new Tone.EqualPowerGain();\n\t\t        /**\n\t\t\t\t *  invert the incoming signal\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone}\n\t\t\t\t */\n\t\t        this._invert = new Tone.Expr('1 - $0');\n\t\t        //connections\n\t\t        this.a.connect(this.output);\n\t\t        this.b.connect(this.output);\n\t\t        this.fade.chain(this._equalPowerB, this.b.gain);\n\t\t        this.fade.chain(this._invert, this._equalPowerA, this.a.gain);\n\t\t        this._readOnly('fade');\n\t\t    };\n\t\t    Tone.extend(Tone.CrossFade);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.CrossFade} this\n\t\t\t */\n\t\t    Tone.CrossFade.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable('fade');\n\t\t        this._equalPowerA.dispose();\n\t\t        this._equalPowerA = null;\n\t\t        this._equalPowerB.dispose();\n\t\t        this._equalPowerB = null;\n\t\t        this.fade.dispose();\n\t\t        this.fade = null;\n\t\t        this._invert.dispose();\n\t\t        this._invert = null;\n\t\t        this.a.dispose();\n\t\t        this.a = null;\n\t\t        this.b.dispose();\n\t\t        this.b = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.CrossFade;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Filter is a filter which allows for all of the same native methods\n\t\t\t *          as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface). \n\t\t\t *          Tone.Filter has the added ability to set the filter rolloff at -12 \n\t\t\t *          (default), -24 and -48. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Frequency|Object} [frequency] The cutoff frequency of the filter.\n\t\t\t *  @param {string=} type The type of filter.\n\t\t\t *  @param {number=} rolloff The drop in decibels per octave after the cutoff frequency.\n\t\t\t *                            3 choices: -12, -24, and -48\n\t\t\t *  @example\n\t\t\t *  var filter = new Tone.Filter(200, \"highpass\");\n\t\t\t */\n\t\t    Tone.Filter = function () {\n\t\t        this.createInsOuts(1, 1);\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'type',\n\t\t            'rolloff'\n\t\t        ], Tone.Filter.defaults);\n\t\t        /**\n\t\t\t\t *  the filter(s)\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._filters = [];\n\t\t        /**\n\t\t\t\t *  The cutoff frequency of the filter. \n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The detune parameter\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = new Tone.Signal(0, Tone.Type.Cents);\n\t\t        /**\n\t\t\t\t *  The gain of the filter, only used in certain filter types\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.gain = new Tone.Signal({\n\t\t            'value': options.gain,\n\t\t            'convert': false\n\t\t        });\n\t\t        /**\n\t\t\t\t *  The Q or Quality of the filter\n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.Q = new Tone.Signal(options.Q);\n\t\t        /**\n\t\t\t\t *  the type of the filter\n\t\t\t\t *  @type {string}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._type = options.type;\n\t\t        /**\n\t\t\t\t *  the rolloff value of the filter\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._rolloff = options.rolloff;\n\t\t        //set the rolloff;\n\t\t        this.rolloff = options.rolloff;\n\t\t        this._readOnly([\n\t\t            'detune',\n\t\t            'frequency',\n\t\t            'gain',\n\t\t            'Q'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.Filter);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Filter.defaults = {\n\t\t        'type': 'lowpass',\n\t\t        'frequency': 350,\n\t\t        'rolloff': -12,\n\t\t        'Q': 1,\n\t\t        'gain': 0\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the filter. Types: \"lowpass\", \"highpass\", \n\t\t\t * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\". \n\t\t\t * @memberOf Tone.Filter#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Filter.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            var types = [\n\t\t                'lowpass',\n\t\t                'highpass',\n\t\t                'bandpass',\n\t\t                'lowshelf',\n\t\t                'highshelf',\n\t\t                'notch',\n\t\t                'allpass',\n\t\t                'peaking'\n\t\t            ];\n\t\t            if (types.indexOf(type) === -1) {\n\t\t                throw new TypeError('Tone.Filter: invalid type ' + type);\n\t\t            }\n\t\t            this._type = type;\n\t\t            for (var i = 0; i < this._filters.length; i++) {\n\t\t                this._filters[i].type = type;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The rolloff of the filter which is the drop in db\n\t\t\t * per octave. Implemented internally by cascading filters.\n\t\t\t * Only accepts the values -12, -24, -48 and -96.\n\t\t\t * @memberOf Tone.Filter#\n\t\t\t * @type {number}\n\t\t\t * @name rolloff\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Filter.prototype, 'rolloff', {\n\t\t        get: function () {\n\t\t            return this._rolloff;\n\t\t        },\n\t\t        set: function (rolloff) {\n\t\t            rolloff = parseInt(rolloff, 10);\n\t\t            var possibilities = [\n\t\t                -12,\n\t\t                -24,\n\t\t                -48,\n\t\t                -96\n\t\t            ];\n\t\t            var cascadingCount = possibilities.indexOf(rolloff);\n\t\t            //check the rolloff is valid\n\t\t            if (cascadingCount === -1) {\n\t\t                throw new RangeError('Tone.Filter: rolloff can only be -12, -24, -48 or -96');\n\t\t            }\n\t\t            cascadingCount += 1;\n\t\t            this._rolloff = rolloff;\n\t\t            //first disconnect the filters and throw them away\n\t\t            this.input.disconnect();\n\t\t            for (var i = 0; i < this._filters.length; i++) {\n\t\t                this._filters[i].disconnect();\n\t\t                this._filters[i] = null;\n\t\t            }\n\t\t            this._filters = new Array(cascadingCount);\n\t\t            for (var count = 0; count < cascadingCount; count++) {\n\t\t                var filter = this.context.createBiquadFilter();\n\t\t                filter.type = this._type;\n\t\t                this.frequency.connect(filter.frequency);\n\t\t                this.detune.connect(filter.detune);\n\t\t                this.Q.connect(filter.Q);\n\t\t                this.gain.connect(filter.gain);\n\t\t                this._filters[count] = filter;\n\t\t            }\n\t\t            //connect them up\n\t\t            var connectionChain = [this.input].concat(this._filters).concat([this.output]);\n\t\t            this.connectSeries.apply(this, connectionChain);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @return {Tone.Filter} this\n\t\t\t */\n\t\t    Tone.Filter.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        for (var i = 0; i < this._filters.length; i++) {\n\t\t            this._filters[i].disconnect();\n\t\t            this._filters[i] = null;\n\t\t        }\n\t\t        this._filters = null;\n\t\t        this._writable([\n\t\t            'detune',\n\t\t            'frequency',\n\t\t            'gain',\n\t\t            'Q'\n\t\t        ]);\n\t\t        this.frequency.dispose();\n\t\t        this.Q.dispose();\n\t\t        this.frequency = null;\n\t\t        this.Q = null;\n\t\t        this.detune.dispose();\n\t\t        this.detune = null;\n\t\t        this.gain.dispose();\n\t\t        this.gain = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Filter;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Split the incoming signal into three bands (low, mid, high)\n\t\t\t *         with two crossover frequency controls. \n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {Frequency|Object} [lowFrequency] the low/mid crossover frequency\n\t\t\t *  @param {Frequency} [highFrequency] the mid/high crossover frequency\n\t\t\t */\n\t\t    Tone.MultibandSplit = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'lowFrequency',\n\t\t            'highFrequency'\n\t\t        ], Tone.MultibandSplit.defaults);\n\t\t        /**\n\t\t\t\t *  the input\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.input = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  the outputs\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.output = new Array(3);\n\t\t        /**\n\t\t\t\t *  The low band. Alias for <code>output[0]</code>\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t */\n\t\t        this.low = this.output[0] = new Tone.Filter(0, 'lowpass');\n\t\t        /**\n\t\t\t\t *  the lower filter of the mid band\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lowMidFilter = new Tone.Filter(0, 'highpass');\n\t\t        /**\n\t\t\t\t *  The mid band output. Alias for <code>output[1]</code>\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t */\n\t\t        this.mid = this.output[1] = new Tone.Filter(0, 'lowpass');\n\t\t        /**\n\t\t\t\t *  The high band output. Alias for <code>output[2]</code>\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t */\n\t\t        this.high = this.output[2] = new Tone.Filter(0, 'highpass');\n\t\t        /**\n\t\t\t\t *  The low/mid crossover frequency.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.lowFrequency = new Tone.Signal(options.lowFrequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The mid/high crossover frequency.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.highFrequency = new Tone.Signal(options.highFrequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The quality of all the filters\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.Q = new Tone.Signal(options.Q);\n\t\t        this.input.fan(this.low, this.high);\n\t\t        this.input.chain(this._lowMidFilter, this.mid);\n\t\t        //the frequency control signal\n\t\t        this.lowFrequency.connect(this.low.frequency);\n\t\t        this.lowFrequency.connect(this._lowMidFilter.frequency);\n\t\t        this.highFrequency.connect(this.mid.frequency);\n\t\t        this.highFrequency.connect(this.high.frequency);\n\t\t        //the Q value\n\t\t        this.Q.connect(this.low.Q);\n\t\t        this.Q.connect(this._lowMidFilter.Q);\n\t\t        this.Q.connect(this.mid.Q);\n\t\t        this.Q.connect(this.high.Q);\n\t\t        this._readOnly([\n\t\t            'high',\n\t\t            'mid',\n\t\t            'low',\n\t\t            'highFrequency',\n\t\t            'lowFrequency'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.MultibandSplit);\n\t\t    /**\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.MultibandSplit.defaults = {\n\t\t        'lowFrequency': 400,\n\t\t        'highFrequency': 2500,\n\t\t        'Q': 1\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.MultibandSplit} this\n\t\t\t */\n\t\t    Tone.MultibandSplit.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'high',\n\t\t            'mid',\n\t\t            'low',\n\t\t            'highFrequency',\n\t\t            'lowFrequency'\n\t\t        ]);\n\t\t        this.low.dispose();\n\t\t        this.low = null;\n\t\t        this._lowMidFilter.dispose();\n\t\t        this._lowMidFilter = null;\n\t\t        this.mid.dispose();\n\t\t        this.mid = null;\n\t\t        this.high.dispose();\n\t\t        this.high = null;\n\t\t        this.lowFrequency.dispose();\n\t\t        this.lowFrequency = null;\n\t\t        this.highFrequency.dispose();\n\t\t        this.highFrequency = null;\n\t\t        this.Q.dispose();\n\t\t        this.Q = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MultibandSplit;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.EQ3 is a three band EQ with control over low, mid, and high gain as\n\t\t\t *         well as the low and high crossover frequencies.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  \n\t\t\t *  @param {Decibels|Object} [lowLevel] The gain applied to the lows.\n\t\t\t *  @param {Decibels} [midLevel] The gain applied to the mid.\n\t\t\t *  @param {Decibels} [highLevel] The gain applied to the high.\n\t\t\t *  @example\n\t\t\t * var eq = new Tone.EQ3(-10, 3, -20);\n\t\t\t */\n\t\t    Tone.EQ3 = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'low',\n\t\t            'mid',\n\t\t            'high'\n\t\t        ], Tone.EQ3.defaults);\n\t\t        /**\n\t\t\t\t *  the output node\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.output = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  the multiband split\n\t\t\t\t *  @type {Tone.MultibandSplit}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._multibandSplit = this.input = new Tone.MultibandSplit({\n\t\t            'lowFrequency': options.lowFrequency,\n\t\t            'highFrequency': options.highFrequency\n\t\t        });\n\t\t        /**\n\t\t\t\t *  The gain for the lower signals\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lowGain = new Tone.Gain(options.low, Tone.Type.Decibels);\n\t\t        /**\n\t\t\t\t *  The gain for the mid signals\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._midGain = new Tone.Gain(options.mid, Tone.Type.Decibels);\n\t\t        /**\n\t\t\t\t * The gain in decibels of the high part\n\t\t\t\t * @type {Tone.Gain}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this._highGain = new Tone.Gain(options.high, Tone.Type.Decibels);\n\t\t        /**\n\t\t\t\t * The gain in decibels of the low part\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.low = this._lowGain.gain;\n\t\t        /**\n\t\t\t\t * The gain in decibels of the mid part\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.mid = this._midGain.gain;\n\t\t        /**\n\t\t\t\t * The gain in decibels of the high part\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.high = this._highGain.gain;\n\t\t        /**\n\t\t\t\t *  The Q value for all of the filters. \n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.Q = this._multibandSplit.Q;\n\t\t        /**\n\t\t\t\t *  The low/mid crossover frequency. \n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.lowFrequency = this._multibandSplit.lowFrequency;\n\t\t        /**\n\t\t\t\t *  The mid/high crossover frequency. \n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.highFrequency = this._multibandSplit.highFrequency;\n\t\t        //the frequency bands\n\t\t        this._multibandSplit.low.chain(this._lowGain, this.output);\n\t\t        this._multibandSplit.mid.chain(this._midGain, this.output);\n\t\t        this._multibandSplit.high.chain(this._highGain, this.output);\n\t\t        this._readOnly([\n\t\t            'low',\n\t\t            'mid',\n\t\t            'high',\n\t\t            'lowFrequency',\n\t\t            'highFrequency'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.EQ3);\n\t\t    /**\n\t\t\t *  the default values\n\t\t\t */\n\t\t    Tone.EQ3.defaults = {\n\t\t        'low': 0,\n\t\t        'mid': 0,\n\t\t        'high': 0,\n\t\t        'lowFrequency': 400,\n\t\t        'highFrequency': 2500\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.EQ3} this\n\t\t\t */\n\t\t    Tone.EQ3.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'low',\n\t\t            'mid',\n\t\t            'high',\n\t\t            'lowFrequency',\n\t\t            'highFrequency'\n\t\t        ]);\n\t\t        this._multibandSplit.dispose();\n\t\t        this._multibandSplit = null;\n\t\t        this.lowFrequency = null;\n\t\t        this.highFrequency = null;\n\t\t        this._lowGain.dispose();\n\t\t        this._lowGain = null;\n\t\t        this._midGain.dispose();\n\t\t        this._midGain = null;\n\t\t        this._highGain.dispose();\n\t\t        this._highGain = null;\n\t\t        this.low = null;\n\t\t        this.mid = null;\n\t\t        this.high = null;\n\t\t        this.Q = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.EQ3;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Performs a linear scaling on an input signal.\n\t\t\t *          Scales a NormalRange input to between\n\t\t\t *          outputMin and outputMax.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @param {number} [outputMin=0] The output value when the input is 0. \n\t\t\t *  @param {number} [outputMax=1]\tThe output value when the input is 1. \n\t\t\t *  @example\n\t\t\t * var scale = new Tone.Scale(50, 100);\n\t\t\t * var signal = new Tone.Signal(0.5).connect(scale);\n\t\t\t * //the output of scale equals 75\n\t\t\t */\n\t\t    Tone.Scale = function (outputMin, outputMax) {\n\t\t        /** \n\t\t\t\t *  @private\n\t\t\t\t *  @type {number}\n\t\t\t\t */\n\t\t        this._outputMin = this.defaultArg(outputMin, 0);\n\t\t        /** \n\t\t\t\t *  @private\n\t\t\t\t *  @type {number}\n\t\t\t\t */\n\t\t        this._outputMax = this.defaultArg(outputMax, 1);\n\t\t        /** \n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scale = this.input = new Tone.Multiply(1);\n\t\t        /** \n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Add}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._add = this.output = new Tone.Add(0);\n\t\t        this._scale.connect(this._add);\n\t\t        this._setRange();\n\t\t    };\n\t\t    Tone.extend(Tone.Scale, Tone.SignalBase);\n\t\t    /**\n\t\t\t * The minimum output value. This number is output when \n\t\t\t * the value input value is 0. \n\t\t\t * @memberOf Tone.Scale#\n\t\t\t * @type {number}\n\t\t\t * @name min\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Scale.prototype, 'min', {\n\t\t        get: function () {\n\t\t            return this._outputMin;\n\t\t        },\n\t\t        set: function (min) {\n\t\t            this._outputMin = min;\n\t\t            this._setRange();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The maximum output value. This number is output when \n\t\t\t * the value input value is 1. \n\t\t\t * @memberOf Tone.Scale#\n\t\t\t * @type {number}\n\t\t\t * @name max\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Scale.prototype, 'max', {\n\t\t        get: function () {\n\t\t            return this._outputMax;\n\t\t        },\n\t\t        set: function (max) {\n\t\t            this._outputMax = max;\n\t\t            this._setRange();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  set the values\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Scale.prototype._setRange = function () {\n\t\t        this._add.value = this._outputMin;\n\t\t        this._scale.value = this._outputMax - this._outputMin;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Scale} this\n\t\t\t */\n\t\t    Tone.Scale.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._add.dispose();\n\t\t        this._add = null;\n\t\t        this._scale.dispose();\n\t\t        this._scale = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Scale;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class  Performs an exponential scaling on an input signal.\n\t\t\t *          Scales a NormalRange value [0,1] exponentially\n\t\t\t *          to the output range of outputMin to outputMax.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @param {number} [outputMin=0] The output value when the input is 0. \n\t\t\t *  @param {number} [outputMax=1]\tThe output value when the input is 1. \n\t\t\t *  @param {number} [exponent=2] The exponent which scales the incoming signal.\n\t\t\t *  @example\n\t\t\t * var scaleExp = new Tone.ScaleExp(0, 100, 2);\n\t\t\t * var signal = new Tone.Signal(0.5).connect(scaleExp);\n\t\t\t */\n\t\t    Tone.ScaleExp = function (outputMin, outputMax, exponent) {\n\t\t        /**\n\t\t\t\t *  scale the input to the output range\n\t\t\t\t *  @type {Tone.Scale}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scale = this.output = new Tone.Scale(outputMin, outputMax);\n\t\t        /**\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Pow}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._exp = this.input = new Tone.Pow(this.defaultArg(exponent, 2));\n\t\t        this._exp.connect(this._scale);\n\t\t    };\n\t\t    Tone.extend(Tone.ScaleExp, Tone.SignalBase);\n\t\t    /**\n\t\t\t * Instead of interpolating linearly between the <code>min</code> and \n\t\t\t * <code>max</code> values, setting the exponent will interpolate between\n\t\t\t * the two values with an exponential curve. \n\t\t\t * @memberOf Tone.ScaleExp#\n\t\t\t * @type {number}\n\t\t\t * @name exponent\n\t\t\t */\n\t\t    Object.defineProperty(Tone.ScaleExp.prototype, 'exponent', {\n\t\t        get: function () {\n\t\t            return this._exp.value;\n\t\t        },\n\t\t        set: function (exp) {\n\t\t            this._exp.value = exp;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The minimum output value. This number is output when \n\t\t\t * the value input value is 0. \n\t\t\t * @memberOf Tone.ScaleExp#\n\t\t\t * @type {number}\n\t\t\t * @name min\n\t\t\t */\n\t\t    Object.defineProperty(Tone.ScaleExp.prototype, 'min', {\n\t\t        get: function () {\n\t\t            return this._scale.min;\n\t\t        },\n\t\t        set: function (min) {\n\t\t            this._scale.min = min;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The maximum output value. This number is output when \n\t\t\t * the value input value is 1. \n\t\t\t * @memberOf Tone.ScaleExp#\n\t\t\t * @type {number}\n\t\t\t * @name max\n\t\t\t */\n\t\t    Object.defineProperty(Tone.ScaleExp.prototype, 'max', {\n\t\t        get: function () {\n\t\t            return this._scale.max;\n\t\t        },\n\t\t        set: function (max) {\n\t\t            this._scale.max = max;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.ScaleExp} this\n\t\t\t */\n\t\t    Tone.ScaleExp.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._scale.dispose();\n\t\t        this._scale = null;\n\t\t        this._exp.dispose();\n\t\t        this._exp = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.ScaleExp;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface). \n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Time=} delayTime The delay applied to the incoming signal.\n\t\t\t *  @param {Time=} maxDelay The maximum delay time. \n\t\t\t */\n\t\t    Tone.Delay = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'delayTime',\n\t\t            'maxDelay'\n\t\t        ], Tone.Delay.defaults);\n\t\t        /**\n\t\t\t\t *  The native delay node\n\t\t\t\t *  @type {DelayNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayNode = this.input = this.output = this.context.createDelay(this.toSeconds(options.maxDelay));\n\t\t        /**\n\t\t\t\t *  The amount of time the incoming signal is\n\t\t\t\t *  delayed. \n\t\t\t\t *  @type {Tone.Param}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.delayTime = new Tone.Param({\n\t\t            'param': this._delayNode.delayTime,\n\t\t            'units': Tone.Type.Time,\n\t\t            'value': options.delayTime\n\t\t        });\n\t\t        this._readOnly('delayTime');\n\t\t    };\n\t\t    Tone.extend(Tone.Delay);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.Delay.defaults = {\n\t\t        'maxDelay': 1,\n\t\t        'delayTime': 0\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.Delay}  this\n\t\t\t */\n\t\t    Tone.Delay.prototype.dispose = function () {\n\t\t        Tone.Param.prototype.dispose.call(this);\n\t\t        this._delayNode.disconnect();\n\t\t        this._delayNode = null;\n\t\t        this._writable('delayTime');\n\t\t        this.delayTime = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Delay;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Comb filters are basic building blocks for physical modeling. Read more\n\t\t\t *         about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {Time|Object} [delayTime] The delay time of the filter. \n\t\t\t *  @param {NormalRange=} resonance The amount of feedback the filter has. \n\t\t\t */\n\t\t    Tone.FeedbackCombFilter = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'delayTime',\n\t\t            'resonance'\n\t\t        ], Tone.FeedbackCombFilter.defaults);\n\t\t        /**\n\t\t\t\t *  the delay node\n\t\t\t\t *  @type {DelayNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delay = this.input = this.output = new Tone.Delay(options.delayTime);\n\t\t        /**\n\t\t\t\t *  The amount of delay of the comb filter. \n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.delayTime = this._delay.delayTime;\n\t\t        /**\n\t\t\t\t *  the feedback node\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  The amount of feedback of the delayed signal. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.resonance = this._feedback.gain;\n\t\t        this._delay.chain(this._feedback, this._delay);\n\t\t        this._readOnly([\n\t\t            'resonance',\n\t\t            'delayTime'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.FeedbackCombFilter);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.FeedbackCombFilter.defaults = {\n\t\t        'delayTime': 0.1,\n\t\t        'resonance': 0.5\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.FeedbackCombFilter} this\n\t\t\t */\n\t\t    Tone.FeedbackCombFilter.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'resonance',\n\t\t            'delayTime'\n\t\t        ]);\n\t\t        this._delay.dispose();\n\t\t        this._delay = null;\n\t\t        this.delayTime = null;\n\t\t        this._feedback.dispose();\n\t\t        this._feedback = null;\n\t\t        this.resonance = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.FeedbackCombFilter;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Follower is a  crude envelope follower which will follow \n\t\t\t *          the amplitude of an incoming signal. \n\t\t\t *          Take care with small (< 0.02) attack or decay values \n\t\t\t *          as follower has some ripple which is exaggerated\n\t\t\t *          at these values. Read more about envelope followers (also known \n\t\t\t *          as envelope detectors) on [Wikipedia](https://en.wikipedia.org/wiki/Envelope_detector).\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Time|Object} [attack] The rate at which the follower rises.\n\t\t\t *  @param {Time=} release The rate at which the folower falls. \n\t\t\t *  @example\n\t\t\t * var follower = new Tone.Follower(0.2, 0.4);\n\t\t\t */\n\t\t    Tone.Follower = function () {\n\t\t        this.createInsOuts(1, 1);\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'attack',\n\t\t            'release'\n\t\t        ], Tone.Follower.defaults);\n\t\t        /**\n\t\t\t\t *  @type {Tone.Abs}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._abs = new Tone.Abs();\n\t\t        /**\n\t\t\t\t *  the lowpass filter which smooths the input\n\t\t\t\t *  @type {BiquadFilterNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._filter = this.context.createBiquadFilter();\n\t\t        this._filter.type = 'lowpass';\n\t\t        this._filter.frequency.value = 0;\n\t\t        this._filter.Q.value = -100;\n\t\t        /**\n\t\t\t\t *  @type {WaveShaperNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._frequencyValues = new Tone.WaveShaper();\n\t\t        /**\n\t\t\t\t *  @type {Tone.Subtract}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sub = new Tone.Subtract();\n\t\t        /**\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delay = new Tone.Delay(this.blockTime);\n\t\t        /**\n\t\t\t\t *  this keeps it far from 0, even for very small differences\n\t\t\t\t *  @type {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._mult = new Tone.Multiply(10000);\n\t\t        /**\n\t\t\t\t *  @private\n\t\t\t\t *  @type {number}\n\t\t\t\t */\n\t\t        this._attack = options.attack;\n\t\t        /**\n\t\t\t\t *  @private\n\t\t\t\t *  @type {number}\n\t\t\t\t */\n\t\t        this._release = options.release;\n\t\t        //the smoothed signal to get the values\n\t\t        this.input.chain(this._abs, this._filter, this.output);\n\t\t        //the difference path\n\t\t        this._abs.connect(this._sub, 0, 1);\n\t\t        this._filter.chain(this._delay, this._sub);\n\t\t        //threshold the difference and use the thresh to set the frequency\n\t\t        this._sub.chain(this._mult, this._frequencyValues, this._filter.frequency);\n\t\t        //set the attack and release values in the table\n\t\t        this._setAttackRelease(this._attack, this._release);\n\t\t    };\n\t\t    Tone.extend(Tone.Follower);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Follower.defaults = {\n\t\t        'attack': 0.05,\n\t\t        'release': 0.5\n\t\t    };\n\t\t    /**\n\t\t\t *  sets the attack and release times in the wave shaper\n\t\t\t *  @param   {Time} attack  \n\t\t\t *  @param   {Time} release \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Follower.prototype._setAttackRelease = function (attack, release) {\n\t\t        var minTime = this.blockTime;\n\t\t        attack = Tone.Time(attack).toFrequency();\n\t\t        release = Tone.Time(release).toFrequency();\n\t\t        attack = Math.max(attack, minTime);\n\t\t        release = Math.max(release, minTime);\n\t\t        this._frequencyValues.setMap(function (val) {\n\t\t            if (val <= 0) {\n\t\t                return attack;\n\t\t            } else {\n\t\t                return release;\n\t\t            }\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t\t * The attack time.\n\t\t\t * @memberOf Tone.Follower#\n\t\t\t * @type {Time}\n\t\t\t * @name attack\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Follower.prototype, 'attack', {\n\t\t        get: function () {\n\t\t            return this._attack;\n\t\t        },\n\t\t        set: function (attack) {\n\t\t            this._attack = attack;\n\t\t            this._setAttackRelease(this._attack, this._release);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The release time.\n\t\t\t * @memberOf Tone.Follower#\n\t\t\t * @type {Time}\n\t\t\t * @name release\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Follower.prototype, 'release', {\n\t\t        get: function () {\n\t\t            return this._release;\n\t\t        },\n\t\t        set: function (release) {\n\t\t            this._release = release;\n\t\t            this._setAttackRelease(this._attack, this._release);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Borrows the connect method from Signal so that the output can be used\n\t\t\t *  as a Tone.Signal control signal.\n\t\t\t *  @function\n\t\t\t */\n\t\t    Tone.Follower.prototype.connect = Tone.Signal.prototype.connect;\n\t\t    /**\n\t\t\t *  dispose\n\t\t\t *  @returns {Tone.Follower} this\n\t\t\t */\n\t\t    Tone.Follower.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._filter.disconnect();\n\t\t        this._filter = null;\n\t\t        this._frequencyValues.disconnect();\n\t\t        this._frequencyValues = null;\n\t\t        this._delay.dispose();\n\t\t        this._delay = null;\n\t\t        this._sub.disconnect();\n\t\t        this._sub = null;\n\t\t        this._abs.dispose();\n\t\t        this._abs = null;\n\t\t        this._mult.dispose();\n\t\t        this._mult = null;\n\t\t        this._curve = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Follower;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.ScaledEnvelop is an envelope which can be scaled \n\t\t\t *         to any range. It's useful for applying an envelope \n\t\t\t *         to a frequency or any other non-NormalRange signal \n\t\t\t *         parameter. \n\t\t\t *\n\t\t\t *  @extends {Tone.Envelope}\n\t\t\t *  @constructor\n\t\t\t *  @param {Time|Object} [attack]\tthe attack time in seconds\n\t\t\t *  @param {Time} [decay]\tthe decay time in seconds\n\t\t\t *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n\t\t\t *  @param {Time} [release]\tthe release time in seconds\n\t\t\t *  @example\n\t\t\t *  var scaledEnv = new Tone.ScaledEnvelope({\n\t\t\t *  \t\"attack\" : 0.2,\n\t\t\t *  \t\"min\" : 200,\n\t\t\t *  \t\"max\" : 2000\n\t\t\t *  });\n\t\t\t *  scaledEnv.connect(oscillator.frequency);\n\t\t\t */\n\t\t    Tone.ScaledEnvelope = function () {\n\t\t        //get all of the defaults\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'attack',\n\t\t            'decay',\n\t\t            'sustain',\n\t\t            'release'\n\t\t        ], Tone.Envelope.defaults);\n\t\t        Tone.Envelope.call(this, options);\n\t\t        options = this.defaultArg(options, Tone.ScaledEnvelope.defaults);\n\t\t        /** \n\t\t\t\t *  scale the incoming signal by an exponent\n\t\t\t\t *  @type {Tone.Pow}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._exp = this.output = new Tone.Pow(options.exponent);\n\t\t        /**\n\t\t\t\t *  scale the signal to the desired range\n\t\t\t\t *  @type {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scale = this.output = new Tone.Scale(options.min, options.max);\n\t\t        this._sig.chain(this._exp, this._scale);\n\t\t    };\n\t\t    Tone.extend(Tone.ScaledEnvelope, Tone.Envelope);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.ScaledEnvelope.defaults = {\n\t\t        'min': 0,\n\t\t        'max': 1,\n\t\t        'exponent': 1\n\t\t    };\n\t\t    /**\n\t\t\t * The envelope's min output value. This is the value which it\n\t\t\t * starts at. \n\t\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t\t * @type {number}\n\t\t\t * @name min\n\t\t\t */\n\t\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'min', {\n\t\t        get: function () {\n\t\t            return this._scale.min;\n\t\t        },\n\t\t        set: function (min) {\n\t\t            this._scale.min = min;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The envelope's max output value. In other words, the value\n\t\t\t * at the peak of the attack portion of the envelope. \n\t\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t\t * @type {number}\n\t\t\t * @name max\n\t\t\t */\n\t\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'max', {\n\t\t        get: function () {\n\t\t            return this._scale.max;\n\t\t        },\n\t\t        set: function (max) {\n\t\t            this._scale.max = max;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The envelope's exponent value. \n\t\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t\t * @type {number}\n\t\t\t * @name exponent\n\t\t\t */\n\t\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'exponent', {\n\t\t        get: function () {\n\t\t            return this._exp.value;\n\t\t        },\n\t\t        set: function (exp) {\n\t\t            this._exp.value = exp;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.ScaledEnvelope} this\n\t\t\t */\n\t\t    Tone.ScaledEnvelope.prototype.dispose = function () {\n\t\t        Tone.Envelope.prototype.dispose.call(this);\n\t\t        this._scale.dispose();\n\t\t        this._scale = null;\n\t\t        this._exp.dispose();\n\t\t        this._exp = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.ScaledEnvelope;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.FrequencyEnvelope is a Tone.ScaledEnvelope, but instead of `min` and `max`\n\t\t\t *         it's got a `baseFrequency` and `octaves` parameter. \n\t\t\t *\n\t\t\t *  @extends {Tone.Envelope}\n\t\t\t *  @constructor\n\t\t\t *  @param {Time|Object} [attack]\tthe attack time in seconds\n\t\t\t *  @param {Time} [decay]\tthe decay time in seconds\n\t\t\t *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n\t\t\t *  @param {Time} [release]\tthe release time in seconds\n\t\t\t *  @example\n\t\t\t *  var env = new Tone.FrequencyEnvelope({\n\t\t\t *  \t\"attack\" : 0.2,\n\t\t\t *  \t\"baseFrequency\" : \"C2\",\n\t\t\t *  \t\"octaves\" : 4\n\t\t\t *  });\n\t\t\t *  scaledEnv.connect(oscillator.frequency);\n\t\t\t */\n\t\t    Tone.FrequencyEnvelope = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'attack',\n\t\t            'decay',\n\t\t            'sustain',\n\t\t            'release'\n\t\t        ], Tone.Envelope.defaults);\n\t\t        Tone.ScaledEnvelope.call(this, options);\n\t\t        options = this.defaultArg(options, Tone.FrequencyEnvelope.defaults);\n\t\t        /**\n\t\t\t\t *  Stores the octave value\n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._octaves = options.octaves;\n\t\t        //setup\n\t\t        this.baseFrequency = options.baseFrequency;\n\t\t        this.octaves = options.octaves;\n\t\t    };\n\t\t    Tone.extend(Tone.FrequencyEnvelope, Tone.Envelope);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.FrequencyEnvelope.defaults = {\n\t\t        'baseFrequency': 200,\n\t\t        'octaves': 4,\n\t\t        'exponent': 2\n\t\t    };\n\t\t    /**\n\t\t\t * The envelope's mininum output value. This is the value which it\n\t\t\t * starts at. \n\t\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t\t * @type {Frequency}\n\t\t\t * @name baseFrequency\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'baseFrequency', {\n\t\t        get: function () {\n\t\t            return this._scale.min;\n\t\t        },\n\t\t        set: function (min) {\n\t\t            this._scale.min = this.toFrequency(min);\n\t\t            //also update the octaves\n\t\t            this.octaves = this._octaves;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The number of octaves above the baseFrequency that the\n\t\t\t * envelope will scale to.\n\t\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t\t * @type {Positive}\n\t\t\t * @name octaves\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'octaves', {\n\t\t        get: function () {\n\t\t            return this._octaves;\n\t\t        },\n\t\t        set: function (octaves) {\n\t\t            this._octaves = octaves;\n\t\t            this._scale.max = this.baseFrequency * Math.pow(2, octaves);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The envelope's exponent value. \n\t\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t\t * @type {number}\n\t\t\t * @name exponent\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'exponent', {\n\t\t        get: function () {\n\t\t            return this._exp.value;\n\t\t        },\n\t\t        set: function (exp) {\n\t\t            this._exp.value = exp;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.FrequencyEnvelope} this\n\t\t\t */\n\t\t    Tone.FrequencyEnvelope.prototype.dispose = function () {\n\t\t        Tone.ScaledEnvelope.prototype.dispose.call(this);\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.FrequencyEnvelope;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Gate only passes a signal through when the incoming \n\t\t\t *          signal exceeds a specified threshold. To do this, Gate uses \n\t\t\t *          a Tone.Follower to follow the amplitude of the incoming signal. \n\t\t\t *          A common implementation of this class is a [Noise Gate](https://en.wikipedia.org/wiki/Noise_gate).\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Decibels|Object} [threshold] The threshold above which the gate will open. \n\t\t\t *  @param {Time=} attack The follower's attack time\n\t\t\t *  @param {Time=} release The follower's release time\n\t\t\t *  @example\n\t\t\t * var gate = new Tone.Gate(-30, 0.2, 0.3).toMaster();\n\t\t\t * var mic = new Tone.Microphone().connect(gate);\n\t\t\t * //the gate will only pass through the incoming \n\t\t\t * //signal when it's louder than -30db\n\t\t\t */\n\t\t    Tone.Gate = function () {\n\t\t        this.createInsOuts(1, 1);\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'threshold',\n\t\t            'attack',\n\t\t            'release'\n\t\t        ], Tone.Gate.defaults);\n\t\t        /**\n\t\t\t\t *  @type {Tone.Follower}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._follower = new Tone.Follower(options.attack, options.release);\n\t\t        /**\n\t\t\t\t *  @type {Tone.GreaterThan}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._gt = new Tone.GreaterThan(this.dbToGain(options.threshold));\n\t\t        //the connections\n\t\t        this.input.connect(this.output);\n\t\t        //the control signal\n\t\t        this.input.chain(this._gt, this._follower, this.output.gain);\n\t\t    };\n\t\t    Tone.extend(Tone.Gate);\n\t\t    /**\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Gate.defaults = {\n\t\t        'attack': 0.1,\n\t\t        'release': 0.1,\n\t\t        'threshold': -40\n\t\t    };\n\t\t    /**\n\t\t\t * The threshold of the gate in decibels\n\t\t\t * @memberOf Tone.Gate#\n\t\t\t * @type {Decibels}\n\t\t\t * @name threshold\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Gate.prototype, 'threshold', {\n\t\t        get: function () {\n\t\t            return this.gainToDb(this._gt.value);\n\t\t        },\n\t\t        set: function (thresh) {\n\t\t            this._gt.value = this.dbToGain(thresh);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The attack speed of the gate\n\t\t\t * @memberOf Tone.Gate#\n\t\t\t * @type {Time}\n\t\t\t * @name attack\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Gate.prototype, 'attack', {\n\t\t        get: function () {\n\t\t            return this._follower.attack;\n\t\t        },\n\t\t        set: function (attackTime) {\n\t\t            this._follower.attack = attackTime;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The release speed of the gate\n\t\t\t * @memberOf Tone.Gate#\n\t\t\t * @type {Time}\n\t\t\t * @name release\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Gate.prototype, 'release', {\n\t\t        get: function () {\n\t\t            return this._follower.release;\n\t\t        },\n\t\t        set: function (releaseTime) {\n\t\t            this._follower.release = releaseTime;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Gate} this\n\t\t\t */\n\t\t    Tone.Gate.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._follower.dispose();\n\t\t        this._gt.dispose();\n\t\t        this._follower = null;\n\t\t        this._gt = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Gate;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  A Timeline State. Provides the methods: <code>setStateAtTime(\"state\", time)</code>\n\t\t\t *          and <code>getStateAtTime(time)</code>.\n\t\t\t *\n\t\t\t *  @extends {Tone.Timeline}\n\t\t\t *  @param {String} initial The initial state of the TimelineState. \n\t\t\t *                          Defaults to <code>undefined</code>\n\t\t\t */\n\t\t    Tone.TimelineState = function (initial) {\n\t\t        Tone.Timeline.call(this);\n\t\t        /**\n\t\t\t\t *  The initial state\n\t\t\t\t *  @private\n\t\t\t\t *  @type {String}\n\t\t\t\t */\n\t\t        this._initial = initial;\n\t\t    };\n\t\t    Tone.extend(Tone.TimelineState, Tone.Timeline);\n\t\t    /**\n\t\t\t *  Returns the scheduled state scheduled before or at\n\t\t\t *  the given time.\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t\t\t */\n\t\t    Tone.TimelineState.prototype.getStateAtTime = function (time) {\n\t\t        var event = this.getEvent(time);\n\t\t        if (event !== null) {\n\t\t            return event.state;\n\t\t        } else {\n\t\t            return this._initial;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the scheduled state scheduled before or at\n\t\t\t *  the given time.\n\t\t\t *  @param  {String}  state The name of the state to set.\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t */\n\t\t    Tone.TimelineState.prototype.setStateAtTime = function (state, time) {\n\t\t        this.addEvent({\n\t\t            'state': state,\n\t\t            'time': time\n\t\t        });\n\t\t    };\n\t\t    return Tone.TimelineState;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Emitter gives classes which extend it\n\t\t\t *         the ability to listen for and emit events. \n\t\t\t *         Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n\t\t\t *         MIT (c) 2011 Jerome Etienne.\n\t\t\t *         \n\t\t\t *  @extends {Tone}\n\t\t\t */\n\t\t    Tone.Emitter = function () {\n\t\t        /**\n\t\t\t\t *  Contains all of the events.\n\t\t\t\t *  @private\n\t\t\t\t *  @type  {Object}\n\t\t\t\t */\n\t\t        this._events = {};\n\t\t    };\n\t\t    Tone.extend(Tone.Emitter);\n\t\t    /**\n\t\t\t *  Bind a callback to a specific event.\n\t\t\t *  @param  {String}    event     The name of the event to listen for.\n\t\t\t *  @param  {Function}  callback  The callback to invoke when the\n\t\t\t *                                event is emitted\n\t\t\t *  @return  {Tone.Emitter}    this\n\t\t\t */\n\t\t    Tone.Emitter.prototype.on = function (event, callback) {\n\t\t        //split the event\n\t\t        var events = event.split(/\\W+/);\n\t\t        for (var i = 0; i < events.length; i++) {\n\t\t            var eventName = events[i];\n\t\t            if (!this._events.hasOwnProperty(eventName)) {\n\t\t                this._events[eventName] = [];\n\t\t            }\n\t\t            this._events[eventName].push(callback);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove the event listener.\n\t\t\t *  @param  {String}    event     The event to stop listening to.\n\t\t\t *  @param  {Function=}  callback  The callback which was bound to \n\t\t\t *                                the event with Tone.Emitter.on.\n\t\t\t *                                If no callback is given, all callbacks\n\t\t\t *                                events are removed.\n\t\t\t *  @return  {Tone.Emitter}    this\n\t\t\t */\n\t\t    Tone.Emitter.prototype.off = function (event, callback) {\n\t\t        var events = event.split(/\\W+/);\n\t\t        for (var ev = 0; ev < events.length; ev++) {\n\t\t            event = events[ev];\n\t\t            if (this._events.hasOwnProperty(event)) {\n\t\t                if (Tone.prototype.isUndef(callback)) {\n\t\t                    this._events[event] = [];\n\t\t                } else {\n\t\t                    var eventList = this._events[event];\n\t\t                    for (var i = 0; i < eventList.length; i++) {\n\t\t                        if (eventList[i] === callback) {\n\t\t                            eventList.splice(i, 1);\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Invoke all of the callbacks bound to the event\n\t\t\t *  with any arguments passed in. \n\t\t\t *  @param  {String}  event  The name of the event.\n\t\t\t *  @param {*...} args The arguments to pass to the functions listening.\n\t\t\t *  @return  {Tone.Emitter}  this\n\t\t\t */\n\t\t    Tone.Emitter.prototype.emit = function (event) {\n\t\t        if (this._events) {\n\t\t            var args = Array.prototype.slice.call(arguments, 1);\n\t\t            if (this._events.hasOwnProperty(event)) {\n\t\t                var eventList = this._events[event];\n\t\t                for (var i = 0, len = eventList.length; i < len; i++) {\n\t\t                    eventList[i].apply(this, args);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Add Emitter functions (on/off/emit) to the object\n\t\t\t *  @param  {Object|Function}  object  The object or class to extend.\n\t\t\t */\n\t\t    Tone.Emitter.mixin = function (object) {\n\t\t        var functions = [\n\t\t            'on',\n\t\t            'off',\n\t\t            'emit'\n\t\t        ];\n\t\t        object._events = {};\n\t\t        for (var i = 0; i < functions.length; i++) {\n\t\t            var func = functions[i];\n\t\t            var emitterFunc = Tone.Emitter.prototype[func];\n\t\t            object[func] = emitterFunc;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.Emitter}  this\n\t\t\t */\n\t\t    Tone.Emitter.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._events = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Emitter;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  A sample accurate clock which provides a callback at the given rate. \n\t\t\t *          While the callback is not sample-accurate (it is still susceptible to\n\t\t\t *          loose JS timing), the time passed in as the argument to the callback\n\t\t\t *          is precise. For most applications, it is better to use Tone.Transport\n\t\t\t *          instead of the Clock by itself since you can synchronize multiple callbacks.\n\t\t\t *\n\t\t\t * \t@constructor\n\t\t\t *  @extends {Tone.Emitter}\n\t\t\t * \t@param {function} callback The callback to be invoked with the time of the audio event\n\t\t\t * \t@param {Frequency} frequency The rate of the callback\n\t\t\t * \t@example\n\t\t\t * //the callback will be invoked approximately once a second\n\t\t\t * //and will print the time exactly once a second apart.\n\t\t\t * var clock = new Tone.Clock(function(time){\n\t\t\t * \tconsole.log(time);\n\t\t\t * }, 1);\n\t\t\t */\n\t\t    Tone.Clock = function () {\n\t\t        Tone.Emitter.call(this);\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'callback',\n\t\t            'frequency'\n\t\t        ], Tone.Clock.defaults);\n\t\t        /**\n\t\t\t\t *  The callback function to invoke at the scheduled tick.\n\t\t\t\t *  @type  {Function}\n\t\t\t\t */\n\t\t        this.callback = options.callback;\n\t\t        /**\n\t\t\t\t *  The internal lookahead value\n\t\t\t\t *  @type {Number|String}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lookAhead = 'auto';\n\t\t        /**\n\t\t\t\t *  The lookahead value which was automatically\n\t\t\t\t *  computed using a time-based averaging.\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._computedLookAhead = UPDATE_RATE / 1000;\n\t\t        /**\n\t\t\t\t *  The next time the callback is scheduled.\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._nextTick = -1;\n\t\t        /**\n\t\t\t\t *  The last time the callback was invoked\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lastUpdate = -1;\n\t\t        /**\n\t\t\t\t *  The rate the callback function should be invoked. \n\t\t\t\t *  @type  {BPM}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.TimelineSignal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The number of times the callback was invoked. Starts counting at 0\n\t\t\t\t *  and increments after the callback was invoked. \n\t\t\t\t *  @type {Ticks}\n\t\t\t\t *  @readOnly\n\t\t\t\t */\n\t\t        this.ticks = 0;\n\t\t        /**\n\t\t\t\t *  The state timeline\n\t\t\t\t *  @type {Tone.TimelineState}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t\t        /**\n\t\t\t\t *  The loop function bound to its context. \n\t\t\t\t *  This is necessary to remove the event in the end.\n\t\t\t\t *  @type {Function}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._boundLoop = this._loop.bind(this);\n\t\t        //bind a callback to the worker thread\n\t\t        Tone.Clock._worker.addEventListener('message', this._boundLoop);\n\t\t        this._readOnly('frequency');\n\t\t    };\n\t\t    Tone.extend(Tone.Clock, Tone.Emitter);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.Clock.defaults = {\n\t\t        'callback': Tone.noOp,\n\t\t        'frequency': 1,\n\t\t        'lookAhead': 'auto'\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n\t\t\t *  @type {Tone.State}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.Clock#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Clock.prototype, 'state', {\n\t\t        get: function () {\n\t\t            return this._state.getStateAtTime(this.now());\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The time which the clock will schedule events in advance\n\t\t\t *  of the current time. Scheduling notes in advance improves\n\t\t\t *  performance and decreases the chance for clicks caused\n\t\t\t *  by scheduling events in the past. If set to \"auto\",\n\t\t\t *  this value will be automatically computed based on the \n\t\t\t *  rate of the update (~0.02 seconds). Larger values\n\t\t\t *  will yeild better performance, but at the cost of latency. \n\t\t\t *  Values less than 0.016 are not recommended.\n\t\t\t *  @type {Number|String}\n\t\t\t *  @memberOf Tone.Clock#\n\t\t\t *  @name lookAhead\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Clock.prototype, 'lookAhead', {\n\t\t        get: function () {\n\t\t            return this._lookAhead;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            if (val === 'auto') {\n\t\t                this._lookAhead = 'auto';\n\t\t            } else {\n\t\t                this._lookAhead = this.toSeconds(val);\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Start the clock at the given time. Optionally pass in an offset\n\t\t\t *  of where to start the tick counter from.\n\t\t\t *  @param  {Time}  time    The time the clock should start\n\t\t\t *  @param  {Ticks=}  offset  Where the tick counter starts counting from.\n\t\t\t *  @return  {Tone.Clock}  this\n\t\t\t */\n\t\t    Tone.Clock.prototype.start = function (time, offset) {\n\t\t        time = this.toSeconds(time);\n\t\t        if (this._state.getStateAtTime(time) !== Tone.State.Started) {\n\t\t            this._state.addEvent({\n\t\t                'state': Tone.State.Started,\n\t\t                'time': time,\n\t\t                'offset': offset\n\t\t            });\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the clock. Stopping the clock resets the tick counter to 0.\n\t\t\t *  @param {Time} [time=now] The time when the clock should stop.\n\t\t\t *  @returns {Tone.Clock} this\n\t\t\t *  @example\n\t\t\t * clock.stop();\n\t\t\t */\n\t\t    Tone.Clock.prototype.stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._state.cancel(time);\n\t\t        this._state.setStateAtTime(Tone.State.Stopped, time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Pause the clock. Pausing does not reset the tick counter.\n\t\t\t *  @param {Time} [time=now] The time when the clock should stop.\n\t\t\t *  @returns {Tone.Clock} this\n\t\t\t */\n\t\t    Tone.Clock.prototype.pause = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        if (this._state.getStateAtTime(time) === Tone.State.Started) {\n\t\t            this._state.setStateAtTime(Tone.State.Paused, time);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The scheduling loop.\n\t\t\t *  @param  {Number}  time  The current page time starting from 0\n\t\t\t *                          when the page was loaded.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Clock.prototype._loop = function () {\n\t\t        //compute the look ahead\n\t\t        if (this._lookAhead === 'auto') {\n\t\t            var time = this.now();\n\t\t            if (this._lastUpdate !== -1) {\n\t\t                var diff = time - this._lastUpdate;\n\t\t                //max size on the diff\n\t\t                diff = Math.min(10 * UPDATE_RATE / 1000, diff);\n\t\t                //averaging\n\t\t                this._computedLookAhead = (9 * this._computedLookAhead + diff) / 10;\n\t\t            }\n\t\t            this._lastUpdate = time;\n\t\t        } else {\n\t\t            this._computedLookAhead = this._lookAhead;\n\t\t        }\n\t\t        //get the frequency value to compute the value of the next loop\n\t\t        var now = this.now();\n\t\t        //if it's started\n\t\t        var lookAhead = this._computedLookAhead * 2;\n\t\t        var event = this._state.getEvent(now + lookAhead);\n\t\t        var state = Tone.State.Stopped;\n\t\t        if (event) {\n\t\t            state = event.state;\n\t\t            //if it was stopped and now started\n\t\t            if (this._nextTick === -1 && state === Tone.State.Started) {\n\t\t                this._nextTick = event.time;\n\t\t                if (!this.isUndef(event.offset)) {\n\t\t                    this.ticks = event.offset;\n\t\t                }\n\t\t                this.emit('start', event.time, this.ticks);\n\t\t            }\n\t\t        }\n\t\t        if (state === Tone.State.Started) {\n\t\t            while (now + lookAhead > this._nextTick) {\n\t\t                var tickTime = this._nextTick;\n\t\t                this._nextTick += 1 / this.frequency.getValueAtTime(this._nextTick);\n\t\t                this.callback(tickTime);\n\t\t                this.ticks++;\n\t\t            }\n\t\t        } else if (state === Tone.State.Stopped) {\n\t\t            if (event && this.ticks !== 0) {\n\t\t                this.emit('stop', event.time);\n\t\t            }\n\t\t            this._nextTick = -1;\n\t\t            this.ticks = 0;\n\t\t        } else if (state === Tone.State.Paused) {\n\t\t            if (this._nextTick !== -1) {\n\t\t                this.emit('pause', event.time);\n\t\t            }\n\t\t            this._nextTick = -1;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the scheduled state at the given time.\n\t\t\t *  @param  {Time}  time  The time to query.\n\t\t\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t\t\t *  @example\n\t\t\t * clock.start(\"+0.1\");\n\t\t\t * clock.getStateAtTime(\"+0.1\"); //returns \"started\"\n\t\t\t */\n\t\t    Tone.Clock.prototype.getStateAtTime = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        return this._state.getStateAtTime(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @returns {Tone.Clock} this\n\t\t\t */\n\t\t    Tone.Clock.prototype.dispose = function () {\n\t\t        Tone.Emitter.prototype.dispose.call(this);\n\t\t        Tone.TimelineState.prototype.dispose.call(this);\n\t\t        Tone.Clock._worker.removeEventListener('message', this._boundLoop);\n\t\t        this._writable('frequency');\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this._boundLoop = null;\n\t\t        this._nextTick = Infinity;\n\t\t        this.callback = null;\n\t\t        this._state.dispose();\n\t\t        this._state = null;\n\t\t    };\n\t\t    //URL Shim\n\t\t    window.URL = window.URL || window.webkitURL;\n\t\t    /**\n\t\t\t *  The update rate in Milliseconds\n\t\t\t *  @const\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    var UPDATE_RATE = 20;\n\t\t    /**\n\t\t\t *  The script which runs in a web worker\n\t\t\t *  @type {Blob}\n\t\t\t *  @private\n\t\t\t */\n\t\t    var blob = new Blob(['setInterval(function(){self.postMessage(\\'tick\\')}, ' + UPDATE_RATE + ')']);\n\t\t    /**\n\t\t\t *  Create a blob url from the Blob\n\t\t\t *  @type  {URL}\n\t\t\t *  @private\n\t\t\t */\n\t\t    var blobUrl = URL.createObjectURL(blob);\n\t\t    /**\n\t\t\t *  The Worker which generates a regular callback\n\t\t\t *  @type {Worker}\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.Clock._worker = new Worker(blobUrl);\n\t\t    return Tone.Clock;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Similar to Tone.Timeline, but all events represent\n\t\t\t *         intervals with both \"time\" and \"duration\" times. The \n\t\t\t *         events are placed in a tree structure optimized\n\t\t\t *         for querying an intersection point with the timeline\n\t\t\t *         events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n\t\t\t *         to represent the data.\n\t\t\t *  @extends {Tone}\n\t\t\t */\n\t\t    Tone.IntervalTimeline = function () {\n\t\t        /**\n\t\t\t\t *  The root node of the inteval tree\n\t\t\t\t *  @type  {IntervalNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._root = null;\n\t\t        /**\n\t\t\t\t *  Keep track of the length of the timeline.\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._length = 0;\n\t\t    };\n\t\t    Tone.extend(Tone.IntervalTimeline);\n\t\t    /**\n\t\t\t *  The event to add to the timeline. All events must \n\t\t\t *  have a time and duration value\n\t\t\t *  @param  {Object}  event  The event to add to the timeline\n\t\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.addEvent = function (event) {\n\t\t        if (this.isUndef(event.time) || this.isUndef(event.duration)) {\n\t\t            throw new Error('Tone.IntervalTimeline: events must have time and duration parameters');\n\t\t        }\n\t\t        var node = new IntervalNode(event.time, event.time + event.duration, event);\n\t\t        if (this._root === null) {\n\t\t            this._root = node;\n\t\t        } else {\n\t\t            this._root.insert(node);\n\t\t        }\n\t\t        this._length++;\n\t\t        // Restructure tree to be balanced\n\t\t        while (node !== null) {\n\t\t            node.updateHeight();\n\t\t            node.updateMax();\n\t\t            this._rebalance(node);\n\t\t            node = node.parent;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove an event from the timeline.\n\t\t\t *  @param  {Object}  event  The event to remove from the timeline\n\t\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.removeEvent = function (event) {\n\t\t        if (this._root !== null) {\n\t\t            var results = [];\n\t\t            this._root.search(event.time, results);\n\t\t            for (var i = 0; i < results.length; i++) {\n\t\t                var node = results[i];\n\t\t                if (node.event === event) {\n\t\t                    this._removeNode(node);\n\t\t                    this._length--;\n\t\t                    break;\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The number of items in the timeline.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.IntervalTimeline#\n\t\t\t *  @name length\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.IntervalTimeline.prototype, 'length', {\n\t\t        get: function () {\n\t\t            return this._length;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Remove events whose time time is after the given time\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.cancel = function (after) {\n\t\t        this.forEachAfter(after, function (event) {\n\t\t            this.removeEvent(event);\n\t\t        }.bind(this));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Set the root node as the given node\n\t\t\t *  @param {IntervalNode} node\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype._setRoot = function (node) {\n\t\t        this._root = node;\n\t\t        if (this._root !== null) {\n\t\t            this._root.parent = null;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Replace the references to the node in the node's parent\n\t\t\t *  with the replacement node.\n\t\t\t *  @param  {IntervalNode}  node        \n\t\t\t *  @param  {IntervalNode}  replacement \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype._replaceNodeInParent = function (node, replacement) {\n\t\t        if (node.parent !== null) {\n\t\t            if (node.isLeftChild()) {\n\t\t                node.parent.left = replacement;\n\t\t            } else {\n\t\t                node.parent.right = replacement;\n\t\t            }\n\t\t            this._rebalance(node.parent);\n\t\t        } else {\n\t\t            this._setRoot(replacement);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove the node from the tree and replace it with \n\t\t\t *  a successor which follows the schema.\n\t\t\t *  @param  {IntervalNode}  node\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype._removeNode = function (node) {\n\t\t        if (node.left === null && node.right === null) {\n\t\t            this._replaceNodeInParent(node, null);\n\t\t        } else if (node.right === null) {\n\t\t            this._replaceNodeInParent(node, node.left);\n\t\t        } else if (node.left === null) {\n\t\t            this._replaceNodeInParent(node, node.right);\n\t\t        } else {\n\t\t            var balance = node.getBalance();\n\t\t            var replacement, temp;\n\t\t            if (balance > 0) {\n\t\t                if (node.left.right === null) {\n\t\t                    replacement = node.left;\n\t\t                    replacement.right = node.right;\n\t\t                    temp = replacement;\n\t\t                } else {\n\t\t                    replacement = node.left.right;\n\t\t                    while (replacement.right !== null) {\n\t\t                        replacement = replacement.right;\n\t\t                    }\n\t\t                    replacement.parent.right = replacement.left;\n\t\t                    temp = replacement.parent;\n\t\t                    replacement.left = node.left;\n\t\t                    replacement.right = node.right;\n\t\t                }\n\t\t            } else {\n\t\t                if (node.right.left === null) {\n\t\t                    replacement = node.right;\n\t\t                    replacement.left = node.left;\n\t\t                    temp = replacement;\n\t\t                } else {\n\t\t                    replacement = node.right.left;\n\t\t                    while (replacement.left !== null) {\n\t\t                        replacement = replacement.left;\n\t\t                    }\n\t\t                    replacement.parent = replacement.parent;\n\t\t                    replacement.parent.left = replacement.right;\n\t\t                    temp = replacement.parent;\n\t\t                    replacement.left = node.left;\n\t\t                    replacement.right = node.right;\n\t\t                }\n\t\t            }\n\t\t            if (node.parent !== null) {\n\t\t                if (node.isLeftChild()) {\n\t\t                    node.parent.left = replacement;\n\t\t                } else {\n\t\t                    node.parent.right = replacement;\n\t\t                }\n\t\t            } else {\n\t\t                this._setRoot(replacement);\n\t\t            }\n\t\t            // this._replaceNodeInParent(node, replacement);\n\t\t            this._rebalance(temp);\n\t\t        }\n\t\t        node.dispose();\n\t\t    };\n\t\t    /**\n\t\t\t *  Rotate the tree to the left\n\t\t\t *  @param  {IntervalNode}  node\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype._rotateLeft = function (node) {\n\t\t        var parent = node.parent;\n\t\t        var isLeftChild = node.isLeftChild();\n\t\t        // Make node.right the new root of this sub tree (instead of node)\n\t\t        var pivotNode = node.right;\n\t\t        node.right = pivotNode.left;\n\t\t        pivotNode.left = node;\n\t\t        if (parent !== null) {\n\t\t            if (isLeftChild) {\n\t\t                parent.left = pivotNode;\n\t\t            } else {\n\t\t                parent.right = pivotNode;\n\t\t            }\n\t\t        } else {\n\t\t            this._setRoot(pivotNode);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Rotate the tree to the right\n\t\t\t *  @param  {IntervalNode}  node\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype._rotateRight = function (node) {\n\t\t        var parent = node.parent;\n\t\t        var isLeftChild = node.isLeftChild();\n\t\t        // Make node.left the new root of this sub tree (instead of node)\n\t\t        var pivotNode = node.left;\n\t\t        node.left = pivotNode.right;\n\t\t        pivotNode.right = node;\n\t\t        if (parent !== null) {\n\t\t            if (isLeftChild) {\n\t\t                parent.left = pivotNode;\n\t\t            } else {\n\t\t                parent.right = pivotNode;\n\t\t            }\n\t\t        } else {\n\t\t            this._setRoot(pivotNode);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Balance the BST\n\t\t\t *  @param  {IntervalNode}  node\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype._rebalance = function (node) {\n\t\t        var balance = node.getBalance();\n\t\t        if (balance > 1) {\n\t\t            if (node.left.getBalance() < 0) {\n\t\t                this._rotateLeft(node.left);\n\t\t            } else {\n\t\t                this._rotateRight(node);\n\t\t            }\n\t\t        } else if (balance < -1) {\n\t\t            if (node.right.getBalance() > 0) {\n\t\t                this._rotateRight(node.right);\n\t\t            } else {\n\t\t                this._rotateLeft(node);\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Get an event whose time and duration span the give time. Will\n\t\t\t *  return the match whose \"time\" value is closest to the given time.\n\t\t\t *  @param  {Object}  event  The event to add to the timeline\n\t\t\t *  @return  {Object}  The event which spans the desired time\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.getEvent = function (time) {\n\t\t        if (this._root !== null) {\n\t\t            var results = [];\n\t\t            this._root.search(time, results);\n\t\t            if (results.length > 0) {\n\t\t                var max = results[0];\n\t\t                for (var i = 1; i < results.length; i++) {\n\t\t                    if (results[i].low > max.low) {\n\t\t                        max = results[i];\n\t\t                    }\n\t\t                }\n\t\t                return max.event;\n\t\t            }\n\t\t        }\n\t\t        return null;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the timeline.\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.forEach = function (callback) {\n\t\t        if (this._root !== null) {\n\t\t            var allNodes = [];\n\t\t            if (this._root !== null) {\n\t\t                this._root.traverse(function (node) {\n\t\t                    allNodes.push(node);\n\t\t                });\n\t\t            }\n\t\t            for (var i = 0; i < allNodes.length; i++) {\n\t\t                var ev = allNodes[i].event;\n\t\t                if (ev) {\n\t\t                    callback(ev);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the array in which the given time\n\t\t\t *  overlaps with the time and duration time of the event.\n\t\t\t *  @param  {Number}  time The time to check if items are overlapping\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.forEachAtTime = function (time, callback) {\n\t\t        if (this._root !== null) {\n\t\t            var results = [];\n\t\t            this._root.search(time, results);\n\t\t            for (var i = results.length - 1; i >= 0; i--) {\n\t\t                var ev = results[i].event;\n\t\t                if (ev) {\n\t\t                    callback(ev);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the array in which the time is greater\n\t\t\t *  than the given time.\n\t\t\t *  @param  {Number}  time The time to check if items are before\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.forEachAfter = function (time, callback) {\n\t\t        if (this._root !== null) {\n\t\t            var results = [];\n\t\t            this._root.searchAfter(time, results);\n\t\t            for (var i = results.length - 1; i >= 0; i--) {\n\t\t                var ev = results[i].event;\n\t\t                if (ev) {\n\t\t                    callback(ev);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.dispose = function () {\n\t\t        var allNodes = [];\n\t\t        if (this._root !== null) {\n\t\t            this._root.traverse(function (node) {\n\t\t                allNodes.push(node);\n\t\t            });\n\t\t        }\n\t\t        for (var i = 0; i < allNodes.length; i++) {\n\t\t            allNodes[i].dispose();\n\t\t        }\n\t\t        allNodes = null;\n\t\t        this._root = null;\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tINTERVAL NODE HELPER\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Represents a node in the binary search tree, with the addition\n\t\t\t *  of a \"high\" value which keeps track of the highest value of\n\t\t\t *  its children. \n\t\t\t *  References: \n\t\t\t *  https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n\t\t\t *  http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n\t\t\t *  @param {Number} low\n\t\t\t *  @param {Number} high\n\t\t\t *  @private\n\t\t\t */\n\t\t    var IntervalNode = function (low, high, event) {\n\t\t        //the event container\n\t\t        this.event = event;\n\t\t        //the low value\n\t\t        this.low = low;\n\t\t        //the high value\n\t\t        this.high = high;\n\t\t        //the high value for this and all child nodes\n\t\t        this.max = this.high;\n\t\t        //the nodes to the left\n\t\t        this._left = null;\n\t\t        //the nodes to the right\n\t\t        this._right = null;\n\t\t        //the parent node\n\t\t        this.parent = null;\n\t\t        //the number of child nodes\n\t\t        this.height = 0;\n\t\t    };\n\t\t    /** \n\t\t\t *  Insert a node into the correct spot in the tree\n\t\t\t *  @param  {IntervalNode}  node\n\t\t\t */\n\t\t    IntervalNode.prototype.insert = function (node) {\n\t\t        if (node.low <= this.low) {\n\t\t            if (this.left === null) {\n\t\t                this.left = node;\n\t\t            } else {\n\t\t                this.left.insert(node);\n\t\t            }\n\t\t        } else {\n\t\t            if (this.right === null) {\n\t\t                this.right = node;\n\t\t            } else {\n\t\t                this.right.insert(node);\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Search the tree for nodes which overlap \n\t\t\t *  with the given point\n\t\t\t *  @param  {Number}  point  The point to query\n\t\t\t *  @param  {Array}  results  The array to put the results\n\t\t\t */\n\t\t    IntervalNode.prototype.search = function (point, results) {\n\t\t        // If p is to the right of the rightmost point of any interval\n\t\t        // in this node and all children, there won't be any matches.\n\t\t        if (point > this.max) {\n\t\t            return;\n\t\t        }\n\t\t        // Search left children\n\t\t        if (this.left !== null) {\n\t\t            this.left.search(point, results);\n\t\t        }\n\t\t        // Check this node\n\t\t        if (this.low <= point && this.high > point) {\n\t\t            results.push(this);\n\t\t        }\n\t\t        // If p is to the left of the time of this interval,\n\t\t        // then it can't be in any child to the right.\n\t\t        if (this.low > point) {\n\t\t            return;\n\t\t        }\n\t\t        // Search right children\n\t\t        if (this.right !== null) {\n\t\t            this.right.search(point, results);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Search the tree for nodes which are less \n\t\t\t *  than the given point\n\t\t\t *  @param  {Number}  point  The point to query\n\t\t\t *  @param  {Array}  results  The array to put the results\n\t\t\t */\n\t\t    IntervalNode.prototype.searchAfter = function (point, results) {\n\t\t        // Check this node\n\t\t        if (this.low >= point) {\n\t\t            results.push(this);\n\t\t            if (this.left !== null) {\n\t\t                this.left.searchAfter(point, results);\n\t\t            }\n\t\t        }\n\t\t        // search the right side\n\t\t        if (this.right !== null) {\n\t\t            this.right.searchAfter(point, results);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Invoke the callback on this element and both it's branches\n\t\t\t *  @param  {Function}  callback\n\t\t\t */\n\t\t    IntervalNode.prototype.traverse = function (callback) {\n\t\t        callback(this);\n\t\t        if (this.left !== null) {\n\t\t            this.left.traverse(callback);\n\t\t        }\n\t\t        if (this.right !== null) {\n\t\t            this.right.traverse(callback);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Update the height of the node\n\t\t\t */\n\t\t    IntervalNode.prototype.updateHeight = function () {\n\t\t        if (this.left !== null && this.right !== null) {\n\t\t            this.height = Math.max(this.left.height, this.right.height) + 1;\n\t\t        } else if (this.right !== null) {\n\t\t            this.height = this.right.height + 1;\n\t\t        } else if (this.left !== null) {\n\t\t            this.height = this.left.height + 1;\n\t\t        } else {\n\t\t            this.height = 0;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Update the height of the node\n\t\t\t */\n\t\t    IntervalNode.prototype.updateMax = function () {\n\t\t        this.max = this.high;\n\t\t        if (this.left !== null) {\n\t\t            this.max = Math.max(this.max, this.left.max);\n\t\t        }\n\t\t        if (this.right !== null) {\n\t\t            this.max = Math.max(this.max, this.right.max);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  The balance is how the leafs are distributed on the node\n\t\t\t *  @return  {Number}  Negative numbers are balanced to the right\n\t\t\t */\n\t\t    IntervalNode.prototype.getBalance = function () {\n\t\t        var balance = 0;\n\t\t        if (this.left !== null && this.right !== null) {\n\t\t            balance = this.left.height - this.right.height;\n\t\t        } else if (this.left !== null) {\n\t\t            balance = this.left.height + 1;\n\t\t        } else if (this.right !== null) {\n\t\t            balance = -(this.right.height + 1);\n\t\t        }\n\t\t        return balance;\n\t\t    };\n\t\t    /**\n\t\t\t *  @returns {Boolean} true if this node is the left child\n\t\t\t *  of its parent\n\t\t\t */\n\t\t    IntervalNode.prototype.isLeftChild = function () {\n\t\t        return this.parent !== null && this.parent.left === this;\n\t\t    };\n\t\t    /**\n\t\t\t *  get/set the left node\n\t\t\t *  @type {IntervalNode}\n\t\t\t */\n\t\t    Object.defineProperty(IntervalNode.prototype, 'left', {\n\t\t        get: function () {\n\t\t            return this._left;\n\t\t        },\n\t\t        set: function (node) {\n\t\t            this._left = node;\n\t\t            if (node !== null) {\n\t\t                node.parent = this;\n\t\t            }\n\t\t            this.updateHeight();\n\t\t            this.updateMax();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  get/set the right node\n\t\t\t *  @type {IntervalNode}\n\t\t\t */\n\t\t    Object.defineProperty(IntervalNode.prototype, 'right', {\n\t\t        get: function () {\n\t\t            return this._right;\n\t\t        },\n\t\t        set: function (node) {\n\t\t            this._right = node;\n\t\t            if (node !== null) {\n\t\t                node.parent = this;\n\t\t            }\n\t\t            this.updateHeight();\n\t\t            this.updateMax();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  null out references.\n\t\t\t */\n\t\t    IntervalNode.prototype.dispose = function () {\n\t\t        this.parent = null;\n\t\t        this._left = null;\n\t\t        this._right = null;\n\t\t        this.event = null;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tEND INTERVAL NODE HELPER\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    return Tone.IntervalTimeline;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Transport for timing musical events.\n\t\t\t *          Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n\t\t\t *          Tone.Transport timing events pass in the exact time of the scheduled event\n\t\t\t *          in the argument of the callback function. Pass that time value to the object\n\t\t\t *          you're scheduling. <br><br>\n\t\t\t *          A single transport is created for you when the library is initialized. \n\t\t\t *          <br><br>\n\t\t\t *          The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n\t\t\t *          called with the time of that event as the argument. \n\t\t\t *\n\t\t\t *  @extends {Tone.Emitter}\n\t\t\t *  @singleton\n\t\t\t *  @example\n\t\t\t * //repeated event every 8th note\n\t\t\t * Tone.Transport.scheduleRepeat(function(time){\n\t\t\t * \t//do something with the time\n\t\t\t * }, \"8n\");\n\t\t\t *  @example\n\t\t\t * //schedule an event on the 16th measure\n\t\t\t * Tone.Transport.schedule(function(time){\n\t\t\t * \t//do something with the time\n\t\t\t * }, \"16:0:0\");\n\t\t\t */\n\t\t    Tone.Transport = function () {\n\t\t        Tone.Emitter.call(this);\n\t\t        ///////////////////////////////////////////////////////////////////////\n\t\t        //\tLOOPING\n\t\t        //////////////////////////////////////////////////////////////////////\n\t\t        /** \n\t\t\t\t * \tIf the transport loops or not.\n\t\t\t\t *  @type {boolean}\n\t\t\t\t */\n\t\t        this.loop = false;\n\t\t        /** \n\t\t\t\t * \tThe loop start position in ticks\n\t\t\t\t *  @type {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopStart = 0;\n\t\t        /** \n\t\t\t\t * \tThe loop end position in ticks\n\t\t\t\t *  @type {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopEnd = 0;\n\t\t        ///////////////////////////////////////////////////////////////////////\n\t\t        //\tCLOCK/TEMPO\n\t\t        //////////////////////////////////////////////////////////////////////\n\t\t        /**\n\t\t\t\t *  Pulses per quarter is the number of ticks per quarter note.\n\t\t\t\t *  @private\n\t\t\t\t *  @type  {Number}\n\t\t\t\t */\n\t\t        this._ppq = TransportConstructor.defaults.PPQ;\n\t\t        /**\n\t\t\t\t *  watches the main oscillator for timing ticks\n\t\t\t\t *  initially starts at 120bpm\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Clock}\n\t\t\t\t */\n\t\t        this._clock = new Tone.Clock({\n\t\t            'callback': this._processTick.bind(this),\n\t\t            'frequency': 0\n\t\t        });\n\t\t        this._bindClockEvents();\n\t\t        /**\n\t\t\t\t *  The Beats Per Minute of the Transport. \n\t\t\t\t *  @type {BPM}\n\t\t\t\t *  @signal\n\t\t\t\t *  @example\n\t\t\t\t * Tone.Transport.bpm.value = 80;\n\t\t\t\t * //ramp the bpm to 120 over 10 seconds\n\t\t\t\t * Tone.Transport.bpm.rampTo(120, 10);\n\t\t\t\t */\n\t\t        this.bpm = this._clock.frequency;\n\t\t        this.bpm._toUnits = this._toUnits.bind(this);\n\t\t        this.bpm._fromUnits = this._fromUnits.bind(this);\n\t\t        this.bpm.units = Tone.Type.BPM;\n\t\t        this.bpm.value = TransportConstructor.defaults.bpm;\n\t\t        this._readOnly('bpm');\n\t\t        /**\n\t\t\t\t *  The time signature, or more accurately the numerator\n\t\t\t\t *  of the time signature over a denominator of 4. \n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._timeSignature = TransportConstructor.defaults.timeSignature;\n\t\t        ///////////////////////////////////////////////////////////////////////\n\t\t        //\tTIMELINE EVENTS\n\t\t        //////////////////////////////////////////////////////////////////////\n\t\t        /**\n\t\t\t\t *  All the events in an object to keep track by ID\n\t\t\t\t *  @type {Object}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scheduledEvents = {};\n\t\t        /**\n\t\t\t\t *  The event ID counter\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._eventID = 0;\n\t\t        /**\n\t\t\t\t * \tThe scheduled events.\n\t\t\t\t *  @type {Tone.Timeline}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._timeline = new Tone.Timeline();\n\t\t        /**\n\t\t\t\t *  Repeated events\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._repeatedEvents = new Tone.IntervalTimeline();\n\t\t        /**\n\t\t\t\t *  Events that occur once\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._onceEvents = new Tone.Timeline();\n\t\t        /** \n\t\t\t\t *  All of the synced Signals\n\t\t\t\t *  @private \n\t\t\t\t *  @type {Array}\n\t\t\t\t */\n\t\t        this._syncedSignals = [];\n\t\t        ///////////////////////////////////////////////////////////////////////\n\t\t        //\tSWING\n\t\t        //////////////////////////////////////////////////////////////////////\n\t\t        /**\n\t\t\t\t *  The subdivision of the swing\n\t\t\t\t *  @type  {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._swingTicks = TransportConstructor.defaults.PPQ / 2;\n\t\t        //8n\n\t\t        /**\n\t\t\t\t *  The swing amount\n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._swingAmount = 0;\n\t\t    };\n\t\t    Tone.extend(Tone.Transport, Tone.Emitter);\n\t\t    /**\n\t\t\t *  the defaults\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.Transport.defaults = {\n\t\t        'bpm': 120,\n\t\t        'swing': 0,\n\t\t        'swingSubdivision': '8n',\n\t\t        'timeSignature': 4,\n\t\t        'loopStart': 0,\n\t\t        'loopEnd': '4m',\n\t\t        'PPQ': 192\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    //\tTICKS\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  called on every tick\n\t\t\t *  @param   {number} tickTime clock relative tick time\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Transport.prototype._processTick = function (tickTime) {\n\t\t        var ticks = this._clock.ticks;\n\t\t        //handle swing\n\t\t        if (this._swingAmount > 0 && ticks % this._ppq !== 0 && //not on a downbeat\n\t\t            ticks % (this._swingTicks * 2) !== 0) {\n\t\t            //add some swing\n\t\t            var progress = ticks % (this._swingTicks * 2) / (this._swingTicks * 2);\n\t\t            var amount = Math.sin(progress * Math.PI) * this._swingAmount;\n\t\t            tickTime += Tone.Time(this._swingTicks * 2 / 3, 'i').eval() * amount;\n\t\t        }\n\t\t        //do the loop test\n\t\t        if (this.loop) {\n\t\t            if (ticks === this._loopEnd) {\n\t\t                this.emit('stop', tickTime);\n\t\t                this._clock.ticks = this._loopStart;\n\t\t                ticks = this._loopStart;\n\t\t                this.emit('start', tickTime, this.seconds);\n\t\t                this.emit('loop', tickTime);\n\t\t            }\n\t\t        }\n\t\t        //process the single occurrence events\n\t\t        this._onceEvents.forEachBefore(ticks, function (event) {\n\t\t            event.callback(tickTime);\n\t\t        });\n\t\t        //and clear the single occurrence timeline\n\t\t        this._onceEvents.cancelBefore(ticks);\n\t\t        //fire the next tick events if their time has come\n\t\t        this._timeline.forEachAtTime(ticks, function (event) {\n\t\t            event.callback(tickTime);\n\t\t        });\n\t\t        //process the repeated events\n\t\t        this._repeatedEvents.forEachAtTime(ticks, function (event) {\n\t\t            if ((ticks - event.time) % event.interval === 0) {\n\t\t                event.callback(tickTime);\n\t\t            }\n\t\t        });\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    //\tSCHEDULABLE EVENTS\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Schedule an event along the timeline.\n\t\t\t *  @param {Function} callback The callback to be invoked at the time.\n\t\t\t *  @param {TransportTime}  time The time to invoke the callback at.\n\t\t\t *  @return {Number} The id of the event which can be used for canceling the event. \n\t\t\t *  @example\n\t\t\t * //trigger the callback when the Transport reaches the desired time\n\t\t\t * Tone.Transport.schedule(function(time){\n\t\t\t * \tenvelope.triggerAttack(time);\n\t\t\t * }, \"128i\");\n\t\t\t */\n\t\t    Tone.Transport.prototype.schedule = function (callback, time) {\n\t\t        var event = {\n\t\t            'time': this.toTicks(time),\n\t\t            'callback': callback\n\t\t        };\n\t\t        var id = this._eventID++;\n\t\t        this._scheduledEvents[id.toString()] = {\n\t\t            'event': event,\n\t\t            'timeline': this._timeline\n\t\t        };\n\t\t        this._timeline.addEvent(event);\n\t\t        return id;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedule a repeated event along the timeline. The event will fire\n\t\t\t *  at the `interval` starting at the `startTime` and for the specified\n\t\t\t *  `duration`. \n\t\t\t *  @param  {Function}  callback   The callback to invoke.\n\t\t\t *  @param  {Time}    interval   The duration between successive\n\t\t\t *                               callbacks.\n\t\t\t *  @param  {TimelinePosition=}    startTime  When along the timeline the events should\n\t\t\t *                               start being invoked.\n\t\t\t *  @param {Time} [duration=Infinity] How long the event should repeat. \n\t\t\t *  @return  {Number}    The ID of the scheduled event. Use this to cancel\n\t\t\t *                           the event. \n\t\t\t *  @example\n\t\t\t * //a callback invoked every eighth note after the first measure\n\t\t\t * Tone.Transport.scheduleRepeat(callback, \"8n\", \"1m\");\n\t\t\t */\n\t\t    Tone.Transport.prototype.scheduleRepeat = function (callback, interval, startTime, duration) {\n\t\t        if (interval <= 0) {\n\t\t            throw new Error('Tone.Transport: repeat events must have an interval larger than 0');\n\t\t        }\n\t\t        var event = {\n\t\t            'time': this.toTicks(startTime),\n\t\t            'duration': this.toTicks(this.defaultArg(duration, Infinity)),\n\t\t            'interval': this.toTicks(interval),\n\t\t            'callback': callback\n\t\t        };\n\t\t        var id = this._eventID++;\n\t\t        this._scheduledEvents[id.toString()] = {\n\t\t            'event': event,\n\t\t            'timeline': this._repeatedEvents\n\t\t        };\n\t\t        this._repeatedEvents.addEvent(event);\n\t\t        return id;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedule an event that will be removed after it is invoked. \n\t\t\t *  Note that if the given time is less than the current transport time, \n\t\t\t *  the event will be invoked immediately. \n\t\t\t *  @param {Function} callback The callback to invoke once.\n\t\t\t *  @param {TransportTime} time The time the callback should be invoked.\n\t\t\t *  @returns {Number} The ID of the scheduled event. \n\t\t\t */\n\t\t    Tone.Transport.prototype.scheduleOnce = function (callback, time) {\n\t\t        var event = {\n\t\t            'time': this.toTicks(time),\n\t\t            'callback': callback\n\t\t        };\n\t\t        var id = this._eventID++;\n\t\t        this._scheduledEvents[id.toString()] = {\n\t\t            'event': event,\n\t\t            'timeline': this._onceEvents\n\t\t        };\n\t\t        this._onceEvents.addEvent(event);\n\t\t        return id;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clear the passed in event id from the timeline\n\t\t\t *  @param {Number} eventId The id of the event.\n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t */\n\t\t    Tone.Transport.prototype.clear = function (eventId) {\n\t\t        if (this._scheduledEvents.hasOwnProperty(eventId)) {\n\t\t            var item = this._scheduledEvents[eventId.toString()];\n\t\t            item.timeline.removeEvent(item.event);\n\t\t            delete this._scheduledEvents[eventId.toString()];\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove scheduled events from the timeline after\n\t\t\t *  the given time. Repeated events will be removed\n\t\t\t *  if their startTime is after the given time\n\t\t\t *  @param {TransportTime} [after=0] Clear all events after\n\t\t\t *                          this time. \n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t */\n\t\t    Tone.Transport.prototype.cancel = function (after) {\n\t\t        after = this.defaultArg(after, 0);\n\t\t        after = this.toTicks(after);\n\t\t        this._timeline.cancel(after);\n\t\t        this._onceEvents.cancel(after);\n\t\t        this._repeatedEvents.cancel(after);\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    //\tSTART/STOP/PAUSE\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Bind start/stop/pause events from the clock and emit them.\n\t\t\t */\n\t\t    Tone.Transport.prototype._bindClockEvents = function () {\n\t\t        this._clock.on('start', function (time, offset) {\n\t\t            offset = Tone.Time(this._clock.ticks, 'i').toSeconds();\n\t\t            this.emit('start', time, offset);\n\t\t        }.bind(this));\n\t\t        this._clock.on('stop', function (time) {\n\t\t            this.emit('stop', time);\n\t\t        }.bind(this));\n\t\t        this._clock.on('pause', function (time) {\n\t\t            this.emit('pause', time);\n\t\t        }.bind(this));\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n\t\t\t *  @type {Tone.State}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'state', {\n\t\t        get: function () {\n\t\t            return this._clock.getStateAtTime(this.now());\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Start the transport and all sources synced to the transport.\n\t\t\t *  @param  {Time} [time=now] The time when the transport should start.\n\t\t\t *  @param  {TransportTime=} offset The timeline offset to start the transport.\n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t *  @example\n\t\t\t * //start the transport in one second starting at beginning of the 5th measure. \n\t\t\t * Tone.Transport.start(\"+1\", \"4:0:0\");\n\t\t\t */\n\t\t    Tone.Transport.prototype.start = function (time, offset) {\n\t\t        //start the clock\n\t\t        if (!this.isUndef(offset)) {\n\t\t            offset = this.toTicks(offset);\n\t\t        }\n\t\t        this._clock.start(time, offset);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the transport and all sources synced to the transport.\n\t\t\t *  @param  {Time} [time=now] The time when the transport should stop. \n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t *  @example\n\t\t\t * Tone.Transport.stop();\n\t\t\t */\n\t\t    Tone.Transport.prototype.stop = function (time) {\n\t\t        this._clock.stop(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Pause the transport and all sources synced to the transport.\n\t\t\t *  @param  {Time} [time=now]\n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t */\n\t\t    Tone.Transport.prototype.pause = function (time) {\n\t\t        this._clock.pause(time);\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    //\tSETTERS/GETTERS\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  The time signature as just the numerator over 4. \n\t\t\t *  For example 4/4 would be just 4 and 6/8 would be 3.\n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {Number|Array}\n\t\t\t *  @name timeSignature\n\t\t\t *  @example\n\t\t\t * //common time\n\t\t\t * Tone.Transport.timeSignature = 4;\n\t\t\t * // 7/8\n\t\t\t * Tone.Transport.timeSignature = [7, 8];\n\t\t\t * //this will be reduced to a single number\n\t\t\t * Tone.Transport.timeSignature; //returns 3.5\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'timeSignature', {\n\t\t        get: function () {\n\t\t            return this._timeSignature;\n\t\t        },\n\t\t        set: function (timeSig) {\n\t\t            if (this.isArray(timeSig)) {\n\t\t                timeSig = timeSig[0] / timeSig[1] * 4;\n\t\t            }\n\t\t            this._timeSignature = timeSig;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * When the Tone.Transport.loop = true, this is the starting position of the loop.\n\t\t\t * @memberOf Tone.Transport#\n\t\t\t * @type {TransportTime}\n\t\t\t * @name loopStart\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'loopStart', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this._loopStart, 'i').toSeconds();\n\t\t        },\n\t\t        set: function (startPosition) {\n\t\t            this._loopStart = this.toTicks(startPosition);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * When the Tone.Transport.loop = true, this is the ending position of the loop.\n\t\t\t * @memberOf Tone.Transport#\n\t\t\t * @type {TransportTime}\n\t\t\t * @name loopEnd\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'loopEnd', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this._loopEnd, 'i').toSeconds();\n\t\t        },\n\t\t        set: function (endPosition) {\n\t\t            this._loopEnd = this.toTicks(endPosition);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Set the loop start and stop at the same time. \n\t\t\t *  @param {TransportTime} startPosition \n\t\t\t *  @param {TransportTime} endPosition   \n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t *  @example\n\t\t\t * //loop over the first measure\n\t\t\t * Tone.Transport.setLoopPoints(0, \"1m\");\n\t\t\t * Tone.Transport.loop = true;\n\t\t\t */\n\t\t    Tone.Transport.prototype.setLoopPoints = function (startPosition, endPosition) {\n\t\t        this.loopStart = startPosition;\n\t\t        this.loopEnd = endPosition;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The swing value. Between 0-1 where 1 equal to \n\t\t\t *  the note + half the subdivision.\n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @name swing\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'swing', {\n\t\t        get: function () {\n\t\t            return this._swingAmount;\n\t\t        },\n\t\t        set: function (amount) {\n\t\t            //scale the values to a normal range\n\t\t            this._swingAmount = amount;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Set the subdivision which the swing will be applied to. \n\t\t\t *  The default values is a 16th note. Value must be less \n\t\t\t *  than a quarter note.\n\t\t\t *  \n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {Time}\n\t\t\t *  @name swingSubdivision\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'swingSubdivision', {\n\t\t        get: function () {\n\t\t            return Tone.Time(this._swingTicks, 'i').toNotation();\n\t\t        },\n\t\t        set: function (subdivision) {\n\t\t            this._swingTicks = this.toTicks(subdivision);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The Transport's position in Bars:Beats:Sixteenths.\n\t\t\t *  Setting the value will jump to that position right away. \n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {BarsBeatsSixteenths}\n\t\t\t *  @name position\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'position', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this.ticks, 'i').toBarsBeatsSixteenths();\n\t\t        },\n\t\t        set: function (progress) {\n\t\t            var ticks = this.toTicks(progress);\n\t\t            this.ticks = ticks;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The Transport's position in seconds\n\t\t\t *  Setting the value will jump to that position right away. \n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {Seconds}\n\t\t\t *  @name seconds\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'seconds', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this.ticks, 'i').toSeconds();\n\t\t        },\n\t\t        set: function (progress) {\n\t\t            var ticks = this.toTicks(progress);\n\t\t            this.ticks = ticks;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The Transport's loop position as a normalized value. Always\n\t\t\t *  returns 0 if the transport if loop is not true. \n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @name progress\n\t\t\t *  @type {NormalRange}\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'progress', {\n\t\t        get: function () {\n\t\t            if (this.loop) {\n\t\t                return (this.ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n\t\t            } else {\n\t\t                return 0;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The transports current tick position.\n\t\t\t *  \n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {Ticks}\n\t\t\t *  @name ticks\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'ticks', {\n\t\t        get: function () {\n\t\t            return this._clock.ticks;\n\t\t        },\n\t\t        set: function (t) {\n\t\t            var now = this.now();\n\t\t            //stop everything synced to the transport\n\t\t            if (this.state === Tone.State.Started) {\n\t\t                this.emit('stop', now);\n\t\t                this._clock.ticks = t;\n\t\t                //restart it with the new time\n\t\t                this.emit('start', now, this.seconds);\n\t\t            } else {\n\t\t                this._clock.ticks = t;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Pulses Per Quarter note. This is the smallest resolution\n\t\t\t *  the Transport timing supports. This should be set once\n\t\t\t *  on initialization and not set again. Changing this value \n\t\t\t *  after other objects have been created can cause problems. \n\t\t\t *  \n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {Number}\n\t\t\t *  @name PPQ\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'PPQ', {\n\t\t        get: function () {\n\t\t            return this._ppq;\n\t\t        },\n\t\t        set: function (ppq) {\n\t\t            var bpm = this.bpm.value;\n\t\t            this._ppq = ppq;\n\t\t            this.bpm.value = bpm;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Convert from BPM to frequency (factoring in PPQ)\n\t\t\t *  @param  {BPM}  bpm The BPM value to convert to frequency\n\t\t\t *  @return  {Frequency}  The BPM as a frequency with PPQ factored in.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Transport.prototype._fromUnits = function (bpm) {\n\t\t        return 1 / (60 / bpm / this.PPQ);\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert from frequency (with PPQ) into BPM\n\t\t\t *  @param  {Frequency}  freq The clocks frequency to convert to BPM\n\t\t\t *  @return  {BPM}  The frequency value as BPM.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Transport.prototype._toUnits = function (freq) {\n\t\t        return freq / this.PPQ * 60;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    //\tSYNCING\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Returns the time aligned to the next subdivision\n\t\t\t *  of the Transport. If the Transport is not started,\n\t\t\t *  it will return 0.\n\t\t\t *  Note: this will not work precisely during tempo ramps.\n\t\t\t *  @param  {Time}  subdivision  The subdivision to quantize to\n\t\t\t *  @return  {Number}  The context time of the next subdivision.\n\t\t\t *  @example\n\t\t\t * Tone.Transport.start(); //the transport must be started\n\t\t\t * Tone.Transport.nextSubdivision(\"4n\");\n\t\t\t */\n\t\t    Tone.Transport.prototype.nextSubdivision = function (subdivision) {\n\t\t        subdivision = this.toSeconds(subdivision);\n\t\t        //if the transport's not started, return 0\n\t\t        var now;\n\t\t        if (this.state === Tone.State.Started) {\n\t\t            now = this._clock._nextTick;\n\t\t        } else {\n\t\t            return 0;\n\t\t        }\n\t\t        var transportPos = Tone.Time(this.ticks, 'i').eval();\n\t\t        var remainingTime = subdivision - transportPos % subdivision;\n\t\t        if (remainingTime === 0) {\n\t\t            remainingTime = subdivision;\n\t\t        }\n\t\t        return now + remainingTime;\n\t\t    };\n\t\t    /**\n\t\t\t *  Attaches the signal to the tempo control signal so that \n\t\t\t *  any changes in the tempo will change the signal in the same\n\t\t\t *  ratio. \n\t\t\t *  \n\t\t\t *  @param  {Tone.Signal} signal \n\t\t\t *  @param {number=} ratio Optionally pass in the ratio between\n\t\t\t *                         the two signals. Otherwise it will be computed\n\t\t\t *                         based on their current values. \n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t */\n\t\t    Tone.Transport.prototype.syncSignal = function (signal, ratio) {\n\t\t        if (!ratio) {\n\t\t            //get the sync ratio\n\t\t            if (signal._param.value !== 0) {\n\t\t                ratio = signal._param.value / this.bpm._param.value;\n\t\t            } else {\n\t\t                ratio = 0;\n\t\t            }\n\t\t        }\n\t\t        var ratioSignal = new Tone.Gain(ratio);\n\t\t        this.bpm.chain(ratioSignal, signal._param);\n\t\t        this._syncedSignals.push({\n\t\t            'ratio': ratioSignal,\n\t\t            'signal': signal,\n\t\t            'initial': signal._param.value\n\t\t        });\n\t\t        signal._param.value = 0;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Unsyncs a previously synced signal from the transport's control. \n\t\t\t *  See Tone.Transport.syncSignal.\n\t\t\t *  @param  {Tone.Signal} signal \n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t */\n\t\t    Tone.Transport.prototype.unsyncSignal = function (signal) {\n\t\t        for (var i = this._syncedSignals.length - 1; i >= 0; i--) {\n\t\t            var syncedSignal = this._syncedSignals[i];\n\t\t            if (syncedSignal.signal === signal) {\n\t\t                syncedSignal.ratio.dispose();\n\t\t                syncedSignal.signal._param.value = syncedSignal.initial;\n\t\t                this._syncedSignals.splice(i, 1);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Transport.prototype.dispose = function () {\n\t\t        Tone.Emitter.prototype.dispose.call(this);\n\t\t        this._clock.dispose();\n\t\t        this._clock = null;\n\t\t        this._writable('bpm');\n\t\t        this.bpm = null;\n\t\t        this._timeline.dispose();\n\t\t        this._timeline = null;\n\t\t        this._onceEvents.dispose();\n\t\t        this._onceEvents = null;\n\t\t        this._repeatedEvents.dispose();\n\t\t        this._repeatedEvents = null;\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    //\tINITIALIZATION\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    var TransportConstructor = Tone.Transport;\n\t\t    Tone._initAudioContext(function () {\n\t\t        if (typeof Tone.Transport === 'function') {\n\t\t            //a single transport object\n\t\t            Tone.Transport = new Tone.Transport();\n\t\t        } else {\n\t\t            //stop the clock\n\t\t            Tone.Transport.stop();\n\t\t            //get the previous values\n\t\t            var prevSettings = Tone.Transport.get();\n\t\t            //destory the old transport\n\t\t            Tone.Transport.dispose();\n\t\t            //make new Transport insides\n\t\t            TransportConstructor.call(Tone.Transport);\n\t\t            //set the previous config\n\t\t            Tone.Transport.set(prevSettings);\n\t\t        }\n\t\t    });\n\t\t    return Tone.Transport;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Volume is a simple volume node, useful for creating a volume fader. \n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {Decibels} [volume=0] the initial volume\n\t\t\t *  @example\n\t\t\t * var vol = new Tone.Volume(-12);\n\t\t\t * instrument.chain(vol, Tone.Master);\n\t\t\t */\n\t\t    Tone.Volume = function () {\n\t\t        var options = this.optionsObject(arguments, ['volume'], Tone.Volume.defaults);\n\t\t        /**\n\t\t\t\t * the output node\n\t\t\t\t * @type {GainNode}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this.output = this.input = new Tone.Gain(options.volume, Tone.Type.Decibels);\n\t\t        /**\n\t\t\t\t * The unmuted volume\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this._unmutedVolume = 0;\n\t\t        /**\n\t\t\t\t *  if the volume is muted\n\t\t\t\t *  @type {Boolean}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._muted = false;\n\t\t        /**\n\t\t\t\t *  The volume control in decibels. \n\t\t\t\t *  @type {Decibels}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.volume = this.output.gain;\n\t\t        this._readOnly('volume');\n\t\t        //set the mute initially\n\t\t        this.mute = options.mute;\n\t\t    };\n\t\t    Tone.extend(Tone.Volume);\n\t\t    /**\n\t\t\t *  Defaults\n\t\t\t *  @type  {Object}\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.Volume.defaults = {\n\t\t        'volume': 0,\n\t\t        'mute': false\n\t\t    };\n\t\t    /**\n\t\t\t * Mute the output. \n\t\t\t * @memberOf Tone.Volume#\n\t\t\t * @type {boolean}\n\t\t\t * @name mute\n\t\t\t * @example\n\t\t\t * //mute the output\n\t\t\t * volume.mute = true;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Volume.prototype, 'mute', {\n\t\t        get: function () {\n\t\t            return this._muted;\n\t\t        },\n\t\t        set: function (mute) {\n\t\t            if (!this._muted && mute) {\n\t\t                this._unmutedVolume = this.volume.value;\n\t\t                //maybe it should ramp here?\n\t\t                this.volume.value = -Infinity;\n\t\t            } else if (this._muted && !mute) {\n\t\t                this.volume.value = this._unmutedVolume;\n\t\t            }\n\t\t            this._muted = mute;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Volume} this\n\t\t\t */\n\t\t    Tone.Volume.prototype.dispose = function () {\n\t\t        this.input.dispose();\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable('volume');\n\t\t        this.volume.dispose();\n\t\t        this.volume = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Volume;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  A single master output which is connected to the\n\t\t\t *          AudioDestinationNode (aka your speakers). \n\t\t\t *          It provides useful conveniences such as the ability \n\t\t\t *          to set the volume and mute the entire application. \n\t\t\t *          It also gives you the ability to apply master effects to your application. \n\t\t\t *          <br><br>\n\t\t\t *          Like Tone.Transport, A single Tone.Master is created\n\t\t\t *          on initialization and you do not need to explicitly construct one.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @singleton\n\t\t\t *  @example\n\t\t\t * //the audio will go from the oscillator to the speakers\n\t\t\t * oscillator.connect(Tone.Master);\n\t\t\t * //a convenience for connecting to the master output is also provided:\n\t\t\t * oscillator.toMaster();\n\t\t\t * //the above two examples are equivalent.\n\t\t\t */\n\t\t    Tone.Master = function () {\n\t\t        this.createInsOuts(1, 1);\n\t\t        /**\n\t\t\t\t *  The private volume node\n\t\t\t\t *  @type  {Tone.Volume}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._volume = this.output = new Tone.Volume();\n\t\t        /**\n\t\t\t\t * The volume of the master output.\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.volume = this._volume.volume;\n\t\t        this._readOnly('volume');\n\t\t        //connections\n\t\t        this.input.chain(this.output, this.context.destination);\n\t\t    };\n\t\t    Tone.extend(Tone.Master);\n\t\t    /**\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Master.defaults = {\n\t\t        'volume': 0,\n\t\t        'mute': false\n\t\t    };\n\t\t    /**\n\t\t\t * Mute the output. \n\t\t\t * @memberOf Tone.Master#\n\t\t\t * @type {boolean}\n\t\t\t * @name mute\n\t\t\t * @example\n\t\t\t * //mute the output\n\t\t\t * Tone.Master.mute = true;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Master.prototype, 'mute', {\n\t\t        get: function () {\n\t\t            return this._volume.mute;\n\t\t        },\n\t\t        set: function (mute) {\n\t\t            this._volume.mute = mute;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Add a master effects chain. NOTE: this will disconnect any nodes which were previously \n\t\t\t *  chained in the master effects chain. \n\t\t\t *  @param {AudioNode|Tone...} args All arguments will be connected in a row\n\t\t\t *                                  and the Master will be routed through it.\n\t\t\t *  @return  {Tone.Master}  this\n\t\t\t *  @example\n\t\t\t * //some overall compression to keep the levels in check\n\t\t\t * var masterCompressor = new Tone.Compressor({\n\t\t\t * \t\"threshold\" : -6,\n\t\t\t * \t\"ratio\" : 3,\n\t\t\t * \t\"attack\" : 0.5,\n\t\t\t * \t\"release\" : 0.1\n\t\t\t * });\n\t\t\t * //give a little boost to the lows\n\t\t\t * var lowBump = new Tone.Filter(200, \"lowshelf\");\n\t\t\t * //route everything through the filter \n\t\t\t * //and compressor before going to the speakers\n\t\t\t * Tone.Master.chain(lowBump, masterCompressor);\n\t\t\t */\n\t\t    Tone.Master.prototype.chain = function () {\n\t\t        this.input.disconnect();\n\t\t        this.input.chain.apply(this.input, arguments);\n\t\t        arguments[arguments.length - 1].connect(this.output);\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.Master}  this\n\t\t\t */\n\t\t    Tone.Master.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable('volume');\n\t\t        this._volume.dispose();\n\t\t        this._volume = null;\n\t\t        this.volume = null;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tAUGMENT TONE's PROTOTYPE\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Connect 'this' to the master output. Shorthand for this.connect(Tone.Master)\n\t\t\t *  @returns {Tone} this\n\t\t\t *  @example\n\t\t\t * //connect an oscillator to the master output\n\t\t\t * var osc = new Tone.Oscillator().toMaster();\n\t\t\t */\n\t\t    Tone.prototype.toMaster = function () {\n\t\t        this.connect(Tone.Master);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Also augment AudioNode's prototype to include toMaster\n\t\t\t *  as a convenience\n\t\t\t *  @returns {AudioNode} this\n\t\t\t */\n\t\t    AudioNode.prototype.toMaster = function () {\n\t\t        this.connect(Tone.Master);\n\t\t        return this;\n\t\t    };\n\t\t    var MasterConstructor = Tone.Master;\n\t\t    /**\n\t\t\t *  initialize the module and listen for new audio contexts\n\t\t\t */\n\t\t    Tone._initAudioContext(function () {\n\t\t        //a single master output\n\t\t        if (!Tone.prototype.isUndef(Tone.Master)) {\n\t\t            Tone.Master = new MasterConstructor();\n\t\t        } else {\n\t\t            MasterConstructor.prototype.dispose.call(Tone.Master);\n\t\t            MasterConstructor.call(Tone.Master);\n\t\t        }\n\t\t    });\n\t\t    return Tone.Master;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Base class for sources. Sources have start/stop methods\n\t\t\t *          and the ability to be synced to the \n\t\t\t *          start/stop of Tone.Transport. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * //Multiple state change events can be chained together,\n\t\t\t * //but must be set in the correct order and with ascending times\n\t\t\t * \n\t\t\t * // OK\n\t\t\t * state.start().stop(\"+0.2\");\n\t\t\t * // AND\n\t\t\t * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n\t\t\t *\n\t\t\t * // BAD\n\t\t\t * state.stop(\"+0.2\").start();\n\t\t\t * // OR\n\t\t\t * state.start(\"+0.3\").stop(\"+0.2\");\n\t\t\t * \n\t\t\t */\n\t\t    Tone.Source = function (options) {\n\t\t        // this.createInsOuts(0, 1);\n\t\t        options = this.defaultArg(options, Tone.Source.defaults);\n\t\t        /**\n\t\t\t\t *  The output volume node\n\t\t\t\t *  @type  {Tone.Volume}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t\t        /**\n\t\t\t\t * The volume of the output in decibels.\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t * @example\n\t\t\t\t * source.volume.value = -6;\n\t\t\t\t */\n\t\t        this.volume = this._volume.volume;\n\t\t        this._readOnly('volume');\n\t\t        /**\n\t\t\t\t * \tKeep track of the scheduled state.\n\t\t\t\t *  @type {Tone.TimelineState}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t\t        this._state.memory = 10;\n\t\t        /**\n\t\t\t\t *  The synced `start` callback function from the transport\n\t\t\t\t *  @type {Function}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._synced = false;\n\t\t        /**\n\t\t\t\t *  Keep track of all of the scheduled event ids\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scheduled = [];\n\t\t        //make the output explicitly stereo\n\t\t        this._volume.output.output.channelCount = 2;\n\t\t        this._volume.output.output.channelCountMode = 'explicit';\n\t\t        //mute initially\n\t\t        this.mute = options.mute;\n\t\t    };\n\t\t    Tone.extend(Tone.Source);\n\t\t    /**\n\t\t\t *  The default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Source.defaults = {\n\t\t        'volume': 0,\n\t\t        'mute': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t\t *  @type {Tone.State}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.Source#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Source.prototype, 'state', {\n\t\t        get: function () {\n\t\t            if (this._synced) {\n\t\t                if (Tone.Transport.state === Tone.State.Started) {\n\t\t                    return this._state.getStateAtTime(Tone.Transport.seconds);\n\t\t                } else {\n\t\t                    return Tone.State.Stopped;\n\t\t                }\n\t\t            } else {\n\t\t                return this._state.getStateAtTime(this.now());\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * Mute the output. \n\t\t\t * @memberOf Tone.Source#\n\t\t\t * @type {boolean}\n\t\t\t * @name mute\n\t\t\t * @example\n\t\t\t * //mute the output\n\t\t\t * source.mute = true;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Source.prototype, 'mute', {\n\t\t        get: function () {\n\t\t            return this._volume.mute;\n\t\t        },\n\t\t        set: function (mute) {\n\t\t            this._volume.mute = mute;\n\t\t        }\n\t\t    });\n\t\t    //overwrite these functions\n\t\t    Tone.Source.prototype._start = Tone.noOp;\n\t\t    Tone.Source.prototype._stop = Tone.noOp;\n\t\t    /**\n\t\t\t *  Start the source at the specified time. If no time is given, \n\t\t\t *  start the source now.\n\t\t\t *  @param  {Time} [time=now] When the source should be started.\n\t\t\t *  @returns {Tone.Source} this\n\t\t\t *  @example\n\t\t\t * source.start(\"+0.5\"); //starts the source 0.5 seconds from now\n\t\t\t */\n\t\t    Tone.Source.prototype.start = function (time, offset, duration) {\n\t\t        if (this.isUndef(time) && this._synced) {\n\t\t            time = Tone.Transport.seconds;\n\t\t        } else {\n\t\t            time = this.toSeconds(time);\n\t\t        }\n\t\t        //if it's started, stop it and restart it\n\t\t        if (this._state.getStateAtTime(time) === Tone.State.Started) {\n\t\t            this.stop(time);\n\t\t        }\n\t\t        this._state.setStateAtTime(Tone.State.Started, time);\n\t\t        if (this._synced) {\n\t\t            // add the offset time to the event\n\t\t            var event = this._state.getEvent(time);\n\t\t            event.offset = this.defaultArg(offset, 0);\n\t\t            event.duration = duration;\n\t\t            var sched = Tone.Transport.schedule(function (t) {\n\t\t                this._start(t, offset, duration);\n\t\t            }.bind(this), time);\n\t\t            this._scheduled.push(sched);\n\t\t        } else {\n\t\t            this._start.apply(this, arguments);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the source at the specified time. If no time is given, \n\t\t\t *  stop the source now.\n\t\t\t *  @param  {Time} [time=now] When the source should be stopped. \n\t\t\t *  @returns {Tone.Source} this\n\t\t\t *  @example\n\t\t\t * source.stop(); // stops the source immediately\n\t\t\t */\n\t\t    Tone.Source.prototype.stop = function (time) {\n\t\t        if (this.isUndef(time) && this._synced) {\n\t\t            time = Tone.Transport.seconds;\n\t\t        } else {\n\t\t            time = this.toSeconds(time);\n\t\t        }\n\t\t        this._state.cancel(time);\n\t\t        this._state.setStateAtTime(Tone.State.Stopped, time);\n\t\t        if (!this._synced) {\n\t\t            this._stop.apply(this, arguments);\n\t\t        } else {\n\t\t            var sched = Tone.Transport.schedule(this._stop.bind(this), time);\n\t\t            this._scheduled.push(sched);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Sync the source to the Transport so that all subsequent\n\t\t\t *  calls to `start` and `stop` are synced to the TransportTime\n\t\t\t *  instead of the AudioContext time. \n\t\t\t *\n\t\t\t *  @returns {Tone.Source} this\n\t\t\t *  @example\n\t\t\t * //sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n\t\t\t * source.sync().start(0).stop(0.3);\n\t\t\t * //start the transport.\n\t\t\t * Tone.Transport.start();\n\t\t\t *\n\t\t\t *  @example\n\t\t\t * //start the transport with an offset and the sync'ed sources\n\t\t\t * //will start in the correct position\n\t\t\t * source.sync().start(0.1);\n\t\t\t * //the source will be invoked with an offset of 0.4\n\t\t\t * Tone.Transport.start(\"+0.5\", 0.5);\n\t\t\t */\n\t\t    Tone.Source.prototype.sync = function () {\n\t\t        this._synced = true;\n\t\t        Tone.Transport.on('start', function (time, offset) {\n\t\t            if (offset > 0) {\n\t\t                // get the playback state at that time\n\t\t                var stateEvent = this._state.getEvent(offset);\n\t\t                // listen for start events which may occur in the middle of the sync'ed time\n\t\t                if (stateEvent && stateEvent.state === Tone.State.Started && stateEvent.time !== offset) {\n\t\t                    // get the offset\n\t\t                    var startOffset = offset - this.toSeconds(stateEvent.time);\n\t\t                    var duration;\n\t\t                    if (stateEvent.duration) {\n\t\t                        duration = this.toSeconds(stateEvent.duration) - startOffset;\n\t\t                    }\n\t\t                    this._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n\t\t                }\n\t\t            }\n\t\t        }.bind(this));\n\t\t        Tone.Transport.on('stop pause', function (time) {\n\t\t            if (this._state.getStateAtTime(Tone.Transport.seconds) === Tone.State.Started) {\n\t\t                this._stop(time);\n\t\t            }\n\t\t        }.bind(this));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Unsync the source to the Transport. See Tone.Source.sync\n\t\t\t *  @returns {Tone.Source} this\n\t\t\t */\n\t\t    Tone.Source.prototype.unsync = function () {\n\t\t        this._synced = false;\n\t\t        Tone.Transport.off('start stop pause');\n\t\t        // clear all of the scheduled ids\n\t\t        for (var i = 0; i < this._scheduled.length; i++) {\n\t\t            var id = this._scheduled[i];\n\t\t            Tone.Transport.clear(id);\n\t\t        }\n\t\t        this._scheduled = [];\n\t\t        this._state.cancel(0);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *\tClean up.\n\t\t\t *  @return {Tone.Source} this\n\t\t\t */\n\t\t    Tone.Source.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this.unsync();\n\t\t        this._scheduled = null;\n\t\t        this._writable('volume');\n\t\t        this._volume.dispose();\n\t\t        this._volume = null;\n\t\t        this.volume = null;\n\t\t        this._state.dispose();\n\t\t        this._state = null;\n\t\t    };\n\t\t    return Tone.Source;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Oscillator supports a number of features including\n\t\t\t *         phase rotation, multiple oscillator types (see Tone.Oscillator.type), \n\t\t\t *         and Transport syncing (see Tone.Oscillator.syncFrequency).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Source}\n\t\t\t *  @param {Frequency} [frequency] Starting frequency\n\t\t\t *  @param {string} [type] The oscillator type. Read more about type below.\n\t\t\t *  @example\n\t\t\t * //make and start a 440hz sine tone\n\t\t\t * var osc = new Tone.Oscillator(440, \"sine\").toMaster().start();\n\t\t\t */\n\t\t    Tone.Oscillator = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'type'\n\t\t        ], Tone.Oscillator.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  the main oscillator\n\t\t\t\t *  @type {OscillatorNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._oscillator = null;\n\t\t        /**\n\t\t\t\t *  The frequency control.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The detune control signal.\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t\t        /**\n\t\t\t\t *  the periodic wave\n\t\t\t\t *  @type {PeriodicWave}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._wave = null;\n\t\t        /**\n\t\t\t\t *  The partials of the oscillator\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._partials = this.defaultArg(options.partials, [1]);\n\t\t        /**\n\t\t\t\t *  the phase of the oscillator\n\t\t\t\t *  between 0 - 360\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._phase = options.phase;\n\t\t        /**\n\t\t\t\t *  the type of the oscillator\n\t\t\t\t *  @type {string}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._type = null;\n\t\t        //setup\n\t\t        this.type = options.type;\n\t\t        this.phase = this._phase;\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.Oscillator, Tone.Source);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Oscillator.defaults = {\n\t\t        'type': 'sine',\n\t\t        'frequency': 440,\n\t\t        'detune': 0,\n\t\t        'phase': 0,\n\t\t        'partials': []\n\t\t    };\n\t\t    /**\n\t\t\t *  The Oscillator types\n\t\t\t *  @enum {String}\n\t\t\t */\n\t\t    Tone.Oscillator.Type = {\n\t\t        Sine: 'sine',\n\t\t        Triangle: 'triangle',\n\t\t        Sawtooth: 'sawtooth',\n\t\t        Square: 'square',\n\t\t        Custom: 'custom'\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param  {Time} [time=now] \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Oscillator.prototype._start = function (time) {\n\t\t        //new oscillator with previous values\n\t\t        this._oscillator = this.context.createOscillator();\n\t\t        this._oscillator.setPeriodicWave(this._wave);\n\t\t        //connect the control signal to the oscillator frequency & detune\n\t\t        this._oscillator.connect(this.output);\n\t\t        this.frequency.connect(this._oscillator.frequency);\n\t\t        this.detune.connect(this._oscillator.detune);\n\t\t        //start the oscillator\n\t\t        this._oscillator.start(this.toSeconds(time));\n\t\t    };\n\t\t    /**\n\t\t\t *  stop the oscillator\n\t\t\t *  @private\n\t\t\t *  @param  {Time} [time=now] (optional) timing parameter\n\t\t\t *  @returns {Tone.Oscillator} this\n\t\t\t */\n\t\t    Tone.Oscillator.prototype._stop = function (time) {\n\t\t        if (this._oscillator) {\n\t\t            this._oscillator.stop(this.toSeconds(time));\n\t\t            this._oscillator = null;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n\t\t\t *  will also affect the oscillators frequency. \n\t\t\t *  @returns {Tone.Oscillator} this\n\t\t\t *  @example\n\t\t\t * Tone.Transport.bpm.value = 120;\n\t\t\t * osc.frequency.value = 440;\n\t\t\t * //the ration between the bpm and the frequency will be maintained\n\t\t\t * osc.syncFrequency();\n\t\t\t * Tone.Transport.bpm.value = 240; \n\t\t\t * // the frequency of the oscillator is doubled to 880\n\t\t\t */\n\t\t    Tone.Oscillator.prototype.syncFrequency = function () {\n\t\t        Tone.Transport.syncSignal(this.frequency);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Unsync the oscillator's frequency from the Transport. \n\t\t\t *  See Tone.Oscillator.syncFrequency\n\t\t\t *  @returns {Tone.Oscillator} this\n\t\t\t */\n\t\t    Tone.Oscillator.prototype.unsyncFrequency = function () {\n\t\t        Tone.Transport.unsyncSignal(this.frequency);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the oscillator: either sine, square, triangle, or sawtooth. Also capable of\n\t\t\t * setting the first x number of partials of the oscillator. For example: \"sine4\" would\n\t\t\t * set be the first 4 partials of the sine wave and \"triangle8\" would set the first\n\t\t\t * 8 partials of the triangle wave.\n\t\t\t * <br><br> \n\t\t\t * Uses PeriodicWave internally even for native types so that it can set the phase. \n\t\t\t * PeriodicWave equations are from the \n\t\t\t * [Webkit Web Audio implementation](https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/modules/webaudio/PeriodicWave.cpp&sq=package:chromium).\n\t\t\t *  \n\t\t\t * @memberOf Tone.Oscillator#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t * @example\n\t\t\t * //set it to a square wave\n\t\t\t * osc.type = \"square\";\n\t\t\t * @example\n\t\t\t * //set the first 6 partials of a sawtooth wave\n\t\t\t * osc.type = \"sawtooth6\";\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Oscillator.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            var coefs = this._getRealImaginary(type, this._phase);\n\t\t            var periodicWave = this.context.createPeriodicWave(coefs[0], coefs[1]);\n\t\t            this._wave = periodicWave;\n\t\t            if (this._oscillator !== null) {\n\t\t                this._oscillator.setPeriodicWave(this._wave);\n\t\t            }\n\t\t            this._type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Returns the real and imaginary components based \n\t\t\t *  on the oscillator type.\n\t\t\t *  @returns {Array} [real, imaginary]\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Oscillator.prototype._getRealImaginary = function (type, phase) {\n\t\t        var fftSize = 4096;\n\t\t        var periodicWaveSize = fftSize / 2;\n\t\t        var real = new Float32Array(periodicWaveSize);\n\t\t        var imag = new Float32Array(periodicWaveSize);\n\t\t        var partialCount = 1;\n\t\t        if (type === Tone.Oscillator.Type.Custom) {\n\t\t            partialCount = this._partials.length + 1;\n\t\t            periodicWaveSize = partialCount;\n\t\t        } else {\n\t\t            var partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n\t\t            if (partial) {\n\t\t                partialCount = parseInt(partial[2]) + 1;\n\t\t                type = partial[1];\n\t\t                partialCount = Math.max(partialCount, 2);\n\t\t                periodicWaveSize = partialCount;\n\t\t            }\n\t\t        }\n\t\t        for (var n = 1; n < periodicWaveSize; ++n) {\n\t\t            var piFactor = 2 / (n * Math.PI);\n\t\t            var b;\n\t\t            switch (type) {\n\t\t            case Tone.Oscillator.Type.Sine:\n\t\t                b = n <= partialCount ? 1 : 0;\n\t\t                break;\n\t\t            case Tone.Oscillator.Type.Square:\n\t\t                b = n & 1 ? 2 * piFactor : 0;\n\t\t                break;\n\t\t            case Tone.Oscillator.Type.Sawtooth:\n\t\t                b = piFactor * (n & 1 ? 1 : -1);\n\t\t                break;\n\t\t            case Tone.Oscillator.Type.Triangle:\n\t\t                if (n & 1) {\n\t\t                    b = 2 * (piFactor * piFactor) * (n - 1 >> 1 & 1 ? -1 : 1);\n\t\t                } else {\n\t\t                    b = 0;\n\t\t                }\n\t\t                break;\n\t\t            case Tone.Oscillator.Type.Custom:\n\t\t                b = this._partials[n - 1];\n\t\t                break;\n\t\t            default:\n\t\t                throw new TypeError('Tone.Oscillator: invalid type: ' + type);\n\t\t            }\n\t\t            if (b !== 0) {\n\t\t                real[n] = -b * Math.sin(phase * n);\n\t\t                imag[n] = b * Math.cos(phase * n);\n\t\t            } else {\n\t\t                real[n] = 0;\n\t\t                imag[n] = 0;\n\t\t            }\n\t\t        }\n\t\t        return [\n\t\t            real,\n\t\t            imag\n\t\t        ];\n\t\t    };\n\t\t    /**\n\t\t\t *  Compute the inverse FFT for a given phase.\t\n\t\t\t *  @param  {Float32Array}  real\n\t\t\t *  @param  {Float32Array}  imag \n\t\t\t *  @param  {NormalRange}  phase \n\t\t\t *  @return  {AudioRange}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Oscillator.prototype._inverseFFT = function (real, imag, phase) {\n\t\t        var sum = 0;\n\t\t        var len = real.length;\n\t\t        for (var i = 0; i < len; i++) {\n\t\t            sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n\t\t        }\n\t\t        return sum;\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the initial value of the oscillator.\n\t\t\t *  @return  {AudioRange}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Oscillator.prototype._getInitialValue = function () {\n\t\t        var coefs = this._getRealImaginary(this._type, 0);\n\t\t        var real = coefs[0];\n\t\t        var imag = coefs[1];\n\t\t        var maxValue = 0;\n\t\t        var twoPi = Math.PI * 2;\n\t\t        //check for peaks in 8 places\n\t\t        for (var i = 0; i < 8; i++) {\n\t\t            maxValue = Math.max(this._inverseFFT(real, imag, i / 8 * twoPi), maxValue);\n\t\t        }\n\t\t        return -this._inverseFFT(real, imag, this._phase) / maxValue;\n\t\t    };\n\t\t    /**\n\t\t\t * The partials of the waveform. A partial represents \n\t\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t\t * fundamental frequency, the second is the octave and so on\n\t\t\t * following the harmonic series. \n\t\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t\t * The value is an empty array when the type is not \"custom\". \n\t\t\t * @memberOf Tone.Oscillator#\n\t\t\t * @type {Array}\n\t\t\t * @name partials\n\t\t\t * @example\n\t\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Oscillator.prototype, 'partials', {\n\t\t        get: function () {\n\t\t            if (this._type !== Tone.Oscillator.Type.Custom) {\n\t\t                return [];\n\t\t            } else {\n\t\t                return this._partials;\n\t\t            }\n\t\t        },\n\t\t        set: function (partials) {\n\t\t            this._partials = partials;\n\t\t            this.type = Tone.Oscillator.Type.Custom;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The phase of the oscillator in degrees. \n\t\t\t * @memberOf Tone.Oscillator#\n\t\t\t * @type {Degrees}\n\t\t\t * @name phase\n\t\t\t * @example\n\t\t\t * osc.phase = 180; //flips the phase of the oscillator\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Oscillator.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._phase * (180 / Math.PI);\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._phase = phase * Math.PI / 180;\n\t\t            //reset the type\n\t\t            this.type = this._type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Dispose and disconnect.\n\t\t\t *  @return {Tone.Oscillator} this\n\t\t\t */\n\t\t    Tone.Oscillator.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        if (this._oscillator !== null) {\n\t\t            this._oscillator.disconnect();\n\t\t            this._oscillator = null;\n\t\t        }\n\t\t        this._wave = null;\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this.detune.dispose();\n\t\t        this.detune = null;\n\t\t        this._partials = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Oscillator;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.Zero outputs 0's at audio-rate. The reason this has to be\n\t\t\t *         it's own class is that many browsers optimize out Tone.Signal\n\t\t\t *         with a value of 0 and will not process nodes further down the graph. \n\t\t\t *  @extends {Tone}\n\t\t\t */\n\t\t    Tone.Zero = function () {\n\t\t        /**\n\t\t\t\t *  The gain node\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._gain = this.input = this.output = new Tone.Gain();\n\t\t        Tone.Zero._zeros.connect(this._gain);\n\t\t    };\n\t\t    Tone.extend(Tone.Zero);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @return  {Tone.Zero}  this\n\t\t\t */\n\t\t    Tone.Zero.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._gain.dispose();\n\t\t        this._gain = null;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Generates a constant output of 0. This is so \n\t\t\t *  the processing graph doesn't optimize out this\n\t\t\t *  segment of the graph. \n\t\t\t *  @static\n\t\t\t *  @private\n\t\t\t *  @const\n\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t */\n\t\t    Tone.Zero._zeros = null;\n\t\t    /**\n\t\t\t *  initializer function\n\t\t\t */\n\t\t    Tone._initAudioContext(function (audioContext) {\n\t\t        var buffer = audioContext.createBuffer(1, 128, audioContext.sampleRate);\n\t\t        var arr = buffer.getChannelData(0);\n\t\t        for (var i = 0; i < arr.length; i++) {\n\t\t            arr[i] = 0;\n\t\t        }\n\t\t        Tone.Zero._zeros = audioContext.createBufferSource();\n\t\t        Tone.Zero._zeros.channelCount = 1;\n\t\t        Tone.Zero._zeros.channelCountMode = 'explicit';\n\t\t        Tone.Zero._zeros.buffer = buffer;\n\t\t        Tone.Zero._zeros.loop = true;\n\t\t        Tone.Zero._zeros.start(0);\n\t\t        Tone.Zero._zeros.noGC();\n\t\t    });\n\t\t    return Tone.Zero;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  LFO stands for low frequency oscillator. Tone.LFO produces an output signal \n\t\t\t *          which can be attached to an AudioParam or Tone.Signal \n\t\t\t *          in order to modulate that parameter with an oscillator. The LFO can \n\t\t\t *          also be synced to the transport to start/stop and change when the tempo changes.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Oscillator}\n\t\t\t *  @param {Frequency|Object} [frequency] The frequency of the oscillation. Typically, LFOs will be\n\t\t\t *                               in the frequency range of 0.1 to 10 hertz. \n\t\t\t *  @param {number=} min The minimum output value of the LFO. \n\t\t\t *  @param {number=} max The maximum value of the LFO. \n\t\t\t *  @example\n\t\t\t * var lfo = new Tone.LFO(\"4n\", 400, 4000);\n\t\t\t * lfo.connect(filter.frequency);\n\t\t\t */\n\t\t    Tone.LFO = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'min',\n\t\t            'max'\n\t\t        ], Tone.LFO.defaults);\n\t\t        /** \n\t\t\t\t *  The oscillator. \n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._oscillator = new Tone.Oscillator({\n\t\t            'frequency': options.frequency,\n\t\t            'type': options.type\n\t\t        });\n\t\t        /**\n\t\t\t\t *  the lfo's frequency\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = this._oscillator.frequency;\n\t\t        /**\n\t\t\t\t * The amplitude of the LFO, which controls the output range between\n\t\t\t\t * the min and max output. For example if the min is -10 and the max \n\t\t\t\t * is 10, setting the amplitude to 0.5 would make the LFO modulate\n\t\t\t\t * between -5 and 5. \n\t\t\t\t * @type {Number}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.amplitude = this._oscillator.volume;\n\t\t        this.amplitude.units = Tone.Type.NormalRange;\n\t\t        this.amplitude.value = options.amplitude;\n\t\t        /**\n\t\t\t\t *  The signal which is output when the LFO is stopped\n\t\t\t\t *  @type  {Tone.Signal}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._stoppedSignal = new Tone.Signal(0, Tone.Type.AudioRange);\n\t\t        /**\n\t\t\t\t *  Just outputs zeros.\n\t\t\t\t *  @type {Tone.Zero}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._zeros = new Tone.Zero();\n\t\t        /**\n\t\t\t\t *  The value that the LFO outputs when it's stopped\n\t\t\t\t *  @type {AudioRange}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._stoppedValue = 0;\n\t\t        /**\n\t\t\t\t *  @type {Tone.AudioToGain} \n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._a2g = new Tone.AudioToGain();\n\t\t        /**\n\t\t\t\t *  @type {Tone.Scale} \n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scaler = this.output = new Tone.Scale(options.min, options.max);\n\t\t        /**\n\t\t\t\t *  the units of the LFO (used for converting)\n\t\t\t\t *  @type {Tone.Type} \n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._units = Tone.Type.Default;\n\t\t        this.units = options.units;\n\t\t        //connect it up\n\t\t        this._oscillator.chain(this._a2g, this._scaler);\n\t\t        this._zeros.connect(this._a2g);\n\t\t        this._stoppedSignal.connect(this._a2g);\n\t\t        this._readOnly([\n\t\t            'amplitude',\n\t\t            'frequency'\n\t\t        ]);\n\t\t        this.phase = options.phase;\n\t\t    };\n\t\t    Tone.extend(Tone.LFO, Tone.Oscillator);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.LFO.defaults = {\n\t\t        'type': 'sine',\n\t\t        'min': 0,\n\t\t        'max': 1,\n\t\t        'phase': 0,\n\t\t        'frequency': '4n',\n\t\t        'amplitude': 1,\n\t\t        'units': Tone.Type.Default\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the LFO. \n\t\t\t *  @param  {Time} [time=now] the time the LFO will start\n\t\t\t *  @returns {Tone.LFO} this\n\t\t\t */\n\t\t    Tone.LFO.prototype.start = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._stoppedSignal.setValueAtTime(0, time);\n\t\t        this._oscillator.start(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the LFO. \n\t\t\t *  @param  {Time} [time=now] the time the LFO will stop\n\t\t\t *  @returns {Tone.LFO} this\n\t\t\t */\n\t\t    Tone.LFO.prototype.stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n\t\t        this._oscillator.stop(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Sync the start/stop/pause to the transport \n\t\t\t *  and the frequency to the bpm of the transport\n\t\t\t *  @returns {Tone.LFO} this\n\t\t\t *  @example\n\t\t\t *  lfo.frequency.value = \"8n\";\n\t\t\t *  lfo.sync().start(0)\n\t\t\t *  //the rate of the LFO will always be an eighth note, \n\t\t\t *  //even as the tempo changes\n\t\t\t */\n\t\t    Tone.LFO.prototype.sync = function () {\n\t\t        this._oscillator.sync();\n\t\t        this._oscillator.syncFrequency();\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  unsync the LFO from transport control\n\t\t\t *  @returns {Tone.LFO} this\n\t\t\t */\n\t\t    Tone.LFO.prototype.unsync = function () {\n\t\t        this._oscillator.unsync();\n\t\t        this._oscillator.unsyncFrequency();\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * The miniumum output of the LFO.\n\t\t\t * @memberOf Tone.LFO#\n\t\t\t * @type {number}\n\t\t\t * @name min\n\t\t\t */\n\t\t    Object.defineProperty(Tone.LFO.prototype, 'min', {\n\t\t        get: function () {\n\t\t            return this._toUnits(this._scaler.min);\n\t\t        },\n\t\t        set: function (min) {\n\t\t            min = this._fromUnits(min);\n\t\t            this._scaler.min = min;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The maximum output of the LFO.\n\t\t\t * @memberOf Tone.LFO#\n\t\t\t * @type {number}\n\t\t\t * @name max\n\t\t\t */\n\t\t    Object.defineProperty(Tone.LFO.prototype, 'max', {\n\t\t        get: function () {\n\t\t            return this._toUnits(this._scaler.max);\n\t\t        },\n\t\t        set: function (max) {\n\t\t            max = this._fromUnits(max);\n\t\t            this._scaler.max = max;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The type of the oscillator: sine, square, sawtooth, triangle. \n\t\t\t * @memberOf Tone.LFO#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.LFO.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._oscillator.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._oscillator.type = type;\n\t\t            this._stoppedValue = this._oscillator._getInitialValue();\n\t\t            this._stoppedSignal.value = this._stoppedValue;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The phase of the LFO.\n\t\t\t * @memberOf Tone.LFO#\n\t\t\t * @type {number}\n\t\t\t * @name phase\n\t\t\t */\n\t\t    Object.defineProperty(Tone.LFO.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._oscillator.phase;\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._oscillator.phase = phase;\n\t\t            this._stoppedValue = this._oscillator._getInitialValue();\n\t\t            this._stoppedSignal.value = this._stoppedValue;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The output units of the LFO.\n\t\t\t * @memberOf Tone.LFO#\n\t\t\t * @type {Tone.Type}\n\t\t\t * @name units\n\t\t\t */\n\t\t    Object.defineProperty(Tone.LFO.prototype, 'units', {\n\t\t        get: function () {\n\t\t            return this._units;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            var currentMin = this.min;\n\t\t            var currentMax = this.max;\n\t\t            //convert the min and the max\n\t\t            this._units = val;\n\t\t            this.min = currentMin;\n\t\t            this.max = currentMax;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * Mute the output. \n\t\t\t * @memberOf Tone.LFO#\n\t\t\t * @type {Boolean}\n\t\t\t * @name mute\n\t\t\t */\n\t\t    Object.defineProperty(Tone.LFO.prototype, 'mute', {\n\t\t        get: function () {\n\t\t            return this._oscillator.mute;\n\t\t        },\n\t\t        set: function (mute) {\n\t\t            this._oscillator.mute = mute;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t\t *  @type {Tone.State}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.LFO#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.LFO.prototype, 'state', {\n\t\t        get: function () {\n\t\t            return this._oscillator.state;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Connect the output of the LFO to an AudioParam, AudioNode, or Tone Node. \n\t\t\t *  Tone.LFO will automatically convert to the destination units of the \n\t\t\t *  will get the units from the connected node.\n\t\t\t *  @param  {Tone | AudioParam | AudioNode} node \n\t\t\t *  @param {number} [outputNum=0] optionally which output to connect from\n\t\t\t *  @param {number} [inputNum=0] optionally which input to connect to\n\t\t\t *  @returns {Tone.LFO} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.LFO.prototype.connect = function (node) {\n\t\t        if (node.constructor === Tone.Signal || node.constructor === Tone.Param || node.constructor === Tone.TimelineSignal) {\n\t\t            this.convert = node.convert;\n\t\t            this.units = node.units;\n\t\t        }\n\t\t        Tone.Signal.prototype.connect.apply(this, arguments);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  private method borrowed from Param converts \n\t\t\t *  units from their destination value\n\t\t\t *  @function\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.LFO.prototype._fromUnits = Tone.Param.prototype._fromUnits;\n\t\t    /**\n\t\t\t *  private method borrowed from Param converts \n\t\t\t *  units to their destination value\n\t\t\t *  @function\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.LFO.prototype._toUnits = Tone.Param.prototype._toUnits;\n\t\t    /**\n\t\t\t *  disconnect and dispose\n\t\t\t *  @returns {Tone.LFO} this\n\t\t\t */\n\t\t    Tone.LFO.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'amplitude',\n\t\t            'frequency'\n\t\t        ]);\n\t\t        this._oscillator.dispose();\n\t\t        this._oscillator = null;\n\t\t        this._stoppedSignal.dispose();\n\t\t        this._stoppedSignal = null;\n\t\t        this._zeros.dispose();\n\t\t        this._zeros = null;\n\t\t        this._scaler.dispose();\n\t\t        this._scaler = null;\n\t\t        this._a2g.dispose();\n\t\t        this._a2g = null;\n\t\t        this.frequency = null;\n\t\t        this.amplitude = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.LFO;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Limiter will limit the loudness of an incoming signal. \n\t\t\t *         It is composed of a Tone.Compressor with a fast attack \n\t\t\t *         and release. Limiters are commonly used to safeguard against \n\t\t\t *         signal clipping. Unlike a compressor, limiters do not provide \n\t\t\t *         smooth gain reduction and almost completely prevent \n\t\t\t *         additional gain above the threshold.\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {number} threshold The theshold above which the limiting is applied. \n\t\t\t *  @example\n\t\t\t *  var limiter = new Tone.Limiter(-6);\n\t\t\t */\n\t\t    Tone.Limiter = function () {\n\t\t        var options = this.optionsObject(arguments, ['threshold'], Tone.Limiter.defaults);\n\t\t        /**\n\t\t\t\t *  the compressor\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Compressor}\n\t\t\t\t */\n\t\t        this._compressor = this.input = this.output = new Tone.Compressor({\n\t\t            'attack': 0.001,\n\t\t            'decay': 0.001,\n\t\t            'threshold': options.threshold\n\t\t        });\n\t\t        /**\n\t\t\t\t * The threshold of of the limiter\n\t\t\t\t * @type {Decibel}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.threshold = this._compressor.threshold;\n\t\t        this._readOnly('threshold');\n\t\t    };\n\t\t    Tone.extend(Tone.Limiter);\n\t\t    /**\n\t\t\t *  The default value\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.Limiter.defaults = { 'threshold': -12 };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Limiter} this\n\t\t\t */\n\t\t    Tone.Limiter.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._compressor.dispose();\n\t\t        this._compressor = null;\n\t\t        this._writable('threshold');\n\t\t        this.threshold = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Limiter;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Lowpass is a lowpass feedback comb filter. It is similar to \n\t\t\t *         Tone.FeedbackCombFilter, but includes a lowpass filter.\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {Time|Object} [delayTime] The delay time of the comb filter\n\t\t\t *  @param {NormalRange=} resonance The resonance (feedback) of the comb filter\n\t\t\t *  @param {Frequency=} dampening The cutoff of the lowpass filter dampens the\n\t\t\t *                                signal as it is fedback. \n\t\t\t */\n\t\t    Tone.LowpassCombFilter = function () {\n\t\t        this.createInsOuts(1, 1);\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'delayTime',\n\t\t            'resonance',\n\t\t            'dampening'\n\t\t        ], Tone.LowpassCombFilter.defaults);\n\t\t        /**\n\t\t\t\t *  the delay node\n\t\t\t\t *  @type {DelayNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delay = this.input = new Tone.Delay(options.delayTime);\n\t\t        /**\n\t\t\t\t *  The delayTime of the comb filter. \n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.delayTime = this._delay.delayTime;\n\t\t        /**\n\t\t\t\t *  the lowpass filter\n\t\t\t\t *  @type  {BiquadFilterNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lowpass = this.output = this.context.createBiquadFilter();\n\t\t        this._lowpass.Q.value = -3.0102999566398125;\n\t\t        this._lowpass.type = 'lowpass';\n\t\t        /**\n\t\t\t\t *  The dampening control of the feedback\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.dampening = new Tone.Param({\n\t\t            'param': this._lowpass.frequency,\n\t\t            'units': Tone.Type.Frequency,\n\t\t            'value': options.dampening\n\t\t        });\n\t\t        /**\n\t\t\t\t *  the feedback gain\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  The amount of feedback of the delayed signal. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.resonance = this._feedback.gain;\n\t\t        //connections\n\t\t        this._delay.chain(this._lowpass, this._feedback, this._delay);\n\t\t        this._readOnly([\n\t\t            'dampening',\n\t\t            'resonance',\n\t\t            'delayTime'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.LowpassCombFilter);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.LowpassCombFilter.defaults = {\n\t\t        'delayTime': 0.1,\n\t\t        'resonance': 0.5,\n\t\t        'dampening': 3000\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.LowpassCombFilter} this\n\t\t\t */\n\t\t    Tone.LowpassCombFilter.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'dampening',\n\t\t            'resonance',\n\t\t            'delayTime'\n\t\t        ]);\n\t\t        this.dampening.dispose();\n\t\t        this.dampening = null;\n\t\t        this.resonance.dispose();\n\t\t        this.resonance = null;\n\t\t        this._delay.dispose();\n\t\t        this._delay = null;\n\t\t        this.delayTime = null;\n\t\t        this._lowpass.disconnect();\n\t\t        this._lowpass = null;\n\t\t        this._feedback.disconnect();\n\t\t        this._feedback = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.LowpassCombFilter;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Merge brings two signals into the left and right \n\t\t\t *          channels of a single stereo channel.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * var merge = new Tone.Merge().toMaster();\n\t\t\t * //routing a sine tone in the left channel\n\t\t\t * //and noise in the right channel\n\t\t\t * var osc = new Tone.Oscillator().connect(merge.left);\n\t\t\t * var noise = new Tone.Noise().connect(merge.right);\n\t\t\t * //starting our oscillators\n\t\t\t * noise.start();\n\t\t\t * osc.start();\n\t\t\t */\n\t\t    Tone.Merge = function () {\n\t\t        this.createInsOuts(2, 0);\n\t\t        /**\n\t\t\t\t *  The left input channel.\n\t\t\t\t *  Alias for <code>input[0]</code>\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t */\n\t\t        this.left = this.input[0] = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  The right input channel.\n\t\t\t\t *  Alias for <code>input[1]</code>.\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t */\n\t\t        this.right = this.input[1] = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  the merger node for the two channels\n\t\t\t\t *  @type {ChannelMergerNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._merger = this.output = this.context.createChannelMerger(2);\n\t\t        //connections\n\t\t        this.left.connect(this._merger, 0, 0);\n\t\t        this.right.connect(this._merger, 0, 1);\n\t\t        this.left.channelCount = 1;\n\t\t        this.right.channelCount = 1;\n\t\t        this.left.channelCountMode = 'explicit';\n\t\t        this.right.channelCountMode = 'explicit';\n\t\t    };\n\t\t    Tone.extend(Tone.Merge);\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Merge} this\n\t\t\t */\n\t\t    Tone.Merge.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this.left.dispose();\n\t\t        this.left = null;\n\t\t        this.right.dispose();\n\t\t        this.right = null;\n\t\t        this._merger.disconnect();\n\t\t        this._merger = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Merge;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)\n\t\t\t *          of an input signal with some averaging applied. It can also get the raw \n\t\t\t *          value of the input signal.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {String} type Either \"level\" or \"signal\". \n\t\t\t *  @param {Number} smoothing The amount of smoothing applied between frames.\n\t\t\t *  @example\n\t\t\t * var meter = new Tone.Meter();\n\t\t\t * var mic = new Tone.Microphone().start();\n\t\t\t * //connect mic to the meter\n\t\t\t * mic.connect(meter);\n\t\t\t * //the current level of the mic input\n\t\t\t * var level = meter.value;\n\t\t\t */\n\t\t    Tone.Meter = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'type',\n\t\t            'smoothing'\n\t\t        ], Tone.Meter.defaults);\n\t\t        /**\n\t\t\t\t *  The type of the meter, either \"level\" or \"signal\". \n\t\t\t\t *  A \"level\" meter will return the volume level (rms) of the \n\t\t\t\t *  input signal and a \"signal\" meter will return\n\t\t\t\t *  the signal value of the input. \n\t\t\t\t *  @type  {String}\n\t\t\t\t */\n\t\t        this.type = options.type;\n\t\t        /**\n\t\t\t\t *  The analyser node which computes the levels.\n\t\t\t\t *  @private\n\t\t\t\t *  @type  {Tone.Analyser}\n\t\t\t\t */\n\t\t        this.input = this.output = this._analyser = new Tone.Analyser('waveform', 512);\n\t\t        this._analyser.returnType = 'float';\n\t\t        /**\n\t\t\t\t *  The amount of carryover between the current and last frame. \n\t\t\t\t *  Only applied meter for \"level\" type.\n\t\t\t\t *  @type  {Number}\n\t\t\t\t */\n\t\t        this.smoothing = options.smoothing;\n\t\t        /**\n\t\t\t\t *  The last computed value\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lastValue = 0;\n\t\t    };\n\t\t    Tone.extend(Tone.Meter);\n\t\t    /**\n\t\t\t *  @private\n\t\t\t *  @enum {String}\n\t\t\t */\n\t\t    Tone.Meter.Type = {\n\t\t        Level: 'level',\n\t\t        Signal: 'signal'\n\t\t    };\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @type {Object}\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Meter.defaults = {\n\t\t        'smoothing': 0.8,\n\t\t        'type': Tone.Meter.Type.Level\n\t\t    };\n\t\t    /**\n\t\t\t * The current value of the meter. A value of 1 is\n\t\t\t * \"unity\".\n\t\t\t * @memberOf Tone.Meter#\n\t\t\t * @type {Number}\n\t\t\t * @name value\n\t\t\t * @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Meter.prototype, 'value', {\n\t\t        get: function () {\n\t\t            var signal = this._analyser.analyse();\n\t\t            if (this.type === Tone.Meter.Type.Level) {\n\t\t                //rms\n\t\t                var sum = 0;\n\t\t                for (var i = 0; i < signal.length; i++) {\n\t\t                    sum += Math.pow(signal[i], 2);\n\t\t                }\n\t\t                var rms = Math.sqrt(sum / signal.length);\n\t\t                //smooth it\n\t\t                rms = Math.max(rms, this._lastValue * this.smoothing);\n\t\t                this._lastValue = rms;\n\t\t                //scale it\n\t\t                var unity = 0.35;\n\t\t                var val = rms / unity;\n\t\t                //scale the output curve\n\t\t                return Math.sqrt(val);\n\t\t            } else {\n\t\t                return signal[0];\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Meter} this\n\t\t\t */\n\t\t    Tone.Meter.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._analyser.dispose();\n\t\t        this._analyser = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Meter;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *\t@class  Tone.Split splits an incoming signal into left and right channels.\n\t\t\t *\t\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * var split = new Tone.Split();\n\t\t\t * stereoSignal.connect(split);\n\t\t\t */\n\t\t    Tone.Split = function () {\n\t\t        this.createInsOuts(0, 2);\n\t\t        /** \n\t\t\t\t *  @type {ChannelSplitterNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._splitter = this.input = this.context.createChannelSplitter(2);\n\t\t        /** \n\t\t\t\t *  Left channel output. \n\t\t\t\t *  Alias for <code>output[0]</code>\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t */\n\t\t        this.left = this.output[0] = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  Right channel output.\n\t\t\t\t *  Alias for <code>output[1]</code>\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t */\n\t\t        this.right = this.output[1] = new Tone.Gain();\n\t\t        //connections\n\t\t        this._splitter.connect(this.left, 0, 0);\n\t\t        this._splitter.connect(this.right, 1, 0);\n\t\t    };\n\t\t    Tone.extend(Tone.Split);\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Split} this\n\t\t\t */\n\t\t    Tone.Split.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._splitter.disconnect();\n\t\t        this.left.dispose();\n\t\t        this.left = null;\n\t\t        this.right.dispose();\n\t\t        this.right = null;\n\t\t        this._splitter = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Split;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Mid/Side processing separates the the 'mid' signal \n\t\t\t *         (which comes out of both the left and the right channel) \n\t\t\t *         and the 'side' (which only comes out of the the side channels). <br><br>\n\t\t\t *         <code>\n\t\t\t *         Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right<br>\n\t\t\t *         Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and righ<br>\n\t\t\t *         </code>\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t */\n\t\t    Tone.MidSideSplit = function () {\n\t\t        this.createInsOuts(0, 2);\n\t\t        /**\n\t\t\t\t *  split the incoming signal into left and right channels\n\t\t\t\t *  @type  {Tone.Split}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._split = this.input = new Tone.Split();\n\t\t        /**\n\t\t\t\t *  The mid send. Connect to mid processing. Alias for\n\t\t\t\t *  <code>output[0]</code>\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t */\n\t\t        this.mid = this.output[0] = new Tone.Expr('($0 + $1) * $2');\n\t\t        /**\n\t\t\t\t *  The side output. Connect to side processing. Alias for\n\t\t\t\t *  <code>output[1]</code>\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t */\n\t\t        this.side = this.output[1] = new Tone.Expr('($0 - $1) * $2');\n\t\t        this._split.connect(this.mid, 0, 0);\n\t\t        this._split.connect(this.mid, 1, 1);\n\t\t        this._split.connect(this.side, 0, 0);\n\t\t        this._split.connect(this.side, 1, 1);\n\t\t        sqrtTwo.connect(this.mid, 0, 2);\n\t\t        sqrtTwo.connect(this.side, 0, 2);\n\t\t    };\n\t\t    Tone.extend(Tone.MidSideSplit);\n\t\t    /**\n\t\t\t *  a constant signal equal to 1 / sqrt(2)\n\t\t\t *  @type {Number}\n\t\t\t *  @signal\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t */\n\t\t    var sqrtTwo = null;\n\t\t    Tone._initAudioContext(function () {\n\t\t        sqrtTwo = new Tone.Signal(1 / Math.sqrt(2));\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.MidSideSplit} this\n\t\t\t */\n\t\t    Tone.MidSideSplit.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this.mid.dispose();\n\t\t        this.mid = null;\n\t\t        this.side.dispose();\n\t\t        this.side = null;\n\t\t        this._split.dispose();\n\t\t        this._split = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MidSideSplit;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Mid/Side processing separates the the 'mid' signal \n\t\t\t *         (which comes out of both the left and the right channel) \n\t\t\t *         and the 'side' (which only comes out of the the side channels). \n\t\t\t *         MidSideMerge merges the mid and side signal after they've been seperated\n\t\t\t *         by Tone.MidSideSplit.<br><br>\n\t\t\t *         <code>\n\t\t\t *         Left = (Mid+Side)/sqrt(2);   // obtain left signal from mid and side<br>\n\t\t\t *         Right = (Mid-Side)/sqrt(2);   // obtain right signal from mid and side<br>\n\t\t\t *         </code>\n\t\t\t *\n\t\t\t *  @extends {Tone.StereoEffect}\n\t\t\t *  @constructor\n\t\t\t */\n\t\t    Tone.MidSideMerge = function () {\n\t\t        this.createInsOuts(2, 0);\n\t\t        /**\n\t\t\t\t *  The mid signal input. Alias for\n\t\t\t\t *  <code>input[0]</code>\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t */\n\t\t        this.mid = this.input[0] = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  recombine the mid/side into Left\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._left = new Tone.Expr('($0 + $1) * $2');\n\t\t        /**\n\t\t\t\t *  The side signal input. Alias for\n\t\t\t\t *  <code>input[1]</code>\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t */\n\t\t        this.side = this.input[1] = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  recombine the mid/side into Right\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._right = new Tone.Expr('($0 - $1) * $2');\n\t\t        /**\n\t\t\t\t *  Merge the left/right signal back into a stereo signal.\n\t\t\t\t *  @type {Tone.Merge}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._merge = this.output = new Tone.Merge();\n\t\t        this.mid.connect(this._left, 0, 0);\n\t\t        this.side.connect(this._left, 0, 1);\n\t\t        this.mid.connect(this._right, 0, 0);\n\t\t        this.side.connect(this._right, 0, 1);\n\t\t        this._left.connect(this._merge, 0, 0);\n\t\t        this._right.connect(this._merge, 0, 1);\n\t\t        sqrtTwo.connect(this._left, 0, 2);\n\t\t        sqrtTwo.connect(this._right, 0, 2);\n\t\t    };\n\t\t    Tone.extend(Tone.MidSideMerge);\n\t\t    /**\n\t\t\t *  A constant signal equal to 1 / sqrt(2).\n\t\t\t *  @type {Number}\n\t\t\t *  @signal\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t */\n\t\t    var sqrtTwo = null;\n\t\t    Tone._initAudioContext(function () {\n\t\t        sqrtTwo = new Tone.Signal(1 / Math.sqrt(2));\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.MidSideMerge} this\n\t\t\t */\n\t\t    Tone.MidSideMerge.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this.mid.dispose();\n\t\t        this.mid = null;\n\t\t        this.side.dispose();\n\t\t        this.side = null;\n\t\t        this._left.dispose();\n\t\t        this._left = null;\n\t\t        this._right.dispose();\n\t\t        this._right = null;\n\t\t        this._merge.dispose();\n\t\t        this._merge = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MidSideMerge;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.MidSideCompressor applies two different compressors to the mid\n\t\t\t *         and side signal components. See Tone.MidSideSplit. \n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Object} options The options that are passed to the mid and side\n\t\t\t *                          compressors. \n\t\t\t *  @constructor\n\t\t\t */\n\t\t    Tone.MidSideCompressor = function (options) {\n\t\t        options = this.defaultArg(options, Tone.MidSideCompressor.defaults);\n\t\t        /**\n\t\t\t\t *  the mid/side split\n\t\t\t\t *  @type  {Tone.MidSideSplit}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._midSideSplit = this.input = new Tone.MidSideSplit();\n\t\t        /**\n\t\t\t\t *  the mid/side recombination\n\t\t\t\t *  @type  {Tone.MidSideMerge}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._midSideMerge = this.output = new Tone.MidSideMerge();\n\t\t        /**\n\t\t\t\t *  The compressor applied to the mid signal\n\t\t\t\t *  @type  {Tone.Compressor}\n\t\t\t\t */\n\t\t        this.mid = new Tone.Compressor(options.mid);\n\t\t        /**\n\t\t\t\t *  The compressor applied to the side signal\n\t\t\t\t *  @type  {Tone.Compressor}\n\t\t\t\t */\n\t\t        this.side = new Tone.Compressor(options.side);\n\t\t        this._midSideSplit.mid.chain(this.mid, this._midSideMerge.mid);\n\t\t        this._midSideSplit.side.chain(this.side, this._midSideMerge.side);\n\t\t        this._readOnly([\n\t\t            'mid',\n\t\t            'side'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.MidSideCompressor);\n\t\t    /**\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.MidSideCompressor.defaults = {\n\t\t        'mid': {\n\t\t            'ratio': 3,\n\t\t            'threshold': -24,\n\t\t            'release': 0.03,\n\t\t            'attack': 0.02,\n\t\t            'knee': 16\n\t\t        },\n\t\t        'side': {\n\t\t            'ratio': 6,\n\t\t            'threshold': -30,\n\t\t            'release': 0.25,\n\t\t            'attack': 0.03,\n\t\t            'knee': 10\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.MidSideCompressor} this\n\t\t\t */\n\t\t    Tone.MidSideCompressor.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'mid',\n\t\t            'side'\n\t\t        ]);\n\t\t        this.mid.dispose();\n\t\t        this.mid = null;\n\t\t        this.side.dispose();\n\t\t        this.side = null;\n\t\t        this._midSideSplit.dispose();\n\t\t        this._midSideSplit = null;\n\t\t        this._midSideMerge.dispose();\n\t\t        this._midSideMerge = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MidSideCompressor;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Mono coerces the incoming mono or stereo signal into a mono signal\n\t\t\t *         where both left and right channels have the same value. This can be useful \n\t\t\t *         for [stereo imaging](https://en.wikipedia.org/wiki/Stereo_imaging).\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t */\n\t\t    Tone.Mono = function () {\n\t\t        this.createInsOuts(1, 0);\n\t\t        /**\n\t\t\t\t *  merge the signal\n\t\t\t\t *  @type {Tone.Merge}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._merge = this.output = new Tone.Merge();\n\t\t        this.input.connect(this._merge, 0, 0);\n\t\t        this.input.connect(this._merge, 0, 1);\n\t\t        this.input.gain.value = this.dbToGain(-10);\n\t\t    };\n\t\t    Tone.extend(Tone.Mono);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Mono} this\n\t\t\t */\n\t\t    Tone.Mono.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._merge.dispose();\n\t\t        this._merge = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Mono;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class A compressor with seperate controls over low/mid/high dynamics\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {Object} options The low/mid/high compressor settings.\n\t\t\t *  @example\n\t\t\t *  var multiband = new Tone.MultibandCompressor({\n\t\t\t *  \t\"lowFrequency\" : 200,\n\t\t\t *  \t\"highFrequency\" : 1300\n\t\t\t *  \t\"low\" : {\n\t\t\t *  \t\t\"threshold\" : -12\n\t\t\t *  \t}\n\t\t\t *  })\n\t\t\t */\n\t\t    Tone.MultibandCompressor = function (options) {\n\t\t        options = this.defaultArg(arguments, Tone.MultibandCompressor.defaults);\n\t\t        /**\n\t\t\t\t *  split the incoming signal into high/mid/low\n\t\t\t\t *  @type {Tone.MultibandSplit}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._splitter = this.input = new Tone.MultibandSplit({\n\t\t            'lowFrequency': options.lowFrequency,\n\t\t            'highFrequency': options.highFrequency\n\t\t        });\n\t\t        /**\n\t\t\t\t *  low/mid crossover frequency.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.lowFrequency = this._splitter.lowFrequency;\n\t\t        /**\n\t\t\t\t *  mid/high crossover frequency.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.highFrequency = this._splitter.highFrequency;\n\t\t        /**\n\t\t\t\t *  the output\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.output = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  The compressor applied to the low frequencies.\n\t\t\t\t *  @type {Tone.Compressor}\n\t\t\t\t */\n\t\t        this.low = new Tone.Compressor(options.low);\n\t\t        /**\n\t\t\t\t *  The compressor applied to the mid frequencies.\n\t\t\t\t *  @type {Tone.Compressor}\n\t\t\t\t */\n\t\t        this.mid = new Tone.Compressor(options.mid);\n\t\t        /**\n\t\t\t\t *  The compressor applied to the high frequencies.\n\t\t\t\t *  @type {Tone.Compressor}\n\t\t\t\t */\n\t\t        this.high = new Tone.Compressor(options.high);\n\t\t        //connect the compressor\n\t\t        this._splitter.low.chain(this.low, this.output);\n\t\t        this._splitter.mid.chain(this.mid, this.output);\n\t\t        this._splitter.high.chain(this.high, this.output);\n\t\t        this._readOnly([\n\t\t            'high',\n\t\t            'mid',\n\t\t            'low',\n\t\t            'highFrequency',\n\t\t            'lowFrequency'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.MultibandCompressor);\n\t\t    /**\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.MultibandCompressor.defaults = {\n\t\t        'low': Tone.Compressor.defaults,\n\t\t        'mid': Tone.Compressor.defaults,\n\t\t        'high': Tone.Compressor.defaults,\n\t\t        'lowFrequency': 250,\n\t\t        'highFrequency': 2000\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.MultibandCompressor} this\n\t\t\t */\n\t\t    Tone.MultibandCompressor.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._splitter.dispose();\n\t\t        this._writable([\n\t\t            'high',\n\t\t            'mid',\n\t\t            'low',\n\t\t            'highFrequency',\n\t\t            'lowFrequency'\n\t\t        ]);\n\t\t        this.low.dispose();\n\t\t        this.mid.dispose();\n\t\t        this.high.dispose();\n\t\t        this._splitter = null;\n\t\t        this.low = null;\n\t\t        this.mid = null;\n\t\t        this.high = null;\n\t\t        this.lowFrequency = null;\n\t\t        this.highFrequency = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MultibandCompressor;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Panner is an equal power Left/Right Panner and does not\n\t\t\t *          support 3D. Panner uses the StereoPannerNode when available. \n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {NormalRange} [initialPan=0] The initail panner value (defaults to 0 = center)\n\t\t\t *  @example\n\t\t\t *  //pan the input signal hard right. \n\t\t\t *  var panner = new Tone.Panner(1);\n\t\t\t */\n\t\t    Tone.Panner = function (initialPan) {\n\t\t        if (this._hasStereoPanner) {\n\t\t            /**\n\t\t\t\t\t *  the panner node\n\t\t\t\t\t *  @type {StereoPannerNode}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._panner = this.input = this.output = this.context.createStereoPanner();\n\t\t            /**\n\t\t\t\t\t *  The pan control. -1 = hard left, 1 = hard right. \n\t\t\t\t\t *  @type {NormalRange}\n\t\t\t\t\t *  @signal\n\t\t\t\t\t */\n\t\t            this.pan = this._panner.pan;\n\t\t        } else {\n\t\t            /**\n\t\t\t\t\t *  the dry/wet knob\n\t\t\t\t\t *  @type {Tone.CrossFade}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._crossFade = new Tone.CrossFade();\n\t\t            /**\n\t\t\t\t\t *  @type {Tone.Merge}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._merger = this.output = new Tone.Merge();\n\t\t            /**\n\t\t\t\t\t *  @type {Tone.Split}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._splitter = this.input = new Tone.Split();\n\t\t            /**\n\t\t\t\t\t *  The pan control. -1 = hard left, 1 = hard right. \n\t\t\t\t\t *  @type {AudioRange}\n\t\t\t\t\t *  @signal\n\t\t\t\t\t */\n\t\t            this.pan = new Tone.Signal(0, Tone.Type.AudioRange);\n\t\t            /**\n\t\t\t\t\t *  always sends 0\n\t\t\t\t\t *  @type {Tone.Zero}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._zero = new Tone.Zero();\n\t\t            /**\n\t\t\t\t\t *  The analog to gain conversion\n\t\t\t\t\t *  @type  {Tone.AudioToGain}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._a2g = new Tone.AudioToGain();\n\t\t            //CONNECTIONS:\n\t\t            this._zero.connect(this._a2g);\n\t\t            this.pan.chain(this._a2g, this._crossFade.fade);\n\t\t            //left channel is a, right channel is b\n\t\t            this._splitter.connect(this._crossFade, 0, 0);\n\t\t            this._splitter.connect(this._crossFade, 1, 1);\n\t\t            //merge it back together\n\t\t            this._crossFade.a.connect(this._merger, 0, 0);\n\t\t            this._crossFade.b.connect(this._merger, 0, 1);\n\t\t        }\n\t\t        //initial value\n\t\t        this.pan.value = this.defaultArg(initialPan, 0);\n\t\t        this._readOnly('pan');\n\t\t    };\n\t\t    Tone.extend(Tone.Panner);\n\t\t    /**\n\t\t\t *  indicates if the panner is using the new StereoPannerNode internally\n\t\t\t *  @type  {boolean}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Panner.prototype._hasStereoPanner = Tone.prototype.isFunction(Tone.context.createStereoPanner);\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Panner} this\n\t\t\t */\n\t\t    Tone.Panner.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable('pan');\n\t\t        if (this._hasStereoPanner) {\n\t\t            this._panner.disconnect();\n\t\t            this._panner = null;\n\t\t            this.pan = null;\n\t\t        } else {\n\t\t            this._zero.dispose();\n\t\t            this._zero = null;\n\t\t            this._crossFade.dispose();\n\t\t            this._crossFade = null;\n\t\t            this._splitter.dispose();\n\t\t            this._splitter = null;\n\t\t            this._merger.dispose();\n\t\t            this._merger = null;\n\t\t            this.pan.dispose();\n\t\t            this.pan = null;\n\t\t            this._a2g.dispose();\n\t\t            this._a2g = null;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Panner;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  A spatialized panner node which supports equalpower or HRTF panning.\n\t\t\t *          Tries to normalize the API across various browsers. See Tone.Listener\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Number} positionX The initial x position.\n\t\t\t *  @param {Number} positionY The initial y position.\n\t\t\t *  @param {Number} positionZ The initial z position.\n\t\t\t */\n\t\t    Tone.Panner3D = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'positionX',\n\t\t            'positionY',\n\t\t            'positionZ'\n\t\t        ], Tone.Panner3D.defaults);\n\t\t        /**\n\t\t\t\t *  The panner node\n\t\t\t\t *  @type {PannerNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._panner = this.input = this.output = this.context.createPanner();\n\t\t        //set some values\n\t\t        this._panner.panningModel = options.panningModel;\n\t\t        this._panner.maxDistance = options.maxDistance;\n\t\t        this._panner.distanceModel = options.distanceModel;\n\t\t        this._panner.coneOuterGain = options.coneOuterGain;\n\t\t        this._panner.coneOuterAngle = options.coneOuterAngle;\n\t\t        this._panner.coneInnerAngle = options.coneInnerAngle;\n\t\t        this._panner.refDistance = options.refDistance;\n\t\t        this._panner.rolloffFactor = options.rolloffFactor;\n\t\t        /**\n\t\t\t\t *  Holds the current orientation\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._orientation = [\n\t\t            options.orientationX,\n\t\t            options.orientationY,\n\t\t            options.orientationZ\n\t\t        ];\n\t\t        /**\n\t\t\t\t *  Holds the current position\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._position = [\n\t\t            options.positionX,\n\t\t            options.positionY,\n\t\t            options.positionZ\n\t\t        ];\n\t\t        // set the default position/orientation\n\t\t        this.orientationX = options.orientationX;\n\t\t        this.orientationY = options.orientationY;\n\t\t        this.orientationZ = options.orientationZ;\n\t\t        this.positionX = options.positionX;\n\t\t        this.positionY = options.positionY;\n\t\t        this.positionZ = options.positionZ;\n\t\t    };\n\t\t    Tone.extend(Tone.Panner3D);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t *  Defaults according to the specification\n\t\t\t */\n\t\t    Tone.Panner3D.defaults = {\n\t\t        'positionX': 0,\n\t\t        'positionY': 0,\n\t\t        'positionZ': 0,\n\t\t        'orientationX': 0,\n\t\t        'orientationY': 0,\n\t\t        'orientationZ': 0,\n\t\t        'panningModel': 'equalpower',\n\t\t        'maxDistance': 10000,\n\t\t        'distanceModel': 'inverse',\n\t\t        'coneOuterGain': 0,\n\t\t        'coneOuterAngle': 360,\n\t\t        'coneInnerAngle': 360,\n\t\t        'refDistance': 1,\n\t\t        'rolloffFactor': 1\n\t\t    };\n\t\t    Tone.Panner3D.prototype._rampTimeConstant = 0.3;\n\t\t    /**\n\t\t\t *  Sets the position of the source in 3d space.\t\n\t\t\t *  @param  {Number}  x\n\t\t\t *  @param  {Number}  y\n\t\t\t *  @param  {Number}  z\n\t\t\t *  @return {Tone.Panner3D} this\n\t\t\t */\n\t\t    Tone.Panner3D.prototype.setPosition = function (x, y, z) {\n\t\t        if (this._panner.positionX) {\n\t\t            var now = this.now();\n\t\t            this._panner.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\t            this._panner.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\t            this._panner.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t\t        } else {\n\t\t            this._panner.setPosition(x, y, z);\n\t\t        }\n\t\t        this._position = Array.prototype.slice.call(arguments);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Sets the orientation of the source in 3d space.\t\n\t\t\t *  @param  {Number}  x\n\t\t\t *  @param  {Number}  y\n\t\t\t *  @param  {Number}  z\n\t\t\t *  @return {Tone.Panner3D} this\n\t\t\t */\n\t\t    Tone.Panner3D.prototype.setOrientation = function (x, y, z) {\n\t\t        if (this._panner.orientationX) {\n\t\t            var now = this.now();\n\t\t            this._panner.orientationX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\t            this._panner.orientationY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\t            this._panner.orientationZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t\t        } else {\n\t\t            this._panner.setOrientation(x, y, z);\n\t\t        }\n\t\t        this._orientation = Array.prototype.slice.call(arguments);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The x position of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name positionX\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionX', {\n\t\t        set: function (pos) {\n\t\t            this._position[0] = pos;\n\t\t            this.setPosition.apply(this, this._position);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._position[0];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The y position of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name positionY\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionY', {\n\t\t        set: function (pos) {\n\t\t            this._position[1] = pos;\n\t\t            this.setPosition.apply(this, this._position);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._position[1];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The z position of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name positionZ\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionZ', {\n\t\t        set: function (pos) {\n\t\t            this._position[2] = pos;\n\t\t            this.setPosition.apply(this, this._position);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._position[2];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The x orientation of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name orientationX\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationX', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[0] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[0];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The y orientation of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name orientationY\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationY', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[1] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[1];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The z orientation of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name orientationZ\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationZ', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[2] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[2];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Proxy a property on the panner to an exposed public propery\n\t\t\t *  @param  {String}  prop\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty = function (prop) {\n\t\t        Object.defineProperty(Tone.Panner3D.prototype, prop, {\n\t\t            set: function (val) {\n\t\t                this._panner[prop] = val;\n\t\t            },\n\t\t            get: function () {\n\t\t                return this._panner[prop];\n\t\t            }\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t\t *  The panning model. Either \"equalpower\" or \"HRTF\".\n\t\t\t *  @type {String}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name panningModel\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('panningModel');\n\t\t    /**\n\t\t\t *  A reference distance for reducing volume as source move further from the listener\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name refDistance\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('refDistance');\n\t\t    /**\n\t\t\t *  Describes how quickly the volume is reduced as source moves away from listener.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name rolloffFactor\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('rolloffFactor');\n\t\t    /**\n\t\t\t *  The distance model used by,  \"linear\", \"inverse\", or \"exponential\".\n\t\t\t *  @type {String}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name distanceModel\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('distanceModel');\n\t\t    /**\n\t\t\t *  The angle, in degrees, inside of which there will be no volume reduction\n\t\t\t *  @type {Degrees}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name coneInnerAngle\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('coneInnerAngle');\n\t\t    /**\n\t\t\t *  The angle, in degrees, outside of which the volume will be reduced \n\t\t\t *  to a constant value of coneOuterGain\n\t\t\t *  @type {Degrees}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name coneOuterAngle\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('coneOuterAngle');\n\t\t    /**\n\t\t\t *  The gain outside of the coneOuterAngle\n\t\t\t *  @type {Gain}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name coneOuterGain\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('coneOuterGain');\n\t\t    /**\n\t\t\t *  The maximum distance between source and listener, \n\t\t\t *  after which the volume will not be reduced any further.\n\t\t\t *  @type {Positive}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name maxDistance\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('maxDistance');\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Panner3D} this\n\t\t\t */\n\t\t    Tone.Panner3D.prototype.dispose = function () {\n\t\t        this._panner.disconnect();\n\t\t        this._panner = null;\n\t\t        this._orientation = null;\n\t\t        this._position = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Panner3D;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.PanVol is a Tone.Panner and Tone.Volume in one.\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {AudioRange} pan the initial pan\n\t\t\t *  @param {number} volume The output volume. \n\t\t\t *  @example\n\t\t\t * //pan the incoming signal left and drop the volume\n\t\t\t * var panVol = new Tone.PanVol(0.25, -12);\n\t\t\t */\n\t\t    Tone.PanVol = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'pan',\n\t\t            'volume'\n\t\t        ], Tone.PanVol.defaults);\n\t\t        /**\n\t\t\t\t *  The panning node\n\t\t\t\t *  @type {Tone.Panner}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._panner = this.input = new Tone.Panner(options.pan);\n\t\t        /**\n\t\t\t\t *  The L/R panning control.\n\t\t\t\t *  @type {AudioRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.pan = this._panner.pan;\n\t\t        /**\n\t\t\t\t *  The volume node\n\t\t\t\t *  @type {Tone.Volume}\n\t\t\t\t */\n\t\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t\t        /**\n\t\t\t\t *  The volume control in decibels. \n\t\t\t\t *  @type {Decibels}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.volume = this._volume.volume;\n\t\t        //connections\n\t\t        this._panner.connect(this._volume);\n\t\t        this._readOnly([\n\t\t            'pan',\n\t\t            'volume'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.PanVol);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @type  {Object}\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.PanVol.defaults = {\n\t\t        'pan': 0.5,\n\t\t        'volume': 0\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.PanVol} this\n\t\t\t */\n\t\t    Tone.PanVol.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'pan',\n\t\t            'volume'\n\t\t        ]);\n\t\t        this._panner.dispose();\n\t\t        this._panner = null;\n\t\t        this.pan = null;\n\t\t        this._volume.dispose();\n\t\t        this._volume = null;\n\t\t        this.volume = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.PanVol;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.CtrlInterpolate will interpolate between given values based\n\t\t\t *         on the \"index\" property. Passing in an array or object literal\n\t\t\t *         will interpolate each of the parameters. Note (i.e. \"C3\")\n\t\t\t *         and Time (i.e. \"4n + 2\") can be interpolated. All other values are\n\t\t\t *         assumed to be numbers. \n\t\t\t *  @example\n\t\t\t * var interp = new Tone.CtrlInterpolate([0, 2, 9, 4]);\n\t\t\t * interp.index = 0.75;\n\t\t\t * interp.value; //returns 1.5\n\t\t\t *\n\t\t\t *  @example\n\t\t\t * var interp = new Tone.CtrlInterpolate([\n\t\t\t * \t[2, 4, 5],\n\t\t\t * \t[9, 3, 2],\n\t\t\t * ]);\n\t\t\t * @param {Array} values The array of values to interpolate over\n\t\t\t * @param {Positive} index The initial interpolation index.\n\t\t\t * @extends {Tone}\n\t\t\t */\n\t\t    Tone.CtrlInterpolate = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'values',\n\t\t            'index'\n\t\t        ], Tone.CtrlInterpolate.defaults);\n\t\t        /**\n\t\t\t\t *  The values to interpolate between\n\t\t\t\t *  @type  {Array}\n\t\t\t\t */\n\t\t        this.values = options.values;\n\t\t        /**\n\t\t\t\t *  The interpolated index between values. For example: a value of 1.5\n\t\t\t\t *  would interpolate equally between the value at index 1\n\t\t\t\t *  and the value at index 2. \n\t\t\t\t *  @example\n\t\t\t\t * interp.index = 0; \n\t\t\t\t * interp.value; //returns the value at 0\n\t\t\t\t * interp.index = 0.5;\n\t\t\t\t * interp.value; //returns the value between indices 0 and 1. \n\t\t\t\t *  @type  {Positive}\n\t\t\t\t */\n\t\t        this.index = options.index;\n\t\t    };\n\t\t    Tone.extend(Tone.CtrlInterpolate);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.CtrlInterpolate.defaults = {\n\t\t        'index': 0,\n\t\t        'values': []\n\t\t    };\n\t\t    /**\n\t\t\t *  The current interpolated value based on the index\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.CtrlInterpolate#\n\t\t\t *  @type {*}\n\t\t\t *  @name value\n\t\t\t */\n\t\t    Object.defineProperty(Tone.CtrlInterpolate.prototype, 'value', {\n\t\t        get: function () {\n\t\t            var index = this.index;\n\t\t            index = Math.min(index, this.values.length - 1);\n\t\t            var lowerPosition = Math.floor(index);\n\t\t            var lower = this.values[lowerPosition];\n\t\t            var upper = this.values[Math.ceil(index)];\n\t\t            return this._interpolate(index - lowerPosition, lower, upper);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Internal interpolation routine\n\t\t\t *  @param  {NormalRange}  index  The index between the lower and upper\n\t\t\t *  @param  {*}  lower \n\t\t\t *  @param  {*}  upper \n\t\t\t *  @return  {*}  The interpolated value\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.CtrlInterpolate.prototype._interpolate = function (index, lower, upper) {\n\t\t        if (this.isArray(lower)) {\n\t\t            var retArray = [];\n\t\t            for (var i = 0; i < lower.length; i++) {\n\t\t                retArray[i] = this._interpolate(index, lower[i], upper[i]);\n\t\t            }\n\t\t            return retArray;\n\t\t        } else if (this.isObject(lower)) {\n\t\t            var retObj = {};\n\t\t            for (var attr in lower) {\n\t\t                retObj[attr] = this._interpolate(index, lower[attr], upper[attr]);\n\t\t            }\n\t\t            return retObj;\n\t\t        } else {\n\t\t            lower = this._toNumber(lower);\n\t\t            upper = this._toNumber(upper);\n\t\t            return (1 - index) * lower + index * upper;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert from the given type into a number\n\t\t\t *  @param  {Number|String}  value\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.CtrlInterpolate.prototype._toNumber = function (val) {\n\t\t        if (this.isNumber(val)) {\n\t\t            return val;\n\t\t        } else {\n\t\t            //otherwise assume that it's Time...\n\t\t            return this.toSeconds(val);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.CtrlInterpolate}  this\n\t\t\t */\n\t\t    Tone.CtrlInterpolate.prototype.dispose = function () {\n\t\t        this.values = null;\n\t\t    };\n\t\t    return Tone.CtrlInterpolate;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.CtrlMarkov represents a Markov Chain where each call\n\t\t\t *         to Tone.CtrlMarkov.next will move to the next state. If the next\n\t\t\t *         state choice is an array, the next state is chosen randomly with\n\t\t\t *         even probability for all of the choices. For a weighted probability\n\t\t\t *         of the next choices, pass in an object with \"state\" and \"probability\" attributes. \n\t\t\t *         The probabilities will be normalized and then chosen. If no next options\n\t\t\t *         are given for the current state, the state will stay there. \n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * var chain = new Tone.CtrlMarkov({\n\t\t\t * \t\"beginning\" : [\"end\", \"middle\"],\n\t\t\t * \t\"middle\" : \"end\"\n\t\t\t * });\n\t\t\t * chain.value = \"beginning\";\n\t\t\t * chain.next(); //returns \"end\" or \"middle\" with 50% probability\n\t\t\t *\n\t\t\t *  @example\n\t\t\t * var chain = new Tone.CtrlMarkov({\n\t\t\t * \t\"beginning\" : [{\"value\" : \"end\", \"probability\" : 0.8}, \n\t\t\t * \t\t\t\t\t{\"value\" : \"middle\", \"probability\" : 0.2}],\n\t\t\t * \t\"middle\" : \"end\"\n\t\t\t * });\n\t\t\t * chain.value = \"beginning\";\n\t\t\t * chain.next(); //returns \"end\" with 80% probability or \"middle\" with 20%.\n\t\t\t *  @param {Object} values An object with the state names as the keys\n\t\t\t *                         and the next state(s) as the values. \n\t\t\t */\n\t\t    Tone.CtrlMarkov = function (values, initial) {\n\t\t        /**\n\t\t\t\t *  The Markov values with states as the keys\n\t\t\t\t *  and next state(s) as the values. \n\t\t\t\t *  @type {Object}\n\t\t\t\t */\n\t\t        this.values = this.defaultArg(values, {});\n\t\t        /**\n\t\t\t\t *  The current state of the Markov values. The next\n\t\t\t\t *  state will be evaluated and returned when Tone.CtrlMarkov.next\n\t\t\t\t *  is invoked.\n\t\t\t\t *  @type {String}\n\t\t\t\t */\n\t\t        this.value = this.defaultArg(initial, Object.keys(this.values)[0]);\n\t\t    };\n\t\t    Tone.extend(Tone.CtrlMarkov);\n\t\t    /**\n\t\t\t *  Returns the next state of the Markov values. \n\t\t\t *  @return  {String}\n\t\t\t */\n\t\t    Tone.CtrlMarkov.prototype.next = function () {\n\t\t        if (this.values.hasOwnProperty(this.value)) {\n\t\t            var next = this.values[this.value];\n\t\t            if (this.isArray(next)) {\n\t\t                var distribution = this._getProbDistribution(next);\n\t\t                var rand = Math.random();\n\t\t                var total = 0;\n\t\t                for (var i = 0; i < distribution.length; i++) {\n\t\t                    var dist = distribution[i];\n\t\t                    if (rand > total && rand < total + dist) {\n\t\t                        var chosen = next[i];\n\t\t                        if (this.isObject(chosen)) {\n\t\t                            this.value = chosen.value;\n\t\t                        } else {\n\t\t                            this.value = chosen;\n\t\t                        }\n\t\t                    }\n\t\t                    total += dist;\n\t\t                }\n\t\t            } else {\n\t\t                this.value = next;\n\t\t            }\n\t\t        }\n\t\t        return this.value;\n\t\t    };\n\t\t    /**\n\t\t\t *  Choose randomly from an array weighted options in the form \n\t\t\t *  {\"state\" : string, \"probability\" : number} or an array of values\n\t\t\t *  @param  {Array}  options \n\t\t\t *  @return  {Array}  The randomly selected choice\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.CtrlMarkov.prototype._getProbDistribution = function (options) {\n\t\t        var distribution = [];\n\t\t        var total = 0;\n\t\t        var needsNormalizing = false;\n\t\t        for (var i = 0; i < options.length; i++) {\n\t\t            var option = options[i];\n\t\t            if (this.isObject(option)) {\n\t\t                needsNormalizing = true;\n\t\t                distribution[i] = option.probability;\n\t\t            } else {\n\t\t                distribution[i] = 1 / options.length;\n\t\t            }\n\t\t            total += distribution[i];\n\t\t        }\n\t\t        if (needsNormalizing) {\n\t\t            //normalize the values\n\t\t            for (var j = 0; j < distribution.length; j++) {\n\t\t                distribution[j] = distribution[j] / total;\n\t\t            }\n\t\t        }\n\t\t        return distribution;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.CtrlMarkov}  this\n\t\t\t */\n\t\t    Tone.CtrlMarkov.prototype.dispose = function () {\n\t\t        this.values = null;\n\t\t    };\n\t\t    return Tone.CtrlMarkov;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Generate patterns from an array of values.\n\t\t\t *         Has a number of arpeggiation and randomized\n\t\t\t *         selection patterns. \n\t\t\t *           <ul>\n\t\t\t *  \t        <li>\"up\" - cycles upward</li>\n\t\t\t *  \t\t\t<li>\"down\" - cycles downward</li>\n\t\t\t *  \t\t\t<li>\"upDown\" - up then and down</li>\n\t\t\t *  \t\t\t<li>\"downUp\" - cycles down then and up</li>\n\t\t\t *  \t\t\t<li>\"alternateUp\" - jump up two and down one</li>\n\t\t\t *  \t\t\t<li>\"alternateDown\" - jump down two and up one</li>\n\t\t\t *  \t\t\t<li>\"random\" - randomly select an index</li>\n\t\t\t *  \t\t\t<li>\"randomWalk\" - randomly moves one index away from the current position</li>\n\t\t\t *  \t\t\t<li>\"randomOnce\" - randomly select an index without repeating until all values have been chosen.</li>\n\t\t\t *     \t\t</ul>\n\t\t\t *  @param  {Array}  values   An array of options to choose from.\n\t\t\t *  @param  {Tone.CtrlPattern.Type=}  type  The name of the pattern.\n\t\t\t *  @extends {Tone}\n\t\t\t */\n\t\t    Tone.CtrlPattern = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'values',\n\t\t            'type'\n\t\t        ], Tone.CtrlPattern.defaults);\n\t\t        /**\n\t\t\t\t *  The array of values to arpeggiate over\n\t\t\t\t *  @type {Array}\n\t\t\t\t */\n\t\t        this.values = options.values;\n\t\t        /**\n\t\t\t\t *  The current position in the values array\n\t\t\t\t *  @type  {Number}\n\t\t\t\t */\n\t\t        this.index = 0;\n\t\t        /**\n\t\t\t\t *  The type placeholder\n\t\t\t\t *  @type {Tone.CtrlPattern.Type}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._type = null;\n\t\t        /**\n\t\t\t\t *  Shuffled values for the RandomOnce type\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._shuffled = null;\n\t\t        /**\n\t\t\t\t *  The direction of the movement\n\t\t\t\t *  @type {String}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._direction = null;\n\t\t        this.type = options.type;\n\t\t    };\n\t\t    Tone.extend(Tone.CtrlPattern);\n\t\t    /**\n\t\t\t *  The Control Patterns\n\t\t\t *  @type  {Object}\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.CtrlPattern.Type = {\n\t\t        Up: 'up',\n\t\t        Down: 'down',\n\t\t        UpDown: 'upDown',\n\t\t        DownUp: 'downUp',\n\t\t        AlternateUp: 'alternateUp',\n\t\t        AlternateDown: 'alternateDown',\n\t\t        Random: 'random',\n\t\t        RandomWalk: 'randomWalk',\n\t\t        RandomOnce: 'randomOnce'\n\t\t    };\n\t\t    /**\n\t\t\t *  The default values. \n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.CtrlPattern.defaults = {\n\t\t        'type': Tone.CtrlPattern.Type.Up,\n\t\t        'values': []\n\t\t    };\n\t\t    /**\n\t\t\t *  The value at the current index of the pattern.\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.CtrlPattern#\n\t\t\t *  @type {*}\n\t\t\t *  @name value\n\t\t\t */\n\t\t    Object.defineProperty(Tone.CtrlPattern.prototype, 'value', {\n\t\t        get: function () {\n\t\t            //some safeguards\n\t\t            if (this.values.length === 0) {\n\t\t                return;\n\t\t            } else if (this.values.length === 1) {\n\t\t                return this.values[0];\n\t\t            }\n\t\t            this.index = Math.min(this.index, this.values.length - 1);\n\t\t            var val = this.values[this.index];\n\t\t            if (this.type === Tone.CtrlPattern.Type.RandomOnce) {\n\t\t                if (this.values.length !== this._shuffled.length) {\n\t\t                    this._shuffleValues();\n\t\t                }\n\t\t                val = this.values[this._shuffled[this.index]];\n\t\t            }\n\t\t            return val;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The pattern used to select the next\n\t\t\t *  item from the values array\n\t\t\t *  @memberOf Tone.CtrlPattern#\n\t\t\t *  @type {Tone.CtrlPattern.Type}\n\t\t\t *  @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.CtrlPattern.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._type = type;\n\t\t            this._shuffled = null;\n\t\t            //the first index\n\t\t            if (this._type === Tone.CtrlPattern.Type.Up || this._type === Tone.CtrlPattern.Type.UpDown || this._type === Tone.CtrlPattern.Type.RandomOnce || this._type === Tone.CtrlPattern.Type.AlternateUp) {\n\t\t                this.index = 0;\n\t\t            } else if (this._type === Tone.CtrlPattern.Type.Down || this._type === Tone.CtrlPattern.Type.DownUp || this._type === Tone.CtrlPattern.Type.AlternateDown) {\n\t\t                this.index = this.values.length - 1;\n\t\t            }\n\t\t            //the direction\n\t\t            if (this._type === Tone.CtrlPattern.Type.UpDown || this._type === Tone.CtrlPattern.Type.AlternateUp) {\n\t\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t\t            } else if (this._type === Tone.CtrlPattern.Type.DownUp || this._type === Tone.CtrlPattern.Type.AlternateDown) {\n\t\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t\t            }\n\t\t            //randoms\n\t\t            if (this._type === Tone.CtrlPattern.Type.RandomOnce) {\n\t\t                this._shuffleValues();\n\t\t            } else if (this._type === Tone.CtrlPattern.Random) {\n\t\t                this.index = Math.floor(Math.random() * this.values.length);\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Return the next value given the current position\n\t\t\t *  and pattern.\n\t\t\t *  @return {*} The next value\n\t\t\t */\n\t\t    Tone.CtrlPattern.prototype.next = function () {\n\t\t        var type = this.type;\n\t\t        //choose the next index\n\t\t        if (type === Tone.CtrlPattern.Type.Up) {\n\t\t            this.index++;\n\t\t            if (this.index >= this.values.length) {\n\t\t                this.index = 0;\n\t\t            }\n\t\t        } else if (type === Tone.CtrlPattern.Type.Down) {\n\t\t            this.index--;\n\t\t            if (this.index < 0) {\n\t\t                this.index = this.values.length - 1;\n\t\t            }\n\t\t        } else if (type === Tone.CtrlPattern.Type.UpDown || type === Tone.CtrlPattern.Type.DownUp) {\n\t\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t\t                this.index++;\n\t\t            } else {\n\t\t                this.index--;\n\t\t            }\n\t\t            if (this.index < 0) {\n\t\t                this.index = 1;\n\t\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t\t            } else if (this.index >= this.values.length) {\n\t\t                this.index = this.values.length - 2;\n\t\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t\t            }\n\t\t        } else if (type === Tone.CtrlPattern.Type.Random) {\n\t\t            this.index = Math.floor(Math.random() * this.values.length);\n\t\t        } else if (type === Tone.CtrlPattern.Type.RandomWalk) {\n\t\t            if (Math.random() < 0.5) {\n\t\t                this.index--;\n\t\t                this.index = Math.max(this.index, 0);\n\t\t            } else {\n\t\t                this.index++;\n\t\t                this.index = Math.min(this.index, this.values.length - 1);\n\t\t            }\n\t\t        } else if (type === Tone.CtrlPattern.Type.RandomOnce) {\n\t\t            this.index++;\n\t\t            if (this.index >= this.values.length) {\n\t\t                this.index = 0;\n\t\t                //reshuffle the values for next time\n\t\t                this._shuffleValues();\n\t\t            }\n\t\t        } else if (type === Tone.CtrlPattern.Type.AlternateUp) {\n\t\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t\t                this.index += 2;\n\t\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t\t            } else {\n\t\t                this.index -= 1;\n\t\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t\t            }\n\t\t            if (this.index >= this.values.length) {\n\t\t                this.index = 0;\n\t\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t\t            }\n\t\t        } else if (type === Tone.CtrlPattern.Type.AlternateDown) {\n\t\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t\t                this.index += 1;\n\t\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t\t            } else {\n\t\t                this.index -= 2;\n\t\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t\t            }\n\t\t            if (this.index < 0) {\n\t\t                this.index = this.values.length - 1;\n\t\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t\t            }\n\t\t        }\n\t\t        return this.value;\n\t\t    };\n\t\t    /**\n\t\t\t *  Shuffles the values and places the results into the _shuffled\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.CtrlPattern.prototype._shuffleValues = function () {\n\t\t        var copy = [];\n\t\t        this._shuffled = [];\n\t\t        for (var i = 0; i < this.values.length; i++) {\n\t\t            copy[i] = i;\n\t\t        }\n\t\t        while (copy.length > 0) {\n\t\t            var randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);\n\t\t            this._shuffled.push(randVal[0]);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @returns {Tone.CtrlPattern} this\n\t\t\t */\n\t\t    Tone.CtrlPattern.prototype.dispose = function () {\n\t\t        this._shuffled = null;\n\t\t        this.values = null;\n\t\t    };\n\t\t    return Tone.CtrlPattern;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Choose a random value.\n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * var randomWalk = new Tone.CtrlRandom({\n\t\t\t * \t\"min\" : 0,\n\t\t\t * \t\"max\" : 10,\n\t\t\t * \t\"integer\" : true\n\t\t\t * });\n\t\t\t * randomWalk.eval();\n\t\t\t *\n\t\t\t *  @param {Number|Time=} min The minimum return value.\n\t\t\t *  @param {Number|Time=} max The maximum return value.\n\t\t\t */\n\t\t    Tone.CtrlRandom = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'min',\n\t\t            'max'\n\t\t        ], Tone.CtrlRandom.defaults);\n\t\t        /**\n\t\t\t\t *  The minimum return value\n\t\t\t\t *  @type  {Number|Time}\n\t\t\t\t */\n\t\t        this.min = options.min;\n\t\t        /**\n\t\t\t\t *  The maximum return value\n\t\t\t\t *  @type  {Number|Time}\n\t\t\t\t */\n\t\t        this.max = options.max;\n\t\t        /**\n\t\t\t\t *  If the return value should be an integer\n\t\t\t\t *  @type  {Boolean}\n\t\t\t\t */\n\t\t        this.integer = options.integer;\n\t\t    };\n\t\t    Tone.extend(Tone.CtrlRandom);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.CtrlRandom.defaults = {\n\t\t        'min': 0,\n\t\t        'max': 1,\n\t\t        'integer': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Return a random value between min and max. \n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.CtrlRandom#\n\t\t\t *  @type {*}\n\t\t\t *  @name value\n\t\t\t */\n\t\t    Object.defineProperty(Tone.CtrlRandom.prototype, 'value', {\n\t\t        get: function () {\n\t\t            var min = this.toSeconds(this.min);\n\t\t            var max = this.toSeconds(this.max);\n\t\t            var rand = Math.random();\n\t\t            var val = rand * min + (1 - rand) * max;\n\t\t            if (this.integer) {\n\t\t                val = Math.floor(val);\n\t\t            }\n\t\t            return val;\n\t\t        }\n\t\t    });\n\t\t    return Tone.CtrlRandom;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Buffer loading and storage. Tone.Buffer is used internally by all \n\t\t\t *          classes that make requests for audio files such as Tone.Player,\n\t\t\t *          Tone.Sampler and Tone.Convolver.\n\t\t\t *          <br><br>\n\t\t\t *          Aside from load callbacks from individual buffers, Tone.Buffer \n\t\t\t *  \t\tprovides static methods which keep track of the loading progress \n\t\t\t *  \t\tof all of the buffers. These methods are Tone.Buffer.on(\"load\" / \"progress\" / \"error\")\n\t\t\t *\n\t\t\t *  @constructor \n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {AudioBuffer|string} url The url to load, or the audio buffer to set. \n\t\t\t *  @param {Function=} onload A callback which is invoked after the buffer is loaded. \n\t\t\t *                            It's recommended to use Tone.Buffer.onload instead \n\t\t\t *                            since it will give you a callback when ALL buffers are loaded.\n\t\t\t *  @param {Function=} onerror The callback to invoke if there is an error\n\t\t\t *  @example\n\t\t\t * var buffer = new Tone.Buffer(\"path/to/sound.mp3\", function(){\n\t\t\t * \t//the buffer is now available.\n\t\t\t * \tvar buff = buffer.get();\n\t\t\t * });\n\t\t\t */\n\t\t    Tone.Buffer = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'url',\n\t\t            'onload',\n\t\t            'onerror'\n\t\t        ], Tone.Buffer.defaults);\n\t\t        /**\n\t\t\t\t *  stores the loaded AudioBuffer\n\t\t\t\t *  @type {AudioBuffer}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._buffer = null;\n\t\t        /**\n\t\t\t\t *  indicates if the buffer should be reversed or not\n\t\t\t\t *  @type {Boolean}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._reversed = options.reverse;\n\t\t        /**\n\t\t\t\t *  The XHR\n\t\t\t\t *  @type  {XMLHttpRequest}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._xhr = null;\n\t\t        if (options.url instanceof AudioBuffer || options.url instanceof Tone.Buffer) {\n\t\t            this.set(options.url);\n\t\t            // invoke the onload callback\n\t\t            if (options.onload) {\n\t\t                options.onload(this);\n\t\t            }\n\t\t        } else if (this.isString(options.url)) {\n\t\t            this.load(options.url, options.onload, options.onerror);\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.Buffer);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Buffer.defaults = {\n\t\t        'url': undefined,\n\t\t        'reverse': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Pass in an AudioBuffer or Tone.Buffer to set the value\n\t\t\t *  of this buffer.\n\t\t\t *  @param {AudioBuffer|Tone.Buffer} buffer the buffer\n\t\t\t *  @returns {Tone.Buffer} this\n\t\t\t */\n\t\t    Tone.Buffer.prototype.set = function (buffer) {\n\t\t        if (buffer instanceof Tone.Buffer) {\n\t\t            this._buffer = buffer.get();\n\t\t        } else {\n\t\t            this._buffer = buffer;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  @return {AudioBuffer} The audio buffer stored in the object.\n\t\t\t */\n\t\t    Tone.Buffer.prototype.get = function () {\n\t\t        return this._buffer;\n\t\t    };\n\t\t    /**\n\t\t\t *  Makes an xhr reqest for the selected url then decodes\n\t\t\t *  the file as an audio buffer. Invokes\n\t\t\t *  the callback once the audio buffer loads.\n\t\t\t *  @param {String} url The url of the buffer to load.\n\t\t\t *                      filetype support depends on the\n\t\t\t *                      browser.\n\t\t\t *  @returns {Promise} returns a Promise which resolves with the Tone.Buffer\n\t\t\t */\n\t\t    Tone.Buffer.prototype.load = function (url, onload, onerror) {\n\t\t        var promise = new Promise(function (load, error) {\n\t\t            this._xhr = Tone.Buffer.load(url, //success\n\t\t            function (buff) {\n\t\t                this._xhr = null;\n\t\t                this.set(buff);\n\t\t                load(this);\n\t\t                if (onload) {\n\t\t                    onload(this);\n\t\t                }\n\t\t            }.bind(this), //error\n\t\t            function (err) {\n\t\t                this._xhr = null;\n\t\t                error(err);\n\t\t                if (onerror) {\n\t\t                    onerror(err);\n\t\t                }\n\t\t            }.bind(this));\n\t\t        }.bind(this));\n\t\t        return promise;\n\t\t    };\n\t\t    /**\n\t\t\t *  dispose and disconnect\n\t\t\t *  @returns {Tone.Buffer} this\n\t\t\t */\n\t\t    Tone.Buffer.prototype.dispose = function () {\n\t\t        Tone.Emitter.prototype.dispose.call(this);\n\t\t        this._buffer = null;\n\t\t        if (this._xhr) {\n\t\t            Tone.Buffer._currentDownloads--;\n\t\t            this._xhr.abort();\n\t\t            this._xhr = null;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * If the buffer is loaded or not\n\t\t\t * @memberOf Tone.Buffer#\n\t\t\t * @type {Boolean}\n\t\t\t * @name loaded\n\t\t\t * @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Buffer.prototype, 'loaded', {\n\t\t        get: function () {\n\t\t            return this.length > 0;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The duration of the buffer. \n\t\t\t * @memberOf Tone.Buffer#\n\t\t\t * @type {Number}\n\t\t\t * @name duration\n\t\t\t * @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Buffer.prototype, 'duration', {\n\t\t        get: function () {\n\t\t            if (this._buffer) {\n\t\t                return this._buffer.duration;\n\t\t            } else {\n\t\t                return 0;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The length of the buffer in samples\n\t\t\t * @memberOf Tone.Buffer#\n\t\t\t * @type {Number}\n\t\t\t * @name length\n\t\t\t * @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Buffer.prototype, 'length', {\n\t\t        get: function () {\n\t\t            if (this._buffer) {\n\t\t                return this._buffer.length;\n\t\t            } else {\n\t\t                return 0;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The number of discrete audio channels. Returns 0 if no buffer\n\t\t\t * is loaded.\n\t\t\t * @memberOf Tone.Buffer#\n\t\t\t * @type {Number}\n\t\t\t * @name numberOfChannels\n\t\t\t * @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Buffer.prototype, 'numberOfChannels', {\n\t\t        get: function () {\n\t\t            if (this._buffer) {\n\t\t                return this._buffer.numberOfChannels;\n\t\t            } else {\n\t\t                return 0;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Set the audio buffer from the array\n\t\t\t *  @param {Float32Array} array The array to fill the audio buffer\n\t\t\t *  @param {Number} [channels=1] The number of channels contained in the array. \n\t\t\t *                               If the channel is more than 1, the input array\n\t\t\t *                               is expected to be a multidimensional array\n\t\t\t *                               with dimensions equal to the number of channels.\n\t\t\t *  @return {Tone.Buffer} this\n\t\t\t */\n\t\t    Tone.Buffer.prototype.fromArray = function (array) {\n\t\t        var isMultidimensional = array[0].length > 0;\n\t\t        var channels = isMultidimensional ? array.length : 1;\n\t\t        var len = isMultidimensional ? array[0].length : array.length;\n\t\t        var buffer = this.context.createBuffer(channels, len, this.context.sampleRate);\n\t\t        if (!isMultidimensional && channels === 1) {\n\t\t            array = [array];\n\t\t        }\n\t\t        for (var c = 0; c < channels; c++) {\n\t\t            if (this.isFunction(buffer.copyToChannel)) {\n\t\t                buffer.copyToChannel(array[c], c);\n\t\t            } else {\n\t\t                var channel = buffer.getChannelData(c);\n\t\t                var channelArray = array[c];\n\t\t                for (var i = 0; i < channelArray.length; i++) {\n\t\t                    channel[i] = channelArray[i];\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        this._buffer = buffer;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * \tGet the buffer as an array. Single channel buffers will return a 1-dimensional \n\t\t\t * \tFloat32Array, and multichannel buffers will return multidimensional arrays.\n\t\t\t *  @param {Number=} channel Optionally only copy a single channel from the array.\n\t\t\t *  @return {Array}\n\t\t\t */\n\t\t    Tone.Buffer.prototype.toArray = function (channel) {\n\t\t        if (this.isNumber(channel)) {\n\t\t            return this._buffer.getChannelData(channel);\n\t\t        } else {\n\t\t            var ret = [];\n\t\t            for (var c = 0; c < this.numberOfChannels; c++) {\n\t\t                ret[c] = new Float32Array(this.length);\n\t\t                if (this.isFunction(this._buffer.copyFromChannel)) {\n\t\t                    this._buffer.copyFromChannel(ret[c], c);\n\t\t                } else {\n\t\t                    var channelData = this._buffer.getChannelData(c);\n\t\t                    var retArray = ret[c];\n\t\t                    for (var i = 0; i < channelData.length; i++) {\n\t\t                        retArray[i] = channelData[i];\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            if (ret.length === 1) {\n\t\t                return ret[0];\n\t\t            } else {\n\t\t                return ret;\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Cut a subsection of the array and return a buffer of the\n\t\t\t *  subsection. Does not modify the original buffer\n\t\t\t *  @param {Time} start The time to start the slice\n\t\t\t *  @param {Time=} end The end time to slice. If none is given\n\t\t\t *                     will default to the end of the buffer\n\t\t\t *  @return {Tone.Buffer} this\n\t\t\t */\n\t\t    Tone.Buffer.prototype.slice = function (start, end) {\n\t\t        end = this.defaultArg(end, this.duration);\n\t\t        var startSamples = Math.floor(this.context.sampleRate * this.toSeconds(start));\n\t\t        var endSamples = Math.floor(this.context.sampleRate * this.toSeconds(end));\n\t\t        var replacement = [];\n\t\t        for (var i = 0; i < this.numberOfChannels; i++) {\n\t\t            replacement[i] = this.toArray(i).slice(startSamples, endSamples);\n\t\t        }\n\t\t        var retBuffer = new Tone.Buffer().fromArray(replacement);\n\t\t        return retBuffer;\n\t\t    };\n\t\t    /**\n\t\t\t *  Reverse the buffer.\n\t\t\t *  @private\n\t\t\t *  @return {Tone.Buffer} this\n\t\t\t */\n\t\t    Tone.Buffer.prototype._reverse = function () {\n\t\t        if (this.loaded) {\n\t\t            for (var i = 0; i < this._buffer.numberOfChannels; i++) {\n\t\t                Array.prototype.reverse.call(this._buffer.getChannelData(i));\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Reverse the buffer.\n\t\t\t * @memberOf Tone.Buffer#\n\t\t\t * @type {Boolean}\n\t\t\t * @name reverse\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Buffer.prototype, 'reverse', {\n\t\t        get: function () {\n\t\t            return this._reversed;\n\t\t        },\n\t\t        set: function (rev) {\n\t\t            if (this._reversed !== rev) {\n\t\t                this._reversed = rev;\n\t\t                this._reverse();\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    // STATIC METHODS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //statically inherits Emitter methods\n\t\t    Tone.Emitter.mixin(Tone.Buffer);\n\t\t    /**\n\t\t\t *  the static queue for all of the xhr requests\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Buffer._downloadQueue = [];\n\t\t    /**\n\t\t\t *  the total number of downloads\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Buffer._currentDownloads = 0;\n\t\t    /**\n\t\t\t *  A path which is prefixed before every url.\n\t\t\t *  @type  {String}\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.Buffer.baseUrl = '';\n\t\t    /**\n\t\t\t *  Loads a url using XMLHttpRequest.\n\t\t\t *  @param {String} url\n\t\t\t *  @param {Function} onload\n\t\t\t *  @param {Function} onerror\n\t\t\t *  @param {Function} onprogress\n\t\t\t *  @return {XMLHttpRequest}\n\t\t\t */\n\t\t    Tone.Buffer.load = function (url, onload, onerror) {\n\t\t        //default\n\t\t        onload = onload || Tone.noOp;\n\t\t        function onError(e) {\n\t\t            Tone.Buffer._currentDownloads--;\n\t\t            if (onerror) {\n\t\t                onerror(e);\n\t\t            } else {\n\t\t                throw new Error(e);\n\t\t            }\n\t\t        }\n\t\t        function onProgress() {\n\t\t            //calculate the progress\n\t\t            var totalProgress = 0;\n\t\t            for (var i = 0; i < Tone.Buffer._downloadQueue.length; i++) {\n\t\t                totalProgress += Tone.Buffer._downloadQueue[i].progress;\n\t\t            }\n\t\t            Tone.Buffer.emit('progress', totalProgress / Tone.Buffer._downloadQueue.length);\n\t\t        }\n\t\t        var request = new XMLHttpRequest();\n\t\t        request.open('GET', Tone.Buffer.baseUrl + url, true);\n\t\t        request.responseType = 'arraybuffer';\n\t\t        //start out as 0\n\t\t        request.progress = 0;\n\t\t        Tone.Buffer._currentDownloads++;\n\t\t        Tone.Buffer._downloadQueue.push(request);\n\t\t        request.addEventListener('load', function () {\n\t\t            if (request.status === 200) {\n\t\t                Tone.context.decodeAudioData(request.response, function (buff) {\n\t\t                    request.progress = 1;\n\t\t                    onProgress();\n\t\t                    onload(buff);\n\t\t                    Tone.Buffer._currentDownloads--;\n\t\t                    if (Tone.Buffer._currentDownloads === 0) {\n\t\t                        // clear the downloads\n\t\t                        Tone.Buffer._downloadQueue = [];\n\t\t                        //emit the event at the end\n\t\t                        Tone.Buffer.emit('load');\n\t\t                    }\n\t\t                }, function () {\n\t\t                    onError('Tone.Buffer: could not decode audio data: ' + url);\n\t\t                });\n\t\t            } else {\n\t\t                onError('Tone.Buffer: could not locate file: ' + url);\n\t\t            }\n\t\t        });\n\t\t        request.addEventListener('error', onError);\n\t\t        request.addEventListener('progress', function (event) {\n\t\t            if (event.lengthComputable) {\n\t\t                //only go to 95%, the last 5% is when the audio is decoded\n\t\t                request.progress = event.loaded / event.total * 0.95;\n\t\t                onProgress();\n\t\t            }\n\t\t        });\n\t\t        request.send();\n\t\t        return request;\n\t\t    };\n\t\t    /**\n\t\t\t *  Checks a url's extension to see if the current browser can play that file type.\n\t\t\t *  @param {String} url The url/extension to test\n\t\t\t *  @return {Boolean} If the file extension can be played\n\t\t\t *  @static\n\t\t\t *  @example\n\t\t\t * Tone.Buffer.supportsType(\"wav\"); //returns true\n\t\t\t * Tone.Buffer.supportsType(\"path/to/file.wav\"); //returns true\n\t\t\t */\n\t\t    Tone.Buffer.supportsType = function (url) {\n\t\t        var extension = url.split('.');\n\t\t        extension = extension[extension.length - 1];\n\t\t        var response = document.createElement('audio').canPlayType('audio/' + extension);\n\t\t        return response !== '';\n\t\t    };\n\t\t    return Tone.Buffer;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class A data structure for holding multiple buffers.\n\t\t\t *  \n\t\t\t *  @param  {Object|Array}    urls      An object literal or array\n\t\t\t *                                      of urls to load.\n\t\t\t *  @param  {Function=}  callback  The callback to invoke when\n\t\t\t *                                 the buffers are loaded. \n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * //load a whole bank of piano samples\n\t\t\t * var pianoSamples = new Tone.Buffers({\n\t\t\t * \t\"C4\" : \"path/to/C4.mp3\"\n\t\t\t * \t\"C#4\" : \"path/to/C#4.mp3\"\n\t\t\t * \t\"D4\" : \"path/to/D4.mp3\"\n\t\t\t * \t\"D#4\" : \"path/to/D#4.mp3\"\n\t\t\t * \t...\n\t\t\t * }, function(){\n\t\t\t * \t//play one of the samples when they all load\n\t\t\t * \tplayer.buffer = pianoSamples.get(\"C4\");\n\t\t\t * \tplayer.start();\n\t\t\t * });\n\t\t\t * \n\t\t\t */\n\t\t    Tone.Buffers = function (urls, onload, baseUrl) {\n\t\t        /**\n\t\t\t\t *  All of the buffers\n\t\t\t\t *  @type  {Object}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._buffers = {};\n\t\t        /**\n\t\t\t\t *  A path which is prefixed before every url.\n\t\t\t\t *  @type  {String}\n\t\t\t\t */\n\t\t        this.baseUrl = this.defaultArg(baseUrl, '');\n\t\t        urls = this._flattenUrls(urls);\n\t\t        this._loadingCount = 0;\n\t\t        //add each one\n\t\t        for (var key in urls) {\n\t\t            this._loadingCount++;\n\t\t            this.add(key, urls[key], this._bufferLoaded.bind(this, onload));\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.Buffers);\n\t\t    /**\n\t\t\t *  True if the buffers object has a buffer by that name.\n\t\t\t *  @param  {String|Number}  name  The key or index of the \n\t\t\t *                                 buffer.\n\t\t\t *  @return  {Boolean}\n\t\t\t */\n\t\t    Tone.Buffers.prototype.has = function (name) {\n\t\t        return this._buffers.hasOwnProperty(name);\n\t\t    };\n\t\t    /**\n\t\t\t *  Get a buffer by name. If an array was loaded, \n\t\t\t *  then use the array index.\n\t\t\t *  @param  {String|Number}  name  The key or index of the \n\t\t\t *                                 buffer.\n\t\t\t *  @return  {Tone.Buffer}\n\t\t\t */\n\t\t    Tone.Buffers.prototype.get = function (name) {\n\t\t        if (this.has(name)) {\n\t\t            return this._buffers[name];\n\t\t        } else {\n\t\t            throw new Error('Tone.Buffers: no buffer named ' + name);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  A buffer was loaded. decrement the counter.\n\t\t\t *  @param  {Function}  callback \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Buffers.prototype._bufferLoaded = function (callback) {\n\t\t        this._loadingCount--;\n\t\t        if (this._loadingCount === 0 && callback) {\n\t\t            callback(this);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * If the buffers are loaded or not\n\t\t\t * @memberOf Tone.Buffers#\n\t\t\t * @type {Boolean}\n\t\t\t * @name loaded\n\t\t\t * @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Buffers.prototype, 'loaded', {\n\t\t        get: function () {\n\t\t            var isLoaded = true;\n\t\t            for (var buffName in this._buffers) {\n\t\t                var buff = this.get(buffName);\n\t\t                isLoaded = isLoaded && buff.loaded;\n\t\t            }\n\t\t            return isLoaded;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Add a buffer by name and url to the Buffers\n\t\t\t *  @param  {String}    name      A unique name to give\n\t\t\t *                                the buffer\n\t\t\t *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer, \n\t\t\t *                                                 or a buffer which will be added\n\t\t\t *                                                 with the given name.\n\t\t\t *  @param  {Function=}  callback  The callback to invoke \n\t\t\t *                                 when the url is loaded.\n\t\t\t */\n\t\t    Tone.Buffers.prototype.add = function (name, url, callback) {\n\t\t        callback = this.defaultArg(callback, Tone.noOp);\n\t\t        if (url instanceof Tone.Buffer) {\n\t\t            this._buffers[name] = url;\n\t\t            callback(this);\n\t\t        } else if (url instanceof AudioBuffer) {\n\t\t            this._buffers[name] = new Tone.Buffer(url);\n\t\t            callback(this);\n\t\t        } else if (this.isString(url)) {\n\t\t            this._buffers[name] = new Tone.Buffer(this.baseUrl + url, callback);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Flatten an object into a single depth object. \n\t\t\t *  thanks to https://gist.github.com/penguinboy/762197\n\t\t\t *  @param   {Object} ob \t\n\t\t\t *  @return  {Object}    \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Buffers.prototype._flattenUrls = function (ob) {\n\t\t        var toReturn = {};\n\t\t        for (var i in ob) {\n\t\t            if (!ob.hasOwnProperty(i))\n\t\t                continue;\n\t\t            if (this.isObject(ob[i])) {\n\t\t                var flatObject = this._flattenUrls(ob[i]);\n\t\t                for (var x in flatObject) {\n\t\t                    if (!flatObject.hasOwnProperty(x))\n\t\t                        continue;\n\t\t                    toReturn[i + '.' + x] = flatObject[x];\n\t\t                }\n\t\t            } else {\n\t\t                toReturn[i] = ob[i];\n\t\t            }\n\t\t        }\n\t\t        return toReturn;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.Buffers} this\n\t\t\t */\n\t\t    Tone.Buffers.prototype.dispose = function () {\n\t\t        for (var name in this._buffers) {\n\t\t            this._buffers[name].dispose();\n\t\t        }\n\t\t        this._buffers = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Buffers;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  buses are another way of routing audio\n\t\t\t *\n\t\t\t *  augments Tone.prototype to include send and recieve\n\t\t\t */\n\t\t    /**\n\t\t\t  *  All of the routes\n\t\t\t  *  \n\t\t\t  *  @type {Object}\n\t\t\t  *  @static\n\t\t\t  *  @private\n\t\t\t  */\n\t\t    var Buses = {};\n\t\t    /**\n\t\t\t *  Send this signal to the channel name. \n\t\t\t *  @param  {string} channelName A named channel to send the signal to.\n\t\t\t *  @param  {Decibels} amount The amount of the source to send to the bus. \n\t\t\t *  @return {GainNode} The gain node which connects this node to the desired channel. \n\t\t\t *                     Can be used to adjust the levels of the send.\n\t\t\t *  @example\n\t\t\t * source.send(\"reverb\", -12);\n\t\t\t */\n\t\t    Tone.prototype.send = function (channelName, amount) {\n\t\t        if (!Buses.hasOwnProperty(channelName)) {\n\t\t            Buses[channelName] = this.context.createGain();\n\t\t        }\n\t\t        amount = this.defaultArg(amount, 0);\n\t\t        var sendKnob = new Tone.Gain(amount, Tone.Type.Decibels);\n\t\t        this.output.chain(sendKnob, Buses[channelName]);\n\t\t        return sendKnob;\n\t\t    };\n\t\t    /**\n\t\t\t *  Recieve the input from the desired channelName to the input\n\t\t\t *\n\t\t\t *  @param  {string} channelName A named channel to send the signal to.\n\t\t\t *  @param {AudioNode} [input] If no input is selected, the\n\t\t\t *                                         input of the current node is\n\t\t\t *                                         chosen. \n\t\t\t *  @returns {Tone} this\n\t\t\t *  @example\n\t\t\t * reverbEffect.receive(\"reverb\");\n\t\t\t */\n\t\t    Tone.prototype.receive = function (channelName, input) {\n\t\t        if (!Buses.hasOwnProperty(channelName)) {\n\t\t            Buses[channelName] = this.context.createGain();\n\t\t        }\n\t\t        if (this.isUndef(input)) {\n\t\t            input = this.input;\n\t\t        }\n\t\t        Buses[channelName].connect(input);\n\t\t        return this;\n\t\t    };\n\t\t    //remove all the send/receives when a new audio context is passed in\n\t\t    Tone._initAudioContext(function () {\n\t\t        Buses = {};\n\t\t    });\n\t\t    return Tone;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Both Tone.Panner3D and Tone.Listener have a position in 3D space \n\t\t\t *          using a right-handed cartesian coordinate system. \n\t\t\t *          The units used in the coordinate system are not defined; \n\t\t\t *          these coordinates are independent/invariant of any particular \n\t\t\t *          units such as meters or feet. Tone.Panner3D objects have an forward \n\t\t\t *          vector representing the direction the sound is projecting. Additionally, \n\t\t\t *          they have a sound cone representing how directional the sound is. \n\t\t\t *          For example, the sound could be omnidirectional, in which case it would \n\t\t\t *          be heard anywhere regardless of its forward, or it can be more directional \n\t\t\t *          and heard only if it is facing the listener. Tone.Listener objects \n\t\t\t *          (representing a person's ears) have an forward and up vector \n\t\t\t *          representing in which direction the person is facing. Because both the \n\t\t\t *          source stream and the listener can be moving, they both have a velocity \n\t\t\t *          vector representing both the speed and direction of movement. Taken together, \n\t\t\t *          these two velocities can be used to generate a doppler shift effect which changes the pitch.\n\t\t\t *          <br><br>\n\t\t\t *          Note: the position of the Listener will have no effect on nodes not connected to a Tone.Panner3D\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @singleton\n\t\t\t *  @param {Number} positionX The initial x position.\n\t\t\t *  @param {Number} positionY The initial y position.\n\t\t\t *  @param {Number} positionZ The initial z position.\n\t\t\t */\n\t\t    Tone.Listener = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'positionX',\n\t\t            'positionY',\n\t\t            'positionZ'\n\t\t        ], ListenerConstructor.defaults);\n\t\t        /**\n\t\t\t\t *  The listener node\n\t\t\t\t *  @type {AudioListener}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._listener = this.context.listener;\n\t\t        /**\n\t\t\t\t *  Holds the current forward orientation\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._orientation = [\n\t\t            options.forwardX,\n\t\t            options.forwardY,\n\t\t            options.forwardZ,\n\t\t            options.upX,\n\t\t            options.upY,\n\t\t            options.upZ\n\t\t        ];\n\t\t        /**\n\t\t\t\t *  Holds the current position\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._position = [\n\t\t            options.positionX,\n\t\t            options.positionY,\n\t\t            options.positionZ\n\t\t        ];\n\t\t        // set the default position/forward\n\t\t        this.forwardX = options.forwardX;\n\t\t        this.forwardY = options.forwardY;\n\t\t        this.forwardZ = options.forwardZ;\n\t\t        this.upX = options.upX;\n\t\t        this.upY = options.upY;\n\t\t        this.upZ = options.upZ;\n\t\t        this.positionX = options.positionX;\n\t\t        this.positionY = options.positionY;\n\t\t        this.positionZ = options.positionZ;\n\t\t    };\n\t\t    Tone.extend(Tone.Listener);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t *  Defaults according to the specification\n\t\t\t */\n\t\t    Tone.Listener.defaults = {\n\t\t        'positionX': 0,\n\t\t        'positionY': 0,\n\t\t        'positionZ': 0,\n\t\t        'forwardX': 0,\n\t\t        'forwardY': 0,\n\t\t        'forwardZ': 1,\n\t\t        'upX': 0,\n\t\t        'upY': 1,\n\t\t        'upZ': 0\n\t\t    };\n\t\t    Tone.Listener.prototype._rampTimeConstant = 0.3;\n\t\t    /**\n\t\t\t *  Sets the position of the listener in 3d space.\t\n\t\t\t *  @param  {Number}  x\n\t\t\t *  @param  {Number}  y\n\t\t\t *  @param  {Number}  z\n\t\t\t *  @return {Tone.Listener} this\n\t\t\t */\n\t\t    Tone.Listener.prototype.setPosition = function (x, y, z) {\n\t\t        if (this._listener.positionX) {\n\t\t            var now = this.now();\n\t\t            this._listener.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\t            this._listener.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\t            this._listener.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t\t        } else {\n\t\t            this._listener.setPosition(x, y, z);\n\t\t        }\n\t\t        this._position = Array.prototype.slice.call(arguments);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Sets the orientation of the listener using two vectors, the forward\n\t\t\t *  vector (which direction the listener is facing) and the up vector \n\t\t\t *  (which the up direction of the listener). An up vector\n\t\t\t *  of 0, 0, 1 is equivalent to the listener standing up in the Z direction. \n\t\t\t *  @param  {Number}  x\n\t\t\t *  @param  {Number}  y\n\t\t\t *  @param  {Number}  z\n\t\t\t *  @param  {Number}  upX\n\t\t\t *  @param  {Number}  upY\n\t\t\t *  @param  {Number}  upZ\n\t\t\t *  @return {Tone.Listener} this\n\t\t\t */\n\t\t    Tone.Listener.prototype.setOrientation = function (x, y, z, upX, upY, upZ) {\n\t\t        if (this._listener.forwardX) {\n\t\t            var now = this.now();\n\t\t            this._listener.forwardX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\t            this._listener.forwardY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\t            this._listener.forwardZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t\t            this._listener.upX.setTargetAtTime(upX, now, this._rampTimeConstant);\n\t\t            this._listener.upY.setTargetAtTime(upY, now, this._rampTimeConstant);\n\t\t            this._listener.upZ.setTargetAtTime(upZ, now, this._rampTimeConstant);\n\t\t        } else {\n\t\t            this._listener.setOrientation(x, y, z, upX, upY, upZ);\n\t\t        }\n\t\t        this._orientation = Array.prototype.slice.call(arguments);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The x position of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name positionX\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'positionX', {\n\t\t        set: function (pos) {\n\t\t            this._position[0] = pos;\n\t\t            this.setPosition.apply(this, this._position);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._position[0];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The y position of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name positionY\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'positionY', {\n\t\t        set: function (pos) {\n\t\t            this._position[1] = pos;\n\t\t            this.setPosition.apply(this, this._position);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._position[1];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The z position of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name positionZ\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'positionZ', {\n\t\t        set: function (pos) {\n\t\t            this._position[2] = pos;\n\t\t            this.setPosition.apply(this, this._position);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._position[2];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The x coordinate of the listeners front direction. i.e. \n\t\t\t *  which way they are facing.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name forwardX\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'forwardX', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[0] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[0];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The y coordinate of the listeners front direction. i.e. \n\t\t\t *  which way they are facing.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name forwardY\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'forwardY', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[1] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[1];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The z coordinate of the listeners front direction. i.e. \n\t\t\t *  which way they are facing.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name forwardZ\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'forwardZ', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[2] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[2];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The x coordinate of the listener's up direction. i.e.\n\t\t\t *  the direction the listener is standing in.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name upX\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'upX', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[3] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[3];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The y coordinate of the listener's up direction. i.e.\n\t\t\t *  the direction the listener is standing in.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name upY\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'upY', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[4] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[4];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The z coordinate of the listener's up direction. i.e.\n\t\t\t *  the direction the listener is standing in.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name upZ\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'upZ', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[5] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[5];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Listener} this\n\t\t\t */\n\t\t    Tone.Listener.prototype.dispose = function () {\n\t\t        this._listener.disconnect();\n\t\t        this._listener = null;\n\t\t        this._orientation = null;\n\t\t        this._position = null;\n\t\t        return this;\n\t\t    };\n\t\t    //SINGLETON SETUP\n\t\t    var ListenerConstructor = Tone.Listener;\n\t\t    Tone._initAudioContext(function () {\n\t\t        if (typeof Tone.Listener === 'function') {\n\t\t            //a single listener object\n\t\t            Tone.Listener = new Tone.Listener();\n\t\t        } else {\n\t\t            //make new Listener insides\n\t\t            ListenerConstructor.call(Tone.Listener);\n\t\t        }\n\t\t    });\n\t\t    //END SINGLETON SETUP\n\t\t    return Tone.Listener;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t * \t@class  Tone.Effect is the base class for effects. Connect the effect between\n\t\t\t * \t        the effectSend and effectReturn GainNodes, then control the amount of\n\t\t\t * \t        effect which goes to the output using the wet control.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {NormalRange|Object} [wet] The starting wet value. \n\t\t\t */\n\t\t    Tone.Effect = function () {\n\t\t        this.createInsOuts(1, 1);\n\t\t        //get all of the defaults\n\t\t        var options = this.optionsObject(arguments, ['wet'], Tone.Effect.defaults);\n\t\t        /**\n\t\t\t\t *  the drywet knob to control the amount of effect\n\t\t\t\t *  @type {Tone.CrossFade}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._dryWet = new Tone.CrossFade(options.wet);\n\t\t        /**\n\t\t\t\t *  The wet control is how much of the effected\n\t\t\t\t *  will pass through to the output. 1 = 100% effected\n\t\t\t\t *  signal, 0 = 100% dry signal. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.wet = this._dryWet.fade;\n\t\t        /**\n\t\t\t\t *  connect the effectSend to the input of hte effect\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.effectSend = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  connect the output of the effect to the effectReturn\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.effectReturn = new Tone.Gain();\n\t\t        //connections\n\t\t        this.input.connect(this._dryWet.a);\n\t\t        this.input.connect(this.effectSend);\n\t\t        this.effectReturn.connect(this._dryWet.b);\n\t\t        this._dryWet.connect(this.output);\n\t\t        this._readOnly(['wet']);\n\t\t    };\n\t\t    Tone.extend(Tone.Effect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Effect.defaults = { 'wet': 1 };\n\t\t    /**\n\t\t\t *  chains the effect in between the effectSend and effectReturn\n\t\t\t *  @param  {Tone} effect\n\t\t\t *  @private\n\t\t\t *  @returns {Tone.Effect} this\n\t\t\t */\n\t\t    Tone.Effect.prototype.connectEffect = function (effect) {\n\t\t        this.effectSend.chain(effect, this.effectReturn);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Effect} this\n\t\t\t */\n\t\t    Tone.Effect.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._dryWet.dispose();\n\t\t        this._dryWet = null;\n\t\t        this.effectSend.dispose();\n\t\t        this.effectSend = null;\n\t\t        this.effectReturn.dispose();\n\t\t        this.effectReturn = null;\n\t\t        this._writable(['wet']);\n\t\t        this.wet = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Effect;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.\n\t\t\t *         Setting the LFO rate and depth allows for control over the filter modulation rate \n\t\t\t *         and depth.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @param {Time|Object} [frequency] The rate of the LFO.\n\t\t\t *  @param {Frequency=} baseFrequency The lower value of the LFOs oscillation\n\t\t \t *  @param {Frequency=} octaves The number of octaves above the baseFrequency\n\t\t\t *  @example\n\t\t\t * //create an autofilter and start it's LFO\n\t\t\t * var autoFilter = new Tone.AutoFilter(\"4n\").toMaster().start();\n\t\t\t * //route an oscillator through the filter and start it\n\t\t\t * var oscillator = new Tone.Oscillator().connect(autoFilter).start();\n\t\t\t */\n\t\t    Tone.AutoFilter = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'baseFrequency',\n\t\t            'octaves'\n\t\t        ], Tone.AutoFilter.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  the lfo which drives the filter cutoff\n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfo = new Tone.LFO({\n\t\t            'frequency': options.frequency,\n\t\t            'amplitude': options.depth\n\t\t        });\n\t\t        /**\n\t\t\t\t * The range of the filter modulating between the min and max frequency. \n\t\t\t\t * 0 = no modulation. 1 = full modulation.\n\t\t\t\t * @type {NormalRange}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.depth = this._lfo.amplitude;\n\t\t        /**\n\t\t\t\t * How fast the filter modulates between min and max. \n\t\t\t\t * @type {Frequency}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.frequency = this._lfo.frequency;\n\t\t        /**\n\t\t\t\t *  The filter node\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t */\n\t\t        this.filter = new Tone.Filter(options.filter);\n\t\t        /**\n\t\t\t\t *  The octaves placeholder\n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._octaves = 0;\n\t\t        //connections\n\t\t        this.connectEffect(this.filter);\n\t\t        this._lfo.connect(this.filter.frequency);\n\t\t        this.type = options.type;\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ]);\n\t\t        this.octaves = options.octaves;\n\t\t        this.baseFrequency = options.baseFrequency;\n\t\t    };\n\t\t    //extend Effect\n\t\t    Tone.extend(Tone.AutoFilter, Tone.Effect);\n\t\t    /**\n\t\t\t *  defaults\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.AutoFilter.defaults = {\n\t\t        'frequency': 1,\n\t\t        'type': 'sine',\n\t\t        'depth': 1,\n\t\t        'baseFrequency': 200,\n\t\t        'octaves': 2.6,\n\t\t        'filter': {\n\t\t            'type': 'lowpass',\n\t\t            'rolloff': -12,\n\t\t            'Q': 1\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * Start the effect.\n\t\t\t * @param {Time} [time=now] When the LFO will start. \n\t\t\t * @returns {Tone.AutoFilter} this\n\t\t\t */\n\t\t    Tone.AutoFilter.prototype.start = function (time) {\n\t\t        this._lfo.start(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Stop the effect.\n\t\t\t * @param {Time} [time=now] When the LFO will stop. \n\t\t\t * @returns {Tone.AutoFilter} this\n\t\t\t */\n\t\t    Tone.AutoFilter.prototype.stop = function (time) {\n\t\t        this._lfo.stop(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Sync the filter to the transport.\n\t\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t\t *                               Transport has started. \n\t\t\t * @returns {Tone.AutoFilter} this\n\t\t\t */\n\t\t    Tone.AutoFilter.prototype.sync = function (delay) {\n\t\t        this._lfo.sync(delay);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Unsync the filter from the transport.\n\t\t\t * @returns {Tone.AutoFilter} this\n\t\t\t */\n\t\t    Tone.AutoFilter.prototype.unsync = function () {\n\t\t        this._lfo.unsync();\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Type of oscillator attached to the AutoFilter. \n\t\t\t * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n\t\t\t * @memberOf Tone.AutoFilter#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AutoFilter.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._lfo.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._lfo.type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The minimum value of the filter's cutoff frequency.\n\t\t\t * @memberOf Tone.AutoFilter#\n\t\t\t * @type {Frequency}\n\t\t\t * @name min\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AutoFilter.prototype, 'baseFrequency', {\n\t\t        get: function () {\n\t\t            return this._lfo.min;\n\t\t        },\n\t\t        set: function (freq) {\n\t\t            this._lfo.min = this.toFrequency(freq);\n\t\t            //and set the max\n\t\t            this.octaves = this._octaves;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The maximum value of the filter's cutoff frequency. \n\t\t\t * @memberOf Tone.AutoFilter#\n\t\t\t * @type {Positive}\n\t\t\t * @name octaves\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AutoFilter.prototype, 'octaves', {\n\t\t        get: function () {\n\t\t            return this._octaves;\n\t\t        },\n\t\t        set: function (oct) {\n\t\t            this._octaves = oct;\n\t\t            this._lfo.max = this.baseFrequency * Math.pow(2, oct);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.AutoFilter} this\n\t\t\t */\n\t\t    Tone.AutoFilter.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._lfo.dispose();\n\t\t        this._lfo = null;\n\t\t        this.filter.dispose();\n\t\t        this.filter = null;\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ]);\n\t\t        this.frequency = null;\n\t\t        this.depth = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.AutoFilter;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.AutoPanner is a Tone.Panner with an LFO connected to the pan amount. \n\t\t\t *         More on using autopanners [here](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @param {Frequency|Object} [frequency] Rate of left-right oscillation. \n\t\t\t *  @example\n\t\t\t * //create an autopanner and start it's LFO\n\t\t\t * var autoPanner = new Tone.AutoPanner(\"4n\").toMaster().start();\n\t\t\t * //route an oscillator through the panner and start it\n\t\t\t * var oscillator = new Tone.Oscillator().connect(autoPanner).start();\n\t\t\t */\n\t\t    Tone.AutoPanner = function () {\n\t\t        var options = this.optionsObject(arguments, ['frequency'], Tone.AutoPanner.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  the lfo which drives the panning\n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfo = new Tone.LFO({\n\t\t            'frequency': options.frequency,\n\t\t            'amplitude': options.depth,\n\t\t            'min': -1,\n\t\t            'max': 1\n\t\t        });\n\t\t        /**\n\t\t\t\t * The amount of panning between left and right. \n\t\t\t\t * 0 = always center. 1 = full range between left and right. \n\t\t\t\t * @type {NormalRange}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.depth = this._lfo.amplitude;\n\t\t        /**\n\t\t\t\t *  the panner node which does the panning\n\t\t\t\t *  @type {Tone.Panner}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._panner = new Tone.Panner();\n\t\t        /**\n\t\t\t\t * How fast the panner modulates between left and right. \n\t\t\t\t * @type {Frequency}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.frequency = this._lfo.frequency;\n\t\t        //connections\n\t\t        this.connectEffect(this._panner);\n\t\t        this._lfo.connect(this._panner.pan);\n\t\t        this.type = options.type;\n\t\t        this._readOnly([\n\t\t            'depth',\n\t\t            'frequency'\n\t\t        ]);\n\t\t    };\n\t\t    //extend Effect\n\t\t    Tone.extend(Tone.AutoPanner, Tone.Effect);\n\t\t    /**\n\t\t\t *  defaults\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.AutoPanner.defaults = {\n\t\t        'frequency': 1,\n\t\t        'type': 'sine',\n\t\t        'depth': 1\n\t\t    };\n\t\t    /**\n\t\t\t * Start the effect.\n\t\t\t * @param {Time} [time=now] When the LFO will start. \n\t\t\t * @returns {Tone.AutoPanner} this\n\t\t\t */\n\t\t    Tone.AutoPanner.prototype.start = function (time) {\n\t\t        this._lfo.start(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Stop the effect.\n\t\t\t * @param {Time} [time=now] When the LFO will stop. \n\t\t\t * @returns {Tone.AutoPanner} this\n\t\t\t */\n\t\t    Tone.AutoPanner.prototype.stop = function (time) {\n\t\t        this._lfo.stop(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Sync the panner to the transport.\n\t\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t\t *                               Transport has started. \n\t\t\t * @returns {Tone.AutoPanner} this\n\t\t\t */\n\t\t    Tone.AutoPanner.prototype.sync = function (delay) {\n\t\t        this._lfo.sync(delay);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Unsync the panner from the transport\n\t\t\t * @returns {Tone.AutoPanner} this\n\t\t\t */\n\t\t    Tone.AutoPanner.prototype.unsync = function () {\n\t\t        this._lfo.unsync();\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Type of oscillator attached to the AutoFilter. \n\t\t\t * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n\t\t\t * @memberOf Tone.AutoFilter#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AutoPanner.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._lfo.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._lfo.type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.AutoPanner} this\n\t\t\t */\n\t\t    Tone.AutoPanner.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._lfo.dispose();\n\t\t        this._lfo = null;\n\t\t        this._panner.dispose();\n\t\t        this._panner = null;\n\t\t        this._writable([\n\t\t            'depth',\n\t\t            'frequency'\n\t\t        ]);\n\t\t        this.frequency = null;\n\t\t        this.depth = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.AutoPanner;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.AutoWah connects a Tone.Follower to a bandpass filter (Tone.Filter).\n\t\t\t *          The frequency of the filter is adjusted proportionally to the \n\t\t\t *          incoming signal's amplitude. Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @param {Frequency|Object} [baseFrequency] The frequency the filter is set \n\t\t\t *                                            to at the low point of the wah\n\t\t\t *  @param {Positive} [octaves] The number of octaves above the baseFrequency\n\t\t\t *                                the filter will sweep to when fully open\n\t\t\t *  @param {Decibels} [sensitivity] The decibel threshold sensitivity for \n\t\t\t *                                   the incoming signal. Normal range of -40 to 0. \n\t\t\t *  @example\n\t\t\t * var autoWah = new Tone.AutoWah(50, 6, -30).toMaster();\n\t\t\t * //initialize the synth and connect to autowah\n\t\t\t * var synth = new Synth.connect(autoWah);\n\t\t\t * //Q value influences the effect of the wah - default is 2\n\t\t\t * autoWah.Q.value = 6;\n\t\t\t * //more audible on higher notes\n\t\t\t * synth.triggerAttackRelease(\"C4\", \"8n\")\n\t\t\t */\n\t\t    Tone.AutoWah = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'baseFrequency',\n\t\t            'octaves',\n\t\t            'sensitivity'\n\t\t        ], Tone.AutoWah.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  The envelope follower. Set the attack/release\n\t\t\t\t *  timing to adjust how the envelope is followed. \n\t\t\t\t *  @type {Tone.Follower}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.follower = new Tone.Follower(options.follower);\n\t\t        /**\n\t\t\t\t *  scales the follower value to the frequency domain\n\t\t\t\t *  @type {Tone}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sweepRange = new Tone.ScaleExp(0, 1, 0.5);\n\t\t        /**\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._baseFrequency = options.baseFrequency;\n\t\t        /**\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._octaves = options.octaves;\n\t\t        /**\n\t\t\t\t *  the input gain to adjust the sensitivity\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._inputBoost = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  @type {BiquadFilterNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._bandpass = new Tone.Filter({\n\t\t            'rolloff': -48,\n\t\t            'frequency': 0,\n\t\t            'Q': options.Q\n\t\t        });\n\t\t        /**\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._peaking = new Tone.Filter(0, 'peaking');\n\t\t        this._peaking.gain.value = options.gain;\n\t\t        /**\n\t\t\t\t * The gain of the filter.\n\t\t\t\t * @type {Number}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.gain = this._peaking.gain;\n\t\t        /**\n\t\t\t\t * The quality of the filter.\n\t\t\t\t * @type {Positive}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.Q = this._bandpass.Q;\n\t\t        //the control signal path\n\t\t        this.effectSend.chain(this._inputBoost, this.follower, this._sweepRange);\n\t\t        this._sweepRange.connect(this._bandpass.frequency);\n\t\t        this._sweepRange.connect(this._peaking.frequency);\n\t\t        //the filtered path\n\t\t        this.effectSend.chain(this._bandpass, this._peaking, this.effectReturn);\n\t\t        //set the initial value\n\t\t        this._setSweepRange();\n\t\t        this.sensitivity = options.sensitivity;\n\t\t        this._readOnly([\n\t\t            'gain',\n\t\t            'Q'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.AutoWah, Tone.Effect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.AutoWah.defaults = {\n\t\t        'baseFrequency': 100,\n\t\t        'octaves': 6,\n\t\t        'sensitivity': 0,\n\t\t        'Q': 2,\n\t\t        'gain': 2,\n\t\t        'follower': {\n\t\t            'attack': 0.3,\n\t\t            'release': 0.5\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * The number of octaves that the filter will sweep above the \n\t\t\t * baseFrequency. \n\t\t\t * @memberOf Tone.AutoWah#\n\t\t\t * @type {Number}\n\t\t\t * @name octaves\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AutoWah.prototype, 'octaves', {\n\t\t        get: function () {\n\t\t            return this._octaves;\n\t\t        },\n\t\t        set: function (octaves) {\n\t\t            this._octaves = octaves;\n\t\t            this._setSweepRange();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The base frequency from which the sweep will start from.\n\t\t\t * @memberOf Tone.AutoWah#\n\t\t\t * @type {Frequency}\n\t\t\t * @name baseFrequency\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AutoWah.prototype, 'baseFrequency', {\n\t\t        get: function () {\n\t\t            return this._baseFrequency;\n\t\t        },\n\t\t        set: function (baseFreq) {\n\t\t            this._baseFrequency = baseFreq;\n\t\t            this._setSweepRange();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The sensitivity to control how responsive to the input signal the filter is. \n\t\t\t * @memberOf Tone.AutoWah#\n\t\t\t * @type {Decibels}\n\t\t\t * @name sensitivity\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AutoWah.prototype, 'sensitivity', {\n\t\t        get: function () {\n\t\t            return this.gainToDb(1 / this._inputBoost.gain.value);\n\t\t        },\n\t\t        set: function (sensitivy) {\n\t\t            this._inputBoost.gain.value = 1 / this.dbToGain(sensitivy);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  sets the sweep range of the scaler\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.AutoWah.prototype._setSweepRange = function () {\n\t\t        this._sweepRange.min = this._baseFrequency;\n\t\t        this._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.AutoWah} this\n\t\t\t */\n\t\t    Tone.AutoWah.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this.follower.dispose();\n\t\t        this.follower = null;\n\t\t        this._sweepRange.dispose();\n\t\t        this._sweepRange = null;\n\t\t        this._bandpass.dispose();\n\t\t        this._bandpass = null;\n\t\t        this._peaking.dispose();\n\t\t        this._peaking = null;\n\t\t        this._inputBoost.dispose();\n\t\t        this._inputBoost = null;\n\t\t        this._writable([\n\t\t            'gain',\n\t\t            'Q'\n\t\t        ]);\n\t\t        this.gain = null;\n\t\t        this.Q = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.AutoWah;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Bitcrusher downsamples the incoming signal to a different bitdepth. \n\t\t\t *         Lowering the bitdepth of the signal creates distortion. Read more about Bitcrushing\n\t\t\t *         on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @param {Number} bits The number of bits to downsample the signal. Nominal range\n\t\t\t *                       of 1 to 8. \n\t\t\t *  @example\n\t\t\t * //initialize crusher and route a synth through it\n\t\t\t * var crusher = new Tone.BitCrusher(4).toMaster();\n\t\t\t * var synth = new Tone.MonoSynth().connect(crusher);\n\t\t\t */\n\t\t    Tone.BitCrusher = function () {\n\t\t        var options = this.optionsObject(arguments, ['bits'], Tone.BitCrusher.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        var invStepSize = 1 / Math.pow(2, options.bits - 1);\n\t\t        /**\n\t\t\t\t *  Subtract the input signal and the modulus of the input signal\n\t\t\t\t *  @type {Tone.Subtract}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._subtract = new Tone.Subtract();\n\t\t        /**\n\t\t\t\t *  The mod function\n\t\t\t\t *  @type  {Tone.Modulo}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulo = new Tone.Modulo(invStepSize);\n\t\t        /**\n\t\t\t\t *  keeps track of the bits\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._bits = options.bits;\n\t\t        //connect it up\n\t\t        this.effectSend.fan(this._subtract, this._modulo);\n\t\t        this._modulo.connect(this._subtract, 0, 1);\n\t\t        this._subtract.connect(this.effectReturn);\n\t\t    };\n\t\t    Tone.extend(Tone.BitCrusher, Tone.Effect);\n\t\t    /**\n\t\t\t *  the default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.BitCrusher.defaults = { 'bits': 4 };\n\t\t    /**\n\t\t\t * The bit depth of the effect. Nominal range of 1-8. \n\t\t\t * @memberOf Tone.BitCrusher#\n\t\t\t * @type {number}\n\t\t\t * @name bits\n\t\t\t */\n\t\t    Object.defineProperty(Tone.BitCrusher.prototype, 'bits', {\n\t\t        get: function () {\n\t\t            return this._bits;\n\t\t        },\n\t\t        set: function (bits) {\n\t\t            this._bits = bits;\n\t\t            var invStepSize = 1 / Math.pow(2, bits - 1);\n\t\t            this._modulo.value = invStepSize;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.BitCrusher} this\n\t\t\t */\n\t\t    Tone.BitCrusher.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._subtract.dispose();\n\t\t        this._subtract = null;\n\t\t        this._modulo.dispose();\n\t\t        this._modulo = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.BitCrusher;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.ChebyShev is a Chebyshev waveshaper, an effect which is good \n\t\t\t *         for making different types of distortion sounds.\n\t\t\t *         Note that odd orders sound very different from even ones, \n\t\t\t *         and order = 1 is no change. \n\t\t\t *         Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).\n\t\t\t *\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @constructor\n\t\t\t *  @param {Positive|Object} [order] The order of the chebyshev polynomial. Normal range between 1-100. \n\t\t\t *  @example\n\t\t\t * //create a new cheby\n\t\t\t * var cheby = new Tone.Chebyshev(50);\n\t\t\t * //create a monosynth connected to our cheby\n\t\t\t * synth = new Tone.MonoSynth().connect(cheby);\n\t\t\t */\n\t\t    Tone.Chebyshev = function () {\n\t\t        var options = this.optionsObject(arguments, ['order'], Tone.Chebyshev.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  @type {WaveShaperNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._shaper = new Tone.WaveShaper(4096);\n\t\t        /**\n\t\t\t\t * holds onto the order of the filter\n\t\t\t\t * @type {number}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this._order = options.order;\n\t\t        this.connectEffect(this._shaper);\n\t\t        this.order = options.order;\n\t\t        this.oversample = options.oversample;\n\t\t    };\n\t\t    Tone.extend(Tone.Chebyshev, Tone.Effect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Chebyshev.defaults = {\n\t\t        'order': 1,\n\t\t        'oversample': 'none'\n\t\t    };\n\t\t    /**\n\t\t\t *  get the coefficient for that degree\n\t\t\t *  @param {number} x the x value\n\t\t\t *  @param   {number} degree \n\t\t\t *  @param {Object} memo memoize the computed value. \n\t\t\t *                       this speeds up computation greatly. \n\t\t\t *  @return  {number}       the coefficient \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Chebyshev.prototype._getCoefficient = function (x, degree, memo) {\n\t\t        if (memo.hasOwnProperty(degree)) {\n\t\t            return memo[degree];\n\t\t        } else if (degree === 0) {\n\t\t            memo[degree] = 0;\n\t\t        } else if (degree === 1) {\n\t\t            memo[degree] = x;\n\t\t        } else {\n\t\t            memo[degree] = 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo);\n\t\t        }\n\t\t        return memo[degree];\n\t\t    };\n\t\t    /**\n\t\t\t * The order of the Chebyshev polynomial which creates\n\t\t\t * the equation which is applied to the incoming \n\t\t\t * signal through a Tone.WaveShaper. The equations\n\t\t\t * are in the form:<br>\n\t\t\t * order 2: 2x^2 + 1<br>\n\t\t\t * order 3: 4x^3 + 3x <br>\n\t\t\t * @memberOf Tone.Chebyshev#\n\t\t\t * @type {Positive}\n\t\t\t * @name order\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Chebyshev.prototype, 'order', {\n\t\t        get: function () {\n\t\t            return this._order;\n\t\t        },\n\t\t        set: function (order) {\n\t\t            this._order = order;\n\t\t            var curve = new Array(4096);\n\t\t            var len = curve.length;\n\t\t            for (var i = 0; i < len; ++i) {\n\t\t                var x = i * 2 / len - 1;\n\t\t                if (x === 0) {\n\t\t                    //should output 0 when input is 0\n\t\t                    curve[i] = 0;\n\t\t                } else {\n\t\t                    curve[i] = this._getCoefficient(x, order, {});\n\t\t                }\n\t\t            }\n\t\t            this._shaper.curve = curve;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t\t\t * @memberOf Tone.Chebyshev#\n\t\t\t * @type {string}\n\t\t\t * @name oversample\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Chebyshev.prototype, 'oversample', {\n\t\t        get: function () {\n\t\t            return this._shaper.oversample;\n\t\t        },\n\t\t        set: function (oversampling) {\n\t\t            this._shaper.oversample = oversampling;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Chebyshev} this\n\t\t\t */\n\t\t    Tone.Chebyshev.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._shaper.dispose();\n\t\t        this._shaper = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Chebyshev;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Base class for Stereo effects. Provides effectSendL/R and effectReturnL/R. \n\t\t\t *\n\t\t\t *\t@constructor\n\t\t\t *\t@extends {Tone.Effect}\n\t\t\t */\n\t\t    Tone.StereoEffect = function () {\n\t\t        this.createInsOuts(1, 1);\n\t\t        //get the defaults\n\t\t        var options = this.optionsObject(arguments, ['wet'], Tone.Effect.defaults);\n\t\t        /**\n\t\t\t\t *  the drywet knob to control the amount of effect\n\t\t\t\t *  @type {Tone.CrossFade}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._dryWet = new Tone.CrossFade(options.wet);\n\t\t        /**\n\t\t\t\t *  The wet control, i.e. how much of the effected\n\t\t\t\t *  will pass through to the output. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.wet = this._dryWet.fade;\n\t\t        /**\n\t\t\t\t *  then split it\n\t\t\t\t *  @type {Tone.Split}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._split = new Tone.Split();\n\t\t        /**\n\t\t\t\t *  the effects send LEFT\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.effectSendL = this._split.left;\n\t\t        /**\n\t\t\t\t *  the effects send RIGHT\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.effectSendR = this._split.right;\n\t\t        /**\n\t\t\t\t *  the stereo effect merger\n\t\t\t\t *  @type {Tone.Merge}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._merge = new Tone.Merge();\n\t\t        /**\n\t\t\t\t *  the effect return LEFT\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.effectReturnL = this._merge.left;\n\t\t        /**\n\t\t\t\t *  the effect return RIGHT\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.effectReturnR = this._merge.right;\n\t\t        //connections\n\t\t        this.input.connect(this._split);\n\t\t        //dry wet connections\n\t\t        this.input.connect(this._dryWet, 0, 0);\n\t\t        this._merge.connect(this._dryWet, 0, 1);\n\t\t        this._dryWet.connect(this.output);\n\t\t        this._readOnly(['wet']);\n\t\t    };\n\t\t    Tone.extend(Tone.StereoEffect, Tone.Effect);\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.StereoEffect} this\n\t\t\t */\n\t\t    Tone.StereoEffect.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._dryWet.dispose();\n\t\t        this._dryWet = null;\n\t\t        this._split.dispose();\n\t\t        this._split = null;\n\t\t        this._merge.dispose();\n\t\t        this._merge = null;\n\t\t        this.effectSendL = null;\n\t\t        this.effectSendR = null;\n\t\t        this.effectReturnL = null;\n\t\t        this.effectReturnR = null;\n\t\t        this._writable(['wet']);\n\t\t        this.wet = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.StereoEffect;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t * \t@class  Tone.FeedbackEffect provides a loop between an \n\t\t\t * \t        audio source and its own output. This is a base-class\n\t\t\t * \t        for feedback effects. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @param {NormalRange|Object} [feedback] The initial feedback value.\n\t\t\t */\n\t\t    Tone.FeedbackEffect = function () {\n\t\t        var options = this.optionsObject(arguments, ['feedback']);\n\t\t        options = this.defaultArg(options, Tone.FeedbackEffect.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  the gain which controls the feedback\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedbackGain = new Tone.Gain(options.feedback, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  The amount of signal which is fed back into the effect input. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.feedback = this._feedbackGain.gain;\n\t\t        //the feedback loop\n\t\t        this.effectReturn.chain(this._feedbackGain, this.effectSend);\n\t\t        this._readOnly(['feedback']);\n\t\t    };\n\t\t    Tone.extend(Tone.FeedbackEffect, Tone.Effect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.FeedbackEffect.defaults = { 'feedback': 0.125 };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.FeedbackEffect} this\n\t\t\t */\n\t\t    Tone.FeedbackEffect.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._writable(['feedback']);\n\t\t        this._feedbackGain.dispose();\n\t\t        this._feedbackGain = null;\n\t\t        this.feedback = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.FeedbackEffect;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Just like a stereo feedback effect, but the feedback is routed from left to right\n\t\t\t *         and right to left instead of on the same channel.\n\t\t\t *\n\t\t\t *\t@constructor\n\t\t\t *\t@extends {Tone.FeedbackEffect}\n\t\t\t */\n\t\t    Tone.StereoXFeedbackEffect = function () {\n\t\t        var options = this.optionsObject(arguments, ['feedback'], Tone.FeedbackEffect.defaults);\n\t\t        Tone.StereoEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  The amount of feedback from the output\n\t\t\t\t *  back into the input of the effect (routed\n\t\t\t\t *  across left and right channels).\n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  the left side feeback\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedbackLR = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  the right side feeback\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedbackRL = new Tone.Gain();\n\t\t        //connect it up\n\t\t        this.effectReturnL.chain(this._feedbackLR, this.effectSendR);\n\t\t        this.effectReturnR.chain(this._feedbackRL, this.effectSendL);\n\t\t        this.feedback.fan(this._feedbackLR.gain, this._feedbackRL.gain);\n\t\t        this._readOnly(['feedback']);\n\t\t    };\n\t\t    Tone.extend(Tone.StereoXFeedbackEffect, Tone.FeedbackEffect);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.StereoXFeedbackEffect} this\n\t\t\t */\n\t\t    Tone.StereoXFeedbackEffect.prototype.dispose = function () {\n\t\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t\t        this._writable(['feedback']);\n\t\t        this.feedback.dispose();\n\t\t        this.feedback = null;\n\t\t        this._feedbackLR.dispose();\n\t\t        this._feedbackLR = null;\n\t\t        this._feedbackRL.dispose();\n\t\t        this._feedbackRL = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.StereoXFeedbackEffect;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Chorus is a stereo chorus effect with feedback composed of \n\t\t\t *         a left and right delay with a Tone.LFO applied to the delayTime of each channel. \n\t\t\t *         Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n\t\t\t *         Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n\t\t\t *\n\t\t\t *\t@constructor\n\t\t\t *\t@extends {Tone.StereoXFeedbackEffect}\n\t\t\t *\t@param {Frequency|Object} [frequency] The frequency of the LFO.\n\t\t\t *\t@param {Milliseconds} [delayTime] The delay of the chorus effect in ms. \n\t\t\t *\t@param {NormalRange} [depth] The depth of the chorus.\n\t\t\t *\t@example\n\t\t\t * var chorus = new Tone.Chorus(4, 2.5, 0.5);\n\t\t\t * var synth = new Tone.PolySynth(4, Tone.MonoSynth).connect(chorus);\n\t\t\t * synth.triggerAttackRelease([\"C3\",\"E3\",\"G3\"], \"8n\");\n\t\t\t */\n\t\t    Tone.Chorus = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'delayTime',\n\t\t            'depth'\n\t\t        ], Tone.Chorus.defaults);\n\t\t        Tone.StereoXFeedbackEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  the depth of the chorus\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._depth = options.depth;\n\t\t        /**\n\t\t\t\t *  the delayTime\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayTime = options.delayTime / 1000;\n\t\t        /**\n\t\t\t\t *  the lfo which controls the delayTime\n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoL = new Tone.LFO({\n\t\t            'frequency': options.frequency,\n\t\t            'min': 0,\n\t\t            'max': 1\n\t\t        });\n\t\t        /**\n\t\t\t\t *  another LFO for the right side with a 180 degree phase diff\n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoR = new Tone.LFO({\n\t\t            'frequency': options.frequency,\n\t\t            'min': 0,\n\t\t            'max': 1,\n\t\t            'phase': 180\n\t\t        });\n\t\t        /**\n\t\t\t\t *  delay for left\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayNodeL = new Tone.Delay();\n\t\t        /**\n\t\t\t\t *  delay for right\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayNodeR = new Tone.Delay();\n\t\t        /**\n\t\t\t\t * The frequency of the LFO which modulates the delayTime. \n\t\t\t\t * @type {Frequency}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.frequency = this._lfoL.frequency;\n\t\t        //connections\n\t\t        this.effectSendL.chain(this._delayNodeL, this.effectReturnL);\n\t\t        this.effectSendR.chain(this._delayNodeR, this.effectReturnR);\n\t\t        //and pass through to make the detune apparent\n\t\t        this.effectSendL.connect(this.effectReturnL);\n\t\t        this.effectSendR.connect(this.effectReturnR);\n\t\t        //lfo setup\n\t\t        this._lfoL.connect(this._delayNodeL.delayTime);\n\t\t        this._lfoR.connect(this._delayNodeR.delayTime);\n\t\t        //start the lfo\n\t\t        this._lfoL.start();\n\t\t        this._lfoR.start();\n\t\t        //have one LFO frequency control the other\n\t\t        this._lfoL.frequency.connect(this._lfoR.frequency);\n\t\t        //set the initial values\n\t\t        this.depth = this._depth;\n\t\t        this.frequency.value = options.frequency;\n\t\t        this.type = options.type;\n\t\t        this._readOnly(['frequency']);\n\t\t        this.spread = options.spread;\n\t\t    };\n\t\t    Tone.extend(Tone.Chorus, Tone.StereoXFeedbackEffect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Chorus.defaults = {\n\t\t        'frequency': 1.5,\n\t\t        'delayTime': 3.5,\n\t\t        'depth': 0.7,\n\t\t        'feedback': 0.1,\n\t\t        'type': 'sine',\n\t\t        'spread': 180\n\t\t    };\n\t\t    /**\n\t\t\t * The depth of the effect. A depth of 1 makes the delayTime\n\t\t\t * modulate between 0 and 2*delayTime (centered around the delayTime). \n\t\t\t * @memberOf Tone.Chorus#\n\t\t\t * @type {NormalRange}\n\t\t\t * @name depth\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Chorus.prototype, 'depth', {\n\t\t        get: function () {\n\t\t            return this._depth;\n\t\t        },\n\t\t        set: function (depth) {\n\t\t            this._depth = depth;\n\t\t            var deviation = this._delayTime * depth;\n\t\t            this._lfoL.min = Math.max(this._delayTime - deviation, 0);\n\t\t            this._lfoL.max = this._delayTime + deviation;\n\t\t            this._lfoR.min = Math.max(this._delayTime - deviation, 0);\n\t\t            this._lfoR.max = this._delayTime + deviation;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The delayTime in milliseconds of the chorus. A larger delayTime\n\t\t\t * will give a more pronounced effect. Nominal range a delayTime\n\t\t\t * is between 2 and 20ms. \n\t\t\t * @memberOf Tone.Chorus#\n\t\t\t * @type {Milliseconds}\n\t\t\t * @name delayTime\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Chorus.prototype, 'delayTime', {\n\t\t        get: function () {\n\t\t            return this._delayTime * 1000;\n\t\t        },\n\t\t        set: function (delayTime) {\n\t\t            this._delayTime = delayTime / 1000;\n\t\t            this.depth = this._depth;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The oscillator type of the LFO. \n\t\t\t * @memberOf Tone.Chorus#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Chorus.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._lfoL.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._lfoL.type = type;\n\t\t            this._lfoR.type = type;\n\t\t        }\n\t\t    });\n\t\t    /** \n\t\t\t * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n\t\t\t * When set to 180, LFO's will be panned hard left and right respectively.\n\t\t\t * @memberOf Tone.Chorus#\n\t\t\t * @type {Degrees}\n\t\t\t * @name spread\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Chorus.prototype, 'spread', {\n\t\t        get: function () {\n\t\t            return this._lfoR.phase - this._lfoL.phase;    //180\n\t\t        },\n\t\t        set: function (spread) {\n\t\t            this._lfoL.phase = 90 - spread / 2;\n\t\t            this._lfoR.phase = spread / 2 + 90;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Chorus} this\n\t\t\t */\n\t\t    Tone.Chorus.prototype.dispose = function () {\n\t\t        Tone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\t\t        this._lfoL.dispose();\n\t\t        this._lfoL = null;\n\t\t        this._lfoR.dispose();\n\t\t        this._lfoR = null;\n\t\t        this._delayNodeL.dispose();\n\t\t        this._delayNodeL = null;\n\t\t        this._delayNodeR.dispose();\n\t\t        this._delayNodeR = null;\n\t\t        this._writable('frequency');\n\t\t        this.frequency = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Chorus;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Convolver is a wrapper around the Native Web Audio \n\t\t\t *          [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).\n\t\t\t *          Convolution is useful for reverb and filter emulation. Read more about convolution reverb on\n\t\t\t *          [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @param {string|Tone.Buffer|Object} [url] The URL of the impulse response or the Tone.Buffer\n\t\t\t *                                           contianing the impulse response. \n\t\t\t *  @param {Function} onload The callback to invoke when the url is loaded.\n\t\t\t *  @example\n\t\t\t * //initializing the convolver with an impulse response\n\t\t\t * var convolver = new Tone.Convolver(\"./path/to/ir.wav\").toMaster();\n\t\t\t */\n\t\t    Tone.Convolver = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'url',\n\t\t            'onload'\n\t\t        ], Tone.Convolver.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  convolver node\n\t\t\t\t *  @type {ConvolverNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._convolver = this.context.createConvolver();\n\t\t        /**\n\t\t\t\t *  the convolution buffer\n\t\t\t\t *  @type {Tone.Buffer}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._buffer = new Tone.Buffer();\n\t\t        if (this.isString(options.url)) {\n\t\t            this._buffer.load(options.url, function (buffer) {\n\t\t                this.buffer = buffer;\n\t\t                options.onload();\n\t\t            }.bind(this));\n\t\t        } else if (options.url) {\n\t\t            this.buffer = options.url;\n\t\t            options.onload();\n\t\t        }\n\t\t        this.connectEffect(this._convolver);\n\t\t    };\n\t\t    Tone.extend(Tone.Convolver, Tone.Effect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.Convolver.defaults = { 'onload': Tone.noOp };\n\t\t    /**\n\t\t\t *  The convolver's buffer\n\t\t\t *  @memberOf Tone.Convolver#\n\t\t\t *  @type {AudioBuffer}\n\t\t\t *  @name buffer\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Convolver.prototype, 'buffer', {\n\t\t        get: function () {\n\t\t            return this._buffer.get();\n\t\t        },\n\t\t        set: function (buffer) {\n\t\t            this._buffer.set(buffer);\n\t\t            this._convolver.buffer = this._buffer.get();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Load an impulse response url as an audio buffer.\n\t\t\t *  Decodes the audio asynchronously and invokes\n\t\t\t *  the callback once the audio buffer loads.\n\t\t\t *  @param {string} url The url of the buffer to load.\n\t\t\t *                      filetype support depends on the\n\t\t\t *                      browser.\n\t\t\t *  @param  {function=} callback\n\t\t\t *  @returns {Tone.Convolver} this\n\t\t\t */\n\t\t    Tone.Convolver.prototype.load = function (url, callback) {\n\t\t        this._buffer.load(url, function (buff) {\n\t\t            this.buffer = buff;\n\t\t            if (callback) {\n\t\t                callback();\n\t\t            }\n\t\t        }.bind(this));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Convolver} this\n\t\t\t */\n\t\t    Tone.Convolver.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._convolver.disconnect();\n\t\t        this._convolver = null;\n\t\t        this._buffer.dispose();\n\t\t        this._buffer = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Convolver;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Distortion is a simple distortion effect using Tone.WaveShaper.\n\t\t\t *         Algorithm from [a stackoverflow answer](http://stackoverflow.com/a/22313408).\n\t\t\t *\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @constructor\n\t\t\t *  @param {Number|Object} [distortion] The amount of distortion (nominal range of 0-1)\n\t\t\t *  @example\n\t\t\t * var dist = new Tone.Distortion(0.8).toMaster();\n\t\t\t * var fm = new Tone.SimpleFM().connect(dist);\n\t\t\t * //this sounds good on bass notes\n\t\t\t * fm.triggerAttackRelease(\"A1\", \"8n\");\n\t\t\t */\n\t\t    Tone.Distortion = function () {\n\t\t        var options = this.optionsObject(arguments, ['distortion'], Tone.Distortion.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._shaper = new Tone.WaveShaper(4096);\n\t\t        /**\n\t\t\t\t * holds the distortion amount\n\t\t\t\t * @type {number}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this._distortion = options.distortion;\n\t\t        this.connectEffect(this._shaper);\n\t\t        this.distortion = options.distortion;\n\t\t        this.oversample = options.oversample;\n\t\t    };\n\t\t    Tone.extend(Tone.Distortion, Tone.Effect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Distortion.defaults = {\n\t\t        'distortion': 0.4,\n\t\t        'oversample': 'none'\n\t\t    };\n\t\t    /**\n\t\t\t * The amount of distortion.\n\t\t\t * @memberOf Tone.Distortion#\n\t\t\t * @type {NormalRange}\n\t\t\t * @name distortion\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Distortion.prototype, 'distortion', {\n\t\t        get: function () {\n\t\t            return this._distortion;\n\t\t        },\n\t\t        set: function (amount) {\n\t\t            this._distortion = amount;\n\t\t            var k = amount * 100;\n\t\t            var deg = Math.PI / 180;\n\t\t            this._shaper.setMap(function (x) {\n\t\t                if (Math.abs(x) < 0.001) {\n\t\t                    //should output 0 when input is 0\n\t\t                    return 0;\n\t\t                } else {\n\t\t                    return (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n\t\t                }\n\t\t            });\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t\t\t * @memberOf Tone.Distortion#\n\t\t\t * @type {string}\n\t\t\t * @name oversample\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Distortion.prototype, 'oversample', {\n\t\t        get: function () {\n\t\t            return this._shaper.oversample;\n\t\t        },\n\t\t        set: function (oversampling) {\n\t\t            this._shaper.oversample = oversampling;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Distortion} this\n\t\t\t */\n\t\t    Tone.Distortion.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._shaper.dispose();\n\t\t        this._shaper = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Distortion;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.FeedbackDelay is a DelayNode in which part of output\n\t\t\t *          signal is fed back into the delay. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.FeedbackEffect}\n\t\t\t *  @param {Time|Object} [delayTime] The delay applied to the incoming signal. \n\t\t\t *  @param {NormalRange=} feedback The amount of the effected signal which \n\t\t\t *                            is fed back through the delay.\n\t\t\t *  @example\n\t\t\t * var feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toMaster();\n\t\t\t * var tom = new Tone.DrumSynth({\n\t\t\t * \t\"octaves\" : 4,\n\t\t\t * \t\"pitchDecay\" : 0.1\n\t\t\t * }).connect(feedbackDelay);\n\t\t\t * tom.triggerAttackRelease(\"A2\",\"32n\");\n\t\t\t */\n\t\t    Tone.FeedbackDelay = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'delayTime',\n\t\t            'feedback'\n\t\t        ], Tone.FeedbackDelay.defaults);\n\t\t        Tone.FeedbackEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  the delay node\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayNode = new Tone.Delay(options.delayTime);\n\t\t        /**\n\t\t\t\t *  The delayTime of the DelayNode. \n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.delayTime = this._delayNode.delayTime;\n\t\t        // connect it up\n\t\t        this.connectEffect(this._delayNode);\n\t\t        this._readOnly(['delayTime']);\n\t\t    };\n\t\t    Tone.extend(Tone.FeedbackDelay, Tone.FeedbackEffect);\n\t\t    /**\n\t\t\t *  The default values. \n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.FeedbackDelay.defaults = { 'delayTime': 0.25 };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.FeedbackDelay} this\n\t\t\t */\n\t\t    Tone.FeedbackDelay.prototype.dispose = function () {\n\t\t        Tone.FeedbackEffect.prototype.dispose.call(this);\n\t\t        this._delayNode.dispose();\n\t\t        this._delayNode = null;\n\t\t        this._writable(['delayTime']);\n\t\t        this.delayTime = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.FeedbackDelay;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  an array of comb filter delay values from Freeverb implementation\n\t\t\t *  @static\n\t\t\t *  @private\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t    var combFilterTunings = [\n\t\t        1557 / 44100,\n\t\t        1617 / 44100,\n\t\t        1491 / 44100,\n\t\t        1422 / 44100,\n\t\t        1277 / 44100,\n\t\t        1356 / 44100,\n\t\t        1188 / 44100,\n\t\t        1116 / 44100\n\t\t    ];\n\t\t    /**\n\t\t\t *  an array of allpass filter frequency values from Freeverb implementation\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t    var allpassFilterFrequencies = [\n\t\t        225,\n\t\t        556,\n\t\t        441,\n\t\t        341\n\t\t    ];\n\t\t    /**\n\t\t\t *  @class Tone.Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).\n\t\t\t *         Read more on reverb on [SoundOnSound](http://www.soundonsound.com/sos/may00/articles/reverb.htm).\n\t\t\t *\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @constructor\n\t\t\t *  @param {NormalRange|Object} [roomSize] Correlated to the decay time. \n\t\t\t *  @param {Frequency} [dampening] The cutoff frequency of a lowpass filter as part \n\t\t\t *                                 of the reverb. \n\t\t\t *  @example\n\t\t\t * var freeverb = new Tone.Freeverb().toMaster();\n\t\t\t * freeverb.dampening.value = 1000;\n\t\t\t * //routing synth through the reverb\n\t\t\t * var synth = new Tone.AMSynth().connect(freeverb);\n\t\t\t */\n\t\t    Tone.Freeverb = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'roomSize',\n\t\t            'dampening'\n\t\t        ], Tone.Freeverb.defaults);\n\t\t        Tone.StereoEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  The roomSize value between. A larger roomSize\n\t\t\t\t *  will result in a longer decay. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  The amount of dampening of the reverberant signal. \n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.dampening = new Tone.Signal(options.dampening, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  the comb filters\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._combFilters = [];\n\t\t        /**\n\t\t\t\t *  the allpass filters on the left\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._allpassFiltersL = [];\n\t\t        /**\n\t\t\t\t *  the allpass filters on the right\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._allpassFiltersR = [];\n\t\t        //make the allpass filters on teh right\n\t\t        for (var l = 0; l < allpassFilterFrequencies.length; l++) {\n\t\t            var allpassL = this.context.createBiquadFilter();\n\t\t            allpassL.type = 'allpass';\n\t\t            allpassL.frequency.value = allpassFilterFrequencies[l];\n\t\t            this._allpassFiltersL.push(allpassL);\n\t\t        }\n\t\t        //make the allpass filters on the left\n\t\t        for (var r = 0; r < allpassFilterFrequencies.length; r++) {\n\t\t            var allpassR = this.context.createBiquadFilter();\n\t\t            allpassR.type = 'allpass';\n\t\t            allpassR.frequency.value = allpassFilterFrequencies[r];\n\t\t            this._allpassFiltersR.push(allpassR);\n\t\t        }\n\t\t        //make the comb filters\n\t\t        for (var c = 0; c < combFilterTunings.length; c++) {\n\t\t            var lfpf = new Tone.LowpassCombFilter(combFilterTunings[c]);\n\t\t            if (c < combFilterTunings.length / 2) {\n\t\t                this.effectSendL.chain(lfpf, this._allpassFiltersL[0]);\n\t\t            } else {\n\t\t                this.effectSendR.chain(lfpf, this._allpassFiltersR[0]);\n\t\t            }\n\t\t            this.roomSize.connect(lfpf.resonance);\n\t\t            this.dampening.connect(lfpf.dampening);\n\t\t            this._combFilters.push(lfpf);\n\t\t        }\n\t\t        //chain the allpass filters togetehr\n\t\t        this.connectSeries.apply(this, this._allpassFiltersL);\n\t\t        this.connectSeries.apply(this, this._allpassFiltersR);\n\t\t        this._allpassFiltersL[this._allpassFiltersL.length - 1].connect(this.effectReturnL);\n\t\t        this._allpassFiltersR[this._allpassFiltersR.length - 1].connect(this.effectReturnR);\n\t\t        this._readOnly([\n\t\t            'roomSize',\n\t\t            'dampening'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.Freeverb, Tone.StereoEffect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Freeverb.defaults = {\n\t\t        'roomSize': 0.7,\n\t\t        'dampening': 3000\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Freeverb} this\n\t\t\t */\n\t\t    Tone.Freeverb.prototype.dispose = function () {\n\t\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t\t        for (var al = 0; al < this._allpassFiltersL.length; al++) {\n\t\t            this._allpassFiltersL[al].disconnect();\n\t\t            this._allpassFiltersL[al] = null;\n\t\t        }\n\t\t        this._allpassFiltersL = null;\n\t\t        for (var ar = 0; ar < this._allpassFiltersR.length; ar++) {\n\t\t            this._allpassFiltersR[ar].disconnect();\n\t\t            this._allpassFiltersR[ar] = null;\n\t\t        }\n\t\t        this._allpassFiltersR = null;\n\t\t        for (var cf = 0; cf < this._combFilters.length; cf++) {\n\t\t            this._combFilters[cf].dispose();\n\t\t            this._combFilters[cf] = null;\n\t\t        }\n\t\t        this._combFilters = null;\n\t\t        this._writable([\n\t\t            'roomSize',\n\t\t            'dampening'\n\t\t        ]);\n\t\t        this.roomSize.dispose();\n\t\t        this.roomSize = null;\n\t\t        this.dampening.dispose();\n\t\t        this.dampening = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Freeverb;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  an array of the comb filter delay time values\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t    var combFilterDelayTimes = [\n\t\t        1687 / 25000,\n\t\t        1601 / 25000,\n\t\t        2053 / 25000,\n\t\t        2251 / 25000\n\t\t    ];\n\t\t    /**\n\t\t\t *  the resonances of each of the comb filters\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t    var combFilterResonances = [\n\t\t        0.773,\n\t\t        0.802,\n\t\t        0.753,\n\t\t        0.733\n\t\t    ];\n\t\t    /**\n\t\t\t *  the allpass filter frequencies\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t    var allpassFilterFreqs = [\n\t\t        347,\n\t\t        113,\n\t\t        37\n\t\t    ];\n\t\t    /**\n\t\t\t *  @class Tone.JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)\n\t\t\t *         tuned by John Chowning in 1970.\n\t\t\t *         It is made up of three allpass filters and four Tone.FeedbackCombFilter. \n\t\t\t *         \n\t\t\t *\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @constructor\n\t\t\t *  @param {NormalRange|Object} [roomSize] Coorelates to the decay time.\n\t\t\t *  @example\n\t\t\t * var reverb = new Tone.JCReverb(0.4).connect(Tone.Master);\n\t\t\t * var delay = new Tone.FeedbackDelay(0.5); \n\t\t\t * //connecting the synth to reverb through delay\n\t\t\t * var synth = new Tone.DuoSynth().chain(delay, reverb);\n\t\t\t * synth.triggerAttackRelease(\"A4\",\"8n\");\n\t\t\t */\n\t\t    Tone.JCReverb = function () {\n\t\t        var options = this.optionsObject(arguments, ['roomSize'], Tone.JCReverb.defaults);\n\t\t        Tone.StereoEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  room size control values between [0,1]\n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  scale the room size\n\t\t\t\t *  @type {Tone.Scale}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scaleRoomSize = new Tone.Scale(-0.733, 0.197);\n\t\t        /**\n\t\t\t\t *  a series of allpass filters\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._allpassFilters = [];\n\t\t        /**\n\t\t\t\t *  parallel feedback comb filters\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedbackCombFilters = [];\n\t\t        //make the allpass filters\n\t\t        for (var af = 0; af < allpassFilterFreqs.length; af++) {\n\t\t            var allpass = this.context.createBiquadFilter();\n\t\t            allpass.type = 'allpass';\n\t\t            allpass.frequency.value = allpassFilterFreqs[af];\n\t\t            this._allpassFilters.push(allpass);\n\t\t        }\n\t\t        //and the comb filters\n\t\t        for (var cf = 0; cf < combFilterDelayTimes.length; cf++) {\n\t\t            var fbcf = new Tone.FeedbackCombFilter(combFilterDelayTimes[cf], 0.1);\n\t\t            this._scaleRoomSize.connect(fbcf.resonance);\n\t\t            fbcf.resonance.value = combFilterResonances[cf];\n\t\t            this._allpassFilters[this._allpassFilters.length - 1].connect(fbcf);\n\t\t            if (cf < combFilterDelayTimes.length / 2) {\n\t\t                fbcf.connect(this.effectReturnL);\n\t\t            } else {\n\t\t                fbcf.connect(this.effectReturnR);\n\t\t            }\n\t\t            this._feedbackCombFilters.push(fbcf);\n\t\t        }\n\t\t        //chain the allpass filters together\n\t\t        this.roomSize.connect(this._scaleRoomSize);\n\t\t        this.connectSeries.apply(this, this._allpassFilters);\n\t\t        this.effectSendL.connect(this._allpassFilters[0]);\n\t\t        this.effectSendR.connect(this._allpassFilters[0]);\n\t\t        this._readOnly(['roomSize']);\n\t\t    };\n\t\t    Tone.extend(Tone.JCReverb, Tone.StereoEffect);\n\t\t    /**\n\t\t\t *  the default values\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.JCReverb.defaults = { 'roomSize': 0.5 };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.JCReverb} this\n\t\t\t */\n\t\t    Tone.JCReverb.prototype.dispose = function () {\n\t\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t\t        for (var apf = 0; apf < this._allpassFilters.length; apf++) {\n\t\t            this._allpassFilters[apf].disconnect();\n\t\t            this._allpassFilters[apf] = null;\n\t\t        }\n\t\t        this._allpassFilters = null;\n\t\t        for (var fbcf = 0; fbcf < this._feedbackCombFilters.length; fbcf++) {\n\t\t            this._feedbackCombFilters[fbcf].dispose();\n\t\t            this._feedbackCombFilters[fbcf] = null;\n\t\t        }\n\t\t        this._feedbackCombFilters = null;\n\t\t        this._writable(['roomSize']);\n\t\t        this.roomSize.dispose();\n\t\t        this.roomSize = null;\n\t\t        this._scaleRoomSize.dispose();\n\t\t        this._scaleRoomSize = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.JCReverb;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Mid/Side processing separates the the 'mid' signal \n\t\t\t *         (which comes out of both the left and the right channel) \n\t\t\t *         and the 'side' (which only comes out of the the side channels) \n\t\t\t *         and effects them separately before being recombined.\n\t\t\t *         Applies a Mid/Side seperation and recombination.\n\t\t\t *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n\t\t\t *         <br><br>\n\t\t\t *         This is a base-class for Mid/Side Effects. \n\t\t\t *\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @constructor\n\t\t\t */\n\t\t    Tone.MidSideEffect = function () {\n\t\t        Tone.Effect.apply(this, arguments);\n\t\t        /**\n\t\t\t\t *  The mid/side split\n\t\t\t\t *  @type  {Tone.MidSideSplit}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._midSideSplit = new Tone.MidSideSplit();\n\t\t        /**\n\t\t\t\t *  The mid/side merge\n\t\t\t\t *  @type  {Tone.MidSideMerge}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._midSideMerge = new Tone.MidSideMerge();\n\t\t        /**\n\t\t\t\t *  The mid send. Connect to mid processing\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.midSend = this._midSideSplit.mid;\n\t\t        /**\n\t\t\t\t *  The side send. Connect to side processing\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.sideSend = this._midSideSplit.side;\n\t\t        /**\n\t\t\t\t *  The mid return connection\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.midReturn = this._midSideMerge.mid;\n\t\t        /**\n\t\t\t\t *  The side return connection\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.sideReturn = this._midSideMerge.side;\n\t\t        //the connections\n\t\t        this.effectSend.connect(this._midSideSplit);\n\t\t        this._midSideMerge.connect(this.effectReturn);\n\t\t    };\n\t\t    Tone.extend(Tone.MidSideEffect, Tone.Effect);\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.MidSideEffect} this\n\t\t\t */\n\t\t    Tone.MidSideEffect.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._midSideSplit.dispose();\n\t\t        this._midSideSplit = null;\n\t\t        this._midSideMerge.dispose();\n\t\t        this._midSideMerge = null;\n\t\t        this.midSend = null;\n\t\t        this.sideSend = null;\n\t\t        this.midReturn = null;\n\t\t        this.sideReturn = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MidSideEffect;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Phaser is a phaser effect. Phasers work by changing the phase\n\t\t\t *         of different frequency components of an incoming signal. Read more on \n\t\t\t *         [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)). \n\t\t\t *         Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).\n\t\t\t *\n\t\t\t *\t@extends {Tone.StereoEffect}\n\t\t\t *\t@constructor\n\t\t\t *\t@param {Frequency|Object} [frequency] The speed of the phasing. \n\t\t\t *\t@param {number} [octaves] The octaves of the effect. \n\t\t\t *\t@param {Frequency} [baseFrequency] The base frequency of the filters. \n\t\t\t *\t@example\n\t\t\t * var phaser = new Tone.Phaser({\n\t\t\t * \t\"frequency\" : 15, \n\t\t\t * \t\"octaves\" : 5, \n\t\t\t * \t\"baseFrequency\" : 1000\n\t\t\t * }).toMaster();\n\t\t\t * var synth = new Tone.FMSynth().connect(phaser);\n\t\t\t * synth.triggerAttackRelease(\"E3\", \"2n\");\n\t\t\t */\n\t\t    Tone.Phaser = function () {\n\t\t        //set the defaults\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'octaves',\n\t\t            'baseFrequency'\n\t\t        ], Tone.Phaser.defaults);\n\t\t        Tone.StereoEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  the lfo which controls the frequency on the left side\n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoL = new Tone.LFO(options.frequency, 0, 1);\n\t\t        /**\n\t\t\t\t *  the lfo which controls the frequency on the right side\n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoR = new Tone.LFO(options.frequency, 0, 1);\n\t\t        this._lfoR.phase = 180;\n\t\t        /**\n\t\t\t\t *  the base modulation frequency\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._baseFrequency = options.baseFrequency;\n\t\t        /**\n\t\t\t\t *  the octaves of the phasing\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._octaves = options.octaves;\n\t\t        /**\n\t\t\t\t *  The quality factor of the filters\n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.Q = new Tone.Signal(options.Q, Tone.Type.Positive);\n\t\t        /**\n\t\t\t\t *  the array of filters for the left side\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._filtersL = this._makeFilters(options.stages, this._lfoL, this.Q);\n\t\t        /**\n\t\t\t\t *  the array of filters for the left side\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._filtersR = this._makeFilters(options.stages, this._lfoR, this.Q);\n\t\t        /**\n\t\t\t\t * the frequency of the effect\n\t\t\t\t * @type {Tone.Signal}\n\t\t\t\t */\n\t\t        this.frequency = this._lfoL.frequency;\n\t\t        this.frequency.value = options.frequency;\n\t\t        //connect them up\n\t\t        this.effectSendL.connect(this._filtersL[0]);\n\t\t        this.effectSendR.connect(this._filtersR[0]);\n\t\t        this._filtersL[options.stages - 1].connect(this.effectReturnL);\n\t\t        this._filtersR[options.stages - 1].connect(this.effectReturnR);\n\t\t        //control the frequency with one LFO\n\t\t        this._lfoL.frequency.connect(this._lfoR.frequency);\n\t\t        //set the options\n\t\t        this.baseFrequency = options.baseFrequency;\n\t\t        this.octaves = options.octaves;\n\t\t        //start the lfo\n\t\t        this._lfoL.start();\n\t\t        this._lfoR.start();\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'Q'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.Phaser, Tone.StereoEffect);\n\t\t    /**\n\t\t\t *  defaults\n\t\t\t *  @static\n\t\t\t *  @type {object}\n\t\t\t */\n\t\t    Tone.Phaser.defaults = {\n\t\t        'frequency': 0.5,\n\t\t        'octaves': 3,\n\t\t        'stages': 10,\n\t\t        'Q': 10,\n\t\t        'baseFrequency': 350\n\t\t    };\n\t\t    /**\n\t\t\t *  @param {number} stages\n\t\t\t *  @returns {Array} the number of filters all connected together\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Phaser.prototype._makeFilters = function (stages, connectToFreq, Q) {\n\t\t        var filters = new Array(stages);\n\t\t        //make all the filters\n\t\t        for (var i = 0; i < stages; i++) {\n\t\t            var filter = this.context.createBiquadFilter();\n\t\t            filter.type = 'allpass';\n\t\t            Q.connect(filter.Q);\n\t\t            connectToFreq.connect(filter.frequency);\n\t\t            filters[i] = filter;\n\t\t        }\n\t\t        this.connectSeries.apply(this, filters);\n\t\t        return filters;\n\t\t    };\n\t\t    /**\n\t\t\t * The number of octaves the phase goes above\n\t\t\t * the baseFrequency\n\t\t\t * @memberOf Tone.Phaser#\n\t\t\t * @type {Positive}\n\t\t\t * @name octaves\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Phaser.prototype, 'octaves', {\n\t\t        get: function () {\n\t\t            return this._octaves;\n\t\t        },\n\t\t        set: function (octaves) {\n\t\t            this._octaves = octaves;\n\t\t            var max = this._baseFrequency * Math.pow(2, octaves);\n\t\t            this._lfoL.max = max;\n\t\t            this._lfoR.max = max;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The the base frequency of the filters. \n\t\t\t * @memberOf Tone.Phaser#\n\t\t\t * @type {number}\n\t\t\t * @name baseFrequency\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Phaser.prototype, 'baseFrequency', {\n\t\t        get: function () {\n\t\t            return this._baseFrequency;\n\t\t        },\n\t\t        set: function (freq) {\n\t\t            this._baseFrequency = freq;\n\t\t            this._lfoL.min = freq;\n\t\t            this._lfoR.min = freq;\n\t\t            this.octaves = this._octaves;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Phaser} this\n\t\t\t */\n\t\t    Tone.Phaser.prototype.dispose = function () {\n\t\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'Q'\n\t\t        ]);\n\t\t        this.Q.dispose();\n\t\t        this.Q = null;\n\t\t        this._lfoL.dispose();\n\t\t        this._lfoL = null;\n\t\t        this._lfoR.dispose();\n\t\t        this._lfoR = null;\n\t\t        for (var i = 0; i < this._filtersL.length; i++) {\n\t\t            this._filtersL[i].disconnect();\n\t\t            this._filtersL[i] = null;\n\t\t        }\n\t\t        this._filtersL = null;\n\t\t        for (var j = 0; j < this._filtersR.length; j++) {\n\t\t            this._filtersR[j].disconnect();\n\t\t            this._filtersR[j] = null;\n\t\t        }\n\t\t        this._filtersR = null;\n\t\t        this.frequency = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Phaser;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.PingPongDelay is a feedback delay effect where the echo is heard\n\t\t\t *          first in one channel and next in the opposite channel. In a stereo\n\t\t\t *          system these are the right and left channels.\n\t\t\t *          PingPongDelay in more simplified terms is two Tone.FeedbackDelays \n\t\t\t *          with independent delay values. Each delay is routed to one channel\n\t\t\t *          (left or right), and the channel triggered second will always \n\t\t\t *          trigger at the same interval after the first.\n\t\t\t *\n\t\t\t * \t@constructor\n\t\t\t * \t@extends {Tone.StereoXFeedbackEffect}\n\t\t\t *  @param {Time|Object} [delayTime] The delayTime between consecutive echos.\n\t\t\t *  @param {NormalRange=} feedback The amount of the effected signal which \n\t\t\t *                                 is fed back through the delay.\n\t\t\t *  @example\n\t\t\t * var pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toMaster();\n\t\t\t * var drum = new Tone.DrumSynth().connect(pingPong);\n\t\t\t * drum.triggerAttackRelease(\"C4\", \"32n\");\n\t\t\t */\n\t\t    Tone.PingPongDelay = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'delayTime',\n\t\t            'feedback'\n\t\t        ], Tone.PingPongDelay.defaults);\n\t\t        Tone.StereoXFeedbackEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  the delay node on the left side\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._leftDelay = new Tone.Delay(0, options.maxDelayTime);\n\t\t        /**\n\t\t\t\t *  the delay node on the right side\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._rightDelay = new Tone.Delay(0, options.maxDelayTime);\n\t\t        /**\n\t\t\t\t *  the predelay on the right side\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._rightPreDelay = new Tone.Delay(0, options.maxDelayTime);\n\t\t        /**\n\t\t\t\t *  the delay time signal\n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.delayTime = new Tone.Signal(options.delayTime, Tone.Type.Time);\n\t\t        //connect it up\n\t\t        this.effectSendL.chain(this._leftDelay, this.effectReturnL);\n\t\t        this.effectSendR.chain(this._rightPreDelay, this._rightDelay, this.effectReturnR);\n\t\t        this.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);\n\t\t        //rearranged the feedback to be after the rightPreDelay\n\t\t        this._feedbackLR.disconnect();\n\t\t        this._feedbackLR.connect(this._rightDelay);\n\t\t        this._readOnly(['delayTime']);\n\t\t    };\n\t\t    Tone.extend(Tone.PingPongDelay, Tone.StereoXFeedbackEffect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.PingPongDelay.defaults = {\n\t\t        'delayTime': 0.25,\n\t\t        'maxDelayTime': 1\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.PingPongDelay} this\n\t\t\t */\n\t\t    Tone.PingPongDelay.prototype.dispose = function () {\n\t\t        Tone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\t\t        this._leftDelay.dispose();\n\t\t        this._leftDelay = null;\n\t\t        this._rightDelay.dispose();\n\t\t        this._rightDelay = null;\n\t\t        this._rightPreDelay.dispose();\n\t\t        this._rightPreDelay = null;\n\t\t        this._writable(['delayTime']);\n\t\t        this.delayTime.dispose();\n\t\t        this.delayTime = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.PingPongDelay;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.PitchShift does near-realtime pitch shifting to the incoming signal. \n\t\t\t *         The effect is achieved by speeding up or slowing down the delayTime\n\t\t\t *         of a DelayNode using a sawtooth wave. \n\t\t\t *         Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).\n\t\t\t *         Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).\n\t\t\t *         \n\t\t\t *  @extends {Tone.FeedbackEffect}\n\t\t\t *  @param {Interval=} pitch The interval to transpose the incoming signal by. \n\t\t\t */\n\t\t    Tone.PitchShift = function () {\n\t\t        var options = this.optionsObject(arguments, ['pitch'], Tone.PitchShift.defaults);\n\t\t        Tone.FeedbackEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  The pitch signal\n\t\t\t\t *  @type  {Tone.Signal}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._frequency = new Tone.Signal(0);\n\t\t        /**\n\t\t\t\t *  Uses two DelayNodes to cover up the jump in\n\t\t\t\t *  the sawtooth wave. \n\t\t\t\t *  @type  {DelayNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayA = new Tone.Delay(0, 1);\n\t\t        /**\n\t\t\t\t *  The first LFO.\n\t\t\t\t *  @type  {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoA = new Tone.LFO({\n\t\t            'min': 0,\n\t\t            'max': 0.1,\n\t\t            'type': 'sawtooth'\n\t\t        }).connect(this._delayA.delayTime);\n\t\t        /**\n\t\t\t\t *  The second DelayNode\n\t\t\t\t *  @type  {DelayNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayB = new Tone.Delay(0, 1);\n\t\t        /**\n\t\t\t\t *  The first LFO.\n\t\t\t\t *  @type  {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoB = new Tone.LFO({\n\t\t            'min': 0,\n\t\t            'max': 0.1,\n\t\t            'type': 'sawtooth',\n\t\t            'phase': 180\n\t\t        }).connect(this._delayB.delayTime);\n\t\t        /**\n\t\t\t\t *  Crossfade quickly between the two delay lines\n\t\t\t\t *  to cover up the jump in the sawtooth wave\n\t\t\t\t *  @type  {Tone.CrossFade}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._crossFade = new Tone.CrossFade();\n\t\t        /**\n\t\t\t\t *  LFO which alternates between the two\n\t\t\t\t *  delay lines to cover up the disparity in the\n\t\t\t\t *  sawtooth wave. \n\t\t\t\t *  @type  {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._crossFadeLFO = new Tone.LFO({\n\t\t            'min': 0,\n\t\t            'max': 1,\n\t\t            'type': 'triangle',\n\t\t            'phase': 90\n\t\t        }).connect(this._crossFade.fade);\n\t\t        /**\n\t\t\t\t *  The delay node\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedbackDelay = new Tone.Delay(options.delayTime);\n\t\t        /**\n\t\t\t\t *  The amount of delay on the input signal\n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.delayTime = this._feedbackDelay.delayTime;\n\t\t        this._readOnly('delayTime');\n\t\t        /**\n\t\t\t\t *  Hold the current pitch\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._pitch = options.pitch;\n\t\t        /**\n\t\t\t\t *  Hold the current windowSize\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._windowSize = options.windowSize;\n\t\t        //connect the two delay lines up\n\t\t        this._delayA.connect(this._crossFade.a);\n\t\t        this._delayB.connect(this._crossFade.b);\n\t\t        //connect the frequency\n\t\t        this._frequency.fan(this._lfoA.frequency, this._lfoB.frequency, this._crossFadeLFO.frequency);\n\t\t        //route the input\n\t\t        this.effectSend.fan(this._delayA, this._delayB);\n\t\t        this._crossFade.chain(this._feedbackDelay, this.effectReturn);\n\t\t        //start the LFOs at the same time\n\t\t        var now = this.now();\n\t\t        this._lfoA.start(now);\n\t\t        this._lfoB.start(now);\n\t\t        this._crossFadeLFO.start(now);\n\t\t        //set the initial value\n\t\t        this.windowSize = this._windowSize;\n\t\t    };\n\t\t    Tone.extend(Tone.PitchShift, Tone.FeedbackEffect);\n\t\t    /**\n\t\t\t *  default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.PitchShift.defaults = {\n\t\t        'pitch': 0,\n\t\t        'windowSize': 0.1,\n\t\t        'delayTime': 0,\n\t\t        'feedback': 0\n\t\t    };\n\t\t    /**\n\t\t\t * Repitch the incoming signal by some interval (measured\n\t\t\t * in semi-tones). \n\t\t\t * @memberOf Tone.PitchShift#\n\t\t\t * @type {Interval}\n\t\t\t * @name pitch\n\t\t\t * @example\n\t\t\t * pitchShift.pitch = -12; //down one octave\n\t\t\t * pitchShift.pitch = 7; //up a fifth\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PitchShift.prototype, 'pitch', {\n\t\t        get: function () {\n\t\t            return this._pitch;\n\t\t        },\n\t\t        set: function (interval) {\n\t\t            this._pitch = interval;\n\t\t            var factor = 0;\n\t\t            if (interval < 0) {\n\t\t                this._lfoA.min = 0;\n\t\t                this._lfoA.max = this._windowSize;\n\t\t                this._lfoB.min = 0;\n\t\t                this._lfoB.max = this._windowSize;\n\t\t                factor = this.intervalToFrequencyRatio(interval - 1) + 1;\n\t\t            } else {\n\t\t                this._lfoA.min = this._windowSize;\n\t\t                this._lfoA.max = 0;\n\t\t                this._lfoB.min = this._windowSize;\n\t\t                this._lfoB.max = 0;\n\t\t                factor = this.intervalToFrequencyRatio(interval) - 1;\n\t\t            }\n\t\t            this._frequency.value = factor * (1.2 / this._windowSize);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The window size corresponds roughly to the sample length in a looping sampler. \n\t\t\t * Smaller values are desirable for a less noticeable delay time of the pitch shifted\n\t\t\t * signal, but larger values will result in smoother pitch shifting for larger intervals. \n\t\t\t * A nominal range of 0.03 to 0.1 is recommended. \n\t\t\t * @memberOf Tone.PitchShift#\n\t\t\t * @type {Time}\n\t\t\t * @name windowSize\n\t\t\t * @example\n\t\t\t * pitchShift.windowSize = 0.1;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PitchShift.prototype, 'windowSize', {\n\t\t        get: function () {\n\t\t            return this._windowSize;\n\t\t        },\n\t\t        set: function (size) {\n\t\t            this._windowSize = this.toSeconds(size);\n\t\t            this.pitch = this._pitch;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.PitchShift}  this\n\t\t\t */\n\t\t    Tone.PitchShift.prototype.dispose = function () {\n\t\t        Tone.FeedbackEffect.prototype.dispose.call(this);\n\t\t        this._frequency.dispose();\n\t\t        this._frequency = null;\n\t\t        this._delayA.disconnect();\n\t\t        this._delayA = null;\n\t\t        this._delayB.disconnect();\n\t\t        this._delayB = null;\n\t\t        this._lfoA.dispose();\n\t\t        this._lfoA = null;\n\t\t        this._lfoB.dispose();\n\t\t        this._lfoB = null;\n\t\t        this._crossFade.dispose();\n\t\t        this._crossFade = null;\n\t\t        this._crossFadeLFO.dispose();\n\t\t        this._crossFadeLFO = null;\n\t\t        this._writable('delayTime');\n\t\t        this._feedbackDelay.dispose();\n\t\t        this._feedbackDelay = null;\n\t\t        this.delayTime = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.PitchShift;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Base class for stereo feedback effects where the effectReturn\n\t\t\t *         is fed back into the same channel. \n\t\t\t *\n\t\t\t *\t@constructor\n\t\t\t *\t@extends {Tone.FeedbackEffect}\n\t\t\t */\n\t\t    Tone.StereoFeedbackEffect = function () {\n\t\t        var options = this.optionsObject(arguments, ['feedback'], Tone.FeedbackEffect.defaults);\n\t\t        Tone.StereoEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  controls the amount of feedback\n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  the left side feeback\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedbackL = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  the right side feeback\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedbackR = new Tone.Gain();\n\t\t        //connect it up\n\t\t        this.effectReturnL.chain(this._feedbackL, this.effectSendL);\n\t\t        this.effectReturnR.chain(this._feedbackR, this.effectSendR);\n\t\t        this.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);\n\t\t        this._readOnly(['feedback']);\n\t\t    };\n\t\t    Tone.extend(Tone.StereoFeedbackEffect, Tone.FeedbackEffect);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.StereoFeedbackEffect} this\n\t\t\t */\n\t\t    Tone.StereoFeedbackEffect.prototype.dispose = function () {\n\t\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t\t        this._writable(['feedback']);\n\t\t        this.feedback.dispose();\n\t\t        this.feedback = null;\n\t\t        this._feedbackL.dispose();\n\t\t        this._feedbackL = null;\n\t\t        this._feedbackR.dispose();\n\t\t        this._feedbackR = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.StereoFeedbackEffect;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Applies a width factor to the mid/side seperation. \n\t\t\t *         0 is all mid and 1 is all side.\n\t\t\t *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n\t\t\t *         <br><br>\n\t\t\t *         <code>\n\t\t\t *         Mid *= 2*(1-width)<br>\n\t\t\t *         Side *= 2*width\n\t\t\t *         </code>\n\t\t\t *\n\t\t\t *  @extends {Tone.MidSideEffect}\n\t\t\t *  @constructor\n\t\t\t *  @param {NormalRange|Object} [width] The stereo width. A width of 0 is mono and 1 is stereo. 0.5 is no change.\n\t\t\t */\n\t\t    Tone.StereoWidener = function () {\n\t\t        var options = this.optionsObject(arguments, ['width'], Tone.StereoWidener.defaults);\n\t\t        Tone.MidSideEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  The width control. 0 = 100% mid. 1 = 100% side. 0.5 = no change. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  Mid multiplier\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._midMult = new Tone.Expr('$0 * ($1 * (1 - $2))');\n\t\t        /**\n\t\t\t\t *  Side multiplier\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sideMult = new Tone.Expr('$0 * ($1 * $2)');\n\t\t        /**\n\t\t\t\t *  constant output of 2\n\t\t\t\t *  @type {Tone}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._two = new Tone.Signal(2);\n\t\t        //the mid chain\n\t\t        this._two.connect(this._midMult, 0, 1);\n\t\t        this.width.connect(this._midMult, 0, 2);\n\t\t        //the side chain\n\t\t        this._two.connect(this._sideMult, 0, 1);\n\t\t        this.width.connect(this._sideMult, 0, 2);\n\t\t        //connect it to the effect send/return\n\t\t        this.midSend.chain(this._midMult, this.midReturn);\n\t\t        this.sideSend.chain(this._sideMult, this.sideReturn);\n\t\t        this._readOnly(['width']);\n\t\t    };\n\t\t    Tone.extend(Tone.StereoWidener, Tone.MidSideEffect);\n\t\t    /**\n\t\t\t *  the default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.StereoWidener.defaults = { 'width': 0.5 };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.StereoWidener} this\n\t\t\t */\n\t\t    Tone.StereoWidener.prototype.dispose = function () {\n\t\t        Tone.MidSideEffect.prototype.dispose.call(this);\n\t\t        this._writable(['width']);\n\t\t        this.width.dispose();\n\t\t        this.width = null;\n\t\t        this._midMult.dispose();\n\t\t        this._midMult = null;\n\t\t        this._sideMult.dispose();\n\t\t        this._sideMult = null;\n\t\t        this._two.dispose();\n\t\t        this._two = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.StereoWidener;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Tremolo modulates the amplitude of an incoming signal using a Tone.LFO.\n\t\t\t *         The type, frequency, and depth of the LFO is controllable.\n\t\t\t *\n\t\t\t *  @extends {Tone.StereoEffect}\n\t\t\t *  @constructor\n\t\t\t *  @param {Frequency} [frequency] The rate of the effect.\n\t\t\t *  @param {NormalRange} [depth] The depth of the effect.\n\t\t\t *  @example\n\t\t\t * //create a tremolo and start it's LFO\n\t\t\t * var tremolo = new Tone.Tremolo(9, 0.75).toMaster().start();\n\t\t\t * //route an oscillator through the tremolo and start it\n\t\t\t * var oscillator = new Tone.Oscillator().connect(tremolo).start();\n\t\t\t */\n\t\t    Tone.Tremolo = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ], Tone.Tremolo.defaults);\n\t\t        Tone.StereoEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  The tremelo LFO in the left channel\n\t\t\t\t *  @type  {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoL = new Tone.LFO({\n\t\t            'phase': options.spread,\n\t\t            'min': 1,\n\t\t            'max': 0\n\t\t        });\n\t\t        /**\n\t\t\t\t *  The tremelo LFO in the left channel\n\t\t\t\t *  @type  {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoR = new Tone.LFO({\n\t\t            'phase': options.spread,\n\t\t            'min': 1,\n\t\t            'max': 0\n\t\t        });\n\t\t        /**\n\t\t\t\t *  Where the gain is multiplied\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._amplitudeL = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  Where the gain is multiplied\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._amplitudeR = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  The frequency of the tremolo.\n\t\t\t\t *  @type  {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The depth of the effect. A depth of 0, has no effect\n\t\t\t\t *  on the amplitude, and a depth of 1 makes the amplitude\n\t\t\t\t *  modulate fully between 0 and 1.\n\t\t\t\t *  @type  {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.depth = new Tone.Signal(options.depth, Tone.Type.NormalRange);\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ]);\n\t\t        this.effectSendL.chain(this._amplitudeL, this.effectReturnL);\n\t\t        this.effectSendR.chain(this._amplitudeR, this.effectReturnR);\n\t\t        this._lfoL.connect(this._amplitudeL.gain);\n\t\t        this._lfoR.connect(this._amplitudeR.gain);\n\t\t        this.frequency.fan(this._lfoL.frequency, this._lfoR.frequency);\n\t\t        this.depth.fan(this._lfoR.amplitude, this._lfoL.amplitude);\n\t\t        this.type = options.type;\n\t\t        this.spread = options.spread;\n\t\t    };\n\t\t    Tone.extend(Tone.Tremolo, Tone.StereoEffect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Tremolo.defaults = {\n\t\t        'frequency': 10,\n\t\t        'type': 'sine',\n\t\t        'depth': 0.5,\n\t\t        'spread': 180\n\t\t    };\n\t\t    /**\n\t\t\t * Start the tremolo.\n\t\t\t * @param {Time} [time=now] When the tremolo begins.\n\t\t\t * @returns {Tone.Tremolo} this\n\t\t\t */\n\t\t    Tone.Tremolo.prototype.start = function (time) {\n\t\t        this._lfoL.start(time);\n\t\t        this._lfoR.start(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Stop the tremolo.\n\t\t\t * @param {Time} [time=now] When the tremolo stops.\n\t\t\t * @returns {Tone.Tremolo} this\n\t\t\t */\n\t\t    Tone.Tremolo.prototype.stop = function (time) {\n\t\t        this._lfoL.stop(time);\n\t\t        this._lfoR.stop(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Sync the effect to the transport.\n\t\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t\t *                              Transport has started.\n\t\t\t * @returns {Tone.AutoFilter} this\n\t\t\t */\n\t\t    Tone.Tremolo.prototype.sync = function (delay) {\n\t\t        this._lfoL.sync(delay);\n\t\t        this._lfoR.sync(delay);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Unsync the filter from the transport\n\t\t\t * @returns {Tone.Tremolo} this\n\t\t\t */\n\t\t    Tone.Tremolo.prototype.unsync = function () {\n\t\t        this._lfoL.unsync();\n\t\t        this._lfoR.unsync();\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * The Tremolo's oscillator type.\n\t\t\t * @memberOf Tone.Tremolo#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Tremolo.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._lfoL.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._lfoL.type = type;\n\t\t            this._lfoR.type = type;\n\t\t        }\n\t\t    });\n\t\t    /** \n\t\t\t * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n\t\t\t * When set to 180, LFO's will be panned hard left and right respectively.\n\t\t\t * @memberOf Tone.Tremolo#\n\t\t\t * @type {Degrees}\n\t\t\t * @name spread\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Tremolo.prototype, 'spread', {\n\t\t        get: function () {\n\t\t            return this._lfoR.phase - this._lfoL.phase;    //180\n\t\t        },\n\t\t        set: function (spread) {\n\t\t            this._lfoL.phase = 90 - spread / 2;\n\t\t            this._lfoR.phase = spread / 2 + 90;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Tremolo} this\n\t\t\t */\n\t\t    Tone.Tremolo.prototype.dispose = function () {\n\t\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ]);\n\t\t        this._lfoL.dispose();\n\t\t        this._lfoL = null;\n\t\t        this._lfoR.dispose();\n\t\t        this._lfoR = null;\n\t\t        this._amplitudeL.dispose();\n\t\t        this._amplitudeL = null;\n\t\t        this._amplitudeR.dispose();\n\t\t        this._amplitudeR = null;\n\t\t        this.frequency = null;\n\t\t        this.depth = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Tremolo;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n\t\t\t *         modulates the delayTime of the delay, causing the pitch to rise\n\t\t\t *         and fall. \n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @param {Frequency} frequency The frequency of the vibrato.\n\t\t\t *  @param {NormalRange} depth The amount the pitch is modulated.\n\t\t\t */\n\t\t    Tone.Vibrato = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ], Tone.Vibrato.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  The delay node used for the vibrato effect\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayNode = new Tone.Delay(0, options.maxDelay);\n\t\t        /**\n\t\t\t\t *  The LFO used to control the vibrato\n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfo = new Tone.LFO({\n\t\t            'type': options.type,\n\t\t            'min': 0,\n\t\t            'max': options.maxDelay,\n\t\t            'frequency': options.frequency,\n\t\t            'phase': -90    //offse the phase so the resting position is in the center\n\t\t        }).start().connect(this._delayNode.delayTime);\n\t\t        /**\n\t\t\t\t *  The frequency of the vibrato\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = this._lfo.frequency;\n\t\t        /**\n\t\t\t\t *  The depth of the vibrato. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.depth = this._lfo.amplitude;\n\t\t        this.depth.value = options.depth;\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ]);\n\t\t        this.effectSend.chain(this._delayNode, this.effectReturn);\n\t\t    };\n\t\t    Tone.extend(Tone.Vibrato, Tone.Effect);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @type  {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Vibrato.defaults = {\n\t\t        'maxDelay': 0.005,\n\t\t        'frequency': 5,\n\t\t        'depth': 0.1,\n\t\t        'type': 'sine'\n\t\t    };\n\t\t    /**\n\t\t\t * Type of oscillator attached to the Vibrato.\n\t\t\t * @memberOf Tone.Vibrato#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Vibrato.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._lfo.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._lfo.type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Vibrato} this\n\t\t\t */\n\t\t    Tone.Vibrato.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._delayNode.dispose();\n\t\t        this._delayNode = null;\n\t\t        this._lfo.dispose();\n\t\t        this._lfo = null;\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ]);\n\t\t        this.frequency = null;\n\t\t        this.depth = null;\n\t\t    };\n\t\t    return Tone.Vibrato;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Event abstracts away Tone.Transport.schedule and provides a schedulable\n\t\t\t *          callback for a single or repeatable events along the timeline. \n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {function} callback The callback to invoke at the time. \n\t\t\t *  @param {*} value The value or values which should be passed to\n\t\t\t *                      the callback function on invocation.  \n\t\t\t *  @example\n\t\t\t * var chord = new Tone.Event(function(time, chord){\n\t\t\t * \t//the chord as well as the exact time of the event\n\t\t\t * \t//are passed in as arguments to the callback function\n\t\t\t * }, [\"D4\", \"E4\", \"F4\"]);\n\t\t\t * //start the chord at the beginning of the transport timeline\n\t\t\t * chord.start();\n\t\t\t * //loop it every measure for 8 measures\n\t\t\t * chord.loop = 8;\n\t\t\t * chord.loopEnd = \"1m\";\n\t\t\t */\n\t\t    Tone.Event = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'callback',\n\t\t            'value'\n\t\t        ], Tone.Event.defaults);\n\t\t        /**\n\t\t\t\t *  Loop value\n\t\t\t\t *  @type  {Boolean|Positive}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loop = options.loop;\n\t\t        /**\n\t\t\t\t *  The callback to invoke. \n\t\t\t\t *  @type  {Function}\n\t\t\t\t */\n\t\t        this.callback = options.callback;\n\t\t        /**\n\t\t\t\t *  The value which is passed to the\n\t\t\t\t *  callback function.\n\t\t\t\t *  @type  {*}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.value = options.value;\n\t\t        /**\n\t\t\t\t *  When the note is scheduled to start.\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopStart = this.toTicks(options.loopStart);\n\t\t        /**\n\t\t\t\t *  When the note is scheduled to start.\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopEnd = this.toTicks(options.loopEnd);\n\t\t        /**\n\t\t\t\t *  Tracks the scheduled events\n\t\t\t\t *  @type {Tone.TimelineState}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t\t        /**\n\t\t\t\t *  The playback speed of the note. A speed of 1\n\t\t\t\t *  is no change. \n\t\t\t\t *  @private\n\t\t\t\t *  @type {Positive}\n\t\t\t\t */\n\t\t        this._playbackRate = 1;\n\t\t        /**\n\t\t\t\t *  A delay time from when the event is scheduled to start\n\t\t\t\t *  @type {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._startOffset = 0;\n\t\t        /**\n\t\t\t\t *  The probability that the callback will be invoked\n\t\t\t\t *  at the scheduled time. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @example\n\t\t\t\t * //the callback will be invoked 50% of the time\n\t\t\t\t * event.probability = 0.5;\n\t\t\t\t */\n\t\t        this.probability = options.probability;\n\t\t        /**\n\t\t\t\t *  If set to true, will apply small (+/-0.02 seconds) random variation\n\t\t\t\t *  to the callback time. If the value is given as a time, it will randomize\n\t\t\t\t *  by that amount.\n\t\t\t\t *  @example\n\t\t\t\t * event.humanize = true;\n\t\t\t\t *  @type {Boolean|Time}\n\t\t\t\t */\n\t\t        this.humanize = options.humanize;\n\t\t        /**\n\t\t\t\t *  If mute is true, the callback won't be\n\t\t\t\t *  invoked.\n\t\t\t\t *  @type {Boolean}\n\t\t\t\t */\n\t\t        this.mute = options.mute;\n\t\t        //set the initial values\n\t\t        this.playbackRate = options.playbackRate;\n\t\t    };\n\t\t    Tone.extend(Tone.Event);\n\t\t    /**\n\t\t\t *  The default values\n\t\t\t *  @type  {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Event.defaults = {\n\t\t        'callback': Tone.noOp,\n\t\t        'loop': false,\n\t\t        'loopEnd': '1m',\n\t\t        'loopStart': 0,\n\t\t        'playbackRate': 1,\n\t\t        'value': null,\n\t\t        'probability': 1,\n\t\t        'mute': false,\n\t\t        'humanize': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Reschedule all of the events along the timeline\n\t\t\t *  with the updated values.\n\t\t\t *  @param {Time} after Only reschedules events after the given time.\n\t\t\t *  @return  {Tone.Event}  this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Event.prototype._rescheduleEvents = function (after) {\n\t\t        //if no argument is given, schedules all of the events\n\t\t        after = this.defaultArg(after, -1);\n\t\t        this._state.forEachFrom(after, function (event) {\n\t\t            var duration;\n\t\t            if (event.state === Tone.State.Started) {\n\t\t                if (!this.isUndef(event.id)) {\n\t\t                    Tone.Transport.clear(event.id);\n\t\t                }\n\t\t                var startTick = event.time + Math.round(this.startOffset / this._playbackRate);\n\t\t                if (this._loop) {\n\t\t                    duration = Infinity;\n\t\t                    if (this.isNumber(this._loop)) {\n\t\t                        duration = this._loop * this._getLoopDuration();\n\t\t                    }\n\t\t                    var nextEvent = this._state.getEventAfter(startTick);\n\t\t                    if (nextEvent !== null) {\n\t\t                        duration = Math.min(duration, nextEvent.time - startTick);\n\t\t                    }\n\t\t                    if (duration !== Infinity) {\n\t\t                        //schedule a stop since it's finite duration\n\t\t                        this._state.setStateAtTime(Tone.State.Stopped, startTick + duration + 1);\n\t\t                        duration = Tone.Time(duration, 'i');\n\t\t                    }\n\t\t                    var interval = Tone.Time(this._getLoopDuration(), 'i');\n\t\t                    event.id = Tone.Transport.scheduleRepeat(this._tick.bind(this), interval, Tone.TransportTime(startTick, 'i'), duration);\n\t\t                } else {\n\t\t                    event.id = Tone.Transport.schedule(this._tick.bind(this), startTick + 'i');\n\t\t                }\n\t\t            }\n\t\t        }.bind(this));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the playback state of the note, either \"started\" or \"stopped\".\n\t\t\t *  @type {String}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.Event#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Event.prototype, 'state', {\n\t\t        get: function () {\n\t\t            return this._state.getStateAtTime(Tone.Transport.ticks);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The start from the scheduled start time\n\t\t\t *  @type {Ticks}\n\t\t\t *  @memberOf Tone.Event#\n\t\t\t *  @name startOffset\n\t\t\t *  @private\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Event.prototype, 'startOffset', {\n\t\t        get: function () {\n\t\t            return this._startOffset;\n\t\t        },\n\t\t        set: function (offset) {\n\t\t            this._startOffset = offset;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Start the note at the given time. \n\t\t\t *  @param  {TimelinePosition}  time  When the note should start.\n\t\t\t *  @return  {Tone.Event}  this\n\t\t\t */\n\t\t    Tone.Event.prototype.start = function (time) {\n\t\t        time = this.toTicks(time);\n\t\t        if (this._state.getStateAtTime(time) === Tone.State.Stopped) {\n\t\t            this._state.addEvent({\n\t\t                'state': Tone.State.Started,\n\t\t                'time': time,\n\t\t                'id': undefined\n\t\t            });\n\t\t            this._rescheduleEvents(time);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the Event at the given time.\n\t\t\t *  @param  {TimelinePosition}  time  When the note should stop.\n\t\t\t *  @return  {Tone.Event}  this\n\t\t\t */\n\t\t    Tone.Event.prototype.stop = function (time) {\n\t\t        this.cancel(time);\n\t\t        time = this.toTicks(time);\n\t\t        if (this._state.getStateAtTime(time) === Tone.State.Started) {\n\t\t            this._state.setStateAtTime(Tone.State.Stopped, time);\n\t\t            var previousEvent = this._state.getEventBefore(time);\n\t\t            var reschedulTime = time;\n\t\t            if (previousEvent !== null) {\n\t\t                reschedulTime = previousEvent.time;\n\t\t            }\n\t\t            this._rescheduleEvents(reschedulTime);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancel all scheduled events greater than or equal to the given time\n\t\t\t *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n\t\t\t *  @return  {Tone.Event}  this\n\t\t\t */\n\t\t    Tone.Event.prototype.cancel = function (time) {\n\t\t        time = this.defaultArg(time, -Infinity);\n\t\t        time = this.toTicks(time);\n\t\t        this._state.forEachFrom(time, function (event) {\n\t\t            Tone.Transport.clear(event.id);\n\t\t        });\n\t\t        this._state.cancel(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The callback function invoker. Also \n\t\t\t *  checks if the Event is done playing\n\t\t\t *  @param  {Number}  time  The time of the event in seconds\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Event.prototype._tick = function (time) {\n\t\t        if (!this.mute && this._state.getStateAtTime(Tone.Transport.ticks) === Tone.State.Started) {\n\t\t            if (this.probability < 1 && Math.random() > this.probability) {\n\t\t                return;\n\t\t            }\n\t\t            if (this.humanize) {\n\t\t                var variation = 0.02;\n\t\t                if (!this.isBoolean(this.humanize)) {\n\t\t                    variation = this.toSeconds(this.humanize);\n\t\t                }\n\t\t                time += (Math.random() * 2 - 1) * variation;\n\t\t            }\n\t\t            this.callback(time, this.value);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the duration of the loop.\n\t\t\t *  @return  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Event.prototype._getLoopDuration = function () {\n\t\t        return Math.round((this._loopEnd - this._loopStart) / this._playbackRate);\n\t\t    };\n\t\t    /**\n\t\t\t *  If the note should loop or not\n\t\t\t *  between Tone.Event.loopStart and \n\t\t\t *  Tone.Event.loopEnd. An integer\n\t\t\t *  value corresponds to the number of\n\t\t\t *  loops the Event does after it starts.\n\t\t\t *  @memberOf Tone.Event#\n\t\t\t *  @type {Boolean|Positive}\n\t\t\t *  @name loop\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Event.prototype, 'loop', {\n\t\t        get: function () {\n\t\t            return this._loop;\n\t\t        },\n\t\t        set: function (loop) {\n\t\t            this._loop = loop;\n\t\t            this._rescheduleEvents();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * \tThe playback rate of the note. Defaults to 1.\n\t\t\t *  @memberOf Tone.Event#\n\t\t\t *  @type {Positive}\n\t\t\t *  @name playbackRate\n\t\t\t *  @example\n\t\t\t * note.loop = true;\n\t\t\t * //repeat the note twice as fast\n\t\t\t * note.playbackRate = 2;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Event.prototype, 'playbackRate', {\n\t\t        get: function () {\n\t\t            return this._playbackRate;\n\t\t        },\n\t\t        set: function (rate) {\n\t\t            this._playbackRate = rate;\n\t\t            this._rescheduleEvents();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The loopEnd point is the time the event will loop\n\t\t\t *  if Tone.Event.loop is true.\n\t\t\t *  @memberOf Tone.Event#\n\t\t\t *  @type {TransportTime}\n\t\t\t *  @name loopEnd\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Event.prototype, 'loopEnd', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this._loopEnd, 'i').toNotation();\n\t\t        },\n\t\t        set: function (loopEnd) {\n\t\t            this._loopEnd = this.toTicks(loopEnd);\n\t\t            if (this._loop) {\n\t\t                this._rescheduleEvents();\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The time when the loop should start. \n\t\t\t *  @memberOf Tone.Event#\n\t\t\t *  @type {TransportTime}\n\t\t\t *  @name loopStart\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Event.prototype, 'loopStart', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this._loopStart, 'i').toNotation();\n\t\t        },\n\t\t        set: function (loopStart) {\n\t\t            this._loopStart = this.toTicks(loopStart);\n\t\t            if (this._loop) {\n\t\t                this._rescheduleEvents();\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The current progress of the loop interval.\n\t\t\t *  Returns 0 if the event is not started yet or\n\t\t\t *  it is not set to loop.\n\t\t\t *  @memberOf Tone.Event#\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @name progress\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Event.prototype, 'progress', {\n\t\t        get: function () {\n\t\t            if (this._loop) {\n\t\t                var ticks = Tone.Transport.ticks;\n\t\t                var lastEvent = this._state.getEvent(ticks);\n\t\t                if (lastEvent !== null && lastEvent.state === Tone.State.Started) {\n\t\t                    var loopDuration = this._getLoopDuration();\n\t\t                    var progress = (ticks - lastEvent.time) % loopDuration;\n\t\t                    return progress / loopDuration;\n\t\t                } else {\n\t\t                    return 0;\n\t\t                }\n\t\t            } else {\n\t\t                return 0;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.Event}  this\n\t\t\t */\n\t\t    Tone.Event.prototype.dispose = function () {\n\t\t        this.cancel();\n\t\t        this._state.dispose();\n\t\t        this._state = null;\n\t\t        this.callback = null;\n\t\t        this.value = null;\n\t\t    };\n\t\t    return Tone.Event;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.Loop creates a looped callback at the \n\t\t\t *         specified interval. The callback can be \n\t\t\t *         started, stopped and scheduled along\n\t\t\t *         the Transport's timeline. \n\t\t\t *  @example\n\t\t\t * var loop = new Tone.Loop(function(time){\n\t\t\t * \t//triggered every eighth note. \n\t\t\t * \tconsole.log(time);\n\t\t\t * }, \"8n\").start(0);\n\t\t\t * Tone.Transport.start();\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Function} callback The callback to invoke with the event.\n\t\t\t *  @param {Time} interval The time between successive callback calls. \n\t\t\t */\n\t\t    Tone.Loop = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'callback',\n\t\t            'interval'\n\t\t        ], Tone.Loop.defaults);\n\t\t        /**\n\t\t\t\t *  The event which produces the callbacks\n\t\t\t\t */\n\t\t        this._event = new Tone.Event({\n\t\t            'callback': this._tick.bind(this),\n\t\t            'loop': true,\n\t\t            'loopEnd': options.interval,\n\t\t            'playbackRate': options.playbackRate,\n\t\t            'probability': options.probability\n\t\t        });\n\t\t        /**\n\t\t\t\t *  The callback to invoke with the next event in the pattern\n\t\t\t\t *  @type {Function}\n\t\t\t\t */\n\t\t        this.callback = options.callback;\n\t\t        //set the iterations\n\t\t        this.iterations = options.iterations;\n\t\t    };\n\t\t    Tone.extend(Tone.Loop);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.Loop.defaults = {\n\t\t        'interval': '4n',\n\t\t        'callback': Tone.noOp,\n\t\t        'playbackRate': 1,\n\t\t        'iterations': Infinity,\n\t\t        'probability': true,\n\t\t        'mute': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the loop at the specified time along the Transport's\n\t\t\t *  timeline.\n\t\t\t *  @param  {TimelinePosition=}  time  When to start the Loop.\n\t\t\t *  @return  {Tone.Loop}  this\n\t\t\t */\n\t\t    Tone.Loop.prototype.start = function (time) {\n\t\t        this._event.start(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the loop at the given time.\n\t\t\t *  @param  {TimelinePosition=}  time  When to stop the Arpeggio\n\t\t\t *  @return  {Tone.Loop}  this\n\t\t\t */\n\t\t    Tone.Loop.prototype.stop = function (time) {\n\t\t        this._event.stop(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancel all scheduled events greater than or equal to the given time\n\t\t\t *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n\t\t\t *  @return  {Tone.Loop}  this\n\t\t\t */\n\t\t    Tone.Loop.prototype.cancel = function (time) {\n\t\t        this._event.cancel(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Internal function called when the notes should be called\n\t\t\t *  @param  {Number}  time  The time the event occurs\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Loop.prototype._tick = function (time) {\n\t\t        this.callback(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  The state of the Loop, either started or stopped.\n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @type {String}\n\t\t\t *  @name state\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'state', {\n\t\t        get: function () {\n\t\t            return this._event.state;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The progress of the loop as a value between 0-1. 0, when\n\t\t\t *  the loop is stopped or done iterating. \n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @name progress\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'progress', {\n\t\t        get: function () {\n\t\t            return this._event.progress;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The time between successive callbacks. \n\t\t\t *  @example\n\t\t\t * loop.interval = \"8n\"; //loop every 8n\n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @type {Time}\n\t\t\t *  @name interval\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'interval', {\n\t\t        get: function () {\n\t\t            return this._event.loopEnd;\n\t\t        },\n\t\t        set: function (interval) {\n\t\t            this._event.loopEnd = interval;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The playback rate of the loop. The normal playback rate is 1 (no change). \n\t\t\t *  A `playbackRate` of 2 would be twice as fast. \n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @type {Time}\n\t\t\t *  @name playbackRate\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'playbackRate', {\n\t\t        get: function () {\n\t\t            return this._event.playbackRate;\n\t\t        },\n\t\t        set: function (rate) {\n\t\t            this._event.playbackRate = rate;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Random variation +/-0.01s to the scheduled time. \n\t\t\t *  Or give it a time value which it will randomize by.\n\t\t\t *  @type {Boolean|Time}\n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @name humanize\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'humanize', {\n\t\t        get: function () {\n\t\t            return this._event.humanize;\n\t\t        },\n\t\t        set: function (variation) {\n\t\t            this._event.humanize = variation;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The probably of the callback being invoked.\n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @name probability\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'probability', {\n\t\t        get: function () {\n\t\t            return this._event.probability;\n\t\t        },\n\t\t        set: function (prob) {\n\t\t            this._event.probability = prob;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Muting the Loop means that no callbacks are invoked.\n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @type {Boolean}\n\t\t\t *  @name mute\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'mute', {\n\t\t        get: function () {\n\t\t            return this._event.mute;\n\t\t        },\n\t\t        set: function (mute) {\n\t\t            this._event.mute = mute;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The number of iterations of the loop. The default\n\t\t\t *  value is Infinity (loop forever).\n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @type {Positive}\n\t\t\t *  @name iterations\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'iterations', {\n\t\t        get: function () {\n\t\t            if (this._event.loop === true) {\n\t\t                return Infinity;\n\t\t            } else {\n\t\t                return this._event.loop;\n\t\t            }\n\t\t            return this._pattern.index;\n\t\t        },\n\t\t        set: function (iters) {\n\t\t            if (iters === Infinity) {\n\t\t                this._event.loop = true;\n\t\t            } else {\n\t\t                this._event.loop = iters;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.Loop}  this\n\t\t\t */\n\t\t    Tone.Loop.prototype.dispose = function () {\n\t\t        this._event.dispose();\n\t\t        this._event = null;\n\t\t        this.callback = null;\n\t\t    };\n\t\t    return Tone.Loop;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Part is a collection Tone.Events which can be\n\t\t\t *         started/stoped and looped as a single unit.\n\t\t\t *\n\t\t\t *  @extends {Tone.Event}\n\t\t\t *  @param {Function} callback The callback to invoke on each event\n\t\t\t *  @param {Array} events the array of events\n\t\t\t *  @example\n\t\t\t * var part = new Tone.Part(function(time, note){\n\t\t\t * \t//the notes given as the second element in the array\n\t\t\t * \t//will be passed in as the second argument\n\t\t\t * \tsynth.triggerAttackRelease(note, \"8n\", time);\n\t\t\t * }, [[0, \"C2\"], [\"0:2\", \"C3\"], [\"0:3:2\", \"G2\"]]);\n\t\t\t *  @example\n\t\t\t * //use an array of objects as long as the object has a \"time\" attribute\n\t\t\t * var part = new Tone.Part(function(time, value){\n\t\t\t * \t//the value is an object which contains both the note and the velocity\n\t\t\t * \tsynth.triggerAttackRelease(value.note, \"8n\", time, value.velocity);\n\t\t\t * }, [{\"time\" : 0, \"note\" : \"C3\", \"velocity\": 0.9}, \n\t\t\t * \t   {\"time\" : \"0:2\", \"note\" : \"C4\", \"velocity\": 0.5}\n\t\t\t * ]).start(0);\n\t\t\t */\n\t\t    Tone.Part = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'callback',\n\t\t            'events'\n\t\t        ], Tone.Part.defaults);\n\t\t        /**\n\t\t\t\t *  If the part is looping or not\n\t\t\t\t *  @type  {Boolean|Positive}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loop = options.loop;\n\t\t        /**\n\t\t\t\t *  When the note is scheduled to start.\n\t\t\t\t *  @type  {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopStart = this.toTicks(options.loopStart);\n\t\t        /**\n\t\t\t\t *  When the note is scheduled to start.\n\t\t\t\t *  @type  {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopEnd = this.toTicks(options.loopEnd);\n\t\t        /**\n\t\t\t\t *  The playback rate of the part\n\t\t\t\t *  @type  {Positive}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._playbackRate = options.playbackRate;\n\t\t        /**\n\t\t\t\t *  private holder of probability value\n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._probability = options.probability;\n\t\t        /**\n\t\t\t\t *  the amount of variation from the\n\t\t\t\t *  given time. \n\t\t\t\t *  @type {Boolean|Time}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._humanize = options.humanize;\n\t\t        /**\n\t\t\t\t *  The start offset\n\t\t\t\t *  @type {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._startOffset = 0;\n\t\t        /**\n\t\t\t\t *  Keeps track of the current state\n\t\t\t\t *  @type {Tone.TimelineState}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t\t        /**\n\t\t\t\t *  An array of Objects. \n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._events = [];\n\t\t        /**\n\t\t\t\t *  The callback to invoke at all the scheduled events.\n\t\t\t\t *  @type {Function}\n\t\t\t\t */\n\t\t        this.callback = options.callback;\n\t\t        /**\n\t\t\t\t *  If mute is true, the callback won't be\n\t\t\t\t *  invoked.\n\t\t\t\t *  @type {Boolean}\n\t\t\t\t */\n\t\t        this.mute = options.mute;\n\t\t        //add the events\n\t\t        var events = this.defaultArg(options.events, []);\n\t\t        if (!this.isUndef(options.events)) {\n\t\t            for (var i = 0; i < events.length; i++) {\n\t\t                if (Array.isArray(events[i])) {\n\t\t                    this.add(events[i][0], events[i][1]);\n\t\t                } else {\n\t\t                    this.add(events[i]);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.Part, Tone.Event);\n\t\t    /**\n\t\t\t *  The default values\n\t\t\t *  @type  {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Part.defaults = {\n\t\t        'callback': Tone.noOp,\n\t\t        'loop': false,\n\t\t        'loopEnd': '1m',\n\t\t        'loopStart': 0,\n\t\t        'playbackRate': 1,\n\t\t        'probability': 1,\n\t\t        'humanize': false,\n\t\t        'mute': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the part at the given time. \n\t\t\t *  @param  {TransportTime}  time    When to start the part.\n\t\t\t *  @param  {Time=}  offset  The offset from the start of the part\n\t\t\t *                           to begin playing at.\n\t\t\t *  @return  {Tone.Part}  this\n\t\t\t */\n\t\t    Tone.Part.prototype.start = function (time, offset) {\n\t\t        var ticks = this.toTicks(time);\n\t\t        if (this._state.getStateAtTime(ticks) !== Tone.State.Started) {\n\t\t            if (this._loop) {\n\t\t                offset = this.defaultArg(offset, this._loopStart);\n\t\t            } else {\n\t\t                offset = this.defaultArg(offset, 0);\n\t\t            }\n\t\t            offset = this.toTicks(offset);\n\t\t            this._state.addEvent({\n\t\t                'state': Tone.State.Started,\n\t\t                'time': ticks,\n\t\t                'offset': offset\n\t\t            });\n\t\t            this._forEach(function (event) {\n\t\t                this._startNote(event, ticks, offset);\n\t\t            });\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the event in the given event at the correct time given\n\t\t\t *  the ticks and offset and looping.\n\t\t\t *  @param  {Tone.Event}  event \n\t\t\t *  @param  {Ticks}  ticks\n\t\t\t *  @param  {Ticks}  offset\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Part.prototype._startNote = function (event, ticks, offset) {\n\t\t        ticks -= offset;\n\t\t        if (this._loop) {\n\t\t            if (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {\n\t\t                if (event.startOffset < offset) {\n\t\t                    //start it on the next loop\n\t\t                    ticks += this._getLoopDuration();\n\t\t                }\n\t\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t\t            } else if (event.startOffset < this._loopStart && event.startOffset >= offset) {\n\t\t                event.loop = false;\n\t\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t\t            }\n\t\t        } else {\n\t\t            if (event.startOffset >= offset) {\n\t\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  The start from the scheduled start time\n\t\t\t *  @type {Ticks}\n\t\t\t *  @memberOf Tone.Part#\n\t\t\t *  @name startOffset\n\t\t\t *  @private\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'startOffset', {\n\t\t        get: function () {\n\t\t            return this._startOffset;\n\t\t        },\n\t\t        set: function (offset) {\n\t\t            this._startOffset = offset;\n\t\t            this._forEach(function (event) {\n\t\t                event.startOffset += this._startOffset;\n\t\t            });\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Stop the part at the given time.\n\t\t\t *  @param  {TimelinePosition}  time  When to stop the part.\n\t\t\t *  @return  {Tone.Part}  this\n\t\t\t */\n\t\t    Tone.Part.prototype.stop = function (time) {\n\t\t        var ticks = this.toTicks(time);\n\t\t        this._state.cancel(ticks);\n\t\t        this._state.setStateAtTime(Tone.State.Stopped, ticks);\n\t\t        this._forEach(function (event) {\n\t\t            event.stop(time);\n\t\t        });\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Get/Set an Event's value at the given time. \n\t\t\t *  If a value is passed in and no event exists at\n\t\t\t *  the given time, one will be created with that value. \n\t\t\t *  If two events are at the same time, the first one will\n\t\t\t *  be returned.\n\t\t\t *  @example\n\t\t\t * part.at(\"1m\"); //returns the part at the first measure\n\t\t\t *\n\t\t\t * part.at(\"2m\", \"C2\"); //set the value at \"2m\" to C2. \n\t\t\t * //if an event didn't exist at that time, it will be created.\n\t\t\t *  @param {TransportTime} time The time of the event to get or set.\n\t\t\t *  @param {*=} value If a value is passed in, the value of the\n\t\t\t *                    event at the given time will be set to it.\n\t\t\t *  @return {Tone.Event} the event at the time\n\t\t\t */\n\t\t    Tone.Part.prototype.at = function (time, value) {\n\t\t        time = Tone.TransportTime(time);\n\t\t        var tickTime = Tone.Time(1, 'i').toSeconds();\n\t\t        for (var i = 0; i < this._events.length; i++) {\n\t\t            var event = this._events[i];\n\t\t            if (Math.abs(time.toTicks() - event.startOffset) < tickTime) {\n\t\t                if (!this.isUndef(value)) {\n\t\t                    event.value = value;\n\t\t                }\n\t\t                return event;\n\t\t            }\n\t\t        }\n\t\t        //if there was no event at that time, create one\n\t\t        if (!this.isUndef(value)) {\n\t\t            this.add(time, value);\n\t\t            //return the new event\n\t\t            return this._events[this._events.length - 1];\n\t\t        } else {\n\t\t            return null;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Add a an event to the part. \n\t\t\t *  @param {Time} time The time the note should start.\n\t\t\t *                            If an object is passed in, it should\n\t\t\t *                            have a 'time' attribute and the rest\n\t\t\t *                            of the object will be used as the 'value'.\n\t\t\t *  @param  {Tone.Event|*}  value \n\t\t\t *  @returns {Tone.Part} this\n\t\t\t *  @example\n\t\t\t * part.add(\"1m\", \"C#+11\");\n\t\t\t */\n\t\t    Tone.Part.prototype.add = function (time, value) {\n\t\t        //extract the parameters\n\t\t        if (time.hasOwnProperty('time')) {\n\t\t            value = time;\n\t\t            time = value.time;\n\t\t        }\n\t\t        time = this.toTicks(time);\n\t\t        var event;\n\t\t        if (value instanceof Tone.Event) {\n\t\t            event = value;\n\t\t            event.callback = this._tick.bind(this);\n\t\t        } else {\n\t\t            event = new Tone.Event({\n\t\t                'callback': this._tick.bind(this),\n\t\t                'value': value\n\t\t            });\n\t\t        }\n\t\t        //the start offset\n\t\t        event.startOffset = time;\n\t\t        //initialize the values\n\t\t        event.set({\n\t\t            'loopEnd': this.loopEnd,\n\t\t            'loopStart': this.loopStart,\n\t\t            'loop': this.loop,\n\t\t            'humanize': this.humanize,\n\t\t            'playbackRate': this.playbackRate,\n\t\t            'probability': this.probability\n\t\t        });\n\t\t        this._events.push(event);\n\t\t        //start the note if it should be played right now\n\t\t        this._restartEvent(event);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Restart the given event\n\t\t\t *  @param  {Tone.Event}  event \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Part.prototype._restartEvent = function (event) {\n\t\t        var stateEvent = this._state.getEvent(Tone.Transport.ticks);\n\t\t        if (stateEvent && stateEvent.state === Tone.State.Started) {\n\t\t            this._startNote(event, stateEvent.time, stateEvent.offset);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove an event from the part. Will recursively iterate\n\t\t\t *  into nested parts to find the event.\n\t\t\t *  @param {Time} time The time of the event\n\t\t\t *  @param {*} value Optionally select only a specific event value\n\t\t\t *  @return  {Tone.Part}  this\n\t\t\t */\n\t\t    Tone.Part.prototype.remove = function (time, value) {\n\t\t        //extract the parameters\n\t\t        if (time.hasOwnProperty('time')) {\n\t\t            value = time;\n\t\t            time = value.time;\n\t\t        }\n\t\t        time = this.toTicks(time);\n\t\t        for (var i = this._events.length - 1; i >= 0; i--) {\n\t\t            var event = this._events[i];\n\t\t            if (event instanceof Tone.Part) {\n\t\t                event.remove(time, value);\n\t\t            } else {\n\t\t                if (event.startOffset === time) {\n\t\t                    if (this.isUndef(value) || !this.isUndef(value) && event.value === value) {\n\t\t                        this._events.splice(i, 1);\n\t\t                        event.dispose();\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove all of the notes from the group. \n\t\t\t *  @return  {Tone.Part}  this\n\t\t\t */\n\t\t    Tone.Part.prototype.removeAll = function () {\n\t\t        this._forEach(function (event) {\n\t\t            event.dispose();\n\t\t        });\n\t\t        this._events = [];\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancel scheduled state change events: i.e. \"start\" and \"stop\".\n\t\t\t *  @param {TimelinePosition} after The time after which to cancel the scheduled events.\n\t\t\t *  @return  {Tone.Part}  this\n\t\t\t */\n\t\t    Tone.Part.prototype.cancel = function (after) {\n\t\t        after = this.toTicks(after);\n\t\t        this._forEach(function (event) {\n\t\t            event.cancel(after);\n\t\t        });\n\t\t        this._state.cancel(after);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over all of the events\n\t\t\t *  @param {Function} callback\n\t\t\t *  @param {Object} ctx The context\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Part.prototype._forEach = function (callback, ctx) {\n\t\t        ctx = this.defaultArg(ctx, this);\n\t\t        for (var i = this._events.length - 1; i >= 0; i--) {\n\t\t            var e = this._events[i];\n\t\t            if (e instanceof Tone.Part) {\n\t\t                e._forEach(callback, ctx);\n\t\t            } else {\n\t\t                callback.call(ctx, e);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Set the attribute of all of the events\n\t\t\t *  @param  {String}  attr  the attribute to set\n\t\t\t *  @param  {*}  value      The value to set it to\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Part.prototype._setAll = function (attr, value) {\n\t\t        this._forEach(function (event) {\n\t\t            event[attr] = value;\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t\t *  Internal tick method\n\t\t\t *  @param  {Number}  time  The time of the event in seconds\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Part.prototype._tick = function (time, value) {\n\t\t        if (!this.mute) {\n\t\t            this.callback(time, value);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Determine if the event should be currently looping\n\t\t\t *  given the loop boundries of this Part.\n\t\t\t *  @param  {Tone.Event}  event  The event to test\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Part.prototype._testLoopBoundries = function (event) {\n\t\t        if (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd) {\n\t\t            event.cancel();\n\t\t        } else {\n\t\t            //reschedule it if it's stopped\n\t\t            if (event.state === Tone.State.Stopped) {\n\t\t                this._restartEvent(event);\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  The probability of the notes being triggered.\n\t\t\t *  @memberOf Tone.Part#\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @name probability\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'probability', {\n\t\t        get: function () {\n\t\t            return this._probability;\n\t\t        },\n\t\t        set: function (prob) {\n\t\t            this._probability = prob;\n\t\t            this._setAll('probability', prob);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  If set to true, will apply small random variation\n\t\t\t *  to the callback time. If the value is given as a time, it will randomize\n\t\t\t *  by that amount.\n\t\t\t *  @example\n\t\t\t * event.humanize = true;\n\t\t\t *  @type {Boolean|Time}\n\t\t\t *  @name humanize\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'humanize', {\n\t\t        get: function () {\n\t\t            return this._humanize;\n\t\t        },\n\t\t        set: function (variation) {\n\t\t            this._humanize = variation;\n\t\t            this._setAll('humanize', variation);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  If the part should loop or not\n\t\t\t *  between Tone.Part.loopStart and \n\t\t\t *  Tone.Part.loopEnd. An integer\n\t\t\t *  value corresponds to the number of\n\t\t\t *  loops the Part does after it starts.\n\t\t\t *  @memberOf Tone.Part#\n\t\t\t *  @type {Boolean|Positive}\n\t\t\t *  @name loop\n\t\t\t *  @example\n\t\t\t * //loop the part 8 times\n\t\t\t * part.loop = 8;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'loop', {\n\t\t        get: function () {\n\t\t            return this._loop;\n\t\t        },\n\t\t        set: function (loop) {\n\t\t            this._loop = loop;\n\t\t            this._forEach(function (event) {\n\t\t                event._loopStart = this._loopStart;\n\t\t                event._loopEnd = this._loopEnd;\n\t\t                event.loop = loop;\n\t\t                this._testLoopBoundries(event);\n\t\t            });\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The loopEnd point determines when it will \n\t\t\t *  loop if Tone.Part.loop is true.\n\t\t\t *  @memberOf Tone.Part#\n\t\t\t *  @type {TransportTime}\n\t\t\t *  @name loopEnd\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'loopEnd', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this._loopEnd, 'i').toNotation();\n\t\t        },\n\t\t        set: function (loopEnd) {\n\t\t            this._loopEnd = this.toTicks(loopEnd);\n\t\t            if (this._loop) {\n\t\t                this._forEach(function (event) {\n\t\t                    event.loopEnd = this.loopEnd;\n\t\t                    this._testLoopBoundries(event);\n\t\t                });\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The loopStart point determines when it will \n\t\t\t *  loop if Tone.Part.loop is true.\n\t\t\t *  @memberOf Tone.Part#\n\t\t\t *  @type {TransportTime}\n\t\t\t *  @name loopStart\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'loopStart', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this._loopStart, 'i').toNotation();\n\t\t        },\n\t\t        set: function (loopStart) {\n\t\t            this._loopStart = this.toTicks(loopStart);\n\t\t            if (this._loop) {\n\t\t                this._forEach(function (event) {\n\t\t                    event.loopStart = this.loopStart;\n\t\t                    this._testLoopBoundries(event);\n\t\t                });\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * \tThe playback rate of the part\n\t\t\t *  @memberOf Tone.Part#\n\t\t\t *  @type {Positive}\n\t\t\t *  @name playbackRate\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'playbackRate', {\n\t\t        get: function () {\n\t\t            return this._playbackRate;\n\t\t        },\n\t\t        set: function (rate) {\n\t\t            this._playbackRate = rate;\n\t\t            this._setAll('playbackRate', rate);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * \tThe number of scheduled notes in the part. \n\t\t\t *  @memberOf Tone.Part#\n\t\t\t *  @type {Positive}\n\t\t\t *  @name length\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'length', {\n\t\t        get: function () {\n\t\t            return this._events.length;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.Part}  this\n\t\t\t */\n\t\t    Tone.Part.prototype.dispose = function () {\n\t\t        this.removeAll();\n\t\t        this._state.dispose();\n\t\t        this._state = null;\n\t\t        this.callback = null;\n\t\t        this._events = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Part;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.Pattern arpeggiates between the given notes\n\t\t\t *         in a number of patterns. See Tone.CtrlPattern for\n\t\t\t *         a full list of patterns.\n\t\t\t *  @example\n\t\t\t * var pattern = new Tone.Pattern(function(time, note){\n\t\t\t *   //the order of the notes passed in depends on the pattern\n\t\t\t * }, [\"C2\", \"D4\", \"E5\", \"A6\"], \"upDown\");\n\t\t\t *  @extends {Tone.Loop}\n\t\t\t *  @param {Function} callback The callback to invoke with the\n\t\t\t *                             event.\n\t\t\t *  @param {Array} values The values to arpeggiate over.\n\t\t\t */\n\t\t    Tone.Pattern = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'callback',\n\t\t            'values',\n\t\t            'pattern'\n\t\t        ], Tone.Pattern.defaults);\n\t\t        Tone.Loop.call(this, options);\n\t\t        /**\n\t\t\t\t *  The pattern manager\n\t\t\t\t *  @type {Tone.CtrlPattern}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._pattern = new Tone.CtrlPattern({\n\t\t            'values': options.values,\n\t\t            'type': options.pattern,\n\t\t            'index': options.index\n\t\t        });\n\t\t    };\n\t\t    Tone.extend(Tone.Pattern, Tone.Loop);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.Pattern.defaults = {\n\t\t        'pattern': Tone.CtrlPattern.Type.Up,\n\t\t        'values': []\n\t\t    };\n\t\t    /**\n\t\t\t *  Internal function called when the notes should be called\n\t\t\t *  @param  {Number}  time  The time the event occurs\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Pattern.prototype._tick = function (time) {\n\t\t        this.callback(time, this._pattern.value);\n\t\t        this._pattern.next();\n\t\t    };\n\t\t    /**\n\t\t\t *  The current index in the values array.\n\t\t\t *  @memberOf Tone.Pattern#\n\t\t\t *  @type {Positive}\n\t\t\t *  @name index\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Pattern.prototype, 'index', {\n\t\t        get: function () {\n\t\t            return this._pattern.index;\n\t\t        },\n\t\t        set: function (i) {\n\t\t            this._pattern.index = i;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The array of events.\n\t\t\t *  @memberOf Tone.Pattern#\n\t\t\t *  @type {Array}\n\t\t\t *  @name values\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Pattern.prototype, 'values', {\n\t\t        get: function () {\n\t\t            return this._pattern.values;\n\t\t        },\n\t\t        set: function (vals) {\n\t\t            this._pattern.values = vals;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The current value of the pattern.\n\t\t\t *  @memberOf Tone.Pattern#\n\t\t\t *  @type {*}\n\t\t\t *  @name value\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Pattern.prototype, 'value', {\n\t\t        get: function () {\n\t\t            return this._pattern.value;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The pattern type. See Tone.CtrlPattern for the full list of patterns.\n\t\t\t *  @memberOf Tone.Pattern#\n\t\t\t *  @type {String}\n\t\t\t *  @name pattern\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Pattern.prototype, 'pattern', {\n\t\t        get: function () {\n\t\t            return this._pattern.type;\n\t\t        },\n\t\t        set: function (pattern) {\n\t\t            this._pattern.type = pattern;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.Pattern}  this\n\t\t\t */\n\t\t    Tone.Pattern.prototype.dispose = function () {\n\t\t        Tone.Loop.prototype.dispose.call(this);\n\t\t        this._pattern.dispose();\n\t\t        this._pattern = null;\n\t\t    };\n\t\t    return Tone.Pattern;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class A sequence is an alternate notation of a part. Instead\n\t\t\t *         of passing in an array of [time, event] pairs, pass\n\t\t\t *         in an array of events which will be spaced at the\n\t\t\t *         given subdivision. Sub-arrays will subdivide that beat\n\t\t\t *         by the number of items are in the array. \n\t\t\t *         Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)\n\t\t\t *  @param  {Function}  callback  The callback to invoke with every note\n\t\t\t *  @param  {Array}    events  The sequence\n\t\t\t *  @param  {Time} subdivision  The subdivision between which events are placed. \n\t\t\t *  @extends {Tone.Part}\n\t\t\t *  @example\n\t\t\t * var seq = new Tone.Sequence(function(time, note){\n\t\t\t * \tconsole.log(note);\n\t\t\t * //straight quater notes\n\t\t\t * }, [\"C4\", \"E4\", \"G4\", \"A4\"], \"4n\");\n\t\t\t *  @example\n\t\t\t * var seq = new Tone.Sequence(function(time, note){\n\t\t\t * \tconsole.log(note);\n\t\t\t * //subdivisions are given as subarrays\n\t\t\t * }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]]);\n\t\t\t */\n\t\t    Tone.Sequence = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'callback',\n\t\t            'events',\n\t\t            'subdivision'\n\t\t        ], Tone.Sequence.defaults);\n\t\t        //remove the events\n\t\t        var events = options.events;\n\t\t        delete options.events;\n\t\t        Tone.Part.call(this, options);\n\t\t        /**\n\t\t\t\t *  The subdivison of each note\n\t\t\t\t *  @type  {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._subdivision = this.toTicks(options.subdivision);\n\t\t        //if no time was passed in, the loop end is the end of the cycle\n\t\t        if (this.isUndef(options.loopEnd) && !this.isUndef(events)) {\n\t\t            this._loopEnd = events.length * this._subdivision;\n\t\t        }\n\t\t        //defaults to looping\n\t\t        this._loop = true;\n\t\t        //add all of the events\n\t\t        if (!this.isUndef(events)) {\n\t\t            for (var i = 0; i < events.length; i++) {\n\t\t                this.add(i, events[i]);\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.Sequence, Tone.Part);\n\t\t    /**\n\t\t\t *  The default values.\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.Sequence.defaults = { 'subdivision': '4n' };\n\t\t    /**\n\t\t\t *  The subdivision of the sequence. This can only be \n\t\t\t *  set in the constructor. The subdivision is the \n\t\t\t *  interval between successive steps. \n\t\t\t *  @type {Time}\n\t\t\t *  @memberOf Tone.Sequence#\n\t\t\t *  @name subdivision\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Sequence.prototype, 'subdivision', {\n\t\t        get: function () {\n\t\t            return Tone.Time(this._subdivision, 'i').toNotation();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Get/Set an index of the sequence. If the index contains a subarray, \n\t\t\t *  a Tone.Sequence representing that sub-array will be returned. \n\t\t\t *  @example\n\t\t\t * var sequence = new Tone.Sequence(playNote, [\"E4\", \"C4\", \"F#4\", [\"A4\", \"Bb3\"]])\n\t\t\t * sequence.at(0)// => returns \"E4\"\n\t\t\t * //set a value\n\t\t\t * sequence.at(0, \"G3\");\n\t\t\t * //get a nested sequence\n\t\t\t * sequence.at(3).at(1)// => returns \"Bb3\"\n\t\t\t * @param {Positive} index The index to get or set\n\t\t\t * @param {*} value Optionally pass in the value to set at the given index.\n\t\t\t */\n\t\t    Tone.Sequence.prototype.at = function (index, value) {\n\t\t        //if the value is an array, \n\t\t        if (this.isArray(value)) {\n\t\t            //remove the current event at that index\n\t\t            this.remove(index);\n\t\t        }\n\t\t        //call the parent's method\n\t\t        return Tone.Part.prototype.at.call(this, this._indexTime(index), value);\n\t\t    };\n\t\t    /**\n\t\t\t *  Add an event at an index, if there's already something\n\t\t\t *  at that index, overwrite it. If `value` is an array, \n\t\t\t *  it will be parsed as a subsequence.\n\t\t\t *  @param {Number} index The index to add the event to\n\t\t\t *  @param {*} value The value to add at that index\n\t\t\t *  @returns {Tone.Sequence} this\n\t\t\t */\n\t\t    Tone.Sequence.prototype.add = function (index, value) {\n\t\t        if (value === null) {\n\t\t            return this;\n\t\t        }\n\t\t        if (this.isArray(value)) {\n\t\t            //make a subsequence and add that to the sequence\n\t\t            var subSubdivision = Math.round(this._subdivision / value.length);\n\t\t            value = new Tone.Sequence(this._tick.bind(this), value, Tone.Time(subSubdivision, 'i'));\n\t\t        }\n\t\t        Tone.Part.prototype.add.call(this, this._indexTime(index), value);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove a value from the sequence by index\n\t\t\t *  @param {Number} index The index of the event to remove\n\t\t\t *  @returns {Tone.Sequence} this\n\t\t\t */\n\t\t    Tone.Sequence.prototype.remove = function (index, value) {\n\t\t        Tone.Part.prototype.remove.call(this, this._indexTime(index), value);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the time of the index given the Sequence's subdivision\n\t\t\t *  @param  {Number}  index \n\t\t\t *  @return  {Time}  The time of that index\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Sequence.prototype._indexTime = function (index) {\n\t\t        if (index instanceof Tone.TransportTime) {\n\t\t            return index;\n\t\t        } else {\n\t\t            return Tone.TransportTime(index * this._subdivision + this.startOffset, 'i');\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return {Tone.Sequence} this\n\t\t\t */\n\t\t    Tone.Sequence.prototype.dispose = function () {\n\t\t        Tone.Part.prototype.dispose.call(this);\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Sequence;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.PulseOscillator is a pulse oscillator with control over pulse width,\n\t\t\t *         also known as the duty cycle. At 50% duty cycle (width = 0.5) the wave is \n\t\t\t *         a square and only odd-numbered harmonics are present. At all other widths \n\t\t\t *         even-numbered harmonics are present. Read more \n\t\t\t *         [here](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Oscillator}\n\t\t\t *  @param {Frequency} [frequency] The frequency of the oscillator\n\t\t\t *  @param {NormalRange} [width] The width of the pulse\n\t\t\t *  @example\n\t\t\t * var pulse = new Tone.PulseOscillator(\"E5\", 0.4).toMaster().start();\n\t\t\t */\n\t\t    Tone.PulseOscillator = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'width'\n\t\t        ], Tone.Oscillator.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  The width of the pulse. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  gate the width amount\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._widthGate = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  the sawtooth oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sawtooth = new Tone.Oscillator({\n\t\t            frequency: options.frequency,\n\t\t            detune: options.detune,\n\t\t            type: 'sawtooth',\n\t\t            phase: options.phase\n\t\t        });\n\t\t        /**\n\t\t\t\t *  The frequency control.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = this._sawtooth.frequency;\n\t\t        /**\n\t\t\t\t *  The detune in cents. \n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = this._sawtooth.detune;\n\t\t        /**\n\t\t\t\t *  Threshold the signal to turn it into a square\n\t\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._thresh = new Tone.WaveShaper(function (val) {\n\t\t            if (val < 0) {\n\t\t                return -1;\n\t\t            } else {\n\t\t                return 1;\n\t\t            }\n\t\t        });\n\t\t        //connections\n\t\t        this._sawtooth.chain(this._thresh, this.output);\n\t\t        this.width.chain(this._widthGate, this._thresh);\n\t\t        this._readOnly([\n\t\t            'width',\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.PulseOscillator, Tone.Oscillator);\n\t\t    /**\n\t\t\t *  The default parameters.\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.PulseOscillator.defaults = {\n\t\t        'frequency': 440,\n\t\t        'detune': 0,\n\t\t        'phase': 0,\n\t\t        'width': 0.2\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param  {Time} time \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.PulseOscillator.prototype._start = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._sawtooth.start(time);\n\t\t        this._widthGate.gain.setValueAtTime(1, time);\n\t\t    };\n\t\t    /**\n\t\t\t *  stop the oscillator\n\t\t\t *  @param  {Time} time \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.PulseOscillator.prototype._stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._sawtooth.stop(time);\n\t\t        //the width is still connected to the output. \n\t\t        //that needs to be stopped also\n\t\t        this._widthGate.gain.setValueAtTime(0, time);\n\t\t    };\n\t\t    /**\n\t\t\t * The phase of the oscillator in degrees.\n\t\t\t * @memberOf Tone.PulseOscillator#\n\t\t\t * @type {Degrees}\n\t\t\t * @name phase\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._sawtooth.phase;\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._sawtooth.phase = phase;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The type of the oscillator. Always returns \"pulse\".\n\t\t\t * @readOnly\n\t\t\t * @memberOf Tone.PulseOscillator#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return 'pulse';\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The partials of the waveform. Cannot set partials for this waveform type\n\t\t\t * @memberOf Tone.PulseOscillator#\n\t\t\t * @type {Array}\n\t\t\t * @name partials\n\t\t\t * @private\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'partials', {\n\t\t        get: function () {\n\t\t            return [];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up method.\n\t\t\t *  @return {Tone.PulseOscillator} this\n\t\t\t */\n\t\t    Tone.PulseOscillator.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this._sawtooth.dispose();\n\t\t        this._sawtooth = null;\n\t\t        this._writable([\n\t\t            'width',\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t        this.width.dispose();\n\t\t        this.width = null;\n\t\t        this._widthGate.dispose();\n\t\t        this._widthGate = null;\n\t\t        this._thresh.dispose();\n\t\t        this._thresh = null;\n\t\t        this.frequency = null;\n\t\t        this.detune = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.PulseOscillator;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.PWMOscillator modulates the width of a Tone.PulseOscillator \n\t\t\t *         at the modulationFrequency. This has the effect of continuously\n\t\t\t *         changing the timbre of the oscillator by altering the harmonics \n\t\t\t *         generated.\n\t\t\t *\n\t\t\t *  @extends {Tone.Oscillator}\n\t\t\t *  @constructor\n\t\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t\t *  @param {Frequency} modulationFrequency The modulation frequency of the width of the pulse. \n\t\t\t *  @example\n\t\t\t *  var pwm = new Tone.PWMOscillator(\"Ab3\", 0.3).toMaster().start();\n\t\t\t */\n\t\t    Tone.PWMOscillator = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'modulationFrequency'\n\t\t        ], Tone.PWMOscillator.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  the pulse oscillator\n\t\t\t\t *  @type {Tone.PulseOscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._pulse = new Tone.PulseOscillator(options.modulationFrequency);\n\t\t        //change the pulse oscillator type\n\t\t        this._pulse._sawtooth.type = 'sine';\n\t\t        /**\n\t\t\t\t *  the modulator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulator = new Tone.Oscillator({\n\t\t            'frequency': options.frequency,\n\t\t            'detune': options.detune,\n\t\t            'phase': options.phase\n\t\t        });\n\t\t        /**\n\t\t\t\t *  Scale the oscillator so it doesn't go silent \n\t\t\t\t *  at the extreme values.\n\t\t\t\t *  @type {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scale = new Tone.Multiply(2);\n\t\t        /**\n\t\t\t\t *  The frequency control.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = this._modulator.frequency;\n\t\t        /**\n\t\t\t\t *  The detune of the oscillator.\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = this._modulator.detune;\n\t\t        /**\n\t\t\t\t *  The modulation rate of the oscillator. \n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.modulationFrequency = this._pulse.frequency;\n\t\t        //connections\n\t\t        this._modulator.chain(this._scale, this._pulse.width);\n\t\t        this._pulse.connect(this.output);\n\t\t        this._readOnly([\n\t\t            'modulationFrequency',\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.PWMOscillator, Tone.Oscillator);\n\t\t    /**\n\t\t\t *  default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.PWMOscillator.defaults = {\n\t\t        'frequency': 440,\n\t\t        'detune': 0,\n\t\t        'phase': 0,\n\t\t        'modulationFrequency': 0.4\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param  {Time} [time=now]\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.PWMOscillator.prototype._start = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._modulator.start(time);\n\t\t        this._pulse.start(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  stop the oscillator\n\t\t\t *  @param  {Time} time (optional) timing parameter\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.PWMOscillator.prototype._stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._modulator.stop(time);\n\t\t        this._pulse.stop(time);\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the oscillator. Always returns \"pwm\".\n\t\t\t * @readOnly\n\t\t\t * @memberOf Tone.PWMOscillator#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return 'pwm';\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The partials of the waveform. Cannot set partials for this waveform type\n\t\t\t * @memberOf Tone.PWMOscillator#\n\t\t\t * @type {Array}\n\t\t\t * @name partials\n\t\t\t * @private\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'partials', {\n\t\t        get: function () {\n\t\t            return [];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The phase of the oscillator in degrees.\n\t\t\t * @memberOf Tone.PWMOscillator#\n\t\t\t * @type {number}\n\t\t\t * @name phase\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._modulator.phase;\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._modulator.phase = phase;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return {Tone.PWMOscillator} this\n\t\t\t */\n\t\t    Tone.PWMOscillator.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this._pulse.dispose();\n\t\t        this._pulse = null;\n\t\t        this._scale.dispose();\n\t\t        this._scale = null;\n\t\t        this._modulator.dispose();\n\t\t        this._modulator = null;\n\t\t        this._writable([\n\t\t            'modulationFrequency',\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t        this.frequency = null;\n\t\t        this.detune = null;\n\t\t        this.modulationFrequency = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.PWMOscillator;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.FMOscillator \n\t\t\t *\n\t\t\t *  @extends {Tone.Oscillator}\n\t\t\t *  @constructor\n\t\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t\t *  @example\n\t\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t\t * var fmOsc = new Tone.FMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t\t */\n\t\t    Tone.FMOscillator = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'type',\n\t\t            'modulationType'\n\t\t        ], Tone.FMOscillator.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  The carrier oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._carrier = new Tone.Oscillator(options.frequency, options.type);\n\t\t        /**\n\t\t\t\t *  The oscillator's frequency\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The detune control signal.\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = this._carrier.detune;\n\t\t        this.detune.value = options.detune;\n\t\t        /**\n\t\t\t\t *  The modulation index which is in essence the depth or amount of the modulation. In other terms it is the \n\t\t\t\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t\t\t *  modulating signal (ma) -- as in ma/mf. \n\t\t\t\t *\t@type {Positive}\n\t\t\t\t *\t@signal\n\t\t\t\t */\n\t\t        this.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\t\t        this.modulationIndex.units = Tone.Type.Positive;\n\t\t        /**\n\t\t\t\t *  The modulating oscillator\n\t\t\t\t *  @type  {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\t\t        /**\n\t\t\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t\t\t *  Harmonicity = 2 means a change of an octave. \n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t *  @example\n\t\t\t\t * //pitch the modulator an octave below carrier\n\t\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t\t */\n\t\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t\t        this.harmonicity.units = Tone.Type.Positive;\n\t\t        /**\n\t\t\t\t *  the node where the modulation happens\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulationNode = new Tone.Gain(0);\n\t\t        //connections\n\t\t        this.frequency.connect(this._carrier.frequency);\n\t\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\t        this.frequency.chain(this.modulationIndex, this._modulationNode);\n\t\t        this._modulator.connect(this._modulationNode.gain);\n\t\t        this._modulationNode.connect(this._carrier.frequency);\n\t\t        this._carrier.connect(this.output);\n\t\t        this.detune.connect(this._modulator.detune);\n\t\t        this.phase = options.phase;\n\t\t        this._readOnly([\n\t\t            'modulationIndex',\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'harmonicity'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.FMOscillator, Tone.Oscillator);\n\t\t    /**\n\t\t\t *  default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.FMOscillator.defaults = {\n\t\t        'frequency': 440,\n\t\t        'detune': 0,\n\t\t        'phase': 0,\n\t\t        'modulationIndex': 2,\n\t\t        'modulationType': 'square',\n\t\t        'harmonicity': 1\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param  {Time} [time=now]\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.FMOscillator.prototype._start = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._modulator.start(time);\n\t\t        this._carrier.start(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  stop the oscillator\n\t\t\t *  @param  {Time} time (optional) timing parameter\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.FMOscillator.prototype._stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._modulator.stop(time);\n\t\t        this._carrier.stop(time);\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the carrier oscillator\n\t\t\t * @memberOf Tone.FMOscillator#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FMOscillator.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._carrier.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._carrier.type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The type of the modulator oscillator\n\t\t\t * @memberOf Tone.FMOscillator#\n\t\t\t * @type {String}\n\t\t\t * @name modulationType\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FMOscillator.prototype, 'modulationType', {\n\t\t        get: function () {\n\t\t            return this._modulator.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._modulator.type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The phase of the oscillator in degrees.\n\t\t\t * @memberOf Tone.FMOscillator#\n\t\t\t * @type {number}\n\t\t\t * @name phase\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FMOscillator.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._carrier.phase;\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._carrier.phase = phase;\n\t\t            this._modulator.phase = phase;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The partials of the carrier waveform. A partial represents \n\t\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t\t * fundamental frequency, the second is the octave and so on\n\t\t\t * following the harmonic series. \n\t\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t\t * The value is an empty array when the type is not \"custom\". \n\t\t\t * @memberOf Tone.FMOscillator#\n\t\t\t * @type {Array}\n\t\t\t * @name partials\n\t\t\t * @example\n\t\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FMOscillator.prototype, 'partials', {\n\t\t        get: function () {\n\t\t            return this._carrier.partials;\n\t\t        },\n\t\t        set: function (partials) {\n\t\t            this._carrier.partials = partials;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return {Tone.FMOscillator} this\n\t\t\t */\n\t\t    Tone.FMOscillator.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'modulationIndex',\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'harmonicity'\n\t\t        ]);\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this.detune = null;\n\t\t        this.harmonicity.dispose();\n\t\t        this.harmonicity = null;\n\t\t        this._carrier.dispose();\n\t\t        this._carrier = null;\n\t\t        this._modulator.dispose();\n\t\t        this._modulator = null;\n\t\t        this._modulationNode.dispose();\n\t\t        this._modulationNode = null;\n\t\t        this.modulationIndex.dispose();\n\t\t        this.modulationIndex = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.FMOscillator;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.AMOscillator \n\t\t\t *\n\t\t\t *  @extends {Tone.Oscillator}\n\t\t\t *  @constructor\n\t\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t\t *  @example\n\t\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t\t * var fmOsc = new Tone.AMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t\t */\n\t\t    Tone.AMOscillator = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'type',\n\t\t            'modulationType'\n\t\t        ], Tone.AMOscillator.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  The carrier oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._carrier = new Tone.Oscillator(options.frequency, options.type);\n\t\t        /**\n\t\t\t\t *  The oscillator's frequency\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = this._carrier.frequency;\n\t\t        /**\n\t\t\t\t *  The detune control signal.\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = this._carrier.detune;\n\t\t        this.detune.value = options.detune;\n\t\t        /**\n\t\t\t\t *  The modulating oscillator\n\t\t\t\t *  @type  {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\t\t        /**\n\t\t\t\t *  convert the -1,1 output to 0,1\n\t\t\t\t *  @type {Tone.AudioToGain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulationScale = new Tone.AudioToGain();\n\t\t        /**\n\t\t\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t\t\t *  Harmonicity = 2 means a change of an octave. \n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t *  @example\n\t\t\t\t * //pitch the modulator an octave below carrier\n\t\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t\t */\n\t\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t\t        this.harmonicity.units = Tone.Type.Positive;\n\t\t        /**\n\t\t\t\t *  the node where the modulation happens\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulationNode = new Tone.Gain(0);\n\t\t        //connections\n\t\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\t        this.detune.connect(this._modulator.detune);\n\t\t        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t\t        this._carrier.chain(this._modulationNode, this.output);\n\t\t        this.phase = options.phase;\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'harmonicity'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.AMOscillator, Tone.Oscillator);\n\t\t    /**\n\t\t\t *  default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.AMOscillator.defaults = {\n\t\t        'frequency': 440,\n\t\t        'detune': 0,\n\t\t        'phase': 0,\n\t\t        'modulationType': 'square',\n\t\t        'harmonicity': 1\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param  {Time} [time=now]\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.AMOscillator.prototype._start = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._modulator.start(time);\n\t\t        this._carrier.start(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  stop the oscillator\n\t\t\t *  @param  {Time} time (optional) timing parameter\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.AMOscillator.prototype._stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._modulator.stop(time);\n\t\t        this._carrier.stop(time);\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the carrier oscillator\n\t\t\t * @memberOf Tone.AMOscillator#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AMOscillator.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._carrier.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._carrier.type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The type of the modulator oscillator\n\t\t\t * @memberOf Tone.AMOscillator#\n\t\t\t * @type {string}\n\t\t\t * @name modulationType\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AMOscillator.prototype, 'modulationType', {\n\t\t        get: function () {\n\t\t            return this._modulator.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._modulator.type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The phase of the oscillator in degrees.\n\t\t\t * @memberOf Tone.AMOscillator#\n\t\t\t * @type {number}\n\t\t\t * @name phase\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AMOscillator.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._carrier.phase;\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._carrier.phase = phase;\n\t\t            this._modulator.phase = phase;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The partials of the carrier waveform. A partial represents \n\t\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t\t * fundamental frequency, the second is the octave and so on\n\t\t\t * following the harmonic series. \n\t\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t\t * The value is an empty array when the type is not \"custom\". \n\t\t\t * @memberOf Tone.AMOscillator#\n\t\t\t * @type {Array}\n\t\t\t * @name partials\n\t\t\t * @example\n\t\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AMOscillator.prototype, 'partials', {\n\t\t        get: function () {\n\t\t            return this._carrier.partials;\n\t\t        },\n\t\t        set: function (partials) {\n\t\t            this._carrier.partials = partials;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return {Tone.AMOscillator} this\n\t\t\t */\n\t\t    Tone.AMOscillator.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'harmonicity'\n\t\t        ]);\n\t\t        this.frequency = null;\n\t\t        this.detune = null;\n\t\t        this.harmonicity.dispose();\n\t\t        this.harmonicity = null;\n\t\t        this._carrier.dispose();\n\t\t        this._carrier = null;\n\t\t        this._modulator.dispose();\n\t\t        this._modulator = null;\n\t\t        this._modulationNode.dispose();\n\t\t        this._modulationNode = null;\n\t\t        this._modulationScale.dispose();\n\t\t        this._modulationScale = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.AMOscillator;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.FatOscillator \n\t\t\t *\n\t\t\t *  @extends {Tone.Oscillator}\n\t\t\t *  @constructor\n\t\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t\t *  @example\n\t\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t\t * var fmOsc = new Tone.FatOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t\t */\n\t\t    Tone.FatOscillator = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'type',\n\t\t            'spread'\n\t\t        ], Tone.FatOscillator.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  The oscillator's frequency\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The detune control signal.\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t\t        /**\n\t\t\t\t *  The array of oscillators\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._oscillators = [];\n\t\t        /**\n\t\t\t\t *  The total spread of the oscillators\n\t\t\t\t *  @type  {Cents}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._spread = options.spread;\n\t\t        /**\n\t\t\t\t *  The type of the oscillator\n\t\t\t\t *  @type {String}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._type = options.type;\n\t\t        /**\n\t\t\t\t *  The phase of the oscillators\n\t\t\t\t *  @type {Degrees}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._phase = options.phase;\n\t\t        /**\n\t\t\t\t *  The partials array\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._partials = this.defaultArg(options.partials, []);\n\t\t        //set the count initially\n\t\t        this.count = options.count;\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.FatOscillator, Tone.Oscillator);\n\t\t    /**\n\t\t\t *  default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.FatOscillator.defaults = {\n\t\t        'frequency': 440,\n\t\t        'detune': 0,\n\t\t        'phase': 0,\n\t\t        'spread': 20,\n\t\t        'count': 3,\n\t\t        'type': 'sawtooth'\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param  {Time} [time=now]\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.FatOscillator.prototype._start = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._forEach(function (osc) {\n\t\t            osc.start(time);\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t\t *  stop the oscillator\n\t\t\t *  @param  {Time} time (optional) timing parameter\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.FatOscillator.prototype._stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._forEach(function (osc) {\n\t\t            osc.stop(time);\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over all of the oscillators\n\t\t\t *  @param  {Function}  iterator  The iterator function\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.FatOscillator.prototype._forEach = function (iterator) {\n\t\t        for (var i = 0; i < this._oscillators.length; i++) {\n\t\t            iterator.call(this, this._oscillators[i], i);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the carrier oscillator\n\t\t\t * @memberOf Tone.FatOscillator#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FatOscillator.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._type = type;\n\t\t            this._forEach(function (osc) {\n\t\t                osc.type = type;\n\t\t            });\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The detune spread between the oscillators. If \"count\" is\n\t\t\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t\t\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t\t\t * for a total detune spread of 40 cents.\n\t\t\t * @memberOf Tone.FatOscillator#\n\t\t\t * @type {Cents}\n\t\t\t * @name spread\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FatOscillator.prototype, 'spread', {\n\t\t        get: function () {\n\t\t            return this._spread;\n\t\t        },\n\t\t        set: function (spread) {\n\t\t            this._spread = spread;\n\t\t            if (this._oscillators.length > 1) {\n\t\t                var start = -spread / 2;\n\t\t                var step = spread / (this._oscillators.length - 1);\n\t\t                this._forEach(function (osc, i) {\n\t\t                    osc.detune.value = start + step * i;\n\t\t                });\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The number of detuned oscillators\n\t\t\t * @memberOf Tone.FatOscillator#\n\t\t\t * @type {Number}\n\t\t\t * @name count\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FatOscillator.prototype, 'count', {\n\t\t        get: function () {\n\t\t            return this._oscillators.length;\n\t\t        },\n\t\t        set: function (count) {\n\t\t            count = Math.max(count, 1);\n\t\t            if (this._oscillators.length !== count) {\n\t\t                // var partials = this.partials;\n\t\t                // var type = this.type;\n\t\t                //dispose the previous oscillators\n\t\t                this._forEach(function (osc) {\n\t\t                    osc.dispose();\n\t\t                });\n\t\t                this._oscillators = [];\n\t\t                for (var i = 0; i < count; i++) {\n\t\t                    var osc = new Tone.Oscillator();\n\t\t                    if (this.type === Tone.Oscillator.Type.Custom) {\n\t\t                        osc.partials = this._partials;\n\t\t                    } else {\n\t\t                        osc.type = this._type;\n\t\t                    }\n\t\t                    osc.phase = this._phase;\n\t\t                    osc.volume.value = -6 - count;\n\t\t                    this.frequency.connect(osc.frequency);\n\t\t                    this.detune.connect(osc.detune);\n\t\t                    osc.connect(this.output);\n\t\t                    this._oscillators[i] = osc;\n\t\t                }\n\t\t                //set the spread\n\t\t                this.spread = this._spread;\n\t\t                if (this.state === Tone.State.Started) {\n\t\t                    this._forEach(function (osc) {\n\t\t                        osc.start();\n\t\t                    });\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The phase of the oscillator in degrees.\n\t\t\t * @memberOf Tone.FatOscillator#\n\t\t\t * @type {Number}\n\t\t\t * @name phase\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FatOscillator.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._phase;\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._phase = phase;\n\t\t            this._forEach(function (osc) {\n\t\t                osc.phase = phase;\n\t\t            });\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The partials of the carrier waveform. A partial represents \n\t\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t\t * fundamental frequency, the second is the octave and so on\n\t\t\t * following the harmonic series. \n\t\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t\t * The value is an empty array when the type is not \"custom\". \n\t\t\t * @memberOf Tone.FatOscillator#\n\t\t\t * @type {Array}\n\t\t\t * @name partials\n\t\t\t * @example\n\t\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FatOscillator.prototype, 'partials', {\n\t\t        get: function () {\n\t\t            return this._partials;\n\t\t        },\n\t\t        set: function (partials) {\n\t\t            this._partials = partials;\n\t\t            this._type = Tone.Oscillator.Type.Custom;\n\t\t            this._forEach(function (osc) {\n\t\t                osc.partials = partials;\n\t\t            });\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return {Tone.FatOscillator} this\n\t\t\t */\n\t\t    Tone.FatOscillator.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this.detune.dispose();\n\t\t        this.detune = null;\n\t\t        this._forEach(function (osc) {\n\t\t            osc.dispose();\n\t\t        });\n\t\t        this._oscillators = null;\n\t\t        this._partials = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.FatOscillator;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.OmniOscillator aggregates Tone.Oscillator, Tone.PulseOscillator,\n\t\t\t *         Tone.PWMOscillator, Tone.FMOscillator, Tone.AMOscillator, and Tone.FatOscillator\n\t\t\t *         into one class. The oscillator class can be changed by setting the `type`. \n\t\t\t *         `omniOsc.type = \"pwm\"` will set it to the Tone.PWMOscillator. Prefixing\n\t\t\t *         any of the basic types (\"sine\", \"square4\", etc.) with \"fm\", \"am\", or \"fat\"\n\t\t\t *         will use the FMOscillator, AMOscillator or FatOscillator respectively. \n\t\t\t *         For example: `omniOsc.type = \"fatsawtooth\"` will create set the oscillator\n\t\t\t *         to a FatOscillator of type \"sawtooth\". \n\t\t\t *\n\t\t\t *  @extends {Tone.Oscillator}\n\t\t\t *  @constructor\n\t\t\t *  @param {Frequency} frequency The initial frequency of the oscillator.\n\t\t\t *  @param {String} type The type of the oscillator.\n\t\t\t *  @example\n\t\t\t *  var omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\");\n\t\t\t */\n\t\t    Tone.OmniOscillator = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'type'\n\t\t        ], Tone.OmniOscillator.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  The frequency control.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The detune control\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t\t        /**\n\t\t\t\t *  the type of the oscillator source\n\t\t\t\t *  @type {String}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sourceType = undefined;\n\t\t        /**\n\t\t\t\t *  the oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._oscillator = null;\n\t\t        //set the oscillator\n\t\t        this.type = options.type;\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t        //set the options\n\t\t        this.set(options);\n\t\t    };\n\t\t    Tone.extend(Tone.OmniOscillator, Tone.Oscillator);\n\t\t    /**\n\t\t\t *  default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.OmniOscillator.defaults = {\n\t\t        'frequency': 440,\n\t\t        'detune': 0,\n\t\t        'type': 'sine',\n\t\t        'phase': 0\n\t\t    };\n\t\t    /**\n\t\t\t *  @enum {String}\n\t\t\t *  @private\n\t\t\t */\n\t\t    var OmniOscType = {\n\t\t        Pulse: 'PulseOscillator',\n\t\t        PWM: 'PWMOscillator',\n\t\t        Osc: 'Oscillator',\n\t\t        FM: 'FMOscillator',\n\t\t        AM: 'AMOscillator',\n\t\t        Fat: 'FatOscillator'\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param {Time} [time=now] the time to start the oscillator\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.OmniOscillator.prototype._start = function (time) {\n\t\t        this._oscillator.start(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param {Time} [time=now] the time to start the oscillator\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.OmniOscillator.prototype._stop = function (time) {\n\t\t        this._oscillator.stop(time);\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n\t\t\t * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n\t\t\t * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n\t\t\t * oscillator's class are accessible when the oscillator is set to that type, but throws an error \n\t\t\t * when it's not.\n\t\t\t * \n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {String}\n\t\t\t * @name type\n\t\t\t * @example\n\t\t\t * omniOsc.type = \"pwm\";\n\t\t\t * //modulationFrequency is parameter which is available\n\t\t\t * //only when the type is \"pwm\". \n\t\t\t * omniOsc.modulationFrequency.value = 0.5;\n\t\t\t * @example\n\t\t\t * //an square wave frequency modulated by a sawtooth\n\t\t\t * omniOsc.type = \"fmsquare\";\n\t\t\t * omniOsc.modulationType = \"sawtooth\";\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'type', {\n\t\t        get: function () {\n\t\t            var prefix = '';\n\t\t            if (this._sourceType === OmniOscType.FM) {\n\t\t                prefix = 'fm';\n\t\t            } else if (this._sourceType === OmniOscType.AM) {\n\t\t                prefix = 'am';\n\t\t            } else if (this._sourceType === OmniOscType.Fat) {\n\t\t                prefix = 'fat';\n\t\t            }\n\t\t            return prefix + this._oscillator.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            if (type.substr(0, 2) === 'fm') {\n\t\t                this._createNewOscillator(OmniOscType.FM);\n\t\t                this._oscillator.type = type.substr(2);\n\t\t            } else if (type.substr(0, 2) === 'am') {\n\t\t                this._createNewOscillator(OmniOscType.AM);\n\t\t                this._oscillator.type = type.substr(2);\n\t\t            } else if (type.substr(0, 3) === 'fat') {\n\t\t                this._createNewOscillator(OmniOscType.Fat);\n\t\t                this._oscillator.type = type.substr(3);\n\t\t            } else if (type === 'pwm') {\n\t\t                this._createNewOscillator(OmniOscType.PWM);\n\t\t            } else if (type === 'pulse') {\n\t\t                this._createNewOscillator(OmniOscType.Pulse);\n\t\t            } else {\n\t\t                this._createNewOscillator(OmniOscType.Osc);\n\t\t                this._oscillator.type = type;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The partials of the waveform. A partial represents \n\t\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t\t * fundamental frequency, the second is the octave and so on\n\t\t\t * following the harmonic series. \n\t\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t\t * The value is an empty array when the type is not \"custom\". \n\t\t\t * This is not available on \"pwm\" and \"pulse\" oscillator types.\n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {Array}\n\t\t\t * @name partials\n\t\t\t * @example\n\t\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'partials', {\n\t\t        get: function () {\n\t\t            return this._oscillator.partials;\n\t\t        },\n\t\t        set: function (partials) {\n\t\t            this._oscillator.partials = partials;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Set a member/attribute of the oscillator. \n\t\t\t *  @param {Object|String} params\n\t\t\t *  @param {number=} value\n\t\t\t *  @param {Time=} rampTime\n\t\t\t *  @returns {Tone.OmniOscillator} this\n\t\t\t */\n\t\t    Tone.OmniOscillator.prototype.set = function (params, value) {\n\t\t        //make sure the type is set first\n\t\t        if (params === 'type') {\n\t\t            this.type = value;\n\t\t        } else if (this.isObject(params) && params.hasOwnProperty('type')) {\n\t\t            this.type = params.type;\n\t\t        }\n\t\t        //then set the rest\n\t\t        Tone.prototype.set.apply(this, arguments);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  connect the oscillator to the frequency and detune signals\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.OmniOscillator.prototype._createNewOscillator = function (oscType) {\n\t\t        if (oscType !== this._sourceType) {\n\t\t            this._sourceType = oscType;\n\t\t            var OscillatorConstructor = Tone[oscType];\n\t\t            //short delay to avoid clicks on the change\n\t\t            var now = this.now() + this.blockTime;\n\t\t            if (this._oscillator !== null) {\n\t\t                var oldOsc = this._oscillator;\n\t\t                oldOsc.stop(now);\n\t\t                //dispose the old one\n\t\t                setTimeout(function () {\n\t\t                    oldOsc.dispose();\n\t\t                    oldOsc = null;\n\t\t                }, this.blockTime * 1000);\n\t\t            }\n\t\t            this._oscillator = new OscillatorConstructor();\n\t\t            this.frequency.connect(this._oscillator.frequency);\n\t\t            this.detune.connect(this._oscillator.detune);\n\t\t            this._oscillator.connect(this.output);\n\t\t            if (this.state === Tone.State.Started) {\n\t\t                this._oscillator.start(now);\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * The phase of the oscillator in degrees. \n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {Degrees}\n\t\t\t * @name phase\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._oscillator.phase;\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._oscillator.phase = phase;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The width of the oscillator (only if the oscillator is set to \"pulse\")\n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {NormalRange}\n\t\t\t * @signal\n\t\t\t * @name width\n\t\t\t * @example\n\t\t\t * var omniOsc = new Tone.OmniOscillator(440, \"pulse\");\n\t\t\t * //can access the width attribute only if type === \"pulse\"\n\t\t\t * omniOsc.width.value = 0.2; \n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'width', {\n\t\t        get: function () {\n\t\t            if (this._sourceType === OmniOscType.Pulse) {\n\t\t                return this._oscillator.width;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The number of detuned oscillators\n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {Number}\n\t\t\t * @name count\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'count', {\n\t\t        get: function () {\n\t\t            if (this._sourceType === OmniOscType.Fat) {\n\t\t                return this._oscillator.count;\n\t\t            }\n\t\t        },\n\t\t        set: function (count) {\n\t\t            if (this._sourceType === OmniOscType.Fat) {\n\t\t                this._oscillator.count = count;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The detune spread between the oscillators. If \"count\" is\n\t\t\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t\t\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t\t\t * for a total detune spread of 40 cents. See Tone.FatOscillator\n\t\t\t * for more info.\n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {Cents}\n\t\t\t * @name spread\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'spread', {\n\t\t        get: function () {\n\t\t            if (this._sourceType === OmniOscType.Fat) {\n\t\t                return this._oscillator.spread;\n\t\t            }\n\t\t        },\n\t\t        set: function (spread) {\n\t\t            if (this._sourceType === OmniOscType.Fat) {\n\t\t                this._oscillator.spread = spread;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The type of the modulator oscillator. Only if the oscillator\n\t\t\t * is set to \"am\" or \"fm\" types. see. Tone.AMOscillator or Tone.FMOscillator\n\t\t\t * for more info. \n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {String}\n\t\t\t * @name modulationType\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationType', {\n\t\t        get: function () {\n\t\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t\t                return this._oscillator.modulationType;\n\t\t            }\n\t\t        },\n\t\t        set: function (mType) {\n\t\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t\t                this._oscillator.modulationType = mType;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The modulation index which is in essence the depth or amount of the modulation. In other terms it is the \n\t\t\t * ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t\t * modulating signal (ma) -- as in ma/mf. \n\t\t\t * See Tone.FMOscillator for more info. \n\t\t\t * @type {Positive}\n\t\t\t * @signal\n\t\t\t * @name modulationIndex\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationIndex', {\n\t\t        get: function () {\n\t\t            if (this._sourceType === OmniOscType.FM) {\n\t\t                return this._oscillator.modulationIndex;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t\t *  Harmonicity = 2 means a change of an octave. See Tone.AMOscillator or Tone.FMOscillator\n\t\t\t *  for more info. \n\t\t\t *  @memberOf Tone.OmniOscillator#\n\t\t\t *  @signal\n\t\t\t *  @type {Positive}\n\t\t\t *  @name harmonicity\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'harmonicity', {\n\t\t        get: function () {\n\t\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t\t                return this._oscillator.harmonicity;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The modulationFrequency Signal of the oscillator \n\t\t\t * (only if the oscillator type is set to pwm). See \n\t\t\t * Tone.PWMOscillator for more info. \n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t * @name modulationFrequency\n\t\t\t * @example\n\t\t\t * var omniOsc = new Tone.OmniOscillator(440, \"pwm\");\n\t\t\t * //can access the modulationFrequency attribute only if type === \"pwm\"\n\t\t\t * omniOsc.modulationFrequency.value = 0.2; \n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationFrequency', {\n\t\t        get: function () {\n\t\t            if (this._sourceType === OmniOscType.PWM) {\n\t\t                return this._oscillator.modulationFrequency;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return {Tone.OmniOscillator} this\n\t\t\t */\n\t\t    Tone.OmniOscillator.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t        this.detune.dispose();\n\t\t        this.detune = null;\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this._oscillator.dispose();\n\t\t        this._oscillator = null;\n\t\t        this._sourceType = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.OmniOscillator;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Base-class for all instruments\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t */\n\t\t    Tone.Instrument = function (options) {\n\t\t        //get the defaults\n\t\t        options = this.defaultArg(options, Tone.Instrument.defaults);\n\t\t        /**\n\t\t\t\t *  The output and volume triming node\n\t\t\t\t *  @type  {Tone.Volume}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t\t        /**\n\t\t\t\t * The volume of the output in decibels.\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t * @example\n\t\t\t\t * source.volume.value = -6;\n\t\t\t\t */\n\t\t        this.volume = this._volume.volume;\n\t\t        this._readOnly('volume');\n\t\t    };\n\t\t    Tone.extend(Tone.Instrument);\n\t\t    /**\n\t\t\t *  the default attributes\n\t\t\t *  @type {object}\n\t\t\t */\n\t\t    Tone.Instrument.defaults = {\n\t\t        /** the volume of the output in decibels */\n\t\t        'volume': 0\n\t\t    };\n\t\t    /**\n\t\t\t *  @abstract\n\t\t\t *  @param {string|number} note the note to trigger\n\t\t\t *  @param {Time} [time=now] the time to trigger the ntoe\n\t\t\t *  @param {number} [velocity=1] the velocity to trigger the note\n\t\t\t */\n\t\t    Tone.Instrument.prototype.triggerAttack = Tone.noOp;\n\t\t    /**\n\t\t\t *  @abstract\n\t\t\t *  @param {Time} [time=now] when to trigger the release\n\t\t\t */\n\t\t    Tone.Instrument.prototype.triggerRelease = Tone.noOp;\n\t\t    /**\n\t\t\t *  Trigger the attack and then the release after the duration. \n\t\t\t *  @param  {Frequency} note     The note to trigger.\n\t\t\t *  @param  {Time} duration How long the note should be held for before\n\t\t\t *                          triggering the release.\n\t\t\t *  @param {Time} [time=now]  When the note should be triggered.\n\t\t\t *  @param  {NormalRange} [velocity=1] The velocity the note should be triggered at.\n\t\t\t *  @returns {Tone.Instrument} this\n\t\t\t *  @example\n\t\t\t * //trigger \"C4\" for the duration of an 8th note\n\t\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t\t */\n\t\t    Tone.Instrument.prototype.triggerAttackRelease = function (note, duration, time, velocity) {\n\t\t        if (this.isUndef(time)) {\n\t\t            time = this.now() + this.blockTime;\n\t\t        } else {\n\t\t            time = this.toSeconds(time);\n\t\t        }\n\t\t        duration = this.toSeconds(duration);\n\t\t        this.triggerAttack(note, time, velocity);\n\t\t        this.triggerRelease(time + duration);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Instrument} this\n\t\t\t */\n\t\t    Tone.Instrument.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._volume.dispose();\n\t\t        this._volume = null;\n\t\t        this._writable(['volume']);\n\t\t        this.volume = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Instrument;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  This is an abstract base class for other monophonic instruments to \n\t\t\t *          extend. IMPORTANT: It does not make any sound on its own and\n\t\t\t *          shouldn't be directly instantiated.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @abstract\n\t\t\t *  @extends {Tone.Instrument}\n\t\t\t */\n\t\t    Tone.Monophonic = function (options) {\n\t\t        //get the defaults\n\t\t        options = this.defaultArg(options, Tone.Monophonic.defaults);\n\t\t        Tone.Instrument.call(this, options);\n\t\t        /**\n\t\t\t\t *  The glide time between notes. \n\t\t\t\t *  @type {Time}\n\t\t\t\t */\n\t\t        this.portamento = options.portamento;\n\t\t    };\n\t\t    Tone.extend(Tone.Monophonic, Tone.Instrument);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Monophonic.defaults = { 'portamento': 0 };\n\t\t    /**\n\t\t\t *  Trigger the attack of the note optionally with a given velocity. \n\t\t\t *  \n\t\t\t *  \n\t\t\t *  @param  {Frequency} note     The note to trigger.\n\t\t\t *  @param  {Time} [time=now]     When the note should start.\n\t\t\t *  @param  {number} [velocity=1] velocity The velocity scaler \n\t\t\t *                                determines how \"loud\" the note \n\t\t\t *                                will be triggered.\n\t\t\t *  @returns {Tone.Monophonic} this\n\t\t\t *  @example\n\t\t\t * synth.triggerAttack(\"C4\");\n\t\t\t *  @example\n\t\t\t * //trigger the note a half second from now at half velocity\n\t\t\t * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n\t\t\t */\n\t\t    Tone.Monophonic.prototype.triggerAttack = function (note, time, velocity) {\n\t\t        if (this.isUndef(time)) {\n\t\t            time = this.now() + this.blockTime;\n\t\t        } else {\n\t\t            time = this.toSeconds(time);\n\t\t        }\n\t\t        this._triggerEnvelopeAttack(time, velocity);\n\t\t        this.setNote(note, time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the release portion of the envelope\n\t\t\t *  @param  {Time} [time=now] If no time is given, the release happens immediatly\n\t\t\t *  @returns {Tone.Monophonic} this\n\t\t\t *  @example\n\t\t\t * synth.triggerRelease();\n\t\t\t */\n\t\t    Tone.Monophonic.prototype.triggerRelease = function (time) {\n\t\t        if (this.isUndef(time)) {\n\t\t            time = this.now() + this.blockTime;\n\t\t        } else {\n\t\t            time = this.toSeconds(time);\n\t\t        }\n\t\t        this._triggerEnvelopeRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  override this method with the actual method\n\t\t\t *  @abstract\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Monophonic.prototype._triggerEnvelopeAttack = function () {\n\t\t    };\n\t\t    /**\n\t\t\t *  override this method with the actual method\n\t\t\t *  @abstract\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Monophonic.prototype._triggerEnvelopeRelease = function () {\n\t\t    };\n\t\t    /**\n\t\t\t *  Set the note at the given time. If no time is given, the note\n\t\t\t *  will set immediately. \n\t\t\t *  @param {Frequency} note The note to change to.\n\t\t\t *  @param  {Time} [time=now] The time when the note should be set. \n\t\t\t *  @returns {Tone.Monophonic} this\n\t\t\t * @example\n\t\t\t * //change to F#6 in one quarter note from now.\n\t\t\t * synth.setNote(\"F#6\", \"+4n\");\n\t\t\t * @example\n\t\t\t * //change to Bb4 right now\n\t\t\t * synth.setNote(\"Bb4\");\n\t\t\t */\n\t\t    Tone.Monophonic.prototype.setNote = function (note, time) {\n\t\t        time = this.toSeconds(time);\n\t\t        if (this.portamento > 0) {\n\t\t            var currentNote = this.frequency.value;\n\t\t            this.frequency.setValueAtTime(currentNote, time);\n\t\t            var portTime = this.toSeconds(this.portamento);\n\t\t            this.frequency.exponentialRampToValueAtTime(note, time + portTime);\n\t\t        } else {\n\t\t            this.frequency.setValueAtTime(note, time);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Monophonic;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Synth is composed simply of a Tone.OmniOscillator\n\t\t\t *          routed through a Tone.AmplitudeEnvelope. \n\t\t\t *          <img src=\"https://docs.google.com/drawings/d/1-1_0YW2Z1J2EPI36P8fNCMcZG7N1w1GZluPs4og4evo/pub?w=1163&h=231\">\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Monophonic}\n\t\t\t *  @param {Object} [options] the options available for the synth \n\t\t\t *                          see defaults below\n\t\t\t *  @example\n\t\t\t * var synth = new Tone.Synth().toMaster();\n\t\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t\t */\n\t\t    Tone.Synth = function (options) {\n\t\t        //get the defaults\n\t\t        options = this.defaultArg(options, Tone.Synth.defaults);\n\t\t        Tone.Monophonic.call(this, options);\n\t\t        /**\n\t\t\t\t *  The oscillator.\n\t\t\t\t *  @type {Tone.OmniOscillator}\n\t\t\t\t */\n\t\t        this.oscillator = new Tone.OmniOscillator(options.oscillator);\n\t\t        /**\n\t\t\t\t *  The frequency control.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = this.oscillator.frequency;\n\t\t        /**\n\t\t\t\t *  The detune control.\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = this.oscillator.detune;\n\t\t        /**\n\t\t\t\t *  The amplitude envelope.\n\t\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t\t */\n\t\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t\t        //connect the oscillators to the output\n\t\t        this.oscillator.chain(this.envelope, this.output);\n\t\t        //start the oscillators\n\t\t        this.oscillator.start();\n\t\t        this._readOnly([\n\t\t            'oscillator',\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'envelope'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.Synth, Tone.Monophonic);\n\t\t    /**\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Synth.defaults = {\n\t\t        'oscillator': { 'type': 'triangle' },\n\t\t        'envelope': {\n\t\t            'attack': 0.005,\n\t\t            'decay': 0.1,\n\t\t            'sustain': 0.3,\n\t\t            'release': 1\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  start the attack portion of the envelope\n\t\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t\t *  @param {number} [velocity=1] the velocity of the note (0-1)\n\t\t\t *  @returns {Tone.Synth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Synth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t\t        //the envelopes\n\t\t        this.envelope.triggerAttack(time, velocity);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  start the release portion of the envelope\n\t\t\t *  @param {Time} [time=now] the time the release should start\n\t\t\t *  @returns {Tone.Synth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Synth.prototype._triggerEnvelopeRelease = function (time) {\n\t\t        this.envelope.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Synth} this\n\t\t\t */\n\t\t    Tone.Synth.prototype.dispose = function () {\n\t\t        Tone.Monophonic.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'oscillator',\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'envelope'\n\t\t        ]);\n\t\t        this.oscillator.dispose();\n\t\t        this.oscillator = null;\n\t\t        this.envelope.dispose();\n\t\t        this.envelope = null;\n\t\t        this.frequency = null;\n\t\t        this.detune = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Synth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  AMSynth uses the output of one Tone.Synth to modulate the\n\t\t\t *          amplitude of another Tone.Synth. The harmonicity (the ratio between\n\t\t\t *          the two signals) affects the timbre of the output signal greatly.\n\t\t\t *          Read more about Amplitude Modulation Synthesis on \n\t\t\t *          [SoundOnSound](http://www.soundonsound.com/sos/mar00/articles/synthsecrets.htm).\n\t\t\t *          <img src=\"https://docs.google.com/drawings/d/1TQu8Ed4iFr1YTLKpB3U1_hur-UwBrh5gdBXc8BxfGKw/pub?w=1009&h=457\">\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Monophonic}\n\t\t\t *  @param {Object} [options] the options available for the synth \n\t\t\t *                            see defaults below\n\t\t\t *  @example\n\t\t\t * var synth = new Tone.AMSynth().toMaster();\n\t\t\t * synth.triggerAttackRelease(\"C4\", \"4n\");\n\t\t\t */\n\t\t    Tone.AMSynth = function (options) {\n\t\t        options = this.defaultArg(options, Tone.AMSynth.defaults);\n\t\t        Tone.Monophonic.call(this, options);\n\t\t        /**\n\t\t\t\t *  The carrier voice. \n\t\t\t\t *  @type {Tone.Synth}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._carrier = new Tone.Synth();\n\t\t        this._carrier.volume.value = -10;\n\t\t        /**\n\t\t\t\t *  The carrier's oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.oscillator = this._carrier.oscillator;\n\t\t        /**\n\t\t\t\t *  The carrier's envelope\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.envelope = this._carrier.envelope.set(options.envelope);\n\t\t        /**\n\t\t\t\t *  The modulator voice. \n\t\t\t\t *  @type {Tone.Synth}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulator = new Tone.Synth();\n\t\t        this._modulator.volume.value = -10;\n\t\t        /**\n\t\t\t\t *  The modulator's oscillator which is applied\n\t\t\t\t *  to the amplitude of the oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.modulation = this._modulator.oscillator.set(options.modulation);\n\t\t        /**\n\t\t\t\t *  The modulator's envelope\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\t\t        /**\n\t\t\t\t *  The frequency.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The detune in cents\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t\t        /**\n\t\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave. \n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t *  @example\n\t\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t\t */\n\t\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t\t        this.harmonicity.units = Tone.Type.Positive;\n\t\t        /**\n\t\t\t\t *  convert the -1,1 output to 0,1\n\t\t\t\t *  @type {Tone.AudioToGain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulationScale = new Tone.AudioToGain();\n\t\t        /**\n\t\t\t\t *  the node where the modulation happens\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulationNode = new Tone.Gain();\n\t\t        //control the two voices frequency\n\t\t        this.frequency.connect(this._carrier.frequency);\n\t\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\t        this.detune.fan(this._carrier.detune, this._modulator.detune);\n\t\t        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t\t        this._carrier.chain(this._modulationNode, this.output);\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'harmonicity',\n\t\t            'oscillator',\n\t\t            'envelope',\n\t\t            'modulation',\n\t\t            'modulationEnvelope',\n\t\t            'detune'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.AMSynth, Tone.Monophonic);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.AMSynth.defaults = {\n\t\t        'harmonicity': 3,\n\t\t        'detune': 0,\n\t\t        'oscillator': { 'type': 'sine' },\n\t\t        'envelope': {\n\t\t            'attack': 0.01,\n\t\t            'decay': 0.01,\n\t\t            'sustain': 1,\n\t\t            'release': 0.5\n\t\t        },\n\t\t        'moduation': { 'type': 'square' },\n\t\t        'modulationEnvelope': {\n\t\t            'attack': 0.5,\n\t\t            'decay': 0,\n\t\t            'sustain': 1,\n\t\t            'release': 0.5\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  trigger the attack portion of the note\n\t\t\t *  \n\t\t\t *  @param  {Time} [time=now] the time the note will occur\n\t\t\t *  @param {NormalRange} [velocity=1] the velocity of the note\n\t\t\t *  @private\n\t\t\t *  @returns {Tone.AMSynth} this\n\t\t\t */\n\t\t    Tone.AMSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t\t        //the port glide\n\t\t        time = this.toSeconds(time);\n\t\t        //the envelopes\n\t\t        this.envelope.triggerAttack(time, velocity);\n\t\t        this.modulationEnvelope.triggerAttack(time, velocity);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  trigger the release portion of the note\n\t\t\t *  \n\t\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t\t *  @private\n\t\t\t *  @returns {Tone.AMSynth} this\n\t\t\t */\n\t\t    Tone.AMSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t\t        this.envelope.triggerRelease(time);\n\t\t        this.modulationEnvelope.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.AMSynth} this\n\t\t\t */\n\t\t    Tone.AMSynth.prototype.dispose = function () {\n\t\t        Tone.Monophonic.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'harmonicity',\n\t\t            'oscillator',\n\t\t            'envelope',\n\t\t            'modulation',\n\t\t            'modulationEnvelope',\n\t\t            'detune'\n\t\t        ]);\n\t\t        this._carrier.dispose();\n\t\t        this._carrier = null;\n\t\t        this._modulator.dispose();\n\t\t        this._modulator = null;\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this.detune.dispose();\n\t\t        this.detune = null;\n\t\t        this.harmonicity.dispose();\n\t\t        this.harmonicity = null;\n\t\t        this._modulationScale.dispose();\n\t\t        this._modulationScale = null;\n\t\t        this._modulationNode.dispose();\n\t\t        this._modulationNode = null;\n\t\t        this.oscillator = null;\n\t\t        this.envelope = null;\n\t\t        this.modulationEnvelope = null;\n\t\t        this.modulation = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.AMSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.MonoSynth is composed of one oscillator, one filter, and two envelopes.\n\t\t\t *          The amplitude of the Tone.Oscillator and the cutoff frequency of the \n\t\t\t *          Tone.Filter are controlled by Tone.Envelopes. \n\t\t\t *          <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n\t\t\t *          \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Monophonic}\n\t\t\t *  @param {Object} [options] the options available for the synth \n\t\t\t *                          see defaults below\n\t\t\t *  @example\n\t\t\t * var synth = new Tone.MonoSynth({\n\t\t\t * \t\"oscillator\" : {\n\t\t\t * \t\t\"type\" : \"square\"\n\t\t\t *  },\n\t\t\t *  \"envelope\" : {\n\t\t\t *  \t\"attack\" : 0.1\n\t\t\t *  }\n\t\t\t * }).toMaster();\n\t\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t\t */\n\t\t    Tone.MonoSynth = function (options) {\n\t\t        //get the defaults\n\t\t        options = this.defaultArg(options, Tone.MonoSynth.defaults);\n\t\t        Tone.Monophonic.call(this, options);\n\t\t        /**\n\t\t\t\t *  The oscillator.\n\t\t\t\t *  @type {Tone.OmniOscillator}\n\t\t\t\t */\n\t\t        this.oscillator = new Tone.OmniOscillator(options.oscillator);\n\t\t        /**\n\t\t\t\t *  The frequency control.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = this.oscillator.frequency;\n\t\t        /**\n\t\t\t\t *  The detune control.\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = this.oscillator.detune;\n\t\t        /**\n\t\t\t\t *  The filter.\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t */\n\t\t        this.filter = new Tone.Filter(options.filter);\n\t\t        /**\n\t\t\t\t *  The filter envelope.\n\t\t\t\t *  @type {Tone.FrequencyEnvelope}\n\t\t\t\t */\n\t\t        this.filterEnvelope = new Tone.FrequencyEnvelope(options.filterEnvelope);\n\t\t        /**\n\t\t\t\t *  The amplitude envelope.\n\t\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t\t */\n\t\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t\t        //connect the oscillators to the output\n\t\t        this.oscillator.chain(this.filter, this.envelope, this.output);\n\t\t        //start the oscillators\n\t\t        this.oscillator.start();\n\t\t        //connect the filter envelope\n\t\t        this.filterEnvelope.connect(this.filter.frequency);\n\t\t        this._readOnly([\n\t\t            'oscillator',\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'filter',\n\t\t            'filterEnvelope',\n\t\t            'envelope'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.MonoSynth, Tone.Monophonic);\n\t\t    /**\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.MonoSynth.defaults = {\n\t\t        'frequency': 'C4',\n\t\t        'detune': 0,\n\t\t        'oscillator': { 'type': 'square' },\n\t\t        'filter': {\n\t\t            'Q': 6,\n\t\t            'type': 'lowpass',\n\t\t            'rolloff': -24\n\t\t        },\n\t\t        'envelope': {\n\t\t            'attack': 0.005,\n\t\t            'decay': 0.1,\n\t\t            'sustain': 0.9,\n\t\t            'release': 1\n\t\t        },\n\t\t        'filterEnvelope': {\n\t\t            'attack': 0.06,\n\t\t            'decay': 0.2,\n\t\t            'sustain': 0.5,\n\t\t            'release': 2,\n\t\t            'baseFrequency': 200,\n\t\t            'octaves': 7,\n\t\t            'exponent': 2\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  start the attack portion of the envelope\n\t\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t\t *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n\t\t\t *  @returns {Tone.MonoSynth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.MonoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t\t        //the envelopes\n\t\t        this.envelope.triggerAttack(time, velocity);\n\t\t        this.filterEnvelope.triggerAttack(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  start the release portion of the envelope\n\t\t\t *  @param {Time} [time=now] the time the release should start\n\t\t\t *  @returns {Tone.MonoSynth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.MonoSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t\t        this.envelope.triggerRelease(time);\n\t\t        this.filterEnvelope.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.MonoSynth} this\n\t\t\t */\n\t\t    Tone.MonoSynth.prototype.dispose = function () {\n\t\t        Tone.Monophonic.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'oscillator',\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'filter',\n\t\t            'filterEnvelope',\n\t\t            'envelope'\n\t\t        ]);\n\t\t        this.oscillator.dispose();\n\t\t        this.oscillator = null;\n\t\t        this.envelope.dispose();\n\t\t        this.envelope = null;\n\t\t        this.filterEnvelope.dispose();\n\t\t        this.filterEnvelope = null;\n\t\t        this.filter.dispose();\n\t\t        this.filter = null;\n\t\t        this.frequency = null;\n\t\t        this.detune = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MonoSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.DuoSynth is a monophonic synth composed of two \n\t\t\t *          MonoSynths run in parallel with control over the \n\t\t\t *          frequency ratio between the two voices and vibrato effect.\n\t\t\t *          <img src=\"https://docs.google.com/drawings/d/1bL4GXvfRMMlqS7XyBm9CjL9KJPSUKbcdBNpqOlkFLxk/pub?w=1012&h=448\">\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Monophonic}\n\t\t\t *  @param {Object} [options] the options available for the synth \n\t\t\t *                          see defaults below\n\t\t\t *  @example\n\t\t\t * var duoSynth = new Tone.DuoSynth().toMaster();\n\t\t\t * duoSynth.triggerAttackRelease(\"C4\", \"2n\");\n\t\t\t */\n\t\t    Tone.DuoSynth = function (options) {\n\t\t        options = this.defaultArg(options, Tone.DuoSynth.defaults);\n\t\t        Tone.Monophonic.call(this, options);\n\t\t        /**\n\t\t\t\t *  the first voice\n\t\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t\t */\n\t\t        this.voice0 = new Tone.MonoSynth(options.voice0);\n\t\t        this.voice0.volume.value = -10;\n\t\t        /**\n\t\t\t\t *  the second voice\n\t\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t\t */\n\t\t        this.voice1 = new Tone.MonoSynth(options.voice1);\n\t\t        this.voice1.volume.value = -10;\n\t\t        /**\n\t\t\t\t *  The vibrato LFO. \n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._vibrato = new Tone.LFO(options.vibratoRate, -50, 50);\n\t\t        this._vibrato.start();\n\t\t        /**\n\t\t\t\t * the vibrato frequency\n\t\t\t\t * @type {Frequency}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.vibratoRate = this._vibrato.frequency;\n\t\t        /**\n\t\t\t\t *  the vibrato gain\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._vibratoGain = new Tone.Gain(options.vibratoAmount, Tone.Type.Positive);\n\t\t        /**\n\t\t\t\t * The amount of vibrato\n\t\t\t\t * @type {Positive}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.vibratoAmount = this._vibratoGain.gain;\n\t\t        /**\n\t\t\t\t *  the frequency control\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave. \n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t *  @example\n\t\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t\t * duoSynth.harmonicity.value = 0.5;\n\t\t\t\t */\n\t\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t\t        this.harmonicity.units = Tone.Type.Positive;\n\t\t        //control the two voices frequency\n\t\t        this.frequency.connect(this.voice0.frequency);\n\t\t        this.frequency.chain(this.harmonicity, this.voice1.frequency);\n\t\t        this._vibrato.connect(this._vibratoGain);\n\t\t        this._vibratoGain.fan(this.voice0.detune, this.voice1.detune);\n\t\t        this.voice0.connect(this.output);\n\t\t        this.voice1.connect(this.output);\n\t\t        this._readOnly([\n\t\t            'voice0',\n\t\t            'voice1',\n\t\t            'frequency',\n\t\t            'vibratoAmount',\n\t\t            'vibratoRate'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.DuoSynth, Tone.Monophonic);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.DuoSynth.defaults = {\n\t\t        'vibratoAmount': 0.5,\n\t\t        'vibratoRate': 5,\n\t\t        'harmonicity': 1.5,\n\t\t        'voice0': {\n\t\t            'volume': -10,\n\t\t            'portamento': 0,\n\t\t            'oscillator': { 'type': 'sine' },\n\t\t            'filterEnvelope': {\n\t\t                'attack': 0.01,\n\t\t                'decay': 0,\n\t\t                'sustain': 1,\n\t\t                'release': 0.5\n\t\t            },\n\t\t            'envelope': {\n\t\t                'attack': 0.01,\n\t\t                'decay': 0,\n\t\t                'sustain': 1,\n\t\t                'release': 0.5\n\t\t            }\n\t\t        },\n\t\t        'voice1': {\n\t\t            'volume': -10,\n\t\t            'portamento': 0,\n\t\t            'oscillator': { 'type': 'sine' },\n\t\t            'filterEnvelope': {\n\t\t                'attack': 0.01,\n\t\t                'decay': 0,\n\t\t                'sustain': 1,\n\t\t                'release': 0.5\n\t\t            },\n\t\t            'envelope': {\n\t\t                'attack': 0.01,\n\t\t                'decay': 0,\n\t\t                'sustain': 1,\n\t\t                'release': 0.5\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  start the attack portion of the envelopes\n\t\t\t *  \n\t\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t\t *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n\t\t\t *  @returns {Tone.DuoSynth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.DuoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        this.voice0.envelope.triggerAttack(time, velocity);\n\t\t        this.voice1.envelope.triggerAttack(time, velocity);\n\t\t        this.voice0.filterEnvelope.triggerAttack(time);\n\t\t        this.voice1.filterEnvelope.triggerAttack(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  start the release portion of the envelopes\n\t\t\t *  \n\t\t\t *  @param {Time} [time=now] the time the release should start\n\t\t\t *  @returns {Tone.DuoSynth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.DuoSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t\t        this.voice0.triggerRelease(time);\n\t\t        this.voice1.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.DuoSynth} this\n\t\t\t */\n\t\t    Tone.DuoSynth.prototype.dispose = function () {\n\t\t        Tone.Monophonic.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'voice0',\n\t\t            'voice1',\n\t\t            'frequency',\n\t\t            'vibratoAmount',\n\t\t            'vibratoRate'\n\t\t        ]);\n\t\t        this.voice0.dispose();\n\t\t        this.voice0 = null;\n\t\t        this.voice1.dispose();\n\t\t        this.voice1 = null;\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this._vibratoGain.dispose();\n\t\t        this._vibratoGain = null;\n\t\t        this._vibrato = null;\n\t\t        this.harmonicity.dispose();\n\t\t        this.harmonicity = null;\n\t\t        this.vibratoAmount.dispose();\n\t\t        this.vibratoAmount = null;\n\t\t        this.vibratoRate = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.DuoSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  FMSynth is composed of two Tone.Synths where one Tone.Synth modulates\n\t\t\t *          the frequency of a second Tone.Synth. A lot of spectral content \n\t\t\t *          can be explored using the modulationIndex parameter. Read more about\n\t\t\t *          frequency modulation synthesis on [SoundOnSound](http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm).\n\t\t\t *          <img src=\"https://docs.google.com/drawings/d/1h0PUDZXPgi4Ikx6bVT6oncrYPLluFKy7lj53puxj-DM/pub?w=902&h=462\">\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Monophonic}\n\t\t\t *  @param {Object} [options] the options available for the synth \n\t\t\t *                          see defaults below\n\t\t\t *  @example\n\t\t\t * var fmSynth = new Tone.FMSynth().toMaster();\n\t\t\t * fmSynth.triggerAttackRelease(\"C5\", \"4n\");\n\t\t\t */\n\t\t    Tone.FMSynth = function (options) {\n\t\t        options = this.defaultArg(options, Tone.FMSynth.defaults);\n\t\t        Tone.Monophonic.call(this, options);\n\t\t        /**\n\t\t\t\t *  The carrier voice.\n\t\t\t\t *  @type {Tone.Synth}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._carrier = new Tone.Synth(options.carrier);\n\t\t        this._carrier.volume.value = -10;\n\t\t        /**\n\t\t\t\t *  The carrier's oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.oscillator = this._carrier.oscillator;\n\t\t        /**\n\t\t\t\t *  The carrier's envelope\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.envelope = this._carrier.envelope.set(options.envelope);\n\t\t        /**\n\t\t\t\t *  The modulator voice.\n\t\t\t\t *  @type {Tone.Synth}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulator = new Tone.Synth(options.modulator);\n\t\t        this._modulator.volume.value = -10;\n\t\t        /**\n\t\t\t\t *  The modulator's oscillator which is applied\n\t\t\t\t *  to the amplitude of the oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.modulation = this._modulator.oscillator.set(options.modulation);\n\t\t        /**\n\t\t\t\t *  The modulator's envelope\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\t\t        /**\n\t\t\t\t *  The frequency control.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The detune in cents\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t\t        /**\n\t\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave. \n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t *  @example\n\t\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t\t */\n\t\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t\t        this.harmonicity.units = Tone.Type.Positive;\n\t\t        /**\n\t\t\t\t *  The modulation index which essentially the depth or amount of the modulation. It is the \n\t\t\t\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t\t\t *  modulating signal (ma) -- as in ma/mf. \n\t\t\t\t *\t@type {Positive}\n\t\t\t\t *\t@signal\n\t\t\t\t */\n\t\t        this.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\t\t        this.modulationIndex.units = Tone.Type.Positive;\n\t\t        /**\n\t\t\t\t *  the node where the modulation happens\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulationNode = new Tone.Gain(0);\n\t\t        //control the two voices frequency\n\t\t        this.frequency.connect(this._carrier.frequency);\n\t\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\t        this.frequency.chain(this.modulationIndex, this._modulationNode);\n\t\t        this.detune.fan(this._carrier.detune, this._modulator.detune);\n\t\t        this._modulator.connect(this._modulationNode.gain);\n\t\t        this._modulationNode.connect(this._carrier.frequency);\n\t\t        this._carrier.connect(this.output);\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'harmonicity',\n\t\t            'modulationIndex',\n\t\t            'oscillator',\n\t\t            'envelope',\n\t\t            'modulation',\n\t\t            'modulationEnvelope',\n\t\t            'detune'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.FMSynth, Tone.Monophonic);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.FMSynth.defaults = {\n\t\t        'harmonicity': 3,\n\t\t        'modulationIndex': 10,\n\t\t        'detune': 0,\n\t\t        'oscillator': { 'type': 'sine' },\n\t\t        'envelope': {\n\t\t            'attack': 0.01,\n\t\t            'decay': 0.01,\n\t\t            'sustain': 1,\n\t\t            'release': 0.5\n\t\t        },\n\t\t        'moduation': { 'type': 'square' },\n\t\t        'modulationEnvelope': {\n\t\t            'attack': 0.5,\n\t\t            'decay': 0,\n\t\t            'sustain': 1,\n\t\t            'release': 0.5\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * \ttrigger the attack portion of the note\n\t\t\t *  \n\t\t\t *  @param  {Time} [time=now] the time the note will occur\n\t\t\t *  @param {number} [velocity=1] the velocity of the note\n\t\t\t *  @returns {Tone.FMSynth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.FMSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        //the envelopes\n\t\t        this.envelope.triggerAttack(time, velocity);\n\t\t        this.modulationEnvelope.triggerAttack(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  trigger the release portion of the note\n\t\t\t *  \n\t\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t\t *  @returns {Tone.FMSynth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.FMSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this.envelope.triggerRelease(time);\n\t\t        this.modulationEnvelope.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.FMSynth} this\n\t\t\t */\n\t\t    Tone.FMSynth.prototype.dispose = function () {\n\t\t        Tone.Monophonic.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'harmonicity',\n\t\t            'modulationIndex',\n\t\t            'oscillator',\n\t\t            'envelope',\n\t\t            'modulation',\n\t\t            'modulationEnvelope',\n\t\t            'detune'\n\t\t        ]);\n\t\t        this._carrier.dispose();\n\t\t        this._carrier = null;\n\t\t        this._modulator.dispose();\n\t\t        this._modulator = null;\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this.detune.dispose();\n\t\t        this.detune = null;\n\t\t        this.modulationIndex.dispose();\n\t\t        this.modulationIndex = null;\n\t\t        this.harmonicity.dispose();\n\t\t        this.harmonicity = null;\n\t\t        this._modulationNode.dispose();\n\t\t        this._modulationNode = null;\n\t\t        this.oscillator = null;\n\t\t        this.envelope = null;\n\t\t        this.modulationEnvelope = null;\n\t\t        this.modulation = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.FMSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.MembraneSynth makes kick and tom sounds using a single oscillator\n\t\t\t *          with an amplitude envelope and frequency ramp. A Tone.Oscillator\n\t\t\t *          is routed through a Tone.AmplitudeEnvelope to the output. The drum\n\t\t\t *          quality of the sound comes from the frequency envelope applied\n\t\t\t *          during during Tone.MembraneSynth.triggerAttack(note). The frequency\n\t\t\t *          envelope starts at <code>note * .octaves</code> and ramps to \n\t\t\t *          <code>note</code> over the duration of <code>.pitchDecay</code>. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Instrument}\n\t\t\t *  @param {Object} [options] the options available for the synth \n\t\t\t *                          see defaults below\n\t\t\t *  @example\n\t\t\t * var synth = new Tone.MembraneSynth().toMaster();\n\t\t\t * synth.triggerAttackRelease(\"C2\", \"8n\");\n\t\t\t */\n\t\t    Tone.MembraneSynth = function (options) {\n\t\t        options = this.defaultArg(options, Tone.MembraneSynth.defaults);\n\t\t        Tone.Instrument.call(this, options);\n\t\t        /**\n\t\t\t\t *  The oscillator.\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.oscillator = new Tone.Oscillator(options.oscillator).start();\n\t\t        /**\n\t\t\t\t *  The amplitude envelope.\n\t\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t\t */\n\t\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t\t        /**\n\t\t\t\t *  The number of octaves the pitch envelope ramps.\n\t\t\t\t *  @type {Positive}\n\t\t\t\t */\n\t\t        this.octaves = options.octaves;\n\t\t        /**\n\t\t\t\t *  The amount of time the frequency envelope takes. \n\t\t\t\t *  @type {Time}\n\t\t\t\t */\n\t\t        this.pitchDecay = options.pitchDecay;\n\t\t        this.oscillator.chain(this.envelope, this.output);\n\t\t        this._readOnly([\n\t\t            'oscillator',\n\t\t            'envelope'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.MembraneSynth, Tone.Instrument);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.MembraneSynth.defaults = {\n\t\t        'pitchDecay': 0.05,\n\t\t        'octaves': 10,\n\t\t        'oscillator': { 'type': 'sine' },\n\t\t        'envelope': {\n\t\t            'attack': 0.001,\n\t\t            'decay': 0.4,\n\t\t            'sustain': 0.01,\n\t\t            'release': 1.4,\n\t\t            'attackCurve': 'exponential'\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the note at the given time with the given velocity. \n\t\t\t *  \n\t\t\t *  @param  {Frequency} note     the note\n\t\t\t *  @param  {Time} [time=now]     the time, if not given is now\n\t\t\t *  @param  {number} [velocity=1] velocity defaults to 1\n\t\t\t *  @returns {Tone.MembraneSynth} this\n\t\t\t *  @example\n\t\t\t *  kick.triggerAttack(60);\n\t\t\t */\n\t\t    Tone.MembraneSynth.prototype.triggerAttack = function (note, time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        note = this.toFrequency(note);\n\t\t        var maxNote = note * this.octaves;\n\t\t        this.oscillator.frequency.setValueAtTime(maxNote, time);\n\t\t        this.oscillator.frequency.exponentialRampToValueAtTime(note, time + this.toSeconds(this.pitchDecay));\n\t\t        this.envelope.triggerAttack(time, velocity);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the release portion of the note.\n\t\t\t *  \n\t\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t\t *  @returns {Tone.MembraneSynth} this\n\t\t\t */\n\t\t    Tone.MembraneSynth.prototype.triggerRelease = function (time) {\n\t\t        this.envelope.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.MembraneSynth} this\n\t\t\t */\n\t\t    Tone.MembraneSynth.prototype.dispose = function () {\n\t\t        Tone.Instrument.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'oscillator',\n\t\t            'envelope'\n\t\t        ]);\n\t\t        this.oscillator.dispose();\n\t\t        this.oscillator = null;\n\t\t        this.envelope.dispose();\n\t\t        this.envelope = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MembraneSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  Inharmonic ratio of frequencies based on the Roland TR-808\n\t\t\t *  Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t    var inharmRatios = [\n\t\t        1,\n\t\t        1.483,\n\t\t        1.932,\n\t\t        2.546,\n\t\t        2.63,\n\t\t        3.897\n\t\t    ];\n\t\t    /**\n\t\t\t *  @class  A highly inharmonic and spectrally complex source with a highpass filter\n\t\t\t *          and amplitude envelope which is good for making metalophone sounds. Based\n\t\t\t *          on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).\n\t\t\t *          Inspiration from [Sound on Sound](http://www.soundonsound.com/sos/jul02/articles/synthsecrets0702.asp).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Instrument}\n\t\t\t *  @param {Object} [options] The options availble for the synth\n\t\t\t *                             see defaults below\n\t\t\t */\n\t\t    Tone.MetalSynth = function (options) {\n\t\t        options = this.defaultArg(options, Tone.MetalSynth.defaults);\n\t\t        Tone.Instrument.call(this, options);\n\t\t        /**\n\t\t\t\t *  The frequency of the cymbal\n\t\t\t\t *  @type  {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The array of FMOscillators\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._oscillators = [];\n\t\t        /**\n\t\t\t\t *  The frequency multipliers\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._freqMultipliers = [];\n\t\t        /**\n\t\t\t\t *  The amplitude for the body\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._amplitue = new Tone.Gain(0).connect(this.output);\n\t\t        /**\n\t\t\t\t *  highpass the output\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._highpass = new Tone.Filter({\n\t\t            'type': 'highpass',\n\t\t            'Q': 0\n\t\t        }).connect(this._amplitue);\n\t\t        /**\n\t\t\t\t *  The number of octaves the highpass\n\t\t\t\t *  filter frequency ramps\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._octaves = options.octaves;\n\t\t        /**\n\t\t\t\t *  Scale the body envelope\n\t\t\t\t *  for the bandpass\n\t\t\t\t *  @type {Tone.Scale}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._filterFreqScaler = new Tone.Scale(options.resonance, 7000);\n\t\t        /**\n\t\t\t\t *  The envelope which is connected both to the \n\t\t\t\t *  amplitude and highpass filter's cutoff frequency\n\t\t\t\t *  @type  {Tone.Envelope}\n\t\t\t\t */\n\t\t        this.envelope = new Tone.Envelope({\n\t\t            'attack': options.envelope.attack,\n\t\t            'attackCurve': 'exponential',\n\t\t            'decay': options.envelope.decay,\n\t\t            'sustain': 0,\n\t\t            'release': options.envelope.release\n\t\t        }).chain(this._filterFreqScaler, this._highpass.frequency);\n\t\t        this.envelope.connect(this._amplitue.gain);\n\t\t        for (var i = 0; i < inharmRatios.length; i++) {\n\t\t            var osc = new Tone.FMOscillator({\n\t\t                'type': 'square',\n\t\t                'modulationType': 'square',\n\t\t                'harmonicity': options.harmonicity,\n\t\t                'modulationIndex': options.modulationIndex\n\t\t            });\n\t\t            osc.connect(this._highpass).start(0);\n\t\t            this._oscillators[i] = osc;\n\t\t            var mult = new Tone.Multiply(inharmRatios[i]);\n\t\t            this._freqMultipliers[i] = mult;\n\t\t            this.frequency.chain(mult, osc.frequency);\n\t\t        }\n\t\t        //set the octaves\n\t\t        this.octaves = options.octaves;\n\t\t    };\n\t\t    Tone.extend(Tone.MetalSynth, Tone.Instrument);\n\t\t    /**\n\t\t\t *  default values\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.MetalSynth.defaults = {\n\t\t        'frequency': 200,\n\t\t        'envelope': {\n\t\t            'attack': 0.0015,\n\t\t            'decay': 1.4,\n\t\t            'release': 0.2\n\t\t        },\n\t\t        'harmonicity': 5.1,\n\t\t        'modulationIndex': 32,\n\t\t        'resonance': 4000,\n\t\t        'octaves': 1.5\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the attack.\n\t\t\t *  @param  {Time}  time      When the attack should be triggered.\n\t\t\t *  @param  {NormalRange=1}  velocity  The velocity that the envelope should be triggered at.\n\t\t\t *  @return  {Tone.MetalSynth}  this\n\t\t\t */\n\t\t    Tone.MetalSynth.prototype.triggerAttack = function (time, vel) {\n\t\t        time = this.toSeconds(time);\n\t\t        vel = this.defaultArg(vel, 1);\n\t\t        this.envelope.triggerAttack(time, vel);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the release of the envelope.\n\t\t\t *  @param  {Time}  time      When the release should be triggered.\n\t\t\t *  @return  {Tone.MetalSynth}  this\n\t\t\t */\n\t\t    Tone.MetalSynth.prototype.triggerRelease = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this.envelope.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the attack and release of the envelope after the given \n\t\t\t *  duration. \n\t\t\t *  @param  {Time}  duration  The duration before triggering the release\n\t\t\t *  @param  {Time}  time      When the attack should be triggered.\n\t\t\t *  @param  {NormalRange=1}  velocity  The velocity that the envelope should be triggered at.\n\t\t\t *  @return  {Tone.MetalSynth}  this\n\t\t\t */\n\t\t    Tone.MetalSynth.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        duration = this.toSeconds(duration);\n\t\t        this.triggerAttack(time, velocity);\n\t\t        this.triggerRelease(time + duration);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The modulationIndex of the oscillators which make up the source.\n\t\t\t *  see Tone.FMOscillator.modulationIndex\n\t\t\t *  @memberOf Tone.MetalSynth#\n\t\t\t *  @type {Positive}\n\t\t\t *  @name  modulationIndex\n\t\t\t */\n\t\t    Object.defineProperty(Tone.MetalSynth.prototype, 'modulationIndex', {\n\t\t        get: function () {\n\t\t            return this._oscillators[0].modulationIndex.value;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            for (var i = 0; i < this._oscillators.length; i++) {\n\t\t                this._oscillators[i].modulationIndex.value = val;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The harmonicity of the oscillators which make up the source.\n\t\t\t *  see Tone.FMOscillator.harmonicity\n\t\t\t *  @memberOf Tone.MetalSynth#\n\t\t\t *  @type {Positive}\n\t\t\t *  @name  harmonicity\n\t\t\t */\n\t\t    Object.defineProperty(Tone.MetalSynth.prototype, 'harmonicity', {\n\t\t        get: function () {\n\t\t            return this._oscillators[0].harmonicity.value;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            for (var i = 0; i < this._oscillators.length; i++) {\n\t\t                this._oscillators[i].harmonicity.value = val;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The frequency of the highpass filter attached to the envelope\n\t\t\t *  @memberOf Tone.MetalSynth#\n\t\t\t *  @type {Frequency}\n\t\t\t *  @name  resonance\n\t\t\t */\n\t\t    Object.defineProperty(Tone.MetalSynth.prototype, 'resonance', {\n\t\t        get: function () {\n\t\t            return this._filterFreqScaler.min;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            this._filterFreqScaler.min = val;\n\t\t            this.octaves = this._octaves;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The number of octaves above the \"resonance\" frequency\n\t\t\t *  that the filter ramps during the attack/decay envelope\n\t\t\t *  @memberOf Tone.MetalSynth#\n\t\t\t *  @type {Number}\n\t\t\t *  @name  octaves\n\t\t\t */\n\t\t    Object.defineProperty(Tone.MetalSynth.prototype, 'octaves', {\n\t\t        get: function () {\n\t\t            return this._octaves;\n\t\t        },\n\t\t        set: function (octs) {\n\t\t            this._octaves = octs;\n\t\t            this._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, octs);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @returns {Tone.MetalSynth} this\n\t\t\t */\n\t\t    Tone.MetalSynth.prototype.dispose = function () {\n\t\t        Tone.Instrument.prototype.dispose.call(this);\n\t\t        for (var i = 0; i < this._oscillators.length; i++) {\n\t\t            this._oscillators[i].dispose();\n\t\t            this._freqMultipliers[i].dispose();\n\t\t        }\n\t\t        this._oscillators = null;\n\t\t        this._freqMultipliers = null;\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this._filterFreqScaler.dispose();\n\t\t        this._filterFreqScaler = null;\n\t\t        this._amplitue.dispose();\n\t\t        this._amplitue = null;\n\t\t        this.envelope.dispose();\n\t\t        this.envelope = null;\n\t\t        this._highpass.dispose();\n\t\t        this._highpass = null;\n\t\t    };\n\t\t    return Tone.MetalSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Noise is a noise generator. It uses looped noise buffers to save on performance.\n\t\t\t *          Tone.Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n\t\t\t *          colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Source}\n\t\t\t *  @param {string} type the noise type (white|pink|brown)\n\t\t\t *  @example\n\t\t\t * //initialize the noise and start\n\t\t\t * var noise = new Tone.Noise(\"pink\").start();\n\t\t\t * \n\t\t\t * //make an autofilter to shape the noise\n\t\t\t * var autoFilter = new Tone.AutoFilter({\n\t\t\t * \t\"frequency\" : \"8m\", \n\t\t\t * \t\"min\" : 800, \n\t\t\t * \t\"max\" : 15000\n\t\t\t * }).connect(Tone.Master);\n\t\t\t * \n\t\t\t * //connect the noise\n\t\t\t * noise.connect(autoFilter);\n\t\t\t * //start the autofilter LFO\n\t\t\t * autoFilter.start()\n\t\t\t */\n\t\t    Tone.Noise = function () {\n\t\t        var options = this.optionsObject(arguments, ['type'], Tone.Noise.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  @private\n\t\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t\t */\n\t\t        this._source = null;\n\t\t        /**\n\t\t\t\t *  the buffer\n\t\t\t\t *  @private\n\t\t\t\t *  @type {AudioBuffer}\n\t\t\t\t */\n\t\t        this._buffer = null;\n\t\t        /**\n\t\t\t\t *  The playback rate of the noise. Affects\n\t\t\t\t *  the \"frequency\" of the noise.\n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this._playbackRate = options.playbackRate;\n\t\t        this.type = options.type;\n\t\t    };\n\t\t    Tone.extend(Tone.Noise, Tone.Source);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Noise.defaults = {\n\t\t        'type': 'white',\n\t\t        'playbackRate': 1\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the noise. Can be \"white\", \"brown\", or \"pink\". \n\t\t\t * @memberOf Tone.Noise#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t * @example\n\t\t\t * noise.type = \"white\";\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Noise.prototype, 'type', {\n\t\t        get: function () {\n\t\t            if (this._buffer === _whiteNoise) {\n\t\t                return 'white';\n\t\t            } else if (this._buffer === _brownNoise) {\n\t\t                return 'brown';\n\t\t            } else if (this._buffer === _pinkNoise) {\n\t\t                return 'pink';\n\t\t            }\n\t\t        },\n\t\t        set: function (type) {\n\t\t            if (this.type !== type) {\n\t\t                switch (type) {\n\t\t                case 'white':\n\t\t                    this._buffer = _whiteNoise;\n\t\t                    break;\n\t\t                case 'pink':\n\t\t                    this._buffer = _pinkNoise;\n\t\t                    break;\n\t\t                case 'brown':\n\t\t                    this._buffer = _brownNoise;\n\t\t                    break;\n\t\t                default:\n\t\t                    throw new TypeError('Tone.Noise: invalid type: ' + type);\n\t\t                }\n\t\t                //if it's playing, stop and restart it\n\t\t                if (this.state === Tone.State.Started) {\n\t\t                    var now = this.now() + this.blockTime;\n\t\t                    //remove the listener\n\t\t                    this._stop(now);\n\t\t                    this._start(now);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The playback rate of the noise. Affects\n\t\t\t *  the \"frequency\" of the noise.\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Noise.prototype, 'playbackRate', {\n\t\t        get: function () {\n\t\t            return this._playbackRate;\n\t\t        },\n\t\t        set: function (rate) {\n\t\t            this._playbackRate = rate;\n\t\t            if (this._source) {\n\t\t                this._source.playbackRate.value = rate;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  internal start method\n\t\t\t *\n\t\t\t *  @param {Time} time\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Noise.prototype._start = function (time) {\n\t\t        this._source = this.context.createBufferSource();\n\t\t        this._source.buffer = this._buffer;\n\t\t        this._source.loop = true;\n\t\t        this._source.playbackRate.value = this._playbackRate;\n\t\t        this._source.connect(this.output);\n\t\t        this._source.start(this.toSeconds(time), Math.random() * (this._buffer.duration - 0.001));\n\t\t    };\n\t\t    /**\n\t\t\t *  internal stop method\n\t\t\t *\n\t\t\t *  @param {Time} time\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Noise.prototype._stop = function (time) {\n\t\t        if (this._source) {\n\t\t            this._source.stop(this.toSeconds(time));\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Noise} this\n\t\t\t */\n\t\t    Tone.Noise.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        if (this._source !== null) {\n\t\t            this._source.disconnect();\n\t\t            this._source = null;\n\t\t        }\n\t\t        this._buffer = null;\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    // THE BUFFERS\n\t\t    // borrowed heavily from http://noisehack.com/generate-noise-web-audio-api/\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *\tstatic noise buffers\n\t\t\t *\n\t\t\t *  @static\n\t\t\t *  @private\n\t\t\t *  @type {AudioBuffer}\n\t\t\t */\n\t\t    var _pinkNoise = null, _brownNoise = null, _whiteNoise = null;\n\t\t    Tone._initAudioContext(function (audioContext) {\n\t\t        var sampleRate = audioContext.sampleRate;\n\t\t        //four seconds per buffer\n\t\t        var bufferLength = sampleRate * 4;\n\t\t        //fill the buffers\n\t\t        _pinkNoise = function () {\n\t\t            var buffer = audioContext.createBuffer(2, bufferLength, sampleRate);\n\t\t            for (var channelNum = 0; channelNum < buffer.numberOfChannels; channelNum++) {\n\t\t                var channel = buffer.getChannelData(channelNum);\n\t\t                var b0, b1, b2, b3, b4, b5, b6;\n\t\t                b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0;\n\t\t                for (var i = 0; i < bufferLength; i++) {\n\t\t                    var white = Math.random() * 2 - 1;\n\t\t                    b0 = 0.99886 * b0 + white * 0.0555179;\n\t\t                    b1 = 0.99332 * b1 + white * 0.0750759;\n\t\t                    b2 = 0.969 * b2 + white * 0.153852;\n\t\t                    b3 = 0.8665 * b3 + white * 0.3104856;\n\t\t                    b4 = 0.55 * b4 + white * 0.5329522;\n\t\t                    b5 = -0.7616 * b5 - white * 0.016898;\n\t\t                    channel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t\t                    channel[i] *= 0.11;\n\t\t                    // (roughly) compensate for gain\n\t\t                    b6 = white * 0.115926;\n\t\t                }\n\t\t            }\n\t\t            return buffer;\n\t\t        }();\n\t\t        _brownNoise = function () {\n\t\t            var buffer = audioContext.createBuffer(2, bufferLength, sampleRate);\n\t\t            for (var channelNum = 0; channelNum < buffer.numberOfChannels; channelNum++) {\n\t\t                var channel = buffer.getChannelData(channelNum);\n\t\t                var lastOut = 0;\n\t\t                for (var i = 0; i < bufferLength; i++) {\n\t\t                    var white = Math.random() * 2 - 1;\n\t\t                    channel[i] = (lastOut + 0.02 * white) / 1.02;\n\t\t                    lastOut = channel[i];\n\t\t                    channel[i] *= 3.5;    // (roughly) compensate for gain\n\t\t                }\n\t\t            }\n\t\t            return buffer;\n\t\t        }();\n\t\t        _whiteNoise = function () {\n\t\t            var buffer = audioContext.createBuffer(2, bufferLength, sampleRate);\n\t\t            for (var channelNum = 0; channelNum < buffer.numberOfChannels; channelNum++) {\n\t\t                var channel = buffer.getChannelData(channelNum);\n\t\t                for (var i = 0; i < bufferLength; i++) {\n\t\t                    channel[i] = Math.random() * 2 - 1;\n\t\t                }\n\t\t            }\n\t\t            return buffer;\n\t\t        }();\n\t\t    });\n\t\t    return Tone.Noise;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.NoiseSynth is composed of a noise generator (Tone.Noise), one filter (Tone.Filter), \n\t\t\t *          and two envelopes (Tone.Envelop). One envelope controls the amplitude\n\t\t\t *          of the noise and the other is controls the cutoff frequency of the filter. \n\t\t\t *          <img src=\"https://docs.google.com/drawings/d/1rqzuX9rBlhT50MRvD2TKml9bnZhcZmzXF1rf_o7vdnE/pub?w=918&h=242\">\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Instrument}\n\t\t\t *  @param {Object} [options] the options available for the synth \n\t\t\t *                          see defaults below\n\t\t\t * @example\n\t\t\t * var noiseSynth = new Tone.NoiseSynth().toMaster();\n\t\t\t * noiseSynth.triggerAttackRelease(\"8n\");\n\t\t\t */\n\t\t    Tone.NoiseSynth = function (options) {\n\t\t        //get the defaults\n\t\t        options = this.defaultArg(options, Tone.NoiseSynth.defaults);\n\t\t        Tone.Instrument.call(this, options);\n\t\t        /**\n\t\t\t\t *  The noise source.\n\t\t\t\t *  @type {Tone.Noise}\n\t\t\t\t *  @example\n\t\t\t\t * noiseSynth.set(\"noise.type\", \"brown\");\n\t\t\t\t */\n\t\t        this.noise = new Tone.Noise();\n\t\t        /**\n\t\t\t\t *  The amplitude envelope. \n\t\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t\t */\n\t\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t\t        //connect the noise to the output\n\t\t        this.noise.chain(this.envelope, this.output);\n\t\t        //start the noise\n\t\t        this.noise.start();\n\t\t        this._readOnly([\n\t\t            'noise',\n\t\t            'envelope'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.NoiseSynth, Tone.Instrument);\n\t\t    /**\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.NoiseSynth.defaults = {\n\t\t        'noise': { 'type': 'white' },\n\t\t        'envelope': {\n\t\t            'attack': 0.005,\n\t\t            'decay': 0.1,\n\t\t            'sustain': 0\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the attack portion of the envelopes. Unlike other \n\t\t\t *  instruments, Tone.NoiseSynth doesn't have a note. \n\t\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t\t *  @param {number} [velocity=1] the velocity of the note (0-1)\n\t\t\t *  @returns {Tone.NoiseSynth} this\n\t\t\t *  @example\n\t\t\t * noiseSynth.triggerAttack();\n\t\t\t */\n\t\t    Tone.NoiseSynth.prototype.triggerAttack = function (time, velocity) {\n\t\t        //the envelopes\n\t\t        this.envelope.triggerAttack(time, velocity);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the release portion of the envelopes.\n\t\t\t *  @param {Time} [time=now] the time the release should start\n\t\t\t *  @returns {Tone.NoiseSynth} this\n\t\t\t */\n\t\t    Tone.NoiseSynth.prototype.triggerRelease = function (time) {\n\t\t        this.envelope.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the attack and then the release. \n\t\t\t *  @param  {Time} duration the duration of the note\n\t\t\t *  @param  {Time} [time=now]     the time of the attack\n\t\t\t *  @param  {number} [velocity=1] the velocity\n\t\t\t *  @returns {Tone.NoiseSynth} this\n\t\t\t */\n\t\t    Tone.NoiseSynth.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        duration = this.toSeconds(duration);\n\t\t        this.triggerAttack(time, velocity);\n\t\t        this.triggerRelease(time + duration);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.NoiseSynth} this\n\t\t\t */\n\t\t    Tone.NoiseSynth.prototype.dispose = function () {\n\t\t        Tone.Instrument.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'noise',\n\t\t            'envelope'\n\t\t        ]);\n\t\t        this.noise.dispose();\n\t\t        this.noise = null;\n\t\t        this.envelope.dispose();\n\t\t        this.envelope = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.NoiseSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Karplus-String string synthesis. Often out of tune. \n\t\t\t *         Will change when the AudioWorkerNode is available across\n\t\t\t *         browsers. \n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Instrument}\n\t\t\t *  @param {Object} [options] see the defaults\n\t\t\t *  @example\n\t\t\t * var plucky = new Tone.PluckSynth().toMaster();\n\t\t\t * plucky.triggerAttack(\"C4\");\n\t\t\t */\n\t\t    Tone.PluckSynth = function (options) {\n\t\t        options = this.defaultArg(options, Tone.PluckSynth.defaults);\n\t\t        Tone.Instrument.call(this, options);\n\t\t        /**\n\t\t\t\t *  @type {Tone.Noise}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._noise = new Tone.Noise('pink');\n\t\t        /**\n\t\t\t\t *  The amount of noise at the attack. \n\t\t\t\t *  Nominal range of [0.1, 20]\n\t\t\t\t *  @type {number}\n\t\t\t\t */\n\t\t        this.attackNoise = 1;\n\t\t        /**\n\t\t\t\t *  the LFCF\n\t\t\t\t *  @type {Tone.LowpassCombFilter}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfcf = new Tone.LowpassCombFilter({\n\t\t            'resonance': options.resonance,\n\t\t            'dampening': options.dampening\n\t\t        });\n\t\t        /**\n\t\t\t\t *  The resonance control. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.resonance = this._lfcf.resonance;\n\t\t        /**\n\t\t\t\t *  The dampening control. i.e. the lowpass filter frequency of the comb filter\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.dampening = this._lfcf.dampening;\n\t\t        //connections\n\t\t        this._noise.connect(this._lfcf);\n\t\t        this._lfcf.connect(this.output);\n\t\t        this._readOnly([\n\t\t            'resonance',\n\t\t            'dampening'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.PluckSynth, Tone.Instrument);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.PluckSynth.defaults = {\n\t\t        'attackNoise': 1,\n\t\t        'dampening': 4000,\n\t\t        'resonance': 0.9\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the note. \n\t\t\t *  @param {Frequency} note The note to trigger.\n\t\t\t *  @param {Time} [time=now] When the note should be triggered.\n\t\t\t *  @returns {Tone.PluckSynth} this\n\t\t\t */\n\t\t    Tone.PluckSynth.prototype.triggerAttack = function (note, time) {\n\t\t        note = this.toFrequency(note);\n\t\t        time = this.toSeconds(time);\n\t\t        var delayAmount = 1 / note;\n\t\t        this._lfcf.delayTime.setValueAtTime(delayAmount, time);\n\t\t        this._noise.start(time);\n\t\t        this._noise.stop(time + delayAmount * this.attackNoise);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.PluckSynth} this\n\t\t\t */\n\t\t    Tone.PluckSynth.prototype.dispose = function () {\n\t\t        Tone.Instrument.prototype.dispose.call(this);\n\t\t        this._noise.dispose();\n\t\t        this._lfcf.dispose();\n\t\t        this._noise = null;\n\t\t        this._lfcf = null;\n\t\t        this._writable([\n\t\t            'resonance',\n\t\t            'dampening'\n\t\t        ]);\n\t\t        this.dampening = null;\n\t\t        this.resonance = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.PluckSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.PolySynth handles voice creation and allocation for any\n\t\t\t *          instruments passed in as the second paramter. PolySynth is \n\t\t\t *          not a synthesizer by itself, it merely manages voices of \n\t\t\t *          one of the other types of synths, allowing any of the \n\t\t\t *          monophonic synthesizers to be polyphonic. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Instrument}\n\t\t\t *  @param {number|Object} [polyphony=4] The number of voices to create\n\t\t\t *  @param {function} [voice=Tone.Synth] The constructor of the voices\n\t\t\t *                                            uses Tone.Synth by default. \n\t\t\t *  @example\n\t\t\t * //a polysynth composed of 6 Voices of Synth\n\t\t\t * var synth = new Tone.PolySynth(6, Tone.Synth).toMaster();\n\t\t\t * //set the attributes using the set interface\n\t\t\t * synth.set(\"detune\", -1200);\n\t\t\t * //play a chord\n\t\t\t * synth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"], \"4n\");\n\t\t\t */\n\t\t    Tone.PolySynth = function () {\n\t\t        Tone.Instrument.call(this);\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'polyphony',\n\t\t            'voice'\n\t\t        ], Tone.PolySynth.defaults);\n\t\t        options = this.defaultArg(options, Tone.Instrument.defaults);\n\t\t        //max polyphony\n\t\t        options.polyphony = Math.min(Tone.PolySynth.MAX_POLYPHONY, options.polyphony);\n\t\t        /**\n\t\t\t\t *  the array of voices\n\t\t\t\t *  @type {Array}\n\t\t\t\t */\n\t\t        this.voices = new Array(options.polyphony);\n\t\t        /**\n\t\t\t\t *  The queue of voices with data about last trigger\n\t\t\t\t *  and the triggered note\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Array}\n\t\t\t\t */\n\t\t        this._triggers = new Array(options.polyphony);\n\t\t        /**\n\t\t\t\t *  The detune in cents\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t\t        this._readOnly('detune');\n\t\t        //create the voices\n\t\t        for (var i = 0; i < options.polyphony; i++) {\n\t\t            var v = new options.voice(arguments[2], arguments[3]);\n\t\t            this.voices[i] = v;\n\t\t            v.connect(this.output);\n\t\t            if (v.hasOwnProperty('detune')) {\n\t\t                this.detune.connect(v.detune);\n\t\t            }\n\t\t            this._triggers[i] = {\n\t\t                release: -1,\n\t\t                note: null,\n\t\t                voice: v\n\t\t            };\n\t\t        }\n\t\t        //set the volume initially\n\t\t        this.volume.value = options.volume;\n\t\t    };\n\t\t    Tone.extend(Tone.PolySynth, Tone.Instrument);\n\t\t    /**\n\t\t\t *  the defaults\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.PolySynth.defaults = {\n\t\t        'polyphony': 4,\n\t\t        'volume': 0,\n\t\t        'detune': 0,\n\t\t        'voice': Tone.Synth\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the attack portion of the note\n\t\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t\t *                                  Frequency or an array of frequencies.\n\t\t\t *  @param  {Time} [time=now]  The start time of the note.\n\t\t\t *  @param {number} [velocity=1] The velocity of the note.\n\t\t\t *  @returns {Tone.PolySynth} this\n\t\t\t *  @example\n\t\t\t * //trigger a chord immediately with a velocity of 0.2\n\t\t\t * poly.triggerAttack([\"Ab3\", \"C4\", \"F5\"], undefined, 0.2);\n\t\t\t */\n\t\t    Tone.PolySynth.prototype.triggerAttack = function (notes, time, velocity) {\n\t\t        if (!Array.isArray(notes)) {\n\t\t            notes = [notes];\n\t\t        }\n\t\t        time = this.toSeconds(time);\n\t\t        for (var i = 0; i < notes.length; i++) {\n\t\t            var val = notes[i];\n\t\t            //trigger the oldest voice\n\t\t            var oldest = this._triggers[0];\n\t\t            var oldestIndex = 0;\n\t\t            for (var j = 1; j < this._triggers.length; j++) {\n\t\t                if (this._triggers[j].release < oldest.release) {\n\t\t                    oldest = this._triggers[j];\n\t\t                    oldestIndex = j;\n\t\t                }\n\t\t            }\n\t\t            oldest.release = Infinity;\n\t\t            oldest.note = JSON.stringify(val);\n\t\t            oldest.voice.triggerAttack(val, time, velocity);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the attack and release after the specified duration\n\t\t\t *  \n\t\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t\t *                                  Frequency or an array of frequencies.\n\t\t\t *  @param  {Time} duration the duration of the note\n\t\t\t *  @param  {Time} [time=now]     if no time is given, defaults to now\n\t\t\t *  @param  {number} [velocity=1] the velocity of the attack (0-1)\n\t\t\t *  @returns {Tone.PolySynth} this\n\t\t\t *  @example\n\t\t\t * //trigger a chord for a duration of a half note \n\t\t\t * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], \"2n\");\n\t\t\t *  @example\n\t\t\t * //can pass in an array of durations as well\n\t\t\t * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], [\"2n\", \"4n\", \"4n\"]);\n\t\t\t */\n\t\t    Tone.PolySynth.prototype.triggerAttackRelease = function (notes, duration, time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        this.triggerAttack(notes, time, velocity);\n\t\t        if (this.isArray(duration) && this.isArray(notes)) {\n\t\t            for (var i = 0; i < notes.length; i++) {\n\t\t                var d = duration[Math.min(i, duration.length - 1)];\n\t\t                this.triggerRelease(notes[i], time + this.toSeconds(d));\n\t\t            }\n\t\t        } else {\n\t\t            this.triggerRelease(notes, time + this.toSeconds(duration));\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the release of the note. Unlike monophonic instruments, \n\t\t\t *  a note (or array of notes) needs to be passed in as the first argument.\n\t\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t\t *                                  Frequency or an array of frequencies.\n\t\t\t *  @param  {Time} [time=now]  When the release will be triggered. \n\t\t\t *  @returns {Tone.PolySynth} this\n\t\t\t *  @example\n\t\t\t * poly.triggerRelease([\"Ab3\", \"C4\", \"F5\"], \"+2n\");\n\t\t\t */\n\t\t    Tone.PolySynth.prototype.triggerRelease = function (notes, time) {\n\t\t        if (!Array.isArray(notes)) {\n\t\t            notes = [notes];\n\t\t        }\n\t\t        time = this.toSeconds(time);\n\t\t        for (var i = 0; i < notes.length; i++) {\n\t\t            //get the voice\n\t\t            var stringified = JSON.stringify(notes[i]);\n\t\t            for (var v = 0; v < this._triggers.length; v++) {\n\t\t                var desc = this._triggers[v];\n\t\t                if (desc.note === stringified && desc.release > time) {\n\t\t                    desc.voice.triggerRelease(time);\n\t\t                    desc.release = time;\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Set a member/attribute of the voices. \n\t\t\t *  @param {Object|string} params\n\t\t\t *  @param {number=} value\n\t\t\t *  @param {Time=} rampTime\n\t\t\t *  @returns {Tone.PolySynth} this\n\t\t\t *  @example\n\t\t\t * poly.set({\n\t\t\t * \t\"filter\" : {\n\t\t\t * \t\t\"type\" : \"highpass\"\n\t\t\t * \t},\n\t\t\t * \t\"envelope\" : {\n\t\t\t * \t\t\"attack\" : 0.25\n\t\t\t * \t}\n\t\t\t * });\n\t\t\t */\n\t\t    Tone.PolySynth.prototype.set = function (params, value, rampTime) {\n\t\t        for (var i = 0; i < this.voices.length; i++) {\n\t\t            this.voices[i].set(params, value, rampTime);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the synth's attributes. Given no arguments get\n\t\t\t *  will return all available object properties and their corresponding\n\t\t\t *  values. Pass in a single attribute to retrieve or an array\n\t\t\t *  of attributes. The attribute strings can also include a \".\"\n\t\t\t *  to access deeper properties.\n\t\t\t *  @param {Array=} params the parameters to get, otherwise will return \n\t\t\t *  \t\t\t\t\t   all available.\n\t\t\t */\n\t\t    Tone.PolySynth.prototype.get = function (params) {\n\t\t        return this.voices[0].get(params);\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the release portion of all the currently active voices.\n\t\t\t *  @param {Time} [time=now] When the notes should be released.\n\t\t\t *  @return {Tone.PolySynth} this\n\t\t\t */\n\t\t    Tone.PolySynth.prototype.releaseAll = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        for (var i = 0; i < this._triggers.length; i++) {\n\t\t            var desc = this._triggers[i];\n\t\t            if (desc.release > time) {\n\t\t                desc.release = time;\n\t\t                desc.voice.triggerRelease(time);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.PolySynth} this\n\t\t\t */\n\t\t    Tone.PolySynth.prototype.dispose = function () {\n\t\t        Tone.Instrument.prototype.dispose.call(this);\n\t\t        for (var i = 0; i < this.voices.length; i++) {\n\t\t            this.voices[i].dispose();\n\t\t            this.voices[i] = null;\n\t\t        }\n\t\t        this._writable('detune');\n\t\t        this.detune.dispose();\n\t\t        this.detune = null;\n\t\t        this.voices = null;\n\t\t        this._triggers = null;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The maximum number of notes that can be allocated \n\t\t\t *  to a polysynth. \n\t\t\t *  @type  {Number}\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.PolySynth.MAX_POLYPHONY = 20;\n\t\t    return Tone.PolySynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Player is an audio file player with start, loop, and stop functions.\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Source} \n\t\t\t *  @param {string|AudioBuffer} url Either the AudioBuffer or the url from\n\t\t\t *                                  which to load the AudioBuffer\n\t\t\t *  @param {function=} onload The function to invoke when the buffer is loaded. \n\t\t\t *                            Recommended to use Tone.Buffer.on('load') instead.\n\t\t\t *  @example\n\t\t\t * var player = new Tone.Player(\"./path/to/sample.mp3\").toMaster();\n\t\t\t * //play as soon as the buffer is loaded\n\t\t\t * player.autostart = true;\n\t\t\t */\n\t\t    Tone.Player = function (url) {\n\t\t        var options;\n\t\t        if (url instanceof Tone.Buffer) {\n\t\t            url = url.get();\n\t\t            options = Tone.Player.defaults;\n\t\t        } else {\n\t\t            options = this.optionsObject(arguments, [\n\t\t                'url',\n\t\t                'onload'\n\t\t            ], Tone.Player.defaults);\n\t\t        }\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  @private\n\t\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t\t */\n\t\t        this._source = null;\n\t\t        /**\n\t\t\t\t *  If the file should play as soon\n\t\t\t\t *  as the buffer is loaded. \n\t\t\t\t *  @type {boolean}\n\t\t\t\t *  @example\n\t\t\t\t * //will play as soon as it's loaded\n\t\t\t\t * var player = new Tone.Player({\n\t\t\t\t * \t\"url\" : \"./path/to/sample.mp3\",\n\t\t\t\t * \t\"autostart\" : true,\n\t\t\t\t * }).toMaster();\n\t\t\t\t */\n\t\t        this.autostart = options.autostart;\n\t\t        /**\n\t\t\t\t *  the buffer\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Buffer}\n\t\t\t\t */\n\t\t        this._buffer = new Tone.Buffer({\n\t\t            'url': options.url,\n\t\t            'onload': this._onload.bind(this, options.onload),\n\t\t            'reverse': options.reverse\n\t\t        });\n\t\t        if (url instanceof AudioBuffer) {\n\t\t            this._buffer.set(url);\n\t\t        }\n\t\t        /**\n\t\t\t\t *  if the buffer should loop once it's over\n\t\t\t\t *  @type {boolean}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loop = options.loop;\n\t\t        /**\n\t\t\t\t *  if 'loop' is true, the loop will start at this position\n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopStart = options.loopStart;\n\t\t        /**\n\t\t\t\t *  if 'loop' is true, the loop will end at this position\n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopEnd = options.loopEnd;\n\t\t        /**\n\t\t\t\t *  the playback rate\n\t\t\t\t *  @private\n\t\t\t\t *  @type {number}\n\t\t\t\t */\n\t\t        this._playbackRate = options.playbackRate;\n\t\t        /**\n\t\t\t\t *  Enabling retrigger will allow a player to be restarted\n\t\t\t\t *  before the the previous 'start' is done playing. Otherwise, \n\t\t\t\t *  successive calls to Tone.Player.start will only start\n\t\t\t\t *  the sample if it had played all the way through. \n\t\t\t\t *  @type {boolean}\n\t\t\t\t */\n\t\t        this.retrigger = options.retrigger;\n\t\t    };\n\t\t    Tone.extend(Tone.Player, Tone.Source);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Player.defaults = {\n\t\t        'onload': Tone.noOp,\n\t\t        'playbackRate': 1,\n\t\t        'loop': false,\n\t\t        'autostart': false,\n\t\t        'loopStart': 0,\n\t\t        'loopEnd': 0,\n\t\t        'retrigger': false,\n\t\t        'reverse': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Load the audio file as an audio buffer.\n\t\t\t *  Decodes the audio asynchronously and invokes\n\t\t\t *  the callback once the audio buffer loads. \n\t\t\t *  Note: this does not need to be called if a url\n\t\t\t *  was passed in to the constructor. Only use this\n\t\t\t *  if you want to manually load a new url. \n\t\t\t * @param {string} url The url of the buffer to load.\n\t\t\t *                     Filetype support depends on the\n\t\t\t *                     browser.\n\t\t\t *  @param  {function=} callback The function to invoke once\n\t\t\t *                               the sample is loaded.\n\t\t\t *  @returns {Tone.Player} this\n\t\t\t */\n\t\t    Tone.Player.prototype.load = function (url, callback) {\n\t\t        this._buffer.load(url, this._onload.bind(this, callback));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Internal callback when the buffer is loaded.\n\t\t\t * @private\n\t\t\t */\n\t\t    Tone.Player.prototype._onload = function (callback) {\n\t\t        callback(this);\n\t\t        if (this.autostart) {\n\t\t            this.start();\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Play the buffer at the given startTime. Optionally add an offset\n\t\t\t *  and/or duration which will play the buffer from a position\n\t\t\t *  within the buffer for the given duration. \n\t\t\t *  \n\t\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t\t *                                 to start at. \n\t\t\t *  @param  {Time=} duration How long the sample should play. If no duration\n\t\t\t *                                is given, it will default to the full length \n\t\t\t *                                of the sample (minus any offset)\n\t\t\t *  @returns {Tone.Player} this\n\t\t\t *  @memberOf Tone.Player#\n\t\t\t *  @method start\n\t\t\t *  @name start\n\t\t\t */\n\t\t    /**\n\t\t\t *  Internal start method\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Player.prototype._start = function (startTime, offset, duration) {\n\t\t        if (this._buffer.loaded) {\n\t\t            //if it's a loop the default offset is the loopstart point\n\t\t            if (this._loop) {\n\t\t                offset = this.defaultArg(offset, this._loopStart);\n\t\t            } else {\n\t\t                //otherwise the default offset is 0\n\t\t                offset = this.defaultArg(offset, 0);\n\t\t            }\n\t\t            offset = this.toSeconds(offset);\n\t\t            //make sure it has a positive duration\n\t\t            duration = this.defaultArg(duration, Math.max(this._buffer.duration - offset, 0));\n\t\t            duration = this.toSeconds(duration);\n\t\t            //the values in seconds\n\t\t            startTime = this.toSeconds(startTime);\n\t\t            //make the source\n\t\t            this._source = this.context.createBufferSource();\n\t\t            this._source.buffer = this._buffer.get();\n\t\t            //set the looping properties\n\t\t            if (this._loop) {\n\t\t                this._source.loop = this._loop;\n\t\t                this._source.loopStart = this.toSeconds(this._loopStart);\n\t\t                this._source.loopEnd = this.toSeconds(this._loopEnd);\n\t\t            } else {\n\t\t                //if it's not looping, set the state change at the end of the sample\n\t\t                this._state.setStateAtTime(Tone.State.Stopped, startTime + duration);\n\t\t            }\n\t\t            //and other properties\n\t\t            this._source.playbackRate.value = this._playbackRate;\n\t\t            this._source.connect(this.output);\n\t\t            //start it\n\t\t            if (this._loop) {\n\t\t                //modify the offset if it's greater than the loop time\n\t\t                var loopEnd = this._source.loopEnd || this._buffer.duration;\n\t\t                var loopStart = this._source.loopStart;\n\t\t                var loopDuration = loopEnd - loopStart;\n\t\t                if (offset > loopDuration) {\n\t\t                    offset = loopStart + offset % loopDuration;\n\t\t                    if (offset > loopEnd) {\n\t\t                        offset -= loopDuration;\n\t\t                    }\n\t\t                }\n\t\t                this._source.start(startTime, offset);\n\t\t            } else {\n\t\t                this._source.start(startTime, offset, duration);\n\t\t            }\n\t\t        } else {\n\t\t            throw Error('Tone.Player: tried to start Player before the buffer was loaded');\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop playback.\n\t\t\t *  @private\n\t\t\t *  @param  {Time} [time=now]\n\t\t\t *  @returns {Tone.Player} this\n\t\t\t */\n\t\t    Tone.Player.prototype._stop = function (time) {\n\t\t        if (this._source) {\n\t\t            this._source.stop(this.toSeconds(time));\n\t\t            this._source = null;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Seek to a specific time in the player's buffer. If the \n\t\t\t *  source is no longer playing at that time, it will stop.\n\t\t\t *  If you seek to a time that \n\t\t\t *  @param {Time} offset The time to seek to.\n\t\t\t *  @param {Time=} time The time for the seek event to occur.\n\t\t\t *  @return {Tone.Player} this\n\t\t\t *  @example\n\t\t\t * source.start(0.2);\n\t\t\t * source.stop(0.4);\n\t\t\t */\n\t\t    Tone.Player.prototype.seek = function (offset, time) {\n\t\t        time = this.toSeconds(time);\n\t\t        if (this._state.getStateAtTime(time) === Tone.State.Started) {\n\t\t            offset = this.toSeconds(offset);\n\t\t            // if it's currently playing, stop it\n\t\t            this._stop(time);\n\t\t            //restart it at the given time\n\t\t            this._start(time, offset);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Set the loop start and end. Will only loop if loop is \n\t\t\t *  set to true. \n\t\t\t *  @param {Time} loopStart The loop end time\n\t\t\t *  @param {Time} loopEnd The loop end time\n\t\t\t *  @returns {Tone.Player} this\n\t\t\t *  @example\n\t\t\t * //loop 0.1 seconds of the file. \n\t\t\t * player.setLoopPoints(0.2, 0.3);\n\t\t\t * player.loop = true;\n\t\t\t */\n\t\t    Tone.Player.prototype.setLoopPoints = function (loopStart, loopEnd) {\n\t\t        this.loopStart = loopStart;\n\t\t        this.loopEnd = loopEnd;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * If loop is true, the loop will start at this position. \n\t\t\t * @memberOf Tone.Player#\n\t\t\t * @type {Time}\n\t\t\t * @name loopStart\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Player.prototype, 'loopStart', {\n\t\t        get: function () {\n\t\t            return this._loopStart;\n\t\t        },\n\t\t        set: function (loopStart) {\n\t\t            this._loopStart = loopStart;\n\t\t            if (this._source) {\n\t\t                this._source.loopStart = this.toSeconds(loopStart);\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * If loop is true, the loop will end at this position.\n\t\t\t * @memberOf Tone.Player#\n\t\t\t * @type {Time}\n\t\t\t * @name loopEnd\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Player.prototype, 'loopEnd', {\n\t\t        get: function () {\n\t\t            return this._loopEnd;\n\t\t        },\n\t\t        set: function (loopEnd) {\n\t\t            this._loopEnd = loopEnd;\n\t\t            if (this._source) {\n\t\t                this._source.loopEnd = this.toSeconds(loopEnd);\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The audio buffer belonging to the player. \n\t\t\t * @memberOf Tone.Player#\n\t\t\t * @type {Tone.Buffer}\n\t\t\t * @name buffer\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Player.prototype, 'buffer', {\n\t\t        get: function () {\n\t\t            return this._buffer;\n\t\t        },\n\t\t        set: function (buffer) {\n\t\t            this._buffer.set(buffer);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * If the buffer should loop once it's over. \n\t\t\t * @memberOf Tone.Player#\n\t\t\t * @type {boolean}\n\t\t\t * @name loop\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Player.prototype, 'loop', {\n\t\t        get: function () {\n\t\t            return this._loop;\n\t\t        },\n\t\t        set: function (loop) {\n\t\t            this._loop = loop;\n\t\t            if (this._source) {\n\t\t                this._source.loop = loop;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The playback speed. 1 is normal speed. This is not a signal because\n\t\t\t * Safari and iOS currently don't support playbackRate as a signal.\n\t\t\t * @memberOf Tone.Player#\n\t\t\t * @type {number}\n\t\t\t * @name playbackRate\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Player.prototype, 'playbackRate', {\n\t\t        get: function () {\n\t\t            return this._playbackRate;\n\t\t        },\n\t\t        set: function (rate) {\n\t\t            this._playbackRate = rate;\n\t\t            if (this._source) {\n\t\t                this._source.playbackRate.value = rate;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The direction the buffer should play in\n\t\t\t * @memberOf Tone.Player#\n\t\t\t * @type {boolean}\n\t\t\t * @name reverse\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Player.prototype, 'reverse', {\n\t\t        get: function () {\n\t\t            return this._buffer.reverse;\n\t\t        },\n\t\t        set: function (rev) {\n\t\t            this._buffer.reverse = rev;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Dispose and disconnect.\n\t\t\t *  @return {Tone.Player} this\n\t\t\t */\n\t\t    Tone.Player.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        if (this._source !== null) {\n\t\t            this._source.disconnect();\n\t\t            this._source = null;\n\t\t        }\n\t\t        this._buffer.dispose();\n\t\t        this._buffer = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Player;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Sampler wraps Tone.Player in an AmplitudeEnvelope.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Instrument}\n\t\t\t *  @param {String} url the url of the audio file\n\t\t\t *  @param {Function=} onload The callback to invoke when the sample is loaded.\n\t\t\t *  @example\n\t\t\t * var sampler = new Sampler(\"./audio/casio/A1.mp3\", function(){\n\t\t\t * \t//repitch the sample down a half step\n\t\t\t * \tsampler.triggerAttack(-1);\n\t\t\t * }).toMaster();\n\t\t\t */\n\t\t    Tone.Sampler = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'url',\n\t\t            'onload'\n\t\t        ], Tone.Sampler.defaults);\n\t\t        Tone.Instrument.call(this, options);\n\t\t        /**\n\t\t\t\t *  The sample player.\n\t\t\t\t *  @type {Tone.Player}\n\t\t\t\t */\n\t\t        this.player = new Tone.Player(options.url, options.onload);\n\t\t        this.player.retrigger = true;\n\t\t        /**\n\t\t\t\t *  The amplitude envelope. \n\t\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t\t */\n\t\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t\t        this.player.chain(this.envelope, this.output);\n\t\t        this._readOnly([\n\t\t            'player',\n\t\t            'envelope'\n\t\t        ]);\n\t\t        this.loop = options.loop;\n\t\t        this.reverse = options.reverse;\n\t\t    };\n\t\t    Tone.extend(Tone.Sampler, Tone.Instrument);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.Sampler.defaults = {\n\t\t        'onload': Tone.noOp,\n\t\t        'loop': false,\n\t\t        'reverse': false,\n\t\t        'envelope': {\n\t\t            'attack': 0.001,\n\t\t            'decay': 0,\n\t\t            'sustain': 1,\n\t\t            'release': 0.1\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the start of the sample. \n\t\t\t *  @param {Interval} [pitch=0] The amount the sample should\n\t\t\t *                              be repitched. \n\t\t\t *  @param {Time} [time=now] The time when the sample should start\n\t\t\t *  @param {NormalRange} [velocity=1] The velocity of the note\n\t\t\t *  @returns {Tone.Sampler} this\n\t\t\t *  @example\n\t\t\t * sampler.triggerAttack(0, \"+0.1\", 0.5);\n\t\t\t */\n\t\t    Tone.Sampler.prototype.triggerAttack = function (pitch, time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        pitch = this.defaultArg(pitch, 0);\n\t\t        this.player.playbackRate = this.intervalToFrequencyRatio(pitch);\n\t\t        this.player.start(time);\n\t\t        this.envelope.triggerAttack(time, velocity);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the release portion of the sample. Will stop the sample once the \n\t\t\t *  envelope has fully released. \n\t\t\t *  \n\t\t\t *  @param {Time} [time=now] The time when the note should release\n\t\t\t *  @returns {Tone.Sampler} this\n\t\t\t *  @example\n\t\t\t * sampler.triggerRelease();\n\t\t\t */\n\t\t    Tone.Sampler.prototype.triggerRelease = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this.envelope.triggerRelease(time);\n\t\t        this.player.stop(this.toSeconds(this.envelope.release) + time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * If the output sample should loop or not.\n\t\t\t * @memberOf Tone.Sampler#\n\t\t\t * @type {number|string}\n\t\t\t * @name loop\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Sampler.prototype, 'loop', {\n\t\t        get: function () {\n\t\t            return this.player.loop;\n\t\t        },\n\t\t        set: function (loop) {\n\t\t            this.player.loop = loop;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The direction the buffer should play in\n\t\t\t * @memberOf Tone.Sampler#\n\t\t\t * @type {boolean}\n\t\t\t * @name reverse\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Sampler.prototype, 'reverse', {\n\t\t        get: function () {\n\t\t            return this.player.reverse;\n\t\t        },\n\t\t        set: function (rev) {\n\t\t            this.player.reverse = rev;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The buffer to play.\n\t\t\t * @memberOf Tone.Sampler#\n\t\t\t * @type {Tone.Buffer}\n\t\t\t * @name buffer\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Sampler.prototype, 'buffer', {\n\t\t        get: function () {\n\t\t            return this.player.buffer;\n\t\t        },\n\t\t        set: function (buff) {\n\t\t            this.player.buffer = buff;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Sampler} this\n\t\t\t */\n\t\t    Tone.Sampler.prototype.dispose = function () {\n\t\t        Tone.Instrument.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'player',\n\t\t            'envelope'\n\t\t        ]);\n\t\t        this.player.dispose();\n\t\t        this.player = null;\n\t\t        this.envelope.dispose();\n\t\t        this.envelope = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Sampler;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Now called Tone.Synth\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Monophonic}\n\t\t\t */\n\t\t    Tone.SimpleSynth = function (options) {\n\t\t        console.warn('Tone.SimpleSynth is now called Tone.Synth');\n\t\t        Tone.Synth.call(this, options);\n\t\t    };\n\t\t    Tone.extend(Tone.SimpleSynth, Tone.Synth);\n\t\t    return Tone.SimpleSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Maps a NormalRange [0, 1] to an AudioRange [-1, 1]. \n\t\t\t *         See also Tone.AudioToGain. \n\t\t\t *\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @constructor\n\t\t\t *  @example\n\t\t\t * var g2a = new Tone.GainToAudio();\n\t\t\t */\n\t\t    Tone.GainToAudio = function () {\n\t\t        /**\n\t\t\t\t *  @type {WaveShaperNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._norm = this.input = this.output = new Tone.WaveShaper(function (x) {\n\t\t            return Math.abs(x) * 2 - 1;\n\t\t        });\n\t\t    };\n\t\t    Tone.extend(Tone.GainToAudio, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.GainToAudio} this\n\t\t\t */\n\t\t    Tone.GainToAudio.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._norm.dispose();\n\t\t        this._norm = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.GainToAudio;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Normalize takes an input min and max and maps it linearly to NormalRange [0,1]\n\t\t\t *\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @constructor\n\t\t\t *  @param {number} inputMin the min input value\n\t\t\t *  @param {number} inputMax the max input value\n\t\t\t *  @example\n\t\t\t * var norm = new Tone.Normalize(2, 4);\n\t\t\t * var sig = new Tone.Signal(3).connect(norm);\n\t\t\t * //output of norm is 0.5. \n\t\t\t */\n\t\t    Tone.Normalize = function (inputMin, inputMax) {\n\t\t        /**\n\t\t\t\t *  the min input value\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._inputMin = this.defaultArg(inputMin, 0);\n\t\t        /**\n\t\t\t\t *  the max input value\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._inputMax = this.defaultArg(inputMax, 1);\n\t\t        /**\n\t\t\t\t *  subtract the min from the input\n\t\t\t\t *  @type {Tone.Add}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sub = this.input = new Tone.Add(0);\n\t\t        /**\n\t\t\t\t *  divide by the difference between the input and output\n\t\t\t\t *  @type {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._div = this.output = new Tone.Multiply(1);\n\t\t        this._sub.connect(this._div);\n\t\t        this._setRange();\n\t\t    };\n\t\t    Tone.extend(Tone.Normalize, Tone.SignalBase);\n\t\t    /**\n\t\t\t * The minimum value the input signal will reach.\n\t\t\t * @memberOf Tone.Normalize#\n\t\t\t * @type {number}\n\t\t\t * @name min\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Normalize.prototype, 'min', {\n\t\t        get: function () {\n\t\t            return this._inputMin;\n\t\t        },\n\t\t        set: function (min) {\n\t\t            this._inputMin = min;\n\t\t            this._setRange();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The maximum value the input signal will reach.\n\t\t\t * @memberOf Tone.Normalize#\n\t\t\t * @type {number}\n\t\t\t * @name max\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Normalize.prototype, 'max', {\n\t\t        get: function () {\n\t\t            return this._inputMax;\n\t\t        },\n\t\t        set: function (max) {\n\t\t            this._inputMax = max;\n\t\t            this._setRange();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  set the values\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Normalize.prototype._setRange = function () {\n\t\t        this._sub.value = -this._inputMin;\n\t\t        this._div.value = 1 / (this._inputMax - this._inputMin);\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Normalize} this\n\t\t\t */\n\t\t    Tone.Normalize.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._sub.dispose();\n\t\t        this._sub = null;\n\t\t        this._div.dispose();\n\t\t        this._div = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Normalize;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Wrapper around the native BufferSourceNode.\n\t\t\t *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play\n\t\t\t *  @param  {Function}  onended  The callback to invoke when the \n\t\t\t *                               buffer is done playing.\n\t\t\t */\n\t\t    Tone.BufferSource = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'buffer',\n\t\t            'onended'\n\t\t        ], Tone.BufferSource.defaults);\n\t\t        /**\n\t\t\t\t *  The callback to invoke after the \n\t\t\t\t *  buffer source is done playing. \n\t\t\t\t *  @type  {Function}\n\t\t\t\t */\n\t\t        this.onended = options.onended;\n\t\t        /**\n\t\t\t\t *  The time that the buffer was started.\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._startTime = -1;\n\t\t        /**\n\t\t\t\t *  The gain node which envelopes the BufferSource\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._gainNode = this.output = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  The buffer source\n\t\t\t\t *  @type  {AudioBufferSourceNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._source = this.context.createBufferSource();\n\t\t        this._source.connect(this._gainNode);\n\t\t        this._source.onended = this._onended.bind(this);\n\t\t        /**\n\t\t\t\t *  The playbackRate of the buffer\n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.playbackRate = new Tone.Param(this._source.playbackRate, Tone.Type.Positive);\n\t\t        /**\n\t\t\t\t *  The fadeIn time of the amplitude envelope.\n\t\t\t\t *  @type {Time}\n\t\t\t\t */\n\t\t        this.fadeIn = options.fadeIn;\n\t\t        /**\n\t\t\t\t *  The fadeOut time of the amplitude envelope.\n\t\t\t\t *  @type {Time}\n\t\t\t\t */\n\t\t        this.fadeOut = options.fadeOut;\n\t\t        /**\n\t\t\t\t *  The value that the buffer ramps to\n\t\t\t\t *  @type {Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._gain = 1;\n\t\t        //set the buffer initially\n\t\t        if (!this.isUndef(options.buffer)) {\n\t\t            this.buffer = options.buffer;\n\t\t        }\n\t\t        this.loop = options.loop;\n\t\t    };\n\t\t    Tone.extend(Tone.BufferSource);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.BufferSource.defaults = {\n\t\t        'onended': Tone.noOp,\n\t\t        'fadeIn': 0,\n\t\t        'fadeOut': 0\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t\t *  @type {Tone.State}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.BufferSource#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.BufferSource.prototype, 'state', {\n\t\t        get: function () {\n\t\t            var now = this.now();\n\t\t            if (this._startTime !== -1 && now > this._startTime) {\n\t\t                return Tone.State.Started;\n\t\t            } else {\n\t\t                return Tone.State.Stopped;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Start the buffer\n\t\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t\t *                                 to start at. \n\t\t\t *  @param  {Time=} duration How long the sample should play. If no duration\n\t\t\t *                                is given, it will default to the full length \n\t\t\t *                                of the sample (minus any offset)\n\t\t\t *  @param  {Gain}  [gain=1]  The gain to play the buffer back at.\n\t\t\t *  @param  {Time=}  fadeInTime  The optional fadeIn ramp time.\n\t\t\t *  @return  {Tone.BufferSource}  this\n\t\t\t */\n\t\t    Tone.BufferSource.prototype.start = function (time, offset, duration, gain, fadeInTime) {\n\t\t        if (this._startTime !== -1) {\n\t\t            throw new Error('Tone.BufferSource: can only be started once.');\n\t\t        }\n\t\t        if (this.buffer) {\n\t\t            time = this.toSeconds(time);\n\t\t            //if it's a loop the default offset is the loopstart point\n\t\t            if (this.loop) {\n\t\t                offset = this.defaultArg(offset, this.loopStart);\n\t\t            } else {\n\t\t                //otherwise the default offset is 0\n\t\t                offset = this.defaultArg(offset, 0);\n\t\t            }\n\t\t            offset = this.toSeconds(offset);\n\t\t            //the values in seconds\n\t\t            time = this.toSeconds(time);\n\t\t            this._source.start(time, offset);\n\t\t            gain = this.defaultArg(gain, 1);\n\t\t            this._gain = gain;\n\t\t            //the fadeIn time\n\t\t            if (this.isUndef(fadeInTime)) {\n\t\t                fadeInTime = this.toSeconds(this.fadeIn);\n\t\t            } else {\n\t\t                fadeInTime = this.toSeconds(fadeInTime);\n\t\t            }\n\t\t            if (fadeInTime > 0) {\n\t\t                this._gainNode.gain.setValueAtTime(0, time);\n\t\t                this._gainNode.gain.linearRampToValueAtTime(this._gain, time + fadeInTime);\n\t\t            } else {\n\t\t                this._gainNode.gain.setValueAtTime(gain, time);\n\t\t            }\n\t\t            this._startTime = time + fadeInTime;\n\t\t            if (!this.isUndef(duration)) {\n\t\t                duration = this.defaultArg(duration, this.buffer.duration - offset);\n\t\t                duration = this.toSeconds(duration);\n\t\t                this.stop(time + duration + fadeInTime, fadeInTime);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the buffer. Optionally add a ramp time to fade the \n\t\t\t *  buffer out. \n\t\t\t *  @param  {Time=}  time         The time the buffer should stop.\n\t\t\t *  @param  {Time=}  fadeOutTime  How long the gain should fade out for\n\t\t\t *  @return  {Tone.BufferSource}  this\n\t\t\t */\n\t\t    Tone.BufferSource.prototype.stop = function (time, fadeOutTime) {\n\t\t        if (this.buffer) {\n\t\t            time = this.toSeconds(time);\n\t\t            //the fadeOut time\n\t\t            if (this.isUndef(fadeOutTime)) {\n\t\t                fadeOutTime = this.toSeconds(this.fadeOut);\n\t\t            } else {\n\t\t                fadeOutTime = this.toSeconds(fadeOutTime);\n\t\t            }\n\t\t            //cancel the end curve\n\t\t            this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);\n\t\t            //set a new one\n\t\t            if (fadeOutTime > 0) {\n\t\t                this._gainNode.gain.setValueAtTime(this._gain, time);\n\t\t                this._gainNode.gain.linearRampToValueAtTime(0, time + fadeOutTime);\n\t\t                time += fadeOutTime;\n\t\t            } else {\n\t\t                this._gainNode.gain.setValueAtTime(0, time);\n\t\t            }\n\t\t            // fix for safari bug and old FF\n\t\t            if (!this.isNumber(this._source.playbackState) || this._source.playbackState === 2) {\n\t\t                this._source.stop(time);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Internal callback when the buffer is ended. \n\t\t\t *  Invokes `onended` and disposes the node.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.BufferSource.prototype._onended = function () {\n\t\t        this.onended(this);\n\t\t        this.dispose();\n\t\t    };\n\t\t    /**\n\t\t\t * If loop is true, the loop will start at this position. \n\t\t\t * @memberOf Tone.BufferSource#\n\t\t\t * @type {Time}\n\t\t\t * @name loopStart\n\t\t\t */\n\t\t    Object.defineProperty(Tone.BufferSource.prototype, 'loopStart', {\n\t\t        get: function () {\n\t\t            return this._source.loopStart;\n\t\t        },\n\t\t        set: function (loopStart) {\n\t\t            this._source.loopStart = this.toSeconds(loopStart);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * If loop is true, the loop will end at this position.\n\t\t\t * @memberOf Tone.BufferSource#\n\t\t\t * @type {Time}\n\t\t\t * @name loopEnd\n\t\t\t */\n\t\t    Object.defineProperty(Tone.BufferSource.prototype, 'loopEnd', {\n\t\t        get: function () {\n\t\t            return this._source.loopEnd;\n\t\t        },\n\t\t        set: function (loopEnd) {\n\t\t            this._source.loopEnd = this.toSeconds(loopEnd);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The audio buffer belonging to the player. \n\t\t\t * @memberOf Tone.BufferSource#\n\t\t\t * @type {AudioBuffer}\n\t\t\t * @name buffer\n\t\t\t */\n\t\t    Object.defineProperty(Tone.BufferSource.prototype, 'buffer', {\n\t\t        get: function () {\n\t\t            if (this._source) {\n\t\t                return this._source.buffer;\n\t\t            } else {\n\t\t                return null;\n\t\t            }\n\t\t        },\n\t\t        set: function (buffer) {\n\t\t            if (buffer instanceof Tone.Buffer) {\n\t\t                this._source.buffer = buffer.get();\n\t\t            } else {\n\t\t                this._source.buffer = buffer;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * If the buffer should loop once it's over. \n\t\t\t * @memberOf Tone.BufferSource#\n\t\t\t * @type {boolean}\n\t\t\t * @name loop\n\t\t\t */\n\t\t    Object.defineProperty(Tone.BufferSource.prototype, 'loop', {\n\t\t        get: function () {\n\t\t            return this._source.loop;\n\t\t        },\n\t\t        set: function (loop) {\n\t\t            this._source.loop = loop;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.BufferSource}  this\n\t\t\t */\n\t\t    Tone.BufferSource.prototype.dispose = function () {\n\t\t        this.onended = null;\n\t\t        if (this._source) {\n\t\t            this._source.onended = null;\n\t\t            this._source.disconnect();\n\t\t            this._source = null;\n\t\t        }\n\t\t        if (this._gainNode) {\n\t\t            this._gainNode.dispose();\n\t\t            this._gainNode = null;\n\t\t        }\n\t\t        this._startTime = -1;\n\t\t        this.playbackRate = null;\n\t\t        this.output = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.BufferSource;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    //polyfill for getUserMedia\n\t\t    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n\t\t    /**\n\t\t\t *  @class  Tone.ExternalInput is a WebRTC Audio Input. Check \n\t\t\t *          [Media Stream API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_API)\n\t\t\t *          to see which browsers are supported. As of\n\t\t\t *          writing this, Chrome, Firefox, and Opera \n\t\t\t *          support Media Stream. Chrome allows enumeration \n\t\t\t *          of the sources, and access to device name over a \n\t\t\t *          secure (HTTPS) connection. See [https://simpl.info](https://simpl.info/getusermedia/sources/index.html) \n\t\t\t *          vs [http://simple.info](https://simpl.info/getusermedia/sources/index.html) \n\t\t\t *          on a Chrome browser for the difference.\n\t\t\t *         \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Source}\n\t\t\t *  @param {number} [inputNum=0] If multiple inputs are present, select the input number. Chrome only.\n\t\t\t *  @example\n\t\t\t * //select the third input\n\t\t\t * var motu = new Tone.ExternalInput(3);\n\t\t\t * \n\t\t\t * //opening the input asks the user to activate their mic\n\t\t\t * motu.open(function(){\n\t\t\t * \t//opening is activates the microphone\n\t\t\t * \t//starting lets audio through\n\t\t\t * \tmotu.start(10);\n\t\t\t * });\n\t\t\t */\n\t\t    Tone.ExternalInput = function () {\n\t\t        var options = this.optionsObject(arguments, ['inputNum'], Tone.ExternalInput.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  The MediaStreamNode \n\t\t\t\t *  @type {MediaStreamAudioSourceNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._mediaStream = null;\n\t\t        /**\n\t\t\t\t *  The media stream created by getUserMedia.\n\t\t\t\t *  @type {LocalMediaStream}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._stream = null;\n\t\t        /**\n\t\t\t\t *  The constraints argument for getUserMedia\n\t\t\t\t *  @type {Object}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._constraints = { 'audio': true };\n\t\t        /**\n\t\t\t\t *  The input source position in Tone.ExternalInput.sources. \n\t\t\t\t *  Set before ExternalInput.open().\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._inputNum = options.inputNum;\n\t\t        /**\n\t\t\t\t *  Gates the input signal for start/stop. \n\t\t\t\t *  Initially closed.\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._gate = new Tone.Gain(0).connect(this.output);\n\t\t    };\n\t\t    Tone.extend(Tone.ExternalInput, Tone.Source);\n\t\t    /**\n\t\t\t * the default parameters\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t    Tone.ExternalInput.defaults = { 'inputNum': 0 };\n\t\t    /**\n\t\t\t * wrapper for getUserMedia function\n\t\t\t * @param {function} callback\n\t\t\t * @param {function} error\n\t\t\t * @private\n\t\t\t */\n\t\t    Tone.ExternalInput.prototype._getUserMedia = function (callback, error) {\n\t\t        if (!Tone.ExternalInput.supported) {\n\t\t            error('browser does not support \\'getUserMedia\\'');\n\t\t        }\n\t\t        if (Tone.ExternalInput.sources[this._inputNum]) {\n\t\t            this._constraints = { audio: { optional: [{ sourceId: Tone.ExternalInput.sources[this._inputNum].id }] } };\n\t\t        }\n\t\t        navigator.getUserMedia(this._constraints, function (stream) {\n\t\t            this._onStream(stream);\n\t\t            callback();\n\t\t        }.bind(this), function (err) {\n\t\t            error(err);\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t\t * called when the stream is successfully setup\n\t\t\t * @param  {LocalMediaStream} stream\n\t\t\t * @private\n\t\t\t */\n\t\t    Tone.ExternalInput.prototype._onStream = function (stream) {\n\t\t        if (!this.isFunction(this.context.createMediaStreamSource)) {\n\t\t            throw new Error('Tone.ExternalInput: browser does not support the \\'MediaStreamSourceNode\\'');\n\t\t        }\n\t\t        //can only start a new source if the previous one is closed\n\t\t        if (!this._stream) {\n\t\t            this._stream = stream;\n\t\t            //Wrap a MediaStreamSourceNode around the live input stream.\n\t\t            this._mediaStream = this.context.createMediaStreamSource(stream);\n\t\t            //Connect the MediaStreamSourceNode to a gate gain node\n\t\t            this._mediaStream.connect(this._gate);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Open the media stream \n\t\t\t *  @param  {function=} callback The callback function to \n\t\t\t *                       execute when the stream is open\n\t\t\t *  @param  {function=} error The callback function to execute\n\t\t\t *                            when the media stream can't open. \n\t\t\t *                            This is fired either because the browser\n\t\t\t *                            doesn't support the media stream,\n\t\t\t *                            or the user blocked opening the microphone. \n\t\t\t *  @return {Tone.ExternalInput} this\n\t\t\t */\n\t\t    Tone.ExternalInput.prototype.open = function (callback, error) {\n\t\t        callback = this.defaultArg(callback, Tone.noOp);\n\t\t        error = this.defaultArg(error, Tone.noOp);\n\t\t        Tone.ExternalInput.getSources(function () {\n\t\t            this._getUserMedia(callback, error);\n\t\t        }.bind(this));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Close the media stream\n\t\t\t *  @return {Tone.ExternalInput} this\n\t\t\t */\n\t\t    Tone.ExternalInput.prototype.close = function () {\n\t\t        if (this._stream) {\n\t\t            var track = this._stream.getTracks()[this._inputNum];\n\t\t            if (!this.isUndef(track)) {\n\t\t                track.stop();\n\t\t            }\n\t\t            this._stream = null;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the stream\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.ExternalInput.prototype._start = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._gate.gain.setValueAtTime(1, time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stops the stream.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.ExternalInput.prototype._stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._gate.gain.setValueAtTime(0, time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Clean up.\n\t\t\t * @return {Tone.ExternalInput} this\n\t\t\t */\n\t\t    Tone.ExternalInput.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this.close();\n\t\t        if (this._mediaStream) {\n\t\t            this._mediaStream.disconnect();\n\t\t            this._mediaStream = null;\n\t\t        }\n\t\t        this._constraints = null;\n\t\t        this._gate.dispose();\n\t\t        this._gate = null;\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    // STATIC METHODS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t * The array of available sources, different depending on whether connection is secure\n\t\t\t * @type {Array}\n\t\t\t * @static\n\t\t\t */\n\t\t    Tone.ExternalInput.sources = [];\n\t\t    /**\n\t\t\t * indicates whether browser supports MediaStreamTrack.getSources (i.e. Chrome vs Firefox)\n\t\t\t * @type {Boolean}\n\t\t\t * @private\n\t\t\t */\n\t\t    Tone.ExternalInput._canGetSources = !Tone.prototype.isUndef(window.MediaStreamTrack) && Tone.prototype.isFunction(MediaStreamTrack.getSources);\n\t\t    /**\n\t\t\t *  If getUserMedia is supported by the browser.\n\t\t\t *  @type  {Boolean}\n\t\t\t *  @memberOf Tone.ExternalInput#\n\t\t\t *  @name supported\n\t\t\t *  @static\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.ExternalInput, 'supported', {\n\t\t        get: function () {\n\t\t            return Tone.prototype.isFunction(navigator.getUserMedia);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Populates the source list. Invokes the callback with an array of \n\t\t\t *  possible audio sources.\n\t\t\t *  @param  {function=} callback Callback to be executed after populating list \n\t\t\t *  @return {Tone.ExternalInput} this\n\t\t\t *  @static\n\t\t\t *  @example\n\t\t\t * var soundflower = new Tone.ExternalInput();\n\t\t\t * Tone.ExternalInput.getSources(selectSoundflower);\n\t\t\t *\n\t\t\t * function selectSoundflower(sources){\n\t\t\t * \tfor(var i = 0; i < sources.length; i++){\n\t\t\t * \t\tif(sources[i].label === \"soundflower\"){\n\t\t\t * \t\t\tsoundflower.inputNum = i;\n\t\t\t * \t\t\tsoundflower.open(function(){\n\t\t\t * \t\t\t\tsoundflower.start();\n\t\t\t * \t\t\t});\n\t\t\t * \t\t\tbreak;\n\t\t\t * \t\t}\n\t\t\t * \t}\n\t\t\t * };\n\t\t\t */\n\t\t    Tone.ExternalInput.getSources = function (callback) {\n\t\t        if (Tone.ExternalInput.sources.length === 0 && Tone.ExternalInput._canGetSources) {\n\t\t            MediaStreamTrack.getSources(function (media_sources) {\n\t\t                for (var i = 0; i < media_sources.length; i++) {\n\t\t                    if (media_sources[i].kind === 'audio') {\n\t\t                        Tone.ExternalInput.sources[i] = media_sources[i];\n\t\t                    }\n\t\t                }\n\t\t                callback(Tone.ExternalInput.sources);\n\t\t            });\n\t\t        } else {\n\t\t            callback(Tone.ExternalInput.sources);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.ExternalInput;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.MultiPlayer is well suited for one-shots, multi-sampled istruments\n\t\t\t *         or any time you need to play a bunch of audio buffers. \n\t\t\t *  @param  {Object|Array|Tone.Buffers}  buffers  The buffers which are available\n\t\t\t *                                                to the MultiPlayer\n\t\t\t *  @param {Function} onload The callback to invoke when all of the buffers are loaded.\n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * var multiPlayer = new MultiPlayer({\n\t\t\t * \t\"kick\" : \"path/to/kick.mp3\",\n\t\t\t * \t\"snare\" : \"path/to/snare.mp3\",\n\t\t\t * }, function(){\n\t\t\t * \tmultiPlayer.start(\"kick\");\n\t\t\t * });\n\t\t\t *  @example\n\t\t\t * //can also store the values in an array\n\t\t\t * var multiPlayer = new MultiPlayer([\"path/to/kick.mp3\", \"path/to/snare.mp3\"], \n\t\t\t * function(){\n\t\t\t * \t//if an array is passed in, the samples are referenced to by index\n\t\t\t * \tmultiPlayer.start(1);\n\t\t\t * });\n\t\t\t */\n\t\t    Tone.MultiPlayer = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'urls',\n\t\t            'onload'\n\t\t        ], Tone.MultiPlayer.defaults);\n\t\t        if (options.urls instanceof Tone.Buffers) {\n\t\t            /**\n\t\t\t\t\t *  All the buffers belonging to the player.\n\t\t\t\t\t *  @type  {Tone.Buffers}\n\t\t\t\t\t */\n\t\t            this.buffers = options.urls;\n\t\t        } else {\n\t\t            this.buffers = new Tone.Buffers(options.urls, options.onload);\n\t\t        }\n\t\t        /**\n\t\t\t\t *  Keeps track of the currently playing sources.\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._activeSources = [];\n\t\t        /**\n\t\t\t\t *  The fade in envelope which is applied\n\t\t\t\t *  to the beginning of the BufferSource\n\t\t\t\t *  @type  {Time}\n\t\t\t\t */\n\t\t        this.fadeIn = options.fadeIn;\n\t\t        /**\n\t\t\t\t *  The fade out envelope which is applied\n\t\t\t\t *  to the end of the BufferSource\n\t\t\t\t *  @type  {Time}\n\t\t\t\t */\n\t\t        this.fadeOut = options.fadeOut;\n\t\t        /**\n\t\t\t\t *  The output volume node\n\t\t\t\t *  @type  {Tone.Volume}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t\t        /**\n\t\t\t\t * The volume of the output in decibels.\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t * @example\n\t\t\t\t * source.volume.value = -6;\n\t\t\t\t */\n\t\t        this.volume = this._volume.volume;\n\t\t        this._readOnly('volume');\n\t\t        //make the output explicitly stereo\n\t\t        this._volume.output.output.channelCount = 2;\n\t\t        this._volume.output.output.channelCountMode = 'explicit';\n\t\t        //mute initially\n\t\t        this.mute = options.mute;\n\t\t    };\n\t\t    Tone.extend(Tone.MultiPlayer, Tone.Source);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.MultiPlayer.defaults = {\n\t\t        'onload': Tone.noOp,\n\t\t        'fadeIn': 0,\n\t\t        'fadeOut': 0\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the given buffer.\n\t\t\t *  @param  {String|Number|AudioBuffer|Tone.Buffer}  buffer\n\t\t\t *  @return  {AudioBuffer}  The requested buffer.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype._getBuffer = function (buffer) {\n\t\t        if (this.isNumber(buffer) || this.isString(buffer)) {\n\t\t            return this.buffers.get(buffer).get();\n\t\t        } else if (buffer instanceof Tone.Buffer) {\n\t\t            return buffer.get();\n\t\t        } else {\n\t\t            return buffer;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Start a buffer by name. The `start` method allows a number of options\n\t\t\t *  to be passed in such as offset, interval, and gain. This is good for multi-sampled \n\t\t\t *  instruments and sound sprites where samples are repitched played back at different velocities.\n\t\t\t *  @param  {String|AudioBuffer}  buffer    The name of the buffer to start.\n\t\t\t *                                          Or pass in a buffer which will be started.\n\t\t\t *  @param  {Time}  time      When to start the buffer.\n\t\t\t *  @param  {Time}  [offset=0]    The offset into the buffer to play from.\n\t\t\t *  @param  {Time=}  duration   How long to play the buffer for.\n\t\t\t *  @param  {Interval}  [pitch=0]  The interval to repitch the buffer.\n\t\t\t *  @param  {Gain}  [gain=1]      The gain to play the sample at.\n\t\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype.start = function (buffer, time, offset, duration, pitch, gain) {\n\t\t        buffer = this._getBuffer(buffer);\n\t\t        var source = new Tone.BufferSource(buffer).connect(this.output);\n\t\t        this._activeSources.push(source);\n\t\t        time = this.toSeconds(time);\n\t\t        source.start(time, offset, duration, this.defaultArg(gain, 1), this.fadeIn);\n\t\t        if (duration) {\n\t\t            source.stop(time + this.toSeconds(duration), this.fadeOut);\n\t\t        }\n\t\t        source.onended = this._onended.bind(this);\n\t\t        pitch = this.defaultArg(pitch, 0);\n\t\t        source.playbackRate.value = this.intervalToFrequencyRatio(pitch);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Start a looping buffer by name. Similar to `start`, but the buffer\n\t\t\t *  is looped instead of played straight through. Can still be stopped with `stop`. \n\t\t\t *  @param  {String|AudioBuffer}  buffer    The name of the buffer to start.\n\t\t\t *                                          Or pass in a buffer which will be started.\n\t\t\t *  @param  {Time}  time      When to start the buffer.\n\t\t\t *  @param  {Time}  [offset=0]    The offset into the buffer to play from.\n\t\t\t *  @param  {Time=}  loopStart   The start of the loop.\n\t\t\t *  @param  {Time=}  loopEnd\tThe end of the loop.\n\t\t\t *  @param  {Interval}  [pitch=0]  The interval to repitch the buffer.\n\t\t\t *  @param  {Gain}  [gain=1]      The gain to play the sample at.\n\t\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype.startLoop = function (buffer, time, offset, loopStart, loopEnd, pitch, gain) {\n\t\t        buffer = this._getBuffer(buffer);\n\t\t        var source = new Tone.BufferSource(buffer).connect(this.output);\n\t\t        this._activeSources.push(source);\n\t\t        time = this.toSeconds(time);\n\t\t        source.loop = true;\n\t\t        source.loopStart = this.toSeconds(this.defaultArg(loopStart, 0));\n\t\t        source.loopEnd = this.toSeconds(this.defaultArg(loopEnd, 0));\n\t\t        source.start(time, offset, undefined, this.defaultArg(gain, 1), this.fadeIn);\n\t\t        source.onended = this._onended.bind(this);\n\t\t        pitch = this.defaultArg(pitch, 0);\n\t\t        source.playbackRate.value = this.intervalToFrequencyRatio(pitch);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Internal callback when a buffer is done playing.\n\t\t\t *  @param  {Tone.BufferSource}  source  The stopped source\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype._onended = function (source) {\n\t\t        var index = this._activeSources.indexOf(source);\n\t\t        this._activeSources.splice(index, 1);\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop all instances of the currently playing buffer at the given time.\n\t\t\t *  @param  {String|AudioBuffer}  buffer  The buffer to stop.\n\t\t\t *  @param  {Time=}  time    When to stop the buffer\n\t\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype.stop = function (buffer, time) {\n\t\t        buffer = this._getBuffer(buffer);\n\t\t        time = this.toSeconds(time);\n\t\t        for (var i = 0; i < this._activeSources.length; i++) {\n\t\t            if (this._activeSources[i].buffer === buffer) {\n\t\t                this._activeSources[i].stop(time, this.fadeOut);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop all currently playing buffers at the given time.\n\t\t\t *  @param  {Time=}  time  When to stop the buffers.\n\t\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype.stopAll = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        for (var i = 0; i < this._activeSources.length; i++) {\n\t\t            this._activeSources[i].stop(time, this.fadeOut);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Add another buffer to the available buffers.\n\t\t\t *  @param {String} name The name to that the buffer is refered\n\t\t\t *                       to in start/stop methods. \n\t\t\t *  @param {String|Tone.Buffer} url The url of the buffer to load\n\t\t\t *                                  or the buffer.\n\t\t\t *  @param {Function} callback The function to invoke after the buffer is loaded.\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype.add = function (name, url, callback) {\n\t\t        this.buffers.add(name, url, callback);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the playback state of the source. \"started\"\n\t\t\t *  if there are any buffers playing. \"stopped\" otherwise.\n\t\t\t *  @type {Tone.State}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.MultiPlayer#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.MultiPlayer.prototype, 'state', {\n\t\t        get: function () {\n\t\t            return this._activeSources.length > 0 ? Tone.State.Started : Tone.State.Stopped;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * Mute the output. \n\t\t\t * @memberOf Tone.MultiPlayer#\n\t\t\t * @type {boolean}\n\t\t\t * @name mute\n\t\t\t * @example\n\t\t\t * //mute the output\n\t\t\t * source.mute = true;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.MultiPlayer.prototype, 'mute', {\n\t\t        get: function () {\n\t\t            return this._volume.mute;\n\t\t        },\n\t\t        set: function (mute) {\n\t\t            this._volume.mute = mute;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._volume.dispose();\n\t\t        this._volume = null;\n\t\t        this._writable('volume');\n\t\t        this.volume = null;\n\t\t        this.buffers.dispose();\n\t\t        this.buffers = null;\n\t\t        for (var i = 0; i < this._activeSources.length; i++) {\n\t\t            this._activeSources[i].dispose();\n\t\t        }\n\t\t        this._activeSources = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MultiPlayer;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t * @class Tone.GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).\n\t\t\t *        Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the \n\t\t\t *        amount of time each small chunk of audio is played for and the overlap is the \n\t\t\t *        amount of crossfading transition time between successive grains.\n\t\t\t * @extends {Tone}\n\t\t\t * @param {String|Tone.Buffer} url\tThe url to load, or the Tone.Buffer to play.\n\t\t\t * @param {Function=} callback The callback to invoke after the url is loaded.\n\t\t\t */\n\t\t    Tone.GrainPlayer = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'url',\n\t\t            'onload'\n\t\t        ], Tone.GrainPlayer.defaults);\n\t\t        Tone.Source.call(this);\n\t\t        /**\n\t\t\t\t *  The audio buffer belonging to the player.\n\t\t\t\t *  @type  {Tone.Buffer}\n\t\t\t\t */\n\t\t        this.buffer = new Tone.Buffer(options.url, options.onload);\n\t\t        /**\n\t\t\t\t *  Plays the buffer with a small envelope\n\t\t\t\t *  @type  {Tone.MultiPlayer}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._player = this.output = new Tone.MultiPlayer();\n\t\t        /**\n\t\t\t\t *  Create a repeating tick to schedule\n\t\t\t\t *  the grains.\n\t\t\t\t *  @type  {Tone.Clock}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._clock = new Tone.Clock(this._tick.bind(this), 1);\n\t\t        /**\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopStart = 0;\n\t\t        /**\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopEnd = 0;\n\t\t        /**\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._playbackRate = options.playbackRate;\n\t\t        /**\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._grainSize = options.grainSize;\n\t\t        /**\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Number}\n\t\t\t\t */\n\t\t        this._overlap = options.overlap;\n\t\t        /**\n\t\t\t\t *  Adjust the pitch independently of the playbackRate.\n\t\t\t\t *  @type  {Cents}\n\t\t\t\t */\n\t\t        this.detune = options.detune;\n\t\t        /**\n\t\t\t\t *  The amount of time randomly added\n\t\t\t\t *  or subtracted from the grain's offset\n\t\t\t\t *  @type  {Time}\n\t\t\t\t */\n\t\t        this.drift = options.drift;\n\t\t        //setup\n\t\t        this.overlap = options.overlap;\n\t\t        this.loop = options.loop;\n\t\t        this.playbackRate = options.playbackRate;\n\t\t        this.grainSize = options.grainSize;\n\t\t        this.loopStart = options.loopStart;\n\t\t        this.loopEnd = options.loopEnd;\n\t\t        this.reverse = options.reverse;\n\t\t    };\n\t\t    Tone.extend(Tone.GrainPlayer, Tone.Source);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.GrainPlayer.defaults = {\n\t\t        'onload': Tone.noOp,\n\t\t        'overlap': 0.1,\n\t\t        'grainSize': 0.2,\n\t\t        'drift': 0,\n\t\t        'playbackRate': 1,\n\t\t        'detune': 0,\n\t\t        'loop': false,\n\t\t        'loopStart': 0,\n\t\t        'loopEnd': 0,\n\t\t        'reverse': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Play the buffer at the given startTime. Optionally add an offset\n\t\t\t *  from the start of the buffer to play from.\n\t\t\t *  \n\t\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t\t *                                 to start at. \n\t\t\t * @return {Tone.GrainPlayer} this\n\t\t\t */\n\t\t    /**\n\t\t\t *  Internal start method\n\t\t\t *  @param {Time} time\n\t\t\t *  @param {Time} offset\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.GrainPlayer.prototype._start = function (time, offset) {\n\t\t        offset = this.defaultArg(offset, 0);\n\t\t        offset = this.toSeconds(offset);\n\t\t        time = this.toSeconds(time);\n\t\t        this._offset = offset;\n\t\t        this._clock.start(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  Internal start method\n\t\t\t *  @param {Time} time\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.GrainPlayer.prototype._stop = function (time) {\n\t\t        this._clock.stop(time);\n\t\t        this._player.stop(this.buffer, time);\n\t\t        this._offset = 0;\n\t\t    };\n\t\t    /**\n\t\t\t *  Invoked on each clock tick. scheduled a new\n\t\t\t *  grain at this time.\n\t\t\t *  @param  {Time}  time \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.GrainPlayer.prototype._tick = function (time) {\n\t\t        var bufferDuration = this.buffer.duration;\n\t\t        if (this.loop && this._loopEnd > 0) {\n\t\t            bufferDuration = this._loopEnd;\n\t\t        }\n\t\t        var drift = (Math.random() * 2 - 1) * this.drift;\n\t\t        var offset = this._offset - this._overlap + drift;\n\t\t        var detune = this.detune / 100;\n\t\t        var originalFadeIn = this._player.fadeIn;\n\t\t        if (this.loop && this._offset > bufferDuration) {\n\t\t            //play the end\n\t\t            var endSegmentDuration = this._offset - bufferDuration;\n\t\t            this._player.start(this.buffer, time, offset, endSegmentDuration + this._overlap, detune);\n\t\t            //and play the beginning \n\t\t            offset = this._offset % bufferDuration;\n\t\t            this._offset = this._loopStart;\n\t\t            this._player.fadeIn = 0;\n\t\t            this._player.start(this.buffer, time + endSegmentDuration, this._offset, offset + this._overlap, detune);\n\t\t        } else if (this._offset > bufferDuration) {\n\t\t            //set the state to stopped. \n\t\t            this.stop(time);\n\t\t        } else {\n\t\t            if (offset < 0) {\n\t\t                this._player.fadeIn = Math.max(this._player.fadeIn + offset, 0);\n\t\t                offset = 0;\n\t\t            }\n\t\t            this._player.start(this.buffer, time, offset, this.grainSize + this._overlap, detune);\n\t\t        }\n\t\t        this._player.fadeIn = originalFadeIn;\n\t\t        //increment the offset\n\t\t        var duration = this._clock._nextTick - time;\n\t\t        this._offset += duration * this._playbackRate;\n\t\t    };\n\t\t    /**\n\t\t\t *  Jump to a specific time and play it.\n\t\t\t *  @param  {Time}  offset  The offset to jump to.\n\t\t\t *  @param {Time=} time When to make the jump.\n\t\t\t *  @return  {[type]}  [description]\n\t\t\t */\n\t\t    Tone.GrainPlayer.prototype.scrub = function (offset, time) {\n\t\t        this._offset = this.toSeconds(offset);\n\t\t        this._tick(this.toSeconds(time));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * The playback rate of the sample\n\t\t\t * @memberOf Tone.GrainPlayer#\n\t\t\t * @type {Positive}\n\t\t\t * @name playbackRate\n\t\t\t */\n\t\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'playbackRate', {\n\t\t        get: function () {\n\t\t            return this._playbackRate;\n\t\t        },\n\t\t        set: function (rate) {\n\t\t            this._playbackRate = rate;\n\t\t            this.grainSize = this._grainSize;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The loop start time. \n\t\t\t * @memberOf Tone.GrainPlayer#\n\t\t\t * @type {Time}\n\t\t\t * @name loopStart\n\t\t\t */\n\t\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'loopStart', {\n\t\t        get: function () {\n\t\t            return this._loopStart;\n\t\t        },\n\t\t        set: function (time) {\n\t\t            this._loopStart = this.toSeconds(time);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The loop end time. \n\t\t\t * @memberOf Tone.GrainPlayer#\n\t\t\t * @type {Time}\n\t\t\t * @name loopEnd\n\t\t\t */\n\t\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'loopEnd', {\n\t\t        get: function () {\n\t\t            return this._loopEnd;\n\t\t        },\n\t\t        set: function (time) {\n\t\t            this._loopEnd = this.toSeconds(time);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The direction the buffer should play in\n\t\t\t * @memberOf Tone.GrainPlayer#\n\t\t\t * @type {boolean}\n\t\t\t * @name reverse\n\t\t\t */\n\t\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'reverse', {\n\t\t        get: function () {\n\t\t            return this.buffer.reverse;\n\t\t        },\n\t\t        set: function (rev) {\n\t\t            this.buffer.reverse = rev;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The size of each chunk of audio that the \n\t\t\t * buffer is chopped into and played back at.\n\t\t\t * @memberOf Tone.GrainPlayer#\n\t\t\t * @type {Time}\n\t\t\t * @name grainSize\n\t\t\t */\n\t\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'grainSize', {\n\t\t        get: function () {\n\t\t            return this._grainSize;\n\t\t        },\n\t\t        set: function (size) {\n\t\t            this._grainSize = this.toSeconds(size);\n\t\t            this._clock.frequency.value = this._playbackRate / this._grainSize;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * This is the duration of the cross-fade between \n\t\t\t * sucessive grains.\n\t\t\t * @memberOf Tone.GrainPlayer#\n\t\t\t * @type {Time}\n\t\t\t * @name overlap\n\t\t\t */\n\t\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'overlap', {\n\t\t        get: function () {\n\t\t            return this._overlap;\n\t\t        },\n\t\t        set: function (time) {\n\t\t            time = this.toSeconds(time);\n\t\t            this._overlap = time;\n\t\t            if (this._overlap < 0) {\n\t\t                this._player.fadeIn = 0.01;\n\t\t                this._player.fadeOut = 0.01;\n\t\t            } else {\n\t\t                this._player.fadeIn = time;\n\t\t                this._player.fadeOut = time;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * Clean up\n\t\t\t * @return {Tone.GrainPlayer} this\n\t\t\t */\n\t\t    Tone.GrainPlayer.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this.buffer.dispose();\n\t\t        this.buffer = null;\n\t\t        this._player.dispose();\n\t\t        this._player = null;\n\t\t        this._clock.dispose();\n\t\t        this._clock = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.GrainPlayer;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Opens up the default source (typically the microphone).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.ExternalInput}\n\t\t\t *  @example\n\t\t\t *  //mic will feedback if played through master\n\t\t\t *  var mic = new Tone.Microphone();\n\t\t\t *  mic.open(function(){\n\t\t\t *  \t//start the mic at ten seconds\n\t\t\t *  \tmic.start(10);\n\t\t\t *  });\n\t\t\t *  //stop the mic\n\t\t\t *  mic.stop(20);\n\t\t\t */\n\t\t    Tone.Microphone = function () {\n\t\t        Tone.ExternalInput.call(this, 0);\n\t\t    };\n\t\t    Tone.extend(Tone.Microphone, Tone.ExternalInput);\n\t\t    /**\n\t\t\t *  If getUserMedia is supported by the browser.\n\t\t\t *  @type  {Boolean}\n\t\t\t *  @memberOf Tone.Microphone#\n\t\t\t *  @name supported\n\t\t\t *  @static\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Microphone, 'supported', {\n\t\t        get: function () {\n\t\t            return Tone.ExternalInput.supported;\n\t\t        }\n\t\t    });\n\t\t    return Tone.Microphone;\n\t\t});\n\t\t\n\t\treturn Tone;\n\t}));\n\n/***/ }\n/******/ ])));\n\n\n/** WEBPACK FOOTER **\n ** static/js/main.af61e8d6.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/tinysynth/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6365454d736a9c5a8092\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/invariant.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule reactProdInvariant\n * \n */\n'use strict';\n\n/**\n * WARNING: DO NOT manually require this module.\n * This is a replacement for `invariant(...)` used by the error code system\n * and will _only_ be required by the corresponding babel pass.\n * It always throws.\n */\n\nfunction reactProdInvariant(code) {\n  var argCount = arguments.length - 1;\n\n  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;\n\n  for (var argIdx = 0; argIdx < argCount; argIdx++) {\n    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);\n  }\n\n  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';\n\n  var error = new Error(message);\n  error.name = 'Invariant Violation';\n  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame\n\n  throw error;\n}\n\nmodule.exports = reactProdInvariant;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/reactProdInvariant.js\n ** module id = 2\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var printWarning = function printWarning(format) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch (x) {}\n    };\n\n    warning = function warning(condition, format) {\n      if (format === undefined) {\n        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n      }\n\n      if (format.indexOf('Failed Composite propType: ') === 0) {\n        return; // Ignore CompositeComponent proptype check.\n      }\n\n      if (!condition) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n\n        printWarning.apply(undefined, [format].concat(args));\n      }\n    };\n  })();\n}\n\nmodule.exports = warning;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/warning.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/object-assign/index.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMComponentTree\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactDOMComponentFlags = require('./ReactDOMComponentFlags');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar Flags = ReactDOMComponentFlags;\n\nvar internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);\n\n/**\n * Drill down (through composites and empty components) until we get a host or\n * host text component.\n *\n * This is pretty polymorphic but unavoidable with the current structure we have\n * for `_renderedChildren`.\n */\nfunction getRenderedHostOrTextFromComponent(component) {\n  var rendered;\n  while (rendered = component._renderedComponent) {\n    component = rendered;\n  }\n  return component;\n}\n\n/**\n * Populate `_hostNode` on the rendered host/text component with the given\n * DOM node. The passed `inst` can be a composite.\n */\nfunction precacheNode(inst, node) {\n  var hostInst = getRenderedHostOrTextFromComponent(inst);\n  hostInst._hostNode = node;\n  node[internalInstanceKey] = hostInst;\n}\n\nfunction uncacheNode(inst) {\n  var node = inst._hostNode;\n  if (node) {\n    delete node[internalInstanceKey];\n    inst._hostNode = null;\n  }\n}\n\n/**\n * Populate `_hostNode` on each child of `inst`, assuming that the children\n * match up with the DOM (element) children of `node`.\n *\n * We cache entire levels at once to avoid an n^2 problem where we access the\n * children of a node sequentially and have to walk from the start to our target\n * node every time.\n *\n * Since we update `_renderedChildren` and the actual DOM at (slightly)\n * different times, we could race here and see a newer `_renderedChildren` than\n * the DOM nodes we see. To avoid this, ReactMultiChild calls\n * `prepareToManageChildren` before we change `_renderedChildren`, at which\n * time the container's child nodes are always cached (until it unmounts).\n */\nfunction precacheChildNodes(inst, node) {\n  if (inst._flags & Flags.hasCachedChildNodes) {\n    return;\n  }\n  var children = inst._renderedChildren;\n  var childNode = node.firstChild;\n  outer: for (var name in children) {\n    if (!children.hasOwnProperty(name)) {\n      continue;\n    }\n    var childInst = children[name];\n    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;\n    if (childID === 0) {\n      // We're currently unmounting this child in ReactMultiChild; skip it.\n      continue;\n    }\n    // We assume the child nodes are in the same order as the child instances.\n    for (; childNode !== null; childNode = childNode.nextSibling) {\n      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {\n        precacheNode(childInst, childNode);\n        continue outer;\n      }\n    }\n    // We reached the end of the DOM children without finding an ID match.\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;\n  }\n  inst._flags |= Flags.hasCachedChildNodes;\n}\n\n/**\n * Given a DOM node, return the closest ReactDOMComponent or\n * ReactDOMTextComponent instance ancestor.\n */\nfunction getClosestInstanceFromNode(node) {\n  if (node[internalInstanceKey]) {\n    return node[internalInstanceKey];\n  }\n\n  // Walk up the tree until we find an ancestor whose instance we have cached.\n  var parents = [];\n  while (!node[internalInstanceKey]) {\n    parents.push(node);\n    if (node.parentNode) {\n      node = node.parentNode;\n    } else {\n      // Top of the tree. This node must not be part of a React tree (or is\n      // unmounted, potentially).\n      return null;\n    }\n  }\n\n  var closest;\n  var inst;\n  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {\n    closest = inst;\n    if (parents.length) {\n      precacheChildNodes(inst, node);\n    }\n  }\n\n  return closest;\n}\n\n/**\n * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent\n * instance, or null if the node was not rendered by this React.\n */\nfunction getInstanceFromNode(node) {\n  var inst = getClosestInstanceFromNode(node);\n  if (inst != null && inst._hostNode === node) {\n    return inst;\n  } else {\n    return null;\n  }\n}\n\n/**\n * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding\n * DOM node.\n */\nfunction getNodeFromInstance(inst) {\n  // Without this first invariant, passing a non-DOM-component triggers the next\n  // invariant for a missing parent, which is super confusing.\n  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\n  if (inst._hostNode) {\n    return inst._hostNode;\n  }\n\n  // Walk up the tree until we find an ancestor whose DOM node we have cached.\n  var parents = [];\n  while (!inst._hostNode) {\n    parents.push(inst);\n    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;\n    inst = inst._hostParent;\n  }\n\n  // Now parents contains each ancestor that does *not* have a cached native\n  // node, and `inst` is the deepest ancestor that does.\n  for (; parents.length; inst = parents.pop()) {\n    precacheChildNodes(inst, inst._hostNode);\n  }\n\n  return inst._hostNode;\n}\n\nvar ReactDOMComponentTree = {\n  getClosestInstanceFromNode: getClosestInstanceFromNode,\n  getInstanceFromNode: getInstanceFromNode,\n  getNodeFromInstance: getNodeFromInstance,\n  precacheChildNodes: precacheChildNodes,\n  precacheNode: precacheNode,\n  uncacheNode: uncacheNode\n};\n\nmodule.exports = ReactDOMComponentTree;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMComponentTree.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/ExecutionEnvironment.js\n ** module id = 6\n ** module chunks = 0\n **/","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/emptyFunction.js\n ** module id = 7\n ** module chunks = 0\n **/","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInstrumentation\n */\n\n'use strict';\n\nvar debugTool = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactDebugTool = require('./ReactDebugTool');\n  debugTool = ReactDebugTool;\n}\n\nmodule.exports = { debugTool: debugTool };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactInstrumentation.js\n ** module id = 8\n ** module chunks = 0\n **/","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElement\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar warning = require('fbjs/lib/warning');\nvar canDefineProperty = require('./canDefineProperty');\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n// The Symbol used to tag the ReactElement type. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\nvar specialPropKeyWarningShown, specialPropRefWarningShown;\n\nfunction hasValidRef(config) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    if (!specialPropKeyWarningShown) {\n      specialPropKeyWarningShown = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    if (!specialPropRefWarningShown) {\n      specialPropRefWarningShown = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, no instanceof check\n * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allow us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n    var shadowChildren = Array.isArray(props.children) ? props.children.slice(0) : props.children;\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    if (canDefineProperty) {\n      Object.defineProperty(element._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: false\n      });\n      // self and source are DEV only properties.\n      Object.defineProperty(element, '_self', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: self\n      });\n      Object.defineProperty(element, '_shadowChildren', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: shadowChildren\n      });\n      // Two elements created in two different places should be considered\n      // equal for testing purposes and therefore we hide it from enumeration.\n      Object.defineProperty(element, '_source', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: source\n      });\n    } else {\n      element._store.validated = false;\n      element._self = self;\n      element._shadowChildren = shadowChildren;\n      element._source = source;\n    }\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement\n */\nReactElement.createElement = function (type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (key || ref) {\n      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\n        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n        if (key) {\n          defineKeyPropWarningGetter(props, displayName);\n        }\n        if (ref) {\n          defineRefPropWarningGetter(props, displayName);\n        }\n      }\n    }\n  }\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n};\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory\n */\nReactElement.createFactory = function (type) {\n  var factory = ReactElement.createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\n  return newElement;\n};\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement\n */\nReactElement.cloneElement = function (element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = _assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    var defaultProps;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n};\n\n/**\n * Verifies the object is a ReactElement.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function (object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n};\n\nReactElement.REACT_ELEMENT_TYPE = REACT_ELEMENT_TYPE;\n\nmodule.exports = ReactElement;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactElement.js\n ** module id = 9\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactUpdates\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar CallbackQueue = require('./CallbackQueue');\nvar PooledClass = require('./PooledClass');\nvar ReactFeatureFlags = require('./ReactFeatureFlags');\nvar ReactReconciler = require('./ReactReconciler');\nvar Transaction = require('./Transaction');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar dirtyComponents = [];\nvar updateBatchNumber = 0;\nvar asapCallbackQueue = CallbackQueue.getPooled();\nvar asapEnqueued = false;\n\nvar batchingStrategy = null;\n\nfunction ensureInjected() {\n  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;\n}\n\nvar NESTED_UPDATES = {\n  initialize: function () {\n    this.dirtyComponentsLength = dirtyComponents.length;\n  },\n  close: function () {\n    if (this.dirtyComponentsLength !== dirtyComponents.length) {\n      // Additional updates were enqueued by componentDidUpdate handlers or\n      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run\n      // these new updates so that if A's componentDidUpdate calls setState on\n      // B, B will update before the callback A's updater provided when calling\n      // setState.\n      dirtyComponents.splice(0, this.dirtyComponentsLength);\n      flushBatchedUpdates();\n    } else {\n      dirtyComponents.length = 0;\n    }\n  }\n};\n\nvar UPDATE_QUEUEING = {\n  initialize: function () {\n    this.callbackQueue.reset();\n  },\n  close: function () {\n    this.callbackQueue.notifyAll();\n  }\n};\n\nvar TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];\n\nfunction ReactUpdatesFlushTransaction() {\n  this.reinitializeTransaction();\n  this.dirtyComponentsLength = null;\n  this.callbackQueue = CallbackQueue.getPooled();\n  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n  /* useCreateElement */true);\n}\n\n_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  destructor: function () {\n    this.dirtyComponentsLength = null;\n    CallbackQueue.release(this.callbackQueue);\n    this.callbackQueue = null;\n    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);\n    this.reconcileTransaction = null;\n  },\n\n  perform: function (method, scope, a) {\n    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`\n    // with this transaction's wrappers around it.\n    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);\n  }\n});\n\nPooledClass.addPoolingTo(ReactUpdatesFlushTransaction);\n\nfunction batchedUpdates(callback, a, b, c, d, e) {\n  ensureInjected();\n  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);\n}\n\n/**\n * Array comparator for ReactComponents by mount ordering.\n *\n * @param {ReactComponent} c1 first component you're comparing\n * @param {ReactComponent} c2 second component you're comparing\n * @return {number} Return value usable by Array.prototype.sort().\n */\nfunction mountOrderComparator(c1, c2) {\n  return c1._mountOrder - c2._mountOrder;\n}\n\nfunction runBatchedUpdates(transaction) {\n  var len = transaction.dirtyComponentsLength;\n  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;\n\n  // Since reconciling a component higher in the owner hierarchy usually (not\n  // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n  // them before their children by sorting the array.\n  dirtyComponents.sort(mountOrderComparator);\n\n  // Any updates enqueued while reconciling must be performed after this entire\n  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and\n  // C, B could update twice in a single batch if C's render enqueues an update\n  // to B (since B would have already updated, we should skip it, and the only\n  // way we can know to do so is by checking the batch counter).\n  updateBatchNumber++;\n\n  for (var i = 0; i < len; i++) {\n    // If a component is unmounted before pending changes apply, it will still\n    // be here, but we assume that it has cleared its _pendingCallbacks and\n    // that performUpdateIfNecessary is a noop.\n    var component = dirtyComponents[i];\n\n    // If performUpdateIfNecessary happens to enqueue any new updates, we\n    // shouldn't execute the callbacks until the next render happens, so\n    // stash the callbacks first\n    var callbacks = component._pendingCallbacks;\n    component._pendingCallbacks = null;\n\n    var markerName;\n    if (ReactFeatureFlags.logTopLevelRenders) {\n      var namedComponent = component;\n      // Duck type TopLevelWrapper. This is probably always true.\n      if (component._currentElement.props === component._renderedComponent._currentElement) {\n        namedComponent = component._renderedComponent;\n      }\n      markerName = 'React update: ' + namedComponent.getName();\n      console.time(markerName);\n    }\n\n    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);\n\n    if (markerName) {\n      console.timeEnd(markerName);\n    }\n\n    if (callbacks) {\n      for (var j = 0; j < callbacks.length; j++) {\n        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());\n      }\n    }\n  }\n}\n\nvar flushBatchedUpdates = function () {\n  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents\n  // array and perform any updates enqueued by mount-ready handlers (i.e.,\n  // componentDidUpdate) but we need to check here too in order to catch\n  // updates enqueued by setState callbacks and asap calls.\n  while (dirtyComponents.length || asapEnqueued) {\n    if (dirtyComponents.length) {\n      var transaction = ReactUpdatesFlushTransaction.getPooled();\n      transaction.perform(runBatchedUpdates, null, transaction);\n      ReactUpdatesFlushTransaction.release(transaction);\n    }\n\n    if (asapEnqueued) {\n      asapEnqueued = false;\n      var queue = asapCallbackQueue;\n      asapCallbackQueue = CallbackQueue.getPooled();\n      queue.notifyAll();\n      CallbackQueue.release(queue);\n    }\n  }\n};\n\n/**\n * Mark a component as needing a rerender, adding an optional callback to a\n * list of functions which will be executed once the rerender occurs.\n */\nfunction enqueueUpdate(component) {\n  ensureInjected();\n\n  // Various parts of our code (such as ReactCompositeComponent's\n  // _renderValidatedComponent) assume that calls to render aren't nested;\n  // verify that that's the case. (This is called by each top-level update\n  // function, like setState, forceUpdate, etc.; creation and\n  // destruction of top-level components is guarded in ReactMount.)\n\n  if (!batchingStrategy.isBatchingUpdates) {\n    batchingStrategy.batchedUpdates(enqueueUpdate, component);\n    return;\n  }\n\n  dirtyComponents.push(component);\n  if (component._updateBatchNumber == null) {\n    component._updateBatchNumber = updateBatchNumber + 1;\n  }\n}\n\n/**\n * Enqueue a callback to be run at the end of the current batching cycle. Throws\n * if no updates are currently being performed.\n */\nfunction asap(callback, context) {\n  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;\n  asapCallbackQueue.enqueue(callback, context);\n  asapEnqueued = true;\n}\n\nvar ReactUpdatesInjection = {\n  injectReconcileTransaction: function (ReconcileTransaction) {\n    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;\n    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;\n  },\n\n  injectBatchingStrategy: function (_batchingStrategy) {\n    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;\n    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;\n    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;\n    batchingStrategy = _batchingStrategy;\n  }\n};\n\nvar ReactUpdates = {\n  /**\n   * React references `ReactReconcileTransaction` using this property in order\n   * to allow dependency injection.\n   *\n   * @internal\n   */\n  ReactReconcileTransaction: null,\n\n  batchedUpdates: batchedUpdates,\n  enqueueUpdate: enqueueUpdate,\n  flushBatchedUpdates: flushBatchedUpdates,\n  injection: ReactUpdatesInjection,\n  asap: asap\n};\n\nmodule.exports = ReactUpdates;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactUpdates.js\n ** module id = 10\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventConstants\n */\n\n'use strict';\n\nvar keyMirror = require('fbjs/lib/keyMirror');\n\nvar PropagationPhases = keyMirror({ bubbled: null, captured: null });\n\n/**\n * Types of raw signals from the browser caught at the top level.\n */\nvar topLevelTypes = keyMirror({\n  topAbort: null,\n  topAnimationEnd: null,\n  topAnimationIteration: null,\n  topAnimationStart: null,\n  topBlur: null,\n  topCanPlay: null,\n  topCanPlayThrough: null,\n  topChange: null,\n  topClick: null,\n  topCompositionEnd: null,\n  topCompositionStart: null,\n  topCompositionUpdate: null,\n  topContextMenu: null,\n  topCopy: null,\n  topCut: null,\n  topDoubleClick: null,\n  topDrag: null,\n  topDragEnd: null,\n  topDragEnter: null,\n  topDragExit: null,\n  topDragLeave: null,\n  topDragOver: null,\n  topDragStart: null,\n  topDrop: null,\n  topDurationChange: null,\n  topEmptied: null,\n  topEncrypted: null,\n  topEnded: null,\n  topError: null,\n  topFocus: null,\n  topInput: null,\n  topInvalid: null,\n  topKeyDown: null,\n  topKeyPress: null,\n  topKeyUp: null,\n  topLoad: null,\n  topLoadedData: null,\n  topLoadedMetadata: null,\n  topLoadStart: null,\n  topMouseDown: null,\n  topMouseMove: null,\n  topMouseOut: null,\n  topMouseOver: null,\n  topMouseUp: null,\n  topPaste: null,\n  topPause: null,\n  topPlay: null,\n  topPlaying: null,\n  topProgress: null,\n  topRateChange: null,\n  topReset: null,\n  topScroll: null,\n  topSeeked: null,\n  topSeeking: null,\n  topSelectionChange: null,\n  topStalled: null,\n  topSubmit: null,\n  topSuspend: null,\n  topTextInput: null,\n  topTimeUpdate: null,\n  topTouchCancel: null,\n  topTouchEnd: null,\n  topTouchMove: null,\n  topTouchStart: null,\n  topTransitionEnd: null,\n  topVolumeChange: null,\n  topWaiting: null,\n  topWheel: null\n});\n\nvar EventConstants = {\n  topLevelTypes: topLevelTypes,\n  PropagationPhases: PropagationPhases\n};\n\nmodule.exports = EventConstants;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EventConstants.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticEvent\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnForAddedNewProperty = false;\nvar isProxySupported = typeof Proxy === 'function';\n\nvar shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: emptyFunction.thatReturnsNull,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function (event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {*} targetInst Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @param {DOMEventTarget} nativeEventTarget Target node.\n */\nfunction SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {\n  if (process.env.NODE_ENV !== 'production') {\n    // these have a getter/setter for warnings\n    delete this.nativeEvent;\n    delete this.preventDefault;\n    delete this.stopPropagation;\n  }\n\n  this.dispatchConfig = dispatchConfig;\n  this._targetInst = targetInst;\n  this.nativeEvent = nativeEvent;\n\n  var Interface = this.constructor.Interface;\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      delete this[propName]; // this has a getter/setter for warnings\n    }\n    var normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === 'target') {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n  return this;\n}\n\n_assign(SyntheticEvent.prototype, {\n\n  preventDefault: function () {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else if (typeof event.returnValue !== 'unknown') {\n      // eslint-disable-line valid-typeof\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n\n  stopPropagation: function () {\n    var event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else if (typeof event.cancelBubble !== 'unknown') {\n      // eslint-disable-line valid-typeof\n      // The ChangeEventPlugin registers a \"propertychange\" event for\n      // IE. This event does not support bubbling or cancelling, and\n      // any references to cancelBubble throw \"Member not found\".  A\n      // typeof check of \"unknown\" circumvents this issue (and is also\n      // IE specific).\n      event.cancelBubble = true;\n    }\n\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function () {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function () {\n    var Interface = this.constructor.Interface;\n    for (var propName in Interface) {\n      if (process.env.NODE_ENV !== 'production') {\n        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));\n      } else {\n        this[propName] = null;\n      }\n    }\n    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {\n      this[shouldBeReleasedProperties[i]] = null;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));\n      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));\n      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));\n    }\n  }\n\n});\n\nSyntheticEvent.Interface = EventInterface;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (isProxySupported) {\n    /*eslint-disable no-func-assign */\n    SyntheticEvent = new Proxy(SyntheticEvent, {\n      construct: function (target, args) {\n        return this.apply(target, Object.create(target.prototype), args);\n      },\n      apply: function (constructor, that, args) {\n        return new Proxy(constructor.apply(that, args), {\n          set: function (target, prop, value) {\n            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {\n              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\\'re ' + 'seeing this, you\\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;\n              didWarnForAddedNewProperty = true;\n            }\n            target[prop] = value;\n            return true;\n          }\n        });\n      }\n    });\n    /*eslint-enable no-func-assign */\n  }\n}\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\nSyntheticEvent.augmentClass = function (Class, Interface) {\n  var Super = this;\n\n  var E = function () {};\n  E.prototype = Super.prototype;\n  var prototype = new E();\n\n  _assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = _assign({}, Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n\n  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);\n};\n\nPooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);\n\nmodule.exports = SyntheticEvent;\n\n/**\n  * Helper to nullify syntheticEvent instance properties when destructing\n  *\n  * @param {object} SyntheticEvent\n  * @param {String} propName\n  * @return {object} defineProperty object\n  */\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\n  var isFunction = typeof getVal === 'function';\n  return {\n    configurable: true,\n    set: set,\n    get: get\n  };\n\n  function set(val) {\n    var action = isFunction ? 'setting the method' : 'setting the property';\n    warn(action, 'This is effectively a no-op');\n    return val;\n  }\n\n  function get() {\n    var action = isFunction ? 'accessing the method' : 'accessing the property';\n    var result = isFunction ? 'This is a no-op function' : 'This is set to null';\n    warn(action, result);\n    return getVal;\n  }\n\n  function warn(action, result) {\n    var warningCondition = false;\n    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\\'re seeing this, ' + 'you\\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;\n  }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticEvent.js\n ** module id = 12\n ** module chunks = 0\n **/","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/**\n * Allows extraction of a minified key. Let's the build system minify keys\n * without losing the ability to dynamically use key strings as values\n * themselves. Pass in an object with a single key/val pair and it will return\n * you the string key of that single record. Suppose you want to grab the\n * value for a key 'className' inside of an object. Key/val minification may\n * have aliased that key to be 'xa12'. keyOf({className: null}) will return\n * 'xa12' in that case. Resolve keys you want to use once at startup time, then\n * reuse those resolutions.\n */\nvar keyOf = function keyOf(oneKeyObj) {\n  var key;\n  for (key in oneKeyObj) {\n    if (!oneKeyObj.hasOwnProperty(key)) {\n      continue;\n    }\n    return key;\n  }\n  return null;\n};\n\nmodule.exports = keyOf;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/keyOf.js\n ** module id = 13\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule PooledClass\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nvar oneArgumentPooler = function (copyFieldsFrom) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nvar twoArgumentPooler = function (a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar threeArgumentPooler = function (a1, a2, a3) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nvar fourArgumentPooler = function (a1, a2, a3, a4) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\nvar fiveArgumentPooler = function (a1, a2, a3, a4, a5) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4, a5);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4, a5);\n  }\n};\n\nvar standardReleaser = function (instance) {\n  var Klass = this;\n  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = oneArgumentPooler;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nvar addPoolingTo = function (CopyConstructor, pooler) {\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: oneArgumentPooler,\n  twoArgumentPooler: twoArgumentPooler,\n  threeArgumentPooler: threeArgumentPooler,\n  fourArgumentPooler: fourArgumentPooler,\n  fiveArgumentPooler: fiveArgumentPooler\n};\n\nmodule.exports = PooledClass;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/PooledClass.js\n ** module id = 14\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCurrentOwner\n */\n\n'use strict';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\n\nvar ReactCurrentOwner = {\n\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n\n};\n\nmodule.exports = ReactCurrentOwner;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactCurrentOwner.js\n ** module id = 15\n ** module chunks = 0\n **/","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMLazyTree\n */\n\n'use strict';\n\nvar DOMNamespaces = require('./DOMNamespaces');\nvar setInnerHTML = require('./setInnerHTML');\n\nvar createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');\nvar setTextContent = require('./setTextContent');\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\n/**\n * In IE (8-11) and Edge, appending nodes with no children is dramatically\n * faster than appending a full subtree, so we essentially queue up the\n * .appendChild calls here and apply them so each node is added to its parent\n * before any children are added.\n *\n * In other browsers, doing so is slower or neutral compared to the other order\n * (in Firefox, twice as slow) so we only do this inversion in IE.\n *\n * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.\n */\nvar enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\\bEdge\\/\\d/.test(navigator.userAgent);\n\nfunction insertTreeChildren(tree) {\n  if (!enableLazy) {\n    return;\n  }\n  var node = tree.node;\n  var children = tree.children;\n  if (children.length) {\n    for (var i = 0; i < children.length; i++) {\n      insertTreeBefore(node, children[i], null);\n    }\n  } else if (tree.html != null) {\n    setInnerHTML(node, tree.html);\n  } else if (tree.text != null) {\n    setTextContent(node, tree.text);\n  }\n}\n\nvar insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {\n  // DocumentFragments aren't actually part of the DOM after insertion so\n  // appending children won't update the DOM. We need to ensure the fragment\n  // is properly populated first, breaking out of our lazy approach for just\n  // this level. Also, some <object> plugins (like Flash Player) will read\n  // <param> nodes immediately upon insertion into the DOM, so <object>\n  // must also be populated prior to insertion into the DOM.\n  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {\n    insertTreeChildren(tree);\n    parentNode.insertBefore(tree.node, referenceNode);\n  } else {\n    parentNode.insertBefore(tree.node, referenceNode);\n    insertTreeChildren(tree);\n  }\n});\n\nfunction replaceChildWithTree(oldNode, newTree) {\n  oldNode.parentNode.replaceChild(newTree.node, oldNode);\n  insertTreeChildren(newTree);\n}\n\nfunction queueChild(parentTree, childTree) {\n  if (enableLazy) {\n    parentTree.children.push(childTree);\n  } else {\n    parentTree.node.appendChild(childTree.node);\n  }\n}\n\nfunction queueHTML(tree, html) {\n  if (enableLazy) {\n    tree.html = html;\n  } else {\n    setInnerHTML(tree.node, html);\n  }\n}\n\nfunction queueText(tree, text) {\n  if (enableLazy) {\n    tree.text = text;\n  } else {\n    setTextContent(tree.node, text);\n  }\n}\n\nfunction toString() {\n  return this.node.nodeName;\n}\n\nfunction DOMLazyTree(node) {\n  return {\n    node: node,\n    children: [],\n    html: null,\n    text: null,\n    toString: toString\n  };\n}\n\nDOMLazyTree.insertTreeBefore = insertTreeBefore;\nDOMLazyTree.replaceChildWithTree = replaceChildWithTree;\nDOMLazyTree.queueChild = queueChild;\nDOMLazyTree.queueHTML = queueHTML;\nDOMLazyTree.queueText = queueText;\n\nmodule.exports = DOMLazyTree;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DOMLazyTree.js\n ** module id = 16\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMProperty\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nfunction checkMask(value, bitmask) {\n  return (value & bitmask) === bitmask;\n}\n\nvar DOMPropertyInjection = {\n  /**\n   * Mapping from normalized, camelcased property names to a configuration that\n   * specifies how the associated DOM property should be accessed or rendered.\n   */\n  MUST_USE_PROPERTY: 0x1,\n  HAS_BOOLEAN_VALUE: 0x4,\n  HAS_NUMERIC_VALUE: 0x8,\n  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,\n  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,\n\n  /**\n   * Inject some specialized knowledge about the DOM. This takes a config object\n   * with the following properties:\n   *\n   * isCustomAttribute: function that given an attribute name will return true\n   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*\n   * attributes where it's impossible to enumerate all of the possible\n   * attribute names,\n   *\n   * Properties: object mapping DOM property name to one of the\n   * DOMPropertyInjection constants or null. If your attribute isn't in here,\n   * it won't get written to the DOM.\n   *\n   * DOMAttributeNames: object mapping React attribute name to the DOM\n   * attribute name. Attribute names not specified use the **lowercase**\n   * normalized name.\n   *\n   * DOMAttributeNamespaces: object mapping React attribute name to the DOM\n   * attribute namespace URL. (Attribute names not specified use no namespace.)\n   *\n   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.\n   * Property names not specified use the normalized name.\n   *\n   * DOMMutationMethods: Properties that require special mutation methods. If\n   * `value` is undefined, the mutation method should unset the property.\n   *\n   * @param {object} domPropertyConfig the config as described above.\n   */\n  injectDOMPropertyConfig: function (domPropertyConfig) {\n    var Injection = DOMPropertyInjection;\n    var Properties = domPropertyConfig.Properties || {};\n    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};\n    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};\n    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};\n    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};\n\n    if (domPropertyConfig.isCustomAttribute) {\n      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);\n    }\n\n    for (var propName in Properties) {\n      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\\'re trying to inject DOM property \\'%s\\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;\n\n      var lowerCased = propName.toLowerCase();\n      var propConfig = Properties[propName];\n\n      var propertyInfo = {\n        attributeName: lowerCased,\n        attributeNamespace: null,\n        propertyName: propName,\n        mutationMethod: null,\n\n        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),\n        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),\n        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),\n        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),\n        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)\n      };\n      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;\n\n      if (process.env.NODE_ENV !== 'production') {\n        DOMProperty.getPossibleStandardName[lowerCased] = propName;\n      }\n\n      if (DOMAttributeNames.hasOwnProperty(propName)) {\n        var attributeName = DOMAttributeNames[propName];\n        propertyInfo.attributeName = attributeName;\n        if (process.env.NODE_ENV !== 'production') {\n          DOMProperty.getPossibleStandardName[attributeName] = propName;\n        }\n      }\n\n      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {\n        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];\n      }\n\n      if (DOMPropertyNames.hasOwnProperty(propName)) {\n        propertyInfo.propertyName = DOMPropertyNames[propName];\n      }\n\n      if (DOMMutationMethods.hasOwnProperty(propName)) {\n        propertyInfo.mutationMethod = DOMMutationMethods[propName];\n      }\n\n      DOMProperty.properties[propName] = propertyInfo;\n    }\n  }\n};\n\n/* eslint-disable max-len */\nvar ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n/* eslint-enable max-len */\n\n/**\n * DOMProperty exports lookup objects that can be used like functions:\n *\n *   > DOMProperty.isValid['id']\n *   true\n *   > DOMProperty.isValid['foobar']\n *   undefined\n *\n * Although this may be confusing, it performs better in general.\n *\n * @see http://jsperf.com/key-exists\n * @see http://jsperf.com/key-missing\n */\nvar DOMProperty = {\n\n  ID_ATTRIBUTE_NAME: 'data-reactid',\n  ROOT_ATTRIBUTE_NAME: 'data-reactroot',\n\n  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,\n  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040',\n\n  /**\n   * Map from property \"standard name\" to an object with info about how to set\n   * the property in the DOM. Each object contains:\n   *\n   * attributeName:\n   *   Used when rendering markup or with `*Attribute()`.\n   * attributeNamespace\n   * propertyName:\n   *   Used on DOM node instances. (This includes properties that mutate due to\n   *   external factors.)\n   * mutationMethod:\n   *   If non-null, used instead of the property or `setAttribute()` after\n   *   initial render.\n   * mustUseProperty:\n   *   Whether the property must be accessed and mutated as an object property.\n   * hasBooleanValue:\n   *   Whether the property should be removed when set to a falsey value.\n   * hasNumericValue:\n   *   Whether the property must be numeric or parse as a numeric and should be\n   *   removed when set to a falsey value.\n   * hasPositiveNumericValue:\n   *   Whether the property must be positive numeric or parse as a positive\n   *   numeric and should be removed when set to a falsey value.\n   * hasOverloadedBooleanValue:\n   *   Whether the property can be used as a flag as well as with a value.\n   *   Removed when strictly equal to false; present without a value when\n   *   strictly equal to true; present with a value otherwise.\n   */\n  properties: {},\n\n  /**\n   * Mapping from lowercase property names to the properly cased version, used\n   * to warn in the case of missing properties. Available only in __DEV__.\n   * @type {Object}\n   */\n  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,\n\n  /**\n   * All of the isCustomAttribute() functions that have been injected.\n   */\n  _isCustomAttributeFunctions: [],\n\n  /**\n   * Checks whether a property name is a custom attribute.\n   * @method\n   */\n  isCustomAttribute: function (attributeName) {\n    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {\n      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];\n      if (isCustomAttributeFn(attributeName)) {\n        return true;\n      }\n    }\n    return false;\n  },\n\n  injection: DOMPropertyInjection\n};\n\nmodule.exports = DOMProperty;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DOMProperty.js\n ** module id = 17\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconciler\n */\n\n'use strict';\n\nvar ReactRef = require('./ReactRef');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Helper to call ReactRef.attachRefs with this composite component, split out\n * to avoid allocations in the transaction mount-ready queue.\n */\nfunction attachRefs() {\n  ReactRef.attachRefs(this, this._currentElement);\n}\n\nvar ReactReconciler = {\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?object} the containing host component instance\n   * @param {?object} info about the host container\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots\n  ) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);\n      }\n    }\n    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);\n    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);\n      }\n    }\n    return markup;\n  },\n\n  /**\n   * Returns a value that can be passed to\n   * ReactComponentEnvironment.replaceNodeWithMarkup.\n   */\n  getHostNode: function (internalInstance) {\n    return internalInstance.getHostNode();\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function (internalInstance, safely) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);\n      }\n    }\n    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n    internalInstance.unmountComponent(safely);\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);\n      }\n    }\n  },\n\n  /**\n   * Update a component using a new element.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @internal\n   */\n  receiveComponent: function (internalInstance, nextElement, transaction, context) {\n    var prevElement = internalInstance._currentElement;\n\n    if (nextElement === prevElement && context === internalInstance._context) {\n      // Since elements are immutable after the owner is rendered,\n      // we can do a cheap identity compare here to determine if this is a\n      // superfluous reconcile. It's possible for state to be mutable but such\n      // change should trigger an update of the owner which would recreate\n      // the element. We explicitly check for the existence of an owner since\n      // it's possible for an element created outside a composite to be\n      // deeply mutated and reused.\n\n      // TODO: Bailing out early is just a perf optimization right?\n      // TODO: Removing the return statement should affect correctness?\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);\n      }\n    }\n\n    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);\n\n    if (refsChanged) {\n      ReactRef.detachRefs(internalInstance, prevElement);\n    }\n\n    internalInstance.receiveComponent(nextElement, transaction, context);\n\n    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n      }\n    }\n  },\n\n  /**\n   * Flush any dirty changes in a component.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {\n    if (internalInstance._updateBatchNumber !== updateBatchNumber) {\n      // The component's enqueued batch number should always be the current\n      // batch or the following one.\n      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);\n      }\n    }\n    internalInstance.performUpdateIfNecessary(transaction);\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n      }\n    }\n  }\n\n};\n\nmodule.exports = ReactReconciler;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactReconciler.js\n ** module id = 18\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/emptyObject.js\n ** module id = 19\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginHub\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar EventPluginUtils = require('./EventPluginUtils');\nvar ReactErrorUtils = require('./ReactErrorUtils');\n\nvar accumulateInto = require('./accumulateInto');\nvar forEachAccumulated = require('./forEachAccumulated');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Internal store for event listeners\n */\nvar listenerBank = {};\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nvar eventQueue = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @private\n */\nvar executeDispatchesAndRelease = function (event, simulated) {\n  if (event) {\n    EventPluginUtils.executeDispatchesInOrder(event, simulated);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\nvar executeDispatchesAndReleaseSimulated = function (e) {\n  return executeDispatchesAndRelease(e, true);\n};\nvar executeDispatchesAndReleaseTopLevel = function (e) {\n  return executeDispatchesAndRelease(e, false);\n};\n\nvar getDictionaryKey = function (inst) {\n  // Prevents V8 performance issue:\n  // https://github.com/facebook/react/pull/7232\n  return '.' + inst._rootNodeID;\n};\n\n/**\n * This is a unified interface for event plugins to be installed and configured.\n *\n * Event plugins can implement the following properties:\n *\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n *     Required. When a top-level event is fired, this method is expected to\n *     extract synthetic events that will in turn be queued and dispatched.\n *\n *   `eventTypes` {object}\n *     Optional, plugins that fire events must publish a mapping of registration\n *     names that are used to register listeners. Values of this mapping must\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n *\n *   `executeDispatch` {function(object, function, string)}\n *     Optional, allows plugins to override how an event gets dispatched. By\n *     default, the listener is simply invoked.\n *\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n *\n * @public\n */\nvar EventPluginHub = {\n\n  /**\n   * Methods for injecting dependencies.\n   */\n  injection: {\n\n    /**\n     * @param {array} InjectedEventPluginOrder\n     * @public\n     */\n    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\n    /**\n     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n     */\n    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n\n  },\n\n  /**\n   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {function} listener The callback to store.\n   */\n  putListener: function (inst, registrationName, listener) {\n    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;\n\n    var key = getDictionaryKey(inst);\n    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});\n    bankForRegistrationName[key] = listener;\n\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.didPutListener) {\n      PluginModule.didPutListener(inst, registrationName, listener);\n    }\n  },\n\n  /**\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @return {?function} The stored callback.\n   */\n  getListener: function (inst, registrationName) {\n    var bankForRegistrationName = listenerBank[registrationName];\n    var key = getDictionaryKey(inst);\n    return bankForRegistrationName && bankForRegistrationName[key];\n  },\n\n  /**\n   * Deletes a listener from the registration bank.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   */\n  deleteListener: function (inst, registrationName) {\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.willDeleteListener) {\n      PluginModule.willDeleteListener(inst, registrationName);\n    }\n\n    var bankForRegistrationName = listenerBank[registrationName];\n    // TODO: This should never be null -- when is it?\n    if (bankForRegistrationName) {\n      var key = getDictionaryKey(inst);\n      delete bankForRegistrationName[key];\n    }\n  },\n\n  /**\n   * Deletes all listeners for the DOM element with the supplied ID.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   */\n  deleteAllListeners: function (inst) {\n    var key = getDictionaryKey(inst);\n    for (var registrationName in listenerBank) {\n      if (!listenerBank.hasOwnProperty(registrationName)) {\n        continue;\n      }\n\n      if (!listenerBank[registrationName][key]) {\n        continue;\n      }\n\n      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n      if (PluginModule && PluginModule.willDeleteListener) {\n        PluginModule.willDeleteListener(inst, registrationName);\n      }\n\n      delete listenerBank[registrationName][key];\n    }\n  },\n\n  /**\n   * Allows registered plugins an opportunity to extract events from top-level\n   * native browser events.\n   *\n   * @return {*} An accumulation of synthetic events.\n   * @internal\n   */\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var events;\n    var plugins = EventPluginRegistry.plugins;\n    for (var i = 0; i < plugins.length; i++) {\n      // Not every plugin in the ordering may be loaded at runtime.\n      var possiblePlugin = plugins[i];\n      if (possiblePlugin) {\n        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n        if (extractedEvents) {\n          events = accumulateInto(events, extractedEvents);\n        }\n      }\n    }\n    return events;\n  },\n\n  /**\n   * Enqueues a synthetic event that should be dispatched when\n   * `processEventQueue` is invoked.\n   *\n   * @param {*} events An accumulation of synthetic events.\n   * @internal\n   */\n  enqueueEvents: function (events) {\n    if (events) {\n      eventQueue = accumulateInto(eventQueue, events);\n    }\n  },\n\n  /**\n   * Dispatches all synthetic events on the event queue.\n   *\n   * @internal\n   */\n  processEventQueue: function (simulated) {\n    // Set `eventQueue` to null before processing it so that we can tell if more\n    // events get enqueued while processing.\n    var processingEventQueue = eventQueue;\n    eventQueue = null;\n    if (simulated) {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);\n    } else {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n    }\n    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;\n    // This would be a good time to rethrow if any of the event handlers threw.\n    ReactErrorUtils.rethrowCaughtError();\n  },\n\n  /**\n   * These are needed for tests only. Do not use!\n   */\n  __purge: function () {\n    listenerBank = {};\n  },\n\n  __getListenerBank: function () {\n    return listenerBank;\n  }\n\n};\n\nmodule.exports = EventPluginHub;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EventPluginHub.js\n ** module id = 20\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPropagators\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPluginUtils = require('./EventPluginUtils');\n\nvar accumulateInto = require('./accumulateInto');\nvar forEachAccumulated = require('./forEachAccumulated');\nvar warning = require('fbjs/lib/warning');\n\nvar PropagationPhases = EventConstants.PropagationPhases;\nvar getListener = EventPluginHub.getListener;\n\n/**\n * Some event types have a notion of different registration names for different\n * \"phases\" of propagation. This finds listeners by a given phase.\n */\nfunction listenerAtPhase(inst, event, propagationPhase) {\n  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(inst, registrationName);\n}\n\n/**\n * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n * here, allows us to not have to bind or create functions for each event.\n * Mutating the event's members allows us to not have to create a wrapping\n * \"dispatch\" object that pairs the event with the listener.\n */\nfunction accumulateDirectionalDispatches(inst, upwards, event) {\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;\n  }\n  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;\n  var listener = listenerAtPhase(inst, event, phase);\n  if (listener) {\n    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n  }\n}\n\n/**\n * Collect dispatches (must be entirely collected before dispatching - see unit\n * tests). Lazily allocate the array to conserve memory.  We must loop through\n * each event and perform the traversal for each one. We cannot perform a\n * single traversal for the entire collection of events because each event may\n * have a different target.\n */\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.\n */\nfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    var targetInst = event._targetInst;\n    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;\n    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(inst, ignoredDirection, event) {\n  if (event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listener = getListener(inst, registrationName);\n    if (listener) {\n      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event._targetInst, null, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n\nfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n}\n\nfunction accumulateEnterLeaveDispatches(leave, enter, from, to) {\n  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);\n}\n\nfunction accumulateDirectDispatches(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\n/**\n * A small set of propagation patterns, each of which will accept a small amount\n * of information, and generate a set of \"dispatch ready event objects\" - which\n * are sets of events that have already been annotated with a set of dispatched\n * listener functions/ids. The API is designed this way to discourage these\n * propagation strategies from actually executing the dispatches, since we\n * always want to collect the entire set of dispatches before executing event a\n * single one.\n *\n * @constructor EventPropagators\n */\nvar EventPropagators = {\n  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,\n  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,\n  accumulateDirectDispatches: accumulateDirectDispatches,\n  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches\n};\n\nmodule.exports = EventPropagators;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EventPropagators.js\n ** module id = 21\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInstanceMap\n */\n\n'use strict';\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n */\n\n// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\n\nvar ReactInstanceMap = {\n\n  /**\n   * This API should be called `delete` but we'd have to make sure to always\n   * transform these to strings for IE support. When this transform is fully\n   * supported we can rename it.\n   */\n  remove: function (key) {\n    key._reactInternalInstance = undefined;\n  },\n\n  get: function (key) {\n    return key._reactInternalInstance;\n  },\n\n  has: function (key) {\n    return key._reactInternalInstance !== undefined;\n  },\n\n  set: function (key, value) {\n    key._reactInternalInstance = value;\n  }\n\n};\n\nmodule.exports = ReactInstanceMap;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactInstanceMap.js\n ** module id = 22\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticUIEvent\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getEventTarget = require('./getEventTarget');\n\n/**\n * @interface UIEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar UIEventInterface = {\n  view: function (event) {\n    if (event.view) {\n      return event.view;\n    }\n\n    var target = getEventTarget(event);\n    if (target.window === target) {\n      // target is a window object\n      return target;\n    }\n\n    var doc = target.ownerDocument;\n    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n    if (doc) {\n      return doc.defaultView || doc.parentWindow;\n    } else {\n      return window;\n    }\n  },\n  detail: function (event) {\n    return event.detail || 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\n\nmodule.exports = SyntheticUIEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticUIEvent.js\n ** module id = 23\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Transaction\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * `Transaction` creates a black box that is able to wrap any method such that\n * certain invariants are maintained before and after the method is invoked\n * (Even if an exception is thrown while invoking the wrapped method). Whoever\n * instantiates a transaction can provide enforcers of the invariants at\n * creation time. The `Transaction` class itself will supply one additional\n * automatic invariant for you - the invariant that any transaction instance\n * should not be run while it is already being run. You would typically create a\n * single instance of a `Transaction` for reuse multiple times, that potentially\n * is used to wrap several different methods. Wrappers are extremely simple -\n * they only require implementing two methods.\n *\n * <pre>\n *                       wrappers (injected at creation time)\n *                                      +        +\n *                                      |        |\n *                    +-----------------|--------|--------------+\n *                    |                 v        |              |\n *                    |      +---------------+   |              |\n *                    |   +--|    wrapper1   |---|----+         |\n *                    |   |  +---------------+   v    |         |\n *                    |   |          +-------------+  |         |\n *                    |   |     +----|   wrapper2  |--------+   |\n *                    |   |     |    +-------------+  |     |   |\n *                    |   |     |                     |     |   |\n *                    |   v     v                     v     v   | wrapper\n *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | +---+ +---+   +---------+   +---+ +---+ |\n *                    |  initialize                    close    |\n *                    +-----------------------------------------+\n * </pre>\n *\n * Use cases:\n * - Preserving the input selection ranges before/after reconciliation.\n *   Restoring selection even in the event of an unexpected error.\n * - Deactivating events while rearranging the DOM, preventing blurs/focuses,\n *   while guaranteeing that afterwards, the event system is reactivated.\n * - Flushing a queue of collected DOM mutations to the main UI thread after a\n *   reconciliation takes place in a worker thread.\n * - Invoking any collected `componentDidUpdate` callbacks after rendering new\n *   content.\n * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\n *   to preserve the `scrollTop` (an automatic scroll aware DOM).\n * - (Future use case): Layout calculations before and after DOM updates.\n *\n * Transactional plugin API:\n * - A module that has an `initialize` method that returns any precomputation.\n * - and a `close` method that accepts the precomputation. `close` is invoked\n *   when the wrapped process is completed, or has failed.\n *\n * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules\n * that implement `initialize` and `close`.\n * @return {Transaction} Single transaction for reuse in thread.\n *\n * @class Transaction\n */\nvar Mixin = {\n  /**\n   * Sets up this instance so that it is prepared for collecting metrics. Does\n   * so such that this setup method may be used on an instance that is already\n   * initialized, in a way that does not consume additional memory upon reuse.\n   * That can be useful if you decide to make your subclass of this mixin a\n   * \"PooledClass\".\n   */\n  reinitializeTransaction: function () {\n    this.transactionWrappers = this.getTransactionWrappers();\n    if (this.wrapperInitData) {\n      this.wrapperInitData.length = 0;\n    } else {\n      this.wrapperInitData = [];\n    }\n    this._isInTransaction = false;\n  },\n\n  _isInTransaction: false,\n\n  /**\n   * @abstract\n   * @return {Array<TransactionWrapper>} Array of transaction wrappers.\n   */\n  getTransactionWrappers: null,\n\n  isInTransaction: function () {\n    return !!this._isInTransaction;\n  },\n\n  /**\n   * Executes the function within a safety window. Use this for the top level\n   * methods that result in large amounts of computation/mutations that would\n   * need to be safety checked. The optional arguments helps prevent the need\n   * to bind in many cases.\n   *\n   * @param {function} method Member of scope to call.\n   * @param {Object} scope Scope to invoke from.\n   * @param {Object?=} a Argument to pass to the method.\n   * @param {Object?=} b Argument to pass to the method.\n   * @param {Object?=} c Argument to pass to the method.\n   * @param {Object?=} d Argument to pass to the method.\n   * @param {Object?=} e Argument to pass to the method.\n   * @param {Object?=} f Argument to pass to the method.\n   *\n   * @return {*} Return value from `method`.\n   */\n  perform: function (method, scope, a, b, c, d, e, f) {\n    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;\n    var errorThrown;\n    var ret;\n    try {\n      this._isInTransaction = true;\n      // Catching errors makes debugging more difficult, so we start with\n      // errorThrown set to true before setting it to false after calling\n      // close -- if it's still set to true in the finally block, it means\n      // one of these calls threw.\n      errorThrown = true;\n      this.initializeAll(0);\n      ret = method.call(scope, a, b, c, d, e, f);\n      errorThrown = false;\n    } finally {\n      try {\n        if (errorThrown) {\n          // If `method` throws, prefer to show that stack trace over any thrown\n          // by invoking `closeAll`.\n          try {\n            this.closeAll(0);\n          } catch (err) {}\n        } else {\n          // Since `method` didn't throw, we don't want to silence the exception\n          // here.\n          this.closeAll(0);\n        }\n      } finally {\n        this._isInTransaction = false;\n      }\n    }\n    return ret;\n  },\n\n  initializeAll: function (startIndex) {\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      try {\n        // Catching errors makes debugging more difficult, so we start with the\n        // OBSERVED_ERROR state before overwriting it with the real return value\n        // of initialize -- if it's still set to OBSERVED_ERROR in the finally\n        // block, it means wrapper.initialize threw.\n        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;\n        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;\n      } finally {\n        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {\n          // The initializer for wrapper i threw an error; initialize the\n          // remaining wrappers but silence any exceptions from them to ensure\n          // that the first error is the one to bubble up.\n          try {\n            this.initializeAll(i + 1);\n          } catch (err) {}\n        }\n      }\n    }\n  },\n\n  /**\n   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into\n   * them the respective return values of `this.transactionWrappers.init[i]`\n   * (`close`rs that correspond to initializers that failed will not be\n   * invoked).\n   */\n  closeAll: function (startIndex) {\n    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      var initData = this.wrapperInitData[i];\n      var errorThrown;\n      try {\n        // Catching errors makes debugging more difficult, so we start with\n        // errorThrown set to true before setting it to false after calling\n        // close -- if it's still set to true in the finally block, it means\n        // wrapper.close threw.\n        errorThrown = true;\n        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {\n          wrapper.close.call(this, initData);\n        }\n        errorThrown = false;\n      } finally {\n        if (errorThrown) {\n          // The closer for wrapper i threw an error; close the remaining\n          // wrappers but silence any exceptions from them to ensure that the\n          // first error is the one to bubble up.\n          try {\n            this.closeAll(i + 1);\n          } catch (e) {}\n        }\n      }\n    }\n    this.wrapperInitData.length = 0;\n  }\n};\n\nvar Transaction = {\n\n  Mixin: Mixin,\n\n  /**\n   * Token to look for to determine if an error occurred.\n   */\n  OBSERVED_ERROR: {}\n\n};\n\nmodule.exports = Transaction;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/Transaction.js\n ** module id = 24\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks static-only\n */\n\n'use strict';\n\nvar invariant = require('./invariant');\n\n/**\n * Constructs an enumeration with keys equal to their value.\n *\n * For example:\n *\n *   var COLORS = keyMirror({blue: null, red: null});\n *   var myColor = COLORS.blue;\n *   var isColorValid = !!COLORS[myColor];\n *\n * The last line could not be performed if the values of the generated enum were\n * not equal to their keys.\n *\n *   Input:  {key1: val1, key2: val2}\n *   Output: {key1: key1, key2: key2}\n *\n * @param {object} obj\n * @return {object}\n */\nvar keyMirror = function keyMirror(obj) {\n  var ret = {};\n  var key;\n  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;\n  for (key in obj) {\n    if (!obj.hasOwnProperty(key)) {\n      continue;\n    }\n    ret[key] = key;\n  }\n  return ret;\n};\n\nmodule.exports = keyMirror;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/keyMirror.js\n ** module id = 25\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DisabledInputUtils\n */\n\n'use strict';\n\nvar disableableMouseListenerNames = {\n  onClick: true,\n  onDoubleClick: true,\n  onMouseDown: true,\n  onMouseMove: true,\n  onMouseUp: true,\n\n  onClickCapture: true,\n  onDoubleClickCapture: true,\n  onMouseDownCapture: true,\n  onMouseMoveCapture: true,\n  onMouseUpCapture: true\n};\n\n/**\n * Implements a host component that does not receive mouse events\n * when `disabled` is set.\n */\nvar DisabledInputUtils = {\n  getHostProps: function (inst, props) {\n    if (!props.disabled) {\n      return props;\n    }\n\n    // Copy the props, except the mouse listeners\n    var hostProps = {};\n    for (var key in props) {\n      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {\n        hostProps[key] = props[key];\n      }\n    }\n\n    return hostProps;\n  }\n};\n\nmodule.exports = DisabledInputUtils;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DisabledInputUtils.js\n ** module id = 26\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserEventEmitter\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar EventConstants = require('./EventConstants');\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar ReactEventEmitterMixin = require('./ReactEventEmitterMixin');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar getVendorPrefixedEventName = require('./getVendorPrefixedEventName');\nvar isEventSupported = require('./isEventSupported');\n\n/**\n * Summary of `ReactBrowserEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactEventListener, which is injected and can therefore support pluggable\n *    event sources. This is the only work that occurs in the main thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\nvar hasEventPageXY;\nvar alreadyListeningTo = {};\nvar isMonitoringScrollValue = false;\nvar reactTopListenersCounter = 0;\n\n// For events like 'submit' which don't consistently bubble (which we trap at a\n// lower node than `document`), binding at `document` would cause duplicate\n// events so we don't include them here\nvar topEventMapping = {\n  topAbort: 'abort',\n  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',\n  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',\n  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',\n  topBlur: 'blur',\n  topCanPlay: 'canplay',\n  topCanPlayThrough: 'canplaythrough',\n  topChange: 'change',\n  topClick: 'click',\n  topCompositionEnd: 'compositionend',\n  topCompositionStart: 'compositionstart',\n  topCompositionUpdate: 'compositionupdate',\n  topContextMenu: 'contextmenu',\n  topCopy: 'copy',\n  topCut: 'cut',\n  topDoubleClick: 'dblclick',\n  topDrag: 'drag',\n  topDragEnd: 'dragend',\n  topDragEnter: 'dragenter',\n  topDragExit: 'dragexit',\n  topDragLeave: 'dragleave',\n  topDragOver: 'dragover',\n  topDragStart: 'dragstart',\n  topDrop: 'drop',\n  topDurationChange: 'durationchange',\n  topEmptied: 'emptied',\n  topEncrypted: 'encrypted',\n  topEnded: 'ended',\n  topError: 'error',\n  topFocus: 'focus',\n  topInput: 'input',\n  topKeyDown: 'keydown',\n  topKeyPress: 'keypress',\n  topKeyUp: 'keyup',\n  topLoadedData: 'loadeddata',\n  topLoadedMetadata: 'loadedmetadata',\n  topLoadStart: 'loadstart',\n  topMouseDown: 'mousedown',\n  topMouseMove: 'mousemove',\n  topMouseOut: 'mouseout',\n  topMouseOver: 'mouseover',\n  topMouseUp: 'mouseup',\n  topPaste: 'paste',\n  topPause: 'pause',\n  topPlay: 'play',\n  topPlaying: 'playing',\n  topProgress: 'progress',\n  topRateChange: 'ratechange',\n  topScroll: 'scroll',\n  topSeeked: 'seeked',\n  topSeeking: 'seeking',\n  topSelectionChange: 'selectionchange',\n  topStalled: 'stalled',\n  topSuspend: 'suspend',\n  topTextInput: 'textInput',\n  topTimeUpdate: 'timeupdate',\n  topTouchCancel: 'touchcancel',\n  topTouchEnd: 'touchend',\n  topTouchMove: 'touchmove',\n  topTouchStart: 'touchstart',\n  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',\n  topVolumeChange: 'volumechange',\n  topWaiting: 'waiting',\n  topWheel: 'wheel'\n};\n\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\nvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n  // directly.\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n\n/**\n * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n * example:\n *\n *   EventPluginHub.putListener('myID', 'onClick', myFunction);\n *\n * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n *\n * @internal\n */\nvar ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {\n\n  /**\n   * Injectable event backend\n   */\n  ReactEventListener: null,\n\n  injection: {\n    /**\n     * @param {object} ReactEventListener\n     */\n    injectReactEventListener: function (ReactEventListener) {\n      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);\n      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n    }\n  },\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function (enabled) {\n    if (ReactBrowserEventEmitter.ReactEventListener) {\n      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n    }\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function () {\n    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());\n  },\n\n  /**\n   * We listen for bubbled touch events on the document object.\n   *\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n   * mounting `onmousemove` events at some node that was not the document\n   * element. The symptoms were that if your mouse is not moving over something\n   * contained within that mount point (for example on the background) the\n   * top-level listeners for `onmousemove` won't be called. However, if you\n   * register the `mousemove` on the document object, then it will of course\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n   * top-level listeners to the document object only, at least for these\n   * movement types of events and possibly all events.\n   *\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n   *\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n   * they bubble to document.\n   *\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {object} contentDocumentHandle Document which owns the container\n   */\n  listenTo: function (registrationName, contentDocumentHandle) {\n    var mountAt = contentDocumentHandle;\n    var isListening = getListeningForDocument(mountAt);\n    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];\n\n    var topLevelTypes = EventConstants.topLevelTypes;\n    for (var i = 0; i < dependencies.length; i++) {\n      var dependency = dependencies[i];\n      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n        if (dependency === topLevelTypes.topWheel) {\n          if (isEventSupported('wheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);\n          } else if (isEventSupported('mousewheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);\n          } else {\n            // Firefox needs to capture a different mouse scroll event.\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);\n          }\n        } else if (dependency === topLevelTypes.topScroll) {\n\n          if (isEventSupported('scroll', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);\n          } else {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);\n          }\n        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {\n\n          if (isEventSupported('focus', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);\n          } else if (isEventSupported('focusin')) {\n            // IE has `focusin` and `focusout` events which bubble.\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);\n          }\n\n          // to make sure blur and focus event listeners are only attached once\n          isListening[topLevelTypes.topBlur] = true;\n          isListening[topLevelTypes.topFocus] = true;\n        } else if (topEventMapping.hasOwnProperty(dependency)) {\n          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);\n        }\n\n        isListening[dependency] = true;\n      }\n    }\n  },\n\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  /**\n   * Protect against document.createEvent() returning null\n   * Some popup blocker extensions appear to do this:\n   * https://github.com/facebook/react/issues/6887\n   */\n  supportsEventPageXY: function () {\n    if (!document.createEvent) {\n      return false;\n    }\n    var ev = document.createEvent('MouseEvent');\n    return ev != null && 'pageX' in ev;\n  },\n\n  /**\n   * Listens to window scroll and resize events. We cache scroll values so that\n   * application code can access them without triggering reflows.\n   *\n   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when\n   * pageX/pageY isn't supported (legacy browsers).\n   *\n   * NOTE: Scroll events do not bubble.\n   *\n   * @see http://www.quirksmode.org/dom/events/scroll.html\n   */\n  ensureScrollValueMonitoring: function () {\n    if (hasEventPageXY === undefined) {\n      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();\n    }\n    if (!hasEventPageXY && !isMonitoringScrollValue) {\n      var refresh = ViewportMetrics.refreshScrollValues;\n      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n      isMonitoringScrollValue = true;\n    }\n  }\n\n});\n\nmodule.exports = ReactBrowserEventEmitter;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactBrowserEventEmitter.js\n ** module id = 27\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticMouseEvent\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar MouseEventInterface = {\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: function (event) {\n    // Webkit, Firefox, IE9+\n    // which:  1 2 3\n    // button: 0 1 2 (standard)\n    var button = event.button;\n    if ('which' in event) {\n      return button;\n    }\n    // IE<9\n    // which:  undefined\n    // button: 0 0 0\n    // button: 1 4 2 (onmouseup)\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\n  },\n  buttons: null,\n  relatedTarget: function (event) {\n    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n  },\n  // \"Proprietary\" Interface.\n  pageX: function (event) {\n    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\n  },\n  pageY: function (event) {\n    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\nmodule.exports = SyntheticMouseEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticMouseEvent.js\n ** module id = 28\n ** module chunks = 0\n **/","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * Based on the escape-html library, which is used under the MIT License below:\n *\n * Copyright (c) 2012-2013 TJ Holowaychuk\n * Copyright (c) 2015 Andreas Lubbe\n * Copyright (c) 2015 Tiancheng \"Timothy\" Gu\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * @providesModule escapeTextContentForBrowser\n */\n\n'use strict';\n\n// code copied and modified from escape-html\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        // \"\n        escape = '&quot;';\n        break;\n      case 38:\n        // &\n        escape = '&amp;';\n        break;\n      case 39:\n        // '\n        escape = '&#x27;'; // modified from escape-html; used to be '&#39'\n        break;\n      case 60:\n        // <\n        escape = '&lt;';\n        break;\n      case 62:\n        // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\n}\n// end code copied and modified from escape-html\n\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\nfunction escapeTextContentForBrowser(text) {\n  if (typeof text === 'boolean' || typeof text === 'number') {\n    // this shortcircuit helps perf for types that we know will never have\n    // special characters, especially given that this function is used often\n    // for numeric dom ids.\n    return '' + text;\n  }\n  return escapeHtml(text);\n}\n\nmodule.exports = escapeTextContentForBrowser;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/escapeTextContentForBrowser.js\n ** module id = 29\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule setInnerHTML\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar DOMNamespaces = require('./DOMNamespaces');\n\nvar WHITESPACE_TEST = /^[ \\r\\n\\t\\f]/;\nvar NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/;\n\nvar createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');\n\n// SVG temp container for IE lacking innerHTML\nvar reusableSVGContainer;\n\n/**\n * Set the innerHTML property of a node, ensuring that whitespace is preserved\n * even in IE8.\n *\n * @param {DOMElement} node\n * @param {string} html\n * @internal\n */\nvar setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {\n  // IE does not have innerHTML for SVG nodes, so instead we inject the\n  // new markup in a temp node and then move the child nodes across into\n  // the target node\n  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {\n    reusableSVGContainer = reusableSVGContainer || document.createElement('div');\n    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';\n    var svgNode = reusableSVGContainer.firstChild;\n    while (svgNode.firstChild) {\n      node.appendChild(svgNode.firstChild);\n    }\n  } else {\n    node.innerHTML = html;\n  }\n});\n\nif (ExecutionEnvironment.canUseDOM) {\n  // IE8: When updating a just created node with innerHTML only leading\n  // whitespace is removed. When updating an existing node with innerHTML\n  // whitespace in root TextNodes is also collapsed.\n  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html\n\n  // Feature detection; only IE8 is known to behave improperly like this.\n  var testElement = document.createElement('div');\n  testElement.innerHTML = ' ';\n  if (testElement.innerHTML === '') {\n    setInnerHTML = function (node, html) {\n      // Magic theory: IE8 supposedly differentiates between added and updated\n      // nodes when processing innerHTML, innerHTML on updated nodes suffers\n      // from worse whitespace behavior. Re-adding a node like this triggers\n      // the initial and more favorable whitespace behavior.\n      // TODO: What to do on a detached node?\n      if (node.parentNode) {\n        node.parentNode.replaceChild(node, node);\n      }\n\n      // We also implement a workaround for non-visible tags disappearing into\n      // thin air on IE8, this only happens if there is no visible text\n      // in-front of the non-visible tags. Piggyback on the whitespace fix\n      // and simply check if any non-visible tags appear in the source.\n      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {\n        // Recover leading whitespace by temporarily prepending any character.\n        // \\uFEFF has the potential advantage of being zero-width/invisible.\n        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode\n        // in hopes that this is preserved even if \"\\uFEFF\" is transformed to\n        // the actual Unicode character (by Babel, for example).\n        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216\n        node.innerHTML = String.fromCharCode(0xFEFF) + html;\n\n        // deleteData leaves an empty `TextNode` which offsets the index of all\n        // children. Definitely want to avoid this.\n        var textNode = node.firstChild;\n        if (textNode.data.length === 1) {\n          node.removeChild(textNode);\n        } else {\n          textNode.deleteData(0, 1);\n        }\n      } else {\n        node.innerHTML = html;\n      }\n    };\n  }\n  testElement = null;\n}\n\nmodule.exports = setInnerHTML;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/setInnerHTML.js\n ** module id = 30\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/shallowEqual.js\n ** module id = 31\n ** module chunks = 0\n **/","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-scripts/~/process/browser.js\n ** module id = 32\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMChildrenOperations\n */\n\n'use strict';\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar Danger = require('./Danger');\nvar ReactMultiChildUpdateTypes = require('./ReactMultiChildUpdateTypes');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');\nvar setInnerHTML = require('./setInnerHTML');\nvar setTextContent = require('./setTextContent');\n\nfunction getNodeAfter(parentNode, node) {\n  // Special case for text components, which return [open, close] comments\n  // from getHostNode.\n  if (Array.isArray(node)) {\n    node = node[1];\n  }\n  return node ? node.nextSibling : parentNode.firstChild;\n}\n\n/**\n * Inserts `childNode` as a child of `parentNode` at the `index`.\n *\n * @param {DOMElement} parentNode Parent node in which to insert.\n * @param {DOMElement} childNode Child node to insert.\n * @param {number} index Index at which to insert the child.\n * @internal\n */\nvar insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {\n  // We rely exclusively on `insertBefore(node, null)` instead of also using\n  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so\n  // we are careful to use `null`.)\n  parentNode.insertBefore(childNode, referenceNode);\n});\n\nfunction insertLazyTreeChildAt(parentNode, childTree, referenceNode) {\n  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);\n}\n\nfunction moveChild(parentNode, childNode, referenceNode) {\n  if (Array.isArray(childNode)) {\n    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);\n  } else {\n    insertChildAt(parentNode, childNode, referenceNode);\n  }\n}\n\nfunction removeChild(parentNode, childNode) {\n  if (Array.isArray(childNode)) {\n    var closingComment = childNode[1];\n    childNode = childNode[0];\n    removeDelimitedText(parentNode, childNode, closingComment);\n    parentNode.removeChild(closingComment);\n  }\n  parentNode.removeChild(childNode);\n}\n\nfunction moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {\n  var node = openingComment;\n  while (true) {\n    var nextNode = node.nextSibling;\n    insertChildAt(parentNode, node, referenceNode);\n    if (node === closingComment) {\n      break;\n    }\n    node = nextNode;\n  }\n}\n\nfunction removeDelimitedText(parentNode, startNode, closingComment) {\n  while (true) {\n    var node = startNode.nextSibling;\n    if (node === closingComment) {\n      // The closing comment is removed by ReactMultiChild.\n      break;\n    } else {\n      parentNode.removeChild(node);\n    }\n  }\n}\n\nfunction replaceDelimitedText(openingComment, closingComment, stringText) {\n  var parentNode = openingComment.parentNode;\n  var nodeAfterComment = openingComment.nextSibling;\n  if (nodeAfterComment === closingComment) {\n    // There are no text nodes between the opening and closing comments; insert\n    // a new one if stringText isn't empty.\n    if (stringText) {\n      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);\n    }\n  } else {\n    if (stringText) {\n      // Set the text content of the first node after the opening comment, and\n      // remove all following nodes up until the closing comment.\n      setTextContent(nodeAfterComment, stringText);\n      removeDelimitedText(parentNode, nodeAfterComment, closingComment);\n    } else {\n      removeDelimitedText(parentNode, openingComment, closingComment);\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);\n  }\n}\n\nvar dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;\nif (process.env.NODE_ENV !== 'production') {\n  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {\n    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);\n    if (prevInstance._debugID !== 0) {\n      ReactInstrumentation.debugTool.onHostOperation(prevInstance._debugID, 'replace with', markup.toString());\n    } else {\n      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);\n      if (nextInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onHostOperation(nextInstance._debugID, 'mount', markup.toString());\n      }\n    }\n  };\n}\n\n/**\n * Operations for updating with DOM children.\n */\nvar DOMChildrenOperations = {\n\n  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,\n\n  replaceDelimitedText: replaceDelimitedText,\n\n  /**\n   * Updates a component's children by processing a series of updates. The\n   * update configurations are each expected to have a `parentNode` property.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @internal\n   */\n  processUpdates: function (parentNode, updates) {\n    if (process.env.NODE_ENV !== 'production') {\n      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;\n    }\n\n    for (var k = 0; k < updates.length; k++) {\n      var update = updates[k];\n      switch (update.type) {\n        case ReactMultiChildUpdateTypes.INSERT_MARKUP:\n          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'insert child', { toIndex: update.toIndex, content: update.content.toString() });\n          }\n          break;\n        case ReactMultiChildUpdateTypes.MOVE_EXISTING:\n          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'move child', { fromIndex: update.fromIndex, toIndex: update.toIndex });\n          }\n          break;\n        case ReactMultiChildUpdateTypes.SET_MARKUP:\n          setInnerHTML(parentNode, update.content);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace children', update.content.toString());\n          }\n          break;\n        case ReactMultiChildUpdateTypes.TEXT_CONTENT:\n          setTextContent(parentNode, update.content);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace text', update.content.toString());\n          }\n          break;\n        case ReactMultiChildUpdateTypes.REMOVE_NODE:\n          removeChild(parentNode, update.fromNode);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'remove child', { fromIndex: update.fromIndex });\n          }\n          break;\n      }\n    }\n  }\n\n};\n\nmodule.exports = DOMChildrenOperations;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DOMChildrenOperations.js\n ** module id = 33\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMNamespaces\n */\n\n'use strict';\n\nvar DOMNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg'\n};\n\nmodule.exports = DOMNamespaces;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DOMNamespaces.js\n ** module id = 34\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginRegistry\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Injectable ordering of event plugins.\n */\nvar EventPluginOrder = null;\n\n/**\n * Injectable mapping from names to event plugin modules.\n */\nvar namesToPlugins = {};\n\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\nfunction recomputePluginOrdering() {\n  if (!EventPluginOrder) {\n    // Wait until an `EventPluginOrder` is injected.\n    return;\n  }\n  for (var pluginName in namesToPlugins) {\n    var PluginModule = namesToPlugins[pluginName];\n    var pluginIndex = EventPluginOrder.indexOf(pluginName);\n    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;\n    if (EventPluginRegistry.plugins[pluginIndex]) {\n      continue;\n    }\n    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;\n    EventPluginRegistry.plugins[pluginIndex] = PluginModule;\n    var publishedEvents = PluginModule.eventTypes;\n    for (var eventName in publishedEvents) {\n      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;\n    }\n  }\n}\n\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\nfunction publishEventForPlugin(dispatchConfig, PluginModule, eventName) {\n  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;\n  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;\n\n  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n  if (phasedRegistrationNames) {\n    for (var phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);\n      }\n    }\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Publishes a registration name that is used to identify dispatched events and\n * can be used with `EventPluginHub.putListener` to register listeners.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\nfunction publishRegistrationName(registrationName, PluginModule, eventName) {\n  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;\n  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;\n  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var lowerCasedName = registrationName.toLowerCase();\n    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;\n\n    if (registrationName === 'onDoubleClick') {\n      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;\n    }\n  }\n}\n\n/**\n * Registers plugins so that they can extract and dispatch events.\n *\n * @see {EventPluginHub}\n */\nvar EventPluginRegistry = {\n\n  /**\n   * Ordered list of injected plugins.\n   */\n  plugins: [],\n\n  /**\n   * Mapping from event name to dispatch config\n   */\n  eventNameDispatchConfigs: {},\n\n  /**\n   * Mapping from registration name to plugin module\n   */\n  registrationNameModules: {},\n\n  /**\n   * Mapping from registration name to event name\n   */\n  registrationNameDependencies: {},\n\n  /**\n   * Mapping from lowercase registration names to the properly cased version,\n   * used to warn in the case of missing event handlers. Available\n   * only in __DEV__.\n   * @type {Object}\n   */\n  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,\n\n  /**\n   * Injects an ordering of plugins (by plugin name). This allows the ordering\n   * to be decoupled from injection of the actual plugins so that ordering is\n   * always deterministic regardless of packaging, on-the-fly injection, etc.\n   *\n   * @param {array} InjectedEventPluginOrder\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginOrder}\n   */\n  injectEventPluginOrder: function (InjectedEventPluginOrder) {\n    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;\n    // Clone the ordering so it cannot be dynamically mutated.\n    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);\n    recomputePluginOrdering();\n  },\n\n  /**\n   * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n   * in the ordering injected by `injectEventPluginOrder`.\n   *\n   * Plugins can be injected as part of page initialization or on-the-fly.\n   *\n   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginsByName}\n   */\n  injectEventPluginsByName: function (injectedNamesToPlugins) {\n    var isOrderingDirty = false;\n    for (var pluginName in injectedNamesToPlugins) {\n      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n        continue;\n      }\n      var PluginModule = injectedNamesToPlugins[pluginName];\n      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {\n        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;\n        namesToPlugins[pluginName] = PluginModule;\n        isOrderingDirty = true;\n      }\n    }\n    if (isOrderingDirty) {\n      recomputePluginOrdering();\n    }\n  },\n\n  /**\n   * Looks up the plugin for the supplied event.\n   *\n   * @param {object} event A synthetic event.\n   * @return {?object} The plugin that created the supplied event.\n   * @internal\n   */\n  getPluginModuleForEvent: function (event) {\n    var dispatchConfig = event.dispatchConfig;\n    if (dispatchConfig.registrationName) {\n      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;\n    }\n    for (var phase in dispatchConfig.phasedRegistrationNames) {\n      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {\n        continue;\n      }\n      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];\n      if (PluginModule) {\n        return PluginModule;\n      }\n    }\n    return null;\n  },\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _resetEventPlugins: function () {\n    EventPluginOrder = null;\n    for (var pluginName in namesToPlugins) {\n      if (namesToPlugins.hasOwnProperty(pluginName)) {\n        delete namesToPlugins[pluginName];\n      }\n    }\n    EventPluginRegistry.plugins.length = 0;\n\n    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;\n    for (var eventName in eventNameDispatchConfigs) {\n      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n        delete eventNameDispatchConfigs[eventName];\n      }\n    }\n\n    var registrationNameModules = EventPluginRegistry.registrationNameModules;\n    for (var registrationName in registrationNameModules) {\n      if (registrationNameModules.hasOwnProperty(registrationName)) {\n        delete registrationNameModules[registrationName];\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;\n      for (var lowerCasedName in possibleRegistrationNames) {\n        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {\n          delete possibleRegistrationNames[lowerCasedName];\n        }\n      }\n    }\n  }\n\n};\n\nmodule.exports = EventPluginRegistry;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EventPluginRegistry.js\n ** module id = 35\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginUtils\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar EventConstants = require('./EventConstants');\nvar ReactErrorUtils = require('./ReactErrorUtils');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `ComponentTree`: [required] Module that can convert between React instances\n *   and actual node references.\n */\nvar ComponentTree;\nvar TreeTraversal;\nvar injection = {\n  injectComponentTree: function (Injected) {\n    ComponentTree = Injected;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;\n    }\n  },\n  injectTreeTraversal: function (Injected) {\n    TreeTraversal = Injected;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;\n    }\n  }\n};\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nfunction isEndish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;\n}\n\nvar validateEventDispatches;\nif (process.env.NODE_ENV !== 'production') {\n  validateEventDispatches = function (event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchInstances = event._dispatchInstances;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n\n    var instancesIsArr = Array.isArray(dispatchInstances);\n    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\n\n    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;\n  };\n}\n\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @param {function} listener Application-level callback\n * @param {*} inst Internal component instance\n */\nfunction executeDispatch(event, simulated, listener, inst) {\n  var type = event.type || 'unknown-event';\n  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);\n  if (simulated) {\n    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);\n  } else {\n    ReactErrorUtils.invokeGuardedCallback(type, listener, event);\n  }\n  event.currentTarget = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, simulated) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);\n  }\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return {?string} id of the first dispatch execution who's listener returns\n * true, or null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchInstances[i])) {\n        return dispatchInstances[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchInstances)) {\n      return dispatchInstances;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchInstances = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchInstance = event._dispatchInstances;\n  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;\n  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;\n  var res = dispatchListener ? dispatchListener(event) : null;\n  event.currentTarget = null;\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n\n  getInstanceFromNode: function (node) {\n    return ComponentTree.getInstanceFromNode(node);\n  },\n  getNodeFromInstance: function (node) {\n    return ComponentTree.getNodeFromInstance(node);\n  },\n  isAncestor: function (a, b) {\n    return TreeTraversal.isAncestor(a, b);\n  },\n  getLowestCommonAncestor: function (a, b) {\n    return TreeTraversal.getLowestCommonAncestor(a, b);\n  },\n  getParentInstance: function (inst) {\n    return TreeTraversal.getParentInstance(inst);\n  },\n  traverseTwoPhase: function (target, fn, arg) {\n    return TreeTraversal.traverseTwoPhase(target, fn, arg);\n  },\n  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {\n    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);\n  },\n\n  injection: injection\n};\n\nmodule.exports = EventPluginUtils;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EventPluginUtils.js\n ** module id = 36\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule KeyEscapeUtils\n * \n */\n\n'use strict';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * Unescape and unwrap key for human-readable display\n *\n * @param {string} key to unescape.\n * @return {string} the unescaped key.\n */\nfunction unescape(key) {\n  var unescapeRegex = /(=0|=2)/g;\n  var unescaperLookup = {\n    '=0': '=',\n    '=2': ':'\n  };\n  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n\n  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n    return unescaperLookup[match];\n  });\n}\n\nvar KeyEscapeUtils = {\n  escape: escape,\n  unescape: unescape\n};\n\nmodule.exports = KeyEscapeUtils;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/KeyEscapeUtils.js\n ** module id = 37\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedValueUtils\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactPropTypes = require('./ReactPropTypes');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\nvar ReactPropTypesSecret = require('./ReactPropTypesSecret');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar hasReadOnlyValue = {\n  'button': true,\n  'checkbox': true,\n  'image': true,\n  'hidden': true,\n  'radio': true,\n  'reset': true,\n  'submit': true\n};\n\nfunction _assertSingleLink(inputProps) {\n  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;\n}\nfunction _assertValueLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\\'t want to use valueLink.') : _prodInvariant('88') : void 0;\n}\n\nfunction _assertCheckedLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\\'t want to use checkedLink') : _prodInvariant('89') : void 0;\n}\n\nvar propTypes = {\n  value: function (props, propName, componentName) {\n    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  checked: function (props, propName, componentName) {\n    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  onChange: ReactPropTypes.func\n};\n\nvar loggedTypeFailures = {};\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  checkPropTypes: function (tagName, props, owner) {\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, ReactPropTypesSecret);\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(owner);\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;\n      }\n    }\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function (inputProps) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.value;\n    }\n    return inputProps.value;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function (inputProps) {\n    if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.value;\n    }\n    return inputProps.checked;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @param {SyntheticEvent} event change event to handle\n   */\n  executeOnChange: function (inputProps, event) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.requestChange(event.target.value);\n    } else if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.requestChange(event.target.checked);\n    } else if (inputProps.onChange) {\n      return inputProps.onChange.call(undefined, event);\n    }\n  }\n};\n\nmodule.exports = LinkedValueUtils;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/LinkedValueUtils.js\n ** module id = 38\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponent\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar canDefineProperty = require('./canDefineProperty');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nReactComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nReactComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;\n  this.updater.enqueueSetState(this, partialState);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'setState');\n  }\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nReactComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'forceUpdate');\n  }\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (process.env.NODE_ENV !== 'production') {\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n  var defineDeprecationWarning = function (methodName, info) {\n    if (canDefineProperty) {\n      Object.defineProperty(ReactComponent.prototype, methodName, {\n        get: function () {\n          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;\n          return undefined;\n        }\n      });\n    }\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nmodule.exports = ReactComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactComponent.js\n ** module id = 39\n ** module chunks = 0\n **/","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentEnvironment\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar injected = false;\n\nvar ReactComponentEnvironment = {\n\n  /**\n   * Optionally injectable hook for swapping out mount images in the middle of\n   * the tree.\n   */\n  replaceNodeWithMarkup: null,\n\n  /**\n   * Optionally injectable hook for processing a queue of child updates. Will\n   * later move into MultiChildComponents.\n   */\n  processChildrenUpdates: null,\n\n  injection: {\n    injectEnvironment: function (environment) {\n      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;\n      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;\n      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;\n      injected = true;\n    }\n  }\n\n};\n\nmodule.exports = ReactComponentEnvironment;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactComponentEnvironment.js\n ** module id = 40\n ** module chunks = 0\n **/","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentTreeHook\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nfunction isNative(fn) {\n  // Based on isNative() from Lodash\n  var funcToString = Function.prototype.toString;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var reIsNative = RegExp('^' + funcToString\n  // Take an example native function source for comparison\n  .call(hasOwnProperty)\n  // Strip regex characters so we can use it for regex\n  .replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  // Remove hasOwnProperty from the template to make it generic\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n  try {\n    var source = funcToString.call(fn);\n    return reIsNative.test(source);\n  } catch (err) {\n    return false;\n  }\n}\n\nvar canUseCollections =\n// Array.from\ntypeof Array.from === 'function' &&\n// Map\ntypeof Map === 'function' && isNative(Map) &&\n// Map.prototype.keys\nMap.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&\n// Set\ntypeof Set === 'function' && isNative(Set) &&\n// Set.prototype.keys\nSet.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);\n\nvar itemMap;\nvar rootIDSet;\n\nvar itemByKey;\nvar rootByKey;\n\nif (canUseCollections) {\n  itemMap = new Map();\n  rootIDSet = new Set();\n} else {\n  itemByKey = {};\n  rootByKey = {};\n}\n\nvar unmountedIDs = [];\n\n// Use non-numeric keys to prevent V8 performance issues:\n// https://github.com/facebook/react/pull/7232\nfunction getKeyFromID(id) {\n  return '.' + id;\n}\nfunction getIDFromKey(key) {\n  return parseInt(key.substr(1), 10);\n}\n\nfunction get(id) {\n  if (canUseCollections) {\n    return itemMap.get(id);\n  } else {\n    var key = getKeyFromID(id);\n    return itemByKey[key];\n  }\n}\n\nfunction remove(id) {\n  if (canUseCollections) {\n    itemMap['delete'](id);\n  } else {\n    var key = getKeyFromID(id);\n    delete itemByKey[key];\n  }\n}\n\nfunction create(id, element, parentID) {\n  var item = {\n    element: element,\n    parentID: parentID,\n    text: null,\n    childIDs: [],\n    isMounted: false,\n    updateCount: 0\n  };\n\n  if (canUseCollections) {\n    itemMap.set(id, item);\n  } else {\n    var key = getKeyFromID(id);\n    itemByKey[key] = item;\n  }\n}\n\nfunction addRoot(id) {\n  if (canUseCollections) {\n    rootIDSet.add(id);\n  } else {\n    var key = getKeyFromID(id);\n    rootByKey[key] = true;\n  }\n}\n\nfunction removeRoot(id) {\n  if (canUseCollections) {\n    rootIDSet['delete'](id);\n  } else {\n    var key = getKeyFromID(id);\n    delete rootByKey[key];\n  }\n}\n\nfunction getRegisteredIDs() {\n  if (canUseCollections) {\n    return Array.from(itemMap.keys());\n  } else {\n    return Object.keys(itemByKey).map(getIDFromKey);\n  }\n}\n\nfunction getRootIDs() {\n  if (canUseCollections) {\n    return Array.from(rootIDSet.keys());\n  } else {\n    return Object.keys(rootByKey).map(getIDFromKey);\n  }\n}\n\nfunction purgeDeep(id) {\n  var item = get(id);\n  if (item) {\n    var childIDs = item.childIDs;\n\n    remove(id);\n    childIDs.forEach(purgeDeep);\n  }\n}\n\nfunction describeComponentFrame(name, source, ownerName) {\n  return '\\n    in ' + name + (source ? ' (at ' + source.fileName.replace(/^.*[\\\\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');\n}\n\nfunction getDisplayName(element) {\n  if (element == null) {\n    return '#empty';\n  } else if (typeof element === 'string' || typeof element === 'number') {\n    return '#text';\n  } else if (typeof element.type === 'string') {\n    return element.type;\n  } else {\n    return element.type.displayName || element.type.name || 'Unknown';\n  }\n}\n\nfunction describeID(id) {\n  var name = ReactComponentTreeHook.getDisplayName(id);\n  var element = ReactComponentTreeHook.getElement(id);\n  var ownerID = ReactComponentTreeHook.getOwnerID(id);\n  var ownerName;\n  if (ownerID) {\n    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);\n  }\n  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;\n  return describeComponentFrame(name, element && element._source, ownerName);\n}\n\nvar ReactComponentTreeHook = {\n  onSetChildren: function (id, nextChildIDs) {\n    var item = get(id);\n    item.childIDs = nextChildIDs;\n\n    for (var i = 0; i < nextChildIDs.length; i++) {\n      var nextChildID = nextChildIDs[i];\n      var nextChild = get(nextChildID);\n      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;\n      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;\n      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;\n      if (nextChild.parentID == null) {\n        nextChild.parentID = id;\n        // TODO: This shouldn't be necessary but mounting a new root during in\n        // componentWillMount currently causes not-yet-mounted components to\n        // be purged from our tree data so their parent ID is missing.\n      }\n      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;\n    }\n  },\n  onBeforeMountComponent: function (id, element, parentID) {\n    create(id, element, parentID);\n  },\n  onBeforeUpdateComponent: function (id, element) {\n    var item = get(id);\n    if (!item || !item.isMounted) {\n      // We may end up here as a result of setState() in componentWillUnmount().\n      // In this case, ignore the element.\n      return;\n    }\n    item.element = element;\n  },\n  onMountComponent: function (id) {\n    var item = get(id);\n    item.isMounted = true;\n    var isRoot = item.parentID === 0;\n    if (isRoot) {\n      addRoot(id);\n    }\n  },\n  onUpdateComponent: function (id) {\n    var item = get(id);\n    if (!item || !item.isMounted) {\n      // We may end up here as a result of setState() in componentWillUnmount().\n      // In this case, ignore the element.\n      return;\n    }\n    item.updateCount++;\n  },\n  onUnmountComponent: function (id) {\n    var item = get(id);\n    if (item) {\n      // We need to check if it exists.\n      // `item` might not exist if it is inside an error boundary, and a sibling\n      // error boundary child threw while mounting. Then this instance never\n      // got a chance to mount, but it still gets an unmounting event during\n      // the error boundary cleanup.\n      item.isMounted = false;\n      var isRoot = item.parentID === 0;\n      if (isRoot) {\n        removeRoot(id);\n      }\n    }\n    unmountedIDs.push(id);\n  },\n  purgeUnmountedComponents: function () {\n    if (ReactComponentTreeHook._preventPurging) {\n      // Should only be used for testing.\n      return;\n    }\n\n    for (var i = 0; i < unmountedIDs.length; i++) {\n      var id = unmountedIDs[i];\n      purgeDeep(id);\n    }\n    unmountedIDs.length = 0;\n  },\n  isMounted: function (id) {\n    var item = get(id);\n    return item ? item.isMounted : false;\n  },\n  getCurrentStackAddendum: function (topElement) {\n    var info = '';\n    if (topElement) {\n      var type = topElement.type;\n      var name = typeof type === 'function' ? type.displayName || type.name : type;\n      var owner = topElement._owner;\n      info += describeComponentFrame(name || 'Unknown', topElement._source, owner && owner.getName());\n    }\n\n    var currentOwner = ReactCurrentOwner.current;\n    var id = currentOwner && currentOwner._debugID;\n\n    info += ReactComponentTreeHook.getStackAddendumByID(id);\n    return info;\n  },\n  getStackAddendumByID: function (id) {\n    var info = '';\n    while (id) {\n      info += describeID(id);\n      id = ReactComponentTreeHook.getParentID(id);\n    }\n    return info;\n  },\n  getChildIDs: function (id) {\n    var item = get(id);\n    return item ? item.childIDs : [];\n  },\n  getDisplayName: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (!element) {\n      return null;\n    }\n    return getDisplayName(element);\n  },\n  getElement: function (id) {\n    var item = get(id);\n    return item ? item.element : null;\n  },\n  getOwnerID: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (!element || !element._owner) {\n      return null;\n    }\n    return element._owner._debugID;\n  },\n  getParentID: function (id) {\n    var item = get(id);\n    return item ? item.parentID : null;\n  },\n  getSource: function (id) {\n    var item = get(id);\n    var element = item ? item.element : null;\n    var source = element != null ? element._source : null;\n    return source;\n  },\n  getText: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (typeof element === 'string') {\n      return element;\n    } else if (typeof element === 'number') {\n      return '' + element;\n    } else {\n      return null;\n    }\n  },\n  getUpdateCount: function (id) {\n    var item = get(id);\n    return item ? item.updateCount : 0;\n  },\n\n\n  getRegisteredIDs: getRegisteredIDs,\n\n  getRootIDs: getRootIDs\n};\n\nmodule.exports = ReactComponentTreeHook;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactComponentTreeHook.js\n ** module id = 41\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactErrorUtils\n */\n\n'use strict';\n\nvar caughtError = null;\n\n/**\n * Call a function while guarding against errors that happens within it.\n *\n * @param {?String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} a First argument\n * @param {*} b Second argument\n */\nfunction invokeGuardedCallback(name, func, a, b) {\n  try {\n    return func(a, b);\n  } catch (x) {\n    if (caughtError === null) {\n      caughtError = x;\n    }\n    return undefined;\n  }\n}\n\nvar ReactErrorUtils = {\n  invokeGuardedCallback: invokeGuardedCallback,\n\n  /**\n   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event\n   * handler are sure to be rethrown by rethrowCaughtError.\n   */\n  invokeGuardedCallbackWithCatch: invokeGuardedCallback,\n\n  /**\n   * During execution of guarded functions we will capture the first error which\n   * we will rethrow to be handled by the top level error handler.\n   */\n  rethrowCaughtError: function () {\n    if (caughtError) {\n      var error = caughtError;\n      caughtError = null;\n      throw error;\n    }\n  }\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  /**\n   * To help development we can get better devtools integration by simulating a\n   * real browser event.\n   */\n  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\n    var fakeNode = document.createElement('react');\n    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {\n      var boundFunc = func.bind(null, a, b);\n      var evtType = 'react-' + name;\n      fakeNode.addEventListener(evtType, boundFunc, false);\n      var evt = document.createEvent('Event');\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n      fakeNode.removeEventListener(evtType, boundFunc, false);\n    };\n  }\n}\n\nmodule.exports = ReactErrorUtils;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactErrorUtils.js\n ** module id = 42\n ** module chunks = 0\n **/","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactNoopUpdateQueue\n */\n\n'use strict';\n\nvar warning = require('fbjs/lib/warning');\n\nfunction warnNoop(publicInstance, callerName) {\n  if (process.env.NODE_ENV !== 'production') {\n    var constructor = publicInstance.constructor;\n    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nvar ReactNoopUpdateQueue = {\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n  enqueueCallback: function (publicInstance, callback) {},\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nmodule.exports = ReactNoopUpdateQueue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactNoopUpdateQueue.js\n ** module id = 43\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypeLocationNames\n */\n\n'use strict';\n\nvar ReactPropTypeLocationNames = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n}\n\nmodule.exports = ReactPropTypeLocationNames;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactPropTypeLocationNames.js\n ** module id = 44\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypeLocations\n */\n\n'use strict';\n\nvar keyMirror = require('fbjs/lib/keyMirror');\n\nvar ReactPropTypeLocations = keyMirror({\n  prop: null,\n  context: null,\n  childContext: null\n});\n\nmodule.exports = ReactPropTypeLocations;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactPropTypeLocations.js\n ** module id = 45\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypesSecret\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactPropTypesSecret.js\n ** module id = 46\n ** module chunks = 0\n **/","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactUpdateQueue\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nfunction enqueueUpdate(internalInstance) {\n  ReactUpdates.enqueueUpdate(internalInstance);\n}\n\nfunction formatUnexpectedArgument(arg) {\n  var type = typeof arg;\n  if (type !== 'object') {\n    return type;\n  }\n  var displayName = arg.constructor && arg.constructor.name || type;\n  var keys = Object.keys(arg);\n  if (keys.length > 0 && keys.length < 20) {\n    return displayName + ' (keys: ' + keys.join(', ') + ')';\n  }\n  return displayName;\n}\n\nfunction getInternalInstanceReadyForUpdate(publicInstance, callerName) {\n  var internalInstance = ReactInstanceMap.get(publicInstance);\n  if (!internalInstance) {\n    if (process.env.NODE_ENV !== 'production') {\n      var ctor = publicInstance.constructor;\n      // Only warn when we have a callerName. Otherwise we should be silent.\n      // We're probably calling from enqueueCallback. We don't want to warn\n      // there because we already warned for the corresponding lifecycle method.\n      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;\n    }\n    return null;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;\n  }\n\n  return internalInstance;\n}\n\n/**\n * ReactUpdateQueue allows for state updates to be scheduled into a later\n * reconciliation step.\n */\nvar ReactUpdateQueue = {\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    if (process.env.NODE_ENV !== 'production') {\n      var owner = ReactCurrentOwner.current;\n      if (owner !== null) {\n        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n        owner._warnedAboutRefsInRender = true;\n      }\n    }\n    var internalInstance = ReactInstanceMap.get(publicInstance);\n    if (internalInstance) {\n      // During componentWillMount and render this will still be null but after\n      // that will always render to something. At least for now. So we can use\n      // this hack.\n      return !!internalInstance._renderedComponent;\n    } else {\n      return false;\n    }\n  },\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @param {string} callerName Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueCallback: function (publicInstance, callback, callerName) {\n    ReactUpdateQueue.validateCallback(callback, callerName);\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\n\n    // Previously we would throw an error if we didn't have an internal\n    // instance. Since we want to make it a no-op instead, we mirror the same\n    // behavior we have in other enqueue* methods.\n    // We also need to ignore callbacks in componentWillMount. See\n    // enqueueUpdates.\n    if (!internalInstance) {\n      return null;\n    }\n\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    // TODO: The callback here is ignored when setState is called from\n    // componentWillMount. Either fix it or disallow doing so completely in\n    // favor of getInitialState. Alternatively, we can disallow\n    // componentWillMount during server-side rendering.\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueCallbackInternal: function (internalInstance, callback) {\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingForceUpdate = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingStateQueue = [completeState];\n    internalInstance._pendingReplaceState = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState) {\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onSetState();\n      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;\n    }\n\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);\n    queue.push(partialState);\n\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {\n    internalInstance._pendingElement = nextElement;\n    // TODO: introduce _pendingContext instead of setting it directly.\n    internalInstance._context = nextContext;\n    enqueueUpdate(internalInstance);\n  },\n\n  validateCallback: function (callback, callerName) {\n    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;\n  }\n\n};\n\nmodule.exports = ReactUpdateQueue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactUpdateQueue.js\n ** module id = 47\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createMicrosoftUnsafeLocalFunction\n */\n\n/* globals MSApp */\n\n'use strict';\n\n/**\n * Create a function which has 'unsafe' privileges (required by windows8 apps)\n */\n\nvar createMicrosoftUnsafeLocalFunction = function (func) {\n  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n    return function (arg0, arg1, arg2, arg3) {\n      MSApp.execUnsafeLocalFunction(function () {\n        return func(arg0, arg1, arg2, arg3);\n      });\n    };\n  } else {\n    return func;\n  }\n};\n\nmodule.exports = createMicrosoftUnsafeLocalFunction;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/createMicrosoftUnsafeLocalFunction.js\n ** module id = 48\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventCharCode\n */\n\n'use strict';\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {number} Normalized `charCode` property.\n */\n\nfunction getEventCharCode(nativeEvent) {\n  var charCode;\n  var keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode;\n\n    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  }\n\n  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\nmodule.exports = getEventCharCode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getEventCharCode.js\n ** module id = 49\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventModifierState\n */\n\n'use strict';\n\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\nvar modifierKeyToProp = {\n  'Alt': 'altKey',\n  'Control': 'ctrlKey',\n  'Meta': 'metaKey',\n  'Shift': 'shiftKey'\n};\n\n// IE8 does not implement getModifierState so we simply map it to the only\n// modifier keys exposed by the event itself, does not support Lock-keys.\n// Currently, all major browsers except Chrome seems to support Lock-keys.\nfunction modifierStateGetter(keyArg) {\n  var syntheticEvent = this;\n  var nativeEvent = syntheticEvent.nativeEvent;\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n  var keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n\nmodule.exports = getEventModifierState;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getEventModifierState.js\n ** module id = 50\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventTarget\n */\n\n'use strict';\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\n\nfunction getEventTarget(nativeEvent) {\n  var target = nativeEvent.target || nativeEvent.srcElement || window;\n\n  // Normalize SVG <use> element events #4963\n  if (target.correspondingUseElement) {\n    target = target.correspondingUseElement;\n  }\n\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n  return target.nodeType === 3 ? target.parentNode : target;\n}\n\nmodule.exports = getEventTarget;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getEventTarget.js\n ** module id = 51\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isEventSupported\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar useHasFeature;\nif (ExecutionEnvironment.canUseDOM) {\n  useHasFeature = document.implementation && document.implementation.hasFeature &&\n  // always returns true in newer browsers as per the standard.\n  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n  document.implementation.hasFeature('', '') !== true;\n}\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @param {?boolean} capture Check if the capture phase is supported.\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nfunction isEventSupported(eventNameSuffix, capture) {\n  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {\n    return false;\n  }\n\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = eventName in document;\n\n  if (!isSupported) {\n    var element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\n\nmodule.exports = isEventSupported;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/isEventSupported.js\n ** module id = 52\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shouldUpdateReactComponent\n */\n\n'use strict';\n\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\n\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  var prevEmpty = prevElement === null || prevElement === false;\n  var nextEmpty = nextElement === null || nextElement === false;\n  if (prevEmpty || nextEmpty) {\n    return prevEmpty === nextEmpty;\n  }\n\n  var prevType = typeof prevElement;\n  var nextType = typeof nextElement;\n  if (prevType === 'string' || prevType === 'number') {\n    return nextType === 'string' || nextType === 'number';\n  } else {\n    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;\n  }\n}\n\nmodule.exports = shouldUpdateReactComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/shouldUpdateReactComponent.js\n ** module id = 53\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule traverseAllChildren\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactElement = require('./ReactElement');\n\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (component && typeof component === 'object' && component.key != null) {\n    // Explicit key\n    return KeyEscapeUtils.escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          var mapsAsChildrenAddendum = '';\n          if (ReactCurrentOwner.current) {\n            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n            if (mapsAsChildrenOwnerName) {\n              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n            }\n          }\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (process.env.NODE_ENV !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/traverseAllChildren.js\n ** module id = 54\n ** module chunks = 0\n **/","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule validateDOMNesting\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar warning = require('fbjs/lib/warning');\n\nvar validateDOMNesting = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  // This validation code was written based on the HTML5 parsing spec:\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  //\n  // Note: this does not catch all invalid nesting, nor does it try to (as it's\n  // not clear what practical benefit doing so provides); instead, we warn only\n  // for cases where the parser will give a parse tree differing from what React\n  // intended. For example, <b><div></div></b> is invalid but we don't warn\n  // because it still parses correctly; we do warn for other cases like nested\n  // <p> tags where the beginning of the second element implicitly closes the\n  // first, causing a confusing mess.\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#special\n  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n  // TODO: Distinguish by namespace here -- for <title>, including it here\n  // errs on the side of fewer warnings\n  'foreignObject', 'desc', 'title'];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n  var buttonScopeTags = inScopeTags.concat(['button']);\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\n\n  var emptyAncestorInfo = {\n    current: null,\n\n    formTag: null,\n    aTagInScope: null,\n    buttonTagInScope: null,\n    nobrTagInScope: null,\n    pTagInButtonScope: null,\n\n    listItemTagAutoclosing: null,\n    dlItemTagAutoclosing: null\n  };\n\n  var updatedAncestorInfo = function (oldInfo, tag, instance) {\n    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);\n    var info = { tag: tag, instance: instance };\n\n    if (inScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.aTagInScope = null;\n      ancestorInfo.buttonTagInScope = null;\n      ancestorInfo.nobrTagInScope = null;\n    }\n    if (buttonScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.pTagInButtonScope = null;\n    }\n\n    // See rules for 'li', 'dd', 'dt' start tags in\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {\n      ancestorInfo.listItemTagAutoclosing = null;\n      ancestorInfo.dlItemTagAutoclosing = null;\n    }\n\n    ancestorInfo.current = info;\n\n    if (tag === 'form') {\n      ancestorInfo.formTag = info;\n    }\n    if (tag === 'a') {\n      ancestorInfo.aTagInScope = info;\n    }\n    if (tag === 'button') {\n      ancestorInfo.buttonTagInScope = info;\n    }\n    if (tag === 'nobr') {\n      ancestorInfo.nobrTagInScope = info;\n    }\n    if (tag === 'p') {\n      ancestorInfo.pTagInButtonScope = info;\n    }\n    if (tag === 'li') {\n      ancestorInfo.listItemTagAutoclosing = info;\n    }\n    if (tag === 'dd' || tag === 'dt') {\n      ancestorInfo.dlItemTagAutoclosing = info;\n    }\n\n    return ancestorInfo;\n  };\n\n  /**\n   * Returns whether\n   */\n  var isTagValidWithParent = function (tag, parentTag) {\n    // First, let's check if we're in an unusual parsing mode...\n    switch (parentTag) {\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n      case 'select':\n        return tag === 'option' || tag === 'optgroup' || tag === '#text';\n      case 'optgroup':\n        return tag === 'option' || tag === '#text';\n      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n      // but\n      case 'option':\n        return tag === '#text';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n      // No special behavior since these rules fall back to \"in body\" mode for\n      // all except special table nodes which cause bad parsing behavior anyway.\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n      case 'tr':\n        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n      case 'tbody':\n      case 'thead':\n      case 'tfoot':\n        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n      case 'colgroup':\n        return tag === 'col' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n      case 'table':\n        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n      case 'head':\n        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n      case 'html':\n        return tag === 'head' || tag === 'body';\n      case '#document':\n        return tag === 'html';\n    }\n\n    // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n    // where the parsing rules cause implicit opens or closes to be added.\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    switch (tag) {\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';\n\n      case 'rp':\n      case 'rt':\n        return impliedEndTags.indexOf(parentTag) === -1;\n\n      case 'body':\n      case 'caption':\n      case 'col':\n      case 'colgroup':\n      case 'frame':\n      case 'head':\n      case 'html':\n      case 'tbody':\n      case 'td':\n      case 'tfoot':\n      case 'th':\n      case 'thead':\n      case 'tr':\n        // These tags are only valid with a few parents that have special child\n        // parsing rules -- if we're down here, then none of those matched and\n        // so we allow it only if we don't know what the parent is, as all other\n        // cases are invalid.\n        return parentTag == null;\n    }\n\n    return true;\n  };\n\n  /**\n   * Returns whether\n   */\n  var findInvalidAncestorForTag = function (tag, ancestorInfo) {\n    switch (tag) {\n      case 'address':\n      case 'article':\n      case 'aside':\n      case 'blockquote':\n      case 'center':\n      case 'details':\n      case 'dialog':\n      case 'dir':\n      case 'div':\n      case 'dl':\n      case 'fieldset':\n      case 'figcaption':\n      case 'figure':\n      case 'footer':\n      case 'header':\n      case 'hgroup':\n      case 'main':\n      case 'menu':\n      case 'nav':\n      case 'ol':\n      case 'p':\n      case 'section':\n      case 'summary':\n      case 'ul':\n\n      case 'pre':\n      case 'listing':\n\n      case 'table':\n\n      case 'hr':\n\n      case 'xmp':\n\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return ancestorInfo.pTagInButtonScope;\n\n      case 'form':\n        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\n      case 'li':\n        return ancestorInfo.listItemTagAutoclosing;\n\n      case 'dd':\n      case 'dt':\n        return ancestorInfo.dlItemTagAutoclosing;\n\n      case 'button':\n        return ancestorInfo.buttonTagInScope;\n\n      case 'a':\n        // Spec says something about storing a list of markers, but it sounds\n        // equivalent to this check.\n        return ancestorInfo.aTagInScope;\n\n      case 'nobr':\n        return ancestorInfo.nobrTagInScope;\n    }\n\n    return null;\n  };\n\n  /**\n   * Given a ReactCompositeComponent instance, return a list of its recursive\n   * owners, starting at the root and ending with the instance itself.\n   */\n  var findOwnerStack = function (instance) {\n    if (!instance) {\n      return [];\n    }\n\n    var stack = [];\n    do {\n      stack.push(instance);\n    } while (instance = instance._currentElement._owner);\n    stack.reverse();\n    return stack;\n  };\n\n  var didWarn = {};\n\n  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    var parentInfo = ancestorInfo.current;\n    var parentTag = parentInfo && parentInfo.tag;\n\n    if (childText != null) {\n      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;\n      childTag = '#text';\n    }\n\n    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;\n    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);\n    var problematic = invalidParent || invalidAncestor;\n\n    if (problematic) {\n      var ancestorTag = problematic.tag;\n      var ancestorInstance = problematic.instance;\n\n      var childOwner = childInstance && childInstance._currentElement._owner;\n      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;\n\n      var childOwners = findOwnerStack(childOwner);\n      var ancestorOwners = findOwnerStack(ancestorOwner);\n\n      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);\n      var i;\n\n      var deepestCommon = -1;\n      for (i = 0; i < minStackLen; i++) {\n        if (childOwners[i] === ancestorOwners[i]) {\n          deepestCommon = i;\n        } else {\n          break;\n        }\n      }\n\n      var UNKNOWN = '(unknown)';\n      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {\n        return inst.getName() || UNKNOWN;\n      });\n      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {\n        return inst.getName() || UNKNOWN;\n      });\n      var ownerInfo = [].concat(\n      // If the parent and child instances have a common owner ancestor, start\n      // with that -- otherwise we just start with the parent's owners.\n      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,\n      // If we're warning about an invalid (non-parent) ancestry, add '...'\n      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');\n\n      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;\n      if (didWarn[warnKey]) {\n        return;\n      }\n      didWarn[warnKey] = true;\n\n      var tagDisplayName = childTag;\n      var whitespaceInfo = '';\n      if (childTag === '#text') {\n        if (/\\S/.test(childText)) {\n          tagDisplayName = 'Text nodes';\n        } else {\n          tagDisplayName = 'Whitespace text nodes';\n          whitespaceInfo = ' Make sure you don\\'t have any extra whitespace between tags on ' + 'each line of your source code.';\n        }\n      } else {\n        tagDisplayName = '<' + childTag + '>';\n      }\n\n      if (invalidParent) {\n        var info = '';\n        if (ancestorTag === 'table' && childTag === 'tr') {\n          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';\n        }\n        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;\n      } else {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;\n      }\n    }\n  };\n\n  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;\n\n  // For testing\n  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    var parentInfo = ancestorInfo.current;\n    var parentTag = parentInfo && parentInfo.tag;\n    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);\n  };\n}\n\nmodule.exports = validateDOMNesting;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/validateDOMNesting.js\n ** module id = 55\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @typechecks\n */\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function listen(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function remove() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function capture(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n\n  registerDefault: function registerDefault() {}\n};\n\nmodule.exports = EventListener;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/EventListener.js\n ** module id = 56\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * @param {DOMElement} node input/textarea to focus\n */\n\nfunction focusNode(node) {\n  // IE8 can throw \"Can't move focus to the control because it is invisible,\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n  // reasons that are too expensive and fragile to test.\n  try {\n    node.focus();\n  } catch (e) {}\n}\n\nmodule.exports = focusNode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/focusNode.js\n ** module id = 57\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n */\nfunction getActiveElement() /*?DOMElement*/{\n  if (typeof document === 'undefined') {\n    return null;\n  }\n  try {\n    return document.activeElement || document.body;\n  } catch (e) {\n    return document.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/getActiveElement.js\n ** module id = 58\n ** module chunks = 0\n **/","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-scripts/~/promise/lib/core.js\n ** module id = 59\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSProperty\n */\n\n'use strict';\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\n\nvar isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridColumn: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n\n/**\n * Most style properties can be unset by doing .style[prop] = '' but IE8\n * doesn't like doing that with shorthand properties so for the properties that\n * IE8 breaks on, which are listed here, we instead unset each of the\n * individual properties. See http://bugs.jquery.com/ticket/12385.\n * The 4-value 'clock' properties like margin, padding, border-width seem to\n * behave without any problems. Curiously, list-style works too without any\n * special prodding.\n */\nvar shorthandPropertyExpansions = {\n  background: {\n    backgroundAttachment: true,\n    backgroundColor: true,\n    backgroundImage: true,\n    backgroundPositionX: true,\n    backgroundPositionY: true,\n    backgroundRepeat: true\n  },\n  backgroundPosition: {\n    backgroundPositionX: true,\n    backgroundPositionY: true\n  },\n  border: {\n    borderWidth: true,\n    borderStyle: true,\n    borderColor: true\n  },\n  borderBottom: {\n    borderBottomWidth: true,\n    borderBottomStyle: true,\n    borderBottomColor: true\n  },\n  borderLeft: {\n    borderLeftWidth: true,\n    borderLeftStyle: true,\n    borderLeftColor: true\n  },\n  borderRight: {\n    borderRightWidth: true,\n    borderRightStyle: true,\n    borderRightColor: true\n  },\n  borderTop: {\n    borderTopWidth: true,\n    borderTopStyle: true,\n    borderTopColor: true\n  },\n  font: {\n    fontStyle: true,\n    fontVariant: true,\n    fontWeight: true,\n    fontSize: true,\n    lineHeight: true,\n    fontFamily: true\n  },\n  outline: {\n    outlineWidth: true,\n    outlineStyle: true,\n    outlineColor: true\n  }\n};\n\nvar CSSProperty = {\n  isUnitlessNumber: isUnitlessNumber,\n  shorthandPropertyExpansions: shorthandPropertyExpansions\n};\n\nmodule.exports = CSSProperty;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/CSSProperty.js\n ** module id = 60\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CallbackQueue\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * A specialized pseudo-event module to help keep track of components waiting to\n * be notified when their DOM representations are available for use.\n *\n * This implements `PooledClass`, so you should never need to instantiate this.\n * Instead, use `CallbackQueue.getPooled()`.\n *\n * @class ReactMountReady\n * @implements PooledClass\n * @internal\n */\nfunction CallbackQueue() {\n  this._callbacks = null;\n  this._contexts = null;\n}\n\n_assign(CallbackQueue.prototype, {\n\n  /**\n   * Enqueues a callback to be invoked when `notifyAll` is invoked.\n   *\n   * @param {function} callback Invoked when `notifyAll` is invoked.\n   * @param {?object} context Context to call `callback` with.\n   * @internal\n   */\n  enqueue: function (callback, context) {\n    this._callbacks = this._callbacks || [];\n    this._contexts = this._contexts || [];\n    this._callbacks.push(callback);\n    this._contexts.push(context);\n  },\n\n  /**\n   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n   * the DOM representation of a component has been created or updated.\n   *\n   * @internal\n   */\n  notifyAll: function () {\n    var callbacks = this._callbacks;\n    var contexts = this._contexts;\n    if (callbacks) {\n      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;\n      this._callbacks = null;\n      this._contexts = null;\n      for (var i = 0; i < callbacks.length; i++) {\n        callbacks[i].call(contexts[i]);\n      }\n      callbacks.length = 0;\n      contexts.length = 0;\n    }\n  },\n\n  checkpoint: function () {\n    return this._callbacks ? this._callbacks.length : 0;\n  },\n\n  rollback: function (len) {\n    if (this._callbacks) {\n      this._callbacks.length = len;\n      this._contexts.length = len;\n    }\n  },\n\n  /**\n   * Resets the internal queue.\n   *\n   * @internal\n   */\n  reset: function () {\n    this._callbacks = null;\n    this._contexts = null;\n  },\n\n  /**\n   * `PooledClass` looks for this.\n   */\n  destructor: function () {\n    this.reset();\n  }\n\n});\n\nPooledClass.addPoolingTo(CallbackQueue);\n\nmodule.exports = CallbackQueue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/CallbackQueue.js\n ** module id = 61\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMPropertyOperations\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar quoteAttributeValueForBrowser = require('./quoteAttributeValueForBrowser');\nvar warning = require('fbjs/lib/warning');\n\nvar VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');\nvar illegalAttributeNameCache = {};\nvar validatedAttributeNameCache = {};\n\nfunction isAttributeNameSafe(attributeName) {\n  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {\n    return true;\n  }\n  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {\n    return false;\n  }\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n  illegalAttributeNameCache[attributeName] = true;\n  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;\n  return false;\n}\n\nfunction shouldIgnoreValue(propertyInfo, value) {\n  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\nvar DOMPropertyOperations = {\n\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function (id) {\n    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);\n  },\n\n  setAttributeForID: function (node, id) {\n    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);\n  },\n\n  createMarkupForRoot: function () {\n    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=\"\"';\n  },\n\n  setAttributeForRoot: function (node) {\n    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');\n  },\n\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function (name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      if (shouldIgnoreValue(propertyInfo, value)) {\n        return '';\n      }\n      var attributeName = propertyInfo.attributeName;\n      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n        return attributeName + '=\"\"';\n      }\n      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n      return name + '=' + quoteAttributeValueForBrowser(value);\n    }\n    return null;\n  },\n\n  /**\n   * Creates markup for a custom property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {string} Markup string, or empty string if the property was invalid.\n   */\n  createMarkupForCustomAttribute: function (name, value) {\n    if (!isAttributeNameSafe(name) || value == null) {\n      return '';\n    }\n    return name + '=' + quoteAttributeValueForBrowser(value);\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function (node, name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(propertyInfo, value)) {\n        this.deleteValueForProperty(node, name);\n        return;\n      } else if (propertyInfo.mustUseProperty) {\n        // Contrary to `setAttribute`, object properties are properly\n        // `toString`ed by IE8/9.\n        node[propertyInfo.propertyName] = value;\n      } else {\n        var attributeName = propertyInfo.attributeName;\n        var namespace = propertyInfo.attributeNamespace;\n        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n        // ('' + value) makes it output the correct toString()-value.\n        if (namespace) {\n          node.setAttributeNS(namespace, attributeName, '' + value);\n        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n          node.setAttribute(attributeName, '');\n        } else {\n          node.setAttribute(attributeName, '' + value);\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      DOMPropertyOperations.setValueForAttribute(node, name, value);\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var payload = {};\n      payload[name] = value;\n      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);\n    }\n  },\n\n  setValueForAttribute: function (node, name, value) {\n    if (!isAttributeNameSafe(name)) {\n      return;\n    }\n    if (value == null) {\n      node.removeAttribute(name);\n    } else {\n      node.setAttribute(name, '' + value);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var payload = {};\n      payload[name] = value;\n      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);\n    }\n  },\n\n  /**\n   * Deletes an attributes from a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForAttribute: function (node, name) {\n    node.removeAttribute(name);\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function (node, name) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (propertyInfo.mustUseProperty) {\n        var propName = propertyInfo.propertyName;\n        if (propertyInfo.hasBooleanValue) {\n          node[propName] = false;\n        } else {\n          node[propName] = '';\n        }\n      } else {\n        node.removeAttribute(propertyInfo.attributeName);\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);\n    }\n  }\n\n};\n\nmodule.exports = DOMPropertyOperations;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DOMPropertyOperations.js\n ** module id = 62\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildren\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\nvar ReactElement = require('./ReactElement');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar traverseAllChildren = require('./traverseAllChildren');\n\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\nvar fourArgumentPooler = PooledClass.fourArgumentPooler;\n\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * traversal. Allows avoiding binding callbacks.\n *\n * @constructor ForEachBookKeeping\n * @param {!function} forEachFunction Function to perform traversal with.\n * @param {?*} forEachContext Context to perform context with.\n */\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n  this.func = forEachFunction;\n  this.context = forEachContext;\n  this.count = 0;\n}\nForEachBookKeeping.prototype.destructor = function () {\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func;\n  var context = bookKeeping.context;\n\n  func.call(context, child, bookKeeping.count++);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  ForEachBookKeeping.release(traverseContext);\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * mapping. Allows avoiding binding callbacks.\n *\n * @constructor MapBookKeeping\n * @param {!*} mapResult Object containing the ordered map of results.\n * @param {!function} mapFunction Function to perform mapping with.\n * @param {?*} mapContext Context to perform mapping with.\n */\nfunction MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {\n  this.result = mapResult;\n  this.keyPrefix = keyPrefix;\n  this.func = mapFunction;\n  this.context = mapContext;\n  this.count = 0;\n}\nMapBookKeeping.prototype.destructor = function () {\n  this.result = null;\n  this.keyPrefix = null;\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result;\n  var keyPrefix = bookKeeping.keyPrefix;\n  var func = bookKeeping.func;\n  var context = bookKeeping.context;\n\n\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n  } else if (mappedChild != null) {\n    if (ReactElement.isValidElement(mappedChild)) {\n      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,\n      // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  MapBookKeeping.release(traverseContext);\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\nfunction forEachSingleChildDummy(traverseContext, child, name) {\n  return null;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray\n */\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n  return result;\n}\n\nvar ReactChildren = {\n  forEach: forEachChildren,\n  map: mapChildren,\n  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,\n  count: countChildren,\n  toArray: toArray\n};\n\nmodule.exports = ReactChildren;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactChildren.js\n ** module id = 63\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactClass\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar ReactComponent = require('./ReactComponent');\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar keyMirror = require('fbjs/lib/keyMirror');\nvar keyOf = require('fbjs/lib/keyOf');\nvar warning = require('fbjs/lib/warning');\n\nvar MIXINS_KEY = keyOf({ mixins: null });\n\n/**\n * Policies that describe methods in `ReactClassInterface`.\n */\nvar SpecPolicy = keyMirror({\n  /**\n   * These methods may be defined only once by the class specification or mixin.\n   */\n  DEFINE_ONCE: null,\n  /**\n   * These methods may be defined by both the class specification and mixins.\n   * Subsequent definitions will be chained. These methods must return void.\n   */\n  DEFINE_MANY: null,\n  /**\n   * These methods are overriding the base class.\n   */\n  OVERRIDE_BASE: null,\n  /**\n   * These methods are similar to DEFINE_MANY, except we assume they return\n   * objects. We try to merge the keys of the return values of all the mixed in\n   * functions. If there is a key conflict we throw.\n   */\n  DEFINE_MANY_MERGED: null\n});\n\nvar injectedMixins = [];\n\n/**\n * Composite components are higher-level components that compose other composite\n * or host components.\n *\n * To create a new type of `ReactClass`, pass a specification of\n * your new class to `React.createClass`. The only requirement of your class\n * specification is that you implement a `render` method.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return <div>Hello World</div>;\n *     }\n *   });\n *\n * The class specification supports a specific protocol of methods that have\n * special meaning (e.g. `render`). See `ReactClassInterface` for\n * more the comprehensive protocol. Any other properties and methods in the\n * class specification will be available on the prototype.\n *\n * @interface ReactClassInterface\n * @internal\n */\nvar ReactClassInterface = {\n\n  /**\n   * An array of Mixin objects to include when defining your component.\n   *\n   * @type {array}\n   * @optional\n   */\n  mixins: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * An object containing properties and methods that should be defined on\n   * the component's constructor instead of its prototype (static methods).\n   *\n   * @type {object}\n   * @optional\n   */\n  statics: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of prop types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  propTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  contextTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types this component sets for its children.\n   *\n   * @type {object}\n   * @optional\n   */\n  childContextTypes: SpecPolicy.DEFINE_MANY,\n\n  // ==== Definition methods ====\n\n  /**\n   * Invoked when the component is mounted. Values in the mapping will be set on\n   * `this.props` if that prop is not specified (i.e. using an `in` check).\n   *\n   * This method is invoked before `getInitialState` and therefore cannot rely\n   * on `this.state` or use `this.setState`.\n   *\n   * @return {object}\n   * @optional\n   */\n  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Invoked once before the component is mounted. The return value will be used\n   * as the initial value of `this.state`.\n   *\n   *   getInitialState: function() {\n   *     return {\n   *       isOn: false,\n   *       fooBaz: new BazFoo()\n   *     }\n   *   }\n   *\n   * @return {object}\n   * @optional\n   */\n  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * @return {object}\n   * @optional\n   */\n  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Uses props from `this.props` and state from `this.state` to render the\n   * structure of the component.\n   *\n   * No guarantees are made about when or how often this method is invoked, so\n   * it must not have side effects.\n   *\n   *   render: function() {\n   *     var name = this.props.name;\n   *     return <div>Hello, {name}!</div>;\n   *   }\n   *\n   * @return {ReactComponent}\n   * @nosideeffects\n   * @required\n   */\n  render: SpecPolicy.DEFINE_ONCE,\n\n  // ==== Delegate methods ====\n\n  /**\n   * Invoked when the component is initially created and about to be mounted.\n   * This may have side effects, but any external subscriptions or data created\n   * by this method must be cleaned up in `componentWillUnmount`.\n   *\n   * @optional\n   */\n  componentWillMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component has been mounted and has a DOM representation.\n   * However, there is no guarantee that the DOM node is in the document.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been mounted (initialized and rendered) for the first time.\n   *\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked before the component receives new props.\n   *\n   * Use this as an opportunity to react to a prop transition by updating the\n   * state using `this.setState`. Current props are accessed via `this.props`.\n   *\n   *   componentWillReceiveProps: function(nextProps, nextContext) {\n   *     this.setState({\n   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n   *     });\n   *   }\n   *\n   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n   * transition may cause a state change, but the opposite is not true. If you\n   * need it, you are probably looking for `componentWillUpdate`.\n   *\n   * @param {object} nextProps\n   * @optional\n   */\n  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked while deciding if the component should be updated as a result of\n   * receiving new props, state and/or context.\n   *\n   * Use this as an opportunity to `return false` when you're certain that the\n   * transition to the new props/state/context will not require a component\n   * update.\n   *\n   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n   *     return !equal(nextProps, this.props) ||\n   *       !equal(nextState, this.state) ||\n   *       !equal(nextContext, this.context);\n   *   }\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @return {boolean} True if the component should update.\n   * @optional\n   */\n  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,\n\n  /**\n   * Invoked when the component is about to update due to a transition from\n   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n   * and `nextContext`.\n   *\n   * Use this as an opportunity to perform preparation before an update occurs.\n   *\n   * NOTE: You **cannot** use `this.setState()` in this method.\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @param {ReactReconcileTransaction} transaction\n   * @optional\n   */\n  componentWillUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component's DOM representation has been updated.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been updated.\n   *\n   * @param {object} prevProps\n   * @param {?object} prevState\n   * @param {?object} prevContext\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component is about to be removed from its parent and have\n   * its DOM representation destroyed.\n   *\n   * Use this as an opportunity to deallocate any external resources.\n   *\n   * NOTE: There is no `componentDidUnmount` since your component will have been\n   * destroyed by that point.\n   *\n   * @optional\n   */\n  componentWillUnmount: SpecPolicy.DEFINE_MANY,\n\n  // ==== Advanced methods ====\n\n  /**\n   * Updates the component's currently mounted DOM representation.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   * @overridable\n   */\n  updateComponent: SpecPolicy.OVERRIDE_BASE\n\n};\n\n/**\n * Mapping from class specification keys to special processing functions.\n *\n * Although these are declared like instance properties in the specification\n * when defining classes using `React.createClass`, they are actually static\n * and are accessible on the constructor instead of the prototype. Despite\n * being static, they must be defined outside of the \"statics\" key under\n * which all other static methods are defined.\n */\nvar RESERVED_SPEC_KEYS = {\n  displayName: function (Constructor, displayName) {\n    Constructor.displayName = displayName;\n  },\n  mixins: function (Constructor, mixins) {\n    if (mixins) {\n      for (var i = 0; i < mixins.length; i++) {\n        mixSpecIntoComponent(Constructor, mixins[i]);\n      }\n    }\n  },\n  childContextTypes: function (Constructor, childContextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);\n    }\n    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);\n  },\n  contextTypes: function (Constructor, contextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);\n    }\n    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);\n  },\n  /**\n   * Special case getDefaultProps which should move into statics but requires\n   * automatic merging.\n   */\n  getDefaultProps: function (Constructor, getDefaultProps) {\n    if (Constructor.getDefaultProps) {\n      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);\n    } else {\n      Constructor.getDefaultProps = getDefaultProps;\n    }\n  },\n  propTypes: function (Constructor, propTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);\n    }\n    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n  },\n  statics: function (Constructor, statics) {\n    mixStaticSpecIntoComponent(Constructor, statics);\n  },\n  autobind: function () {} };\n\n// noop\nfunction validateTypeDef(Constructor, typeDef, location) {\n  for (var propName in typeDef) {\n    if (typeDef.hasOwnProperty(propName)) {\n      // use a warning instead of an invariant so components\n      // don't show up in prod but only in __DEV__\n      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;\n    }\n  }\n}\n\nfunction validateMethodOverride(isAlreadyDefined, name) {\n  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;\n\n  // Disallow overriding of base class methods unless explicitly allowed.\n  if (ReactClassMixin.hasOwnProperty(name)) {\n    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;\n  }\n\n  // Disallow defining methods more than once unless explicitly allowed.\n  if (isAlreadyDefined) {\n    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;\n  }\n}\n\n/**\n * Mixin helper which handles policy validation and reserved\n * specification keys when building React classes.\n */\nfunction mixSpecIntoComponent(Constructor, spec) {\n  if (!spec) {\n    if (process.env.NODE_ENV !== 'production') {\n      var typeofSpec = typeof spec;\n      var isMixinValid = typeofSpec === 'object' && spec !== null;\n\n      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;\n    }\n\n    return;\n  }\n\n  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;\n  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;\n\n  var proto = Constructor.prototype;\n  var autoBindPairs = proto.__reactAutoBindPairs;\n\n  // By handling mixins before any other properties, we ensure the same\n  // chaining order is applied to methods with DEFINE_MANY policy, whether\n  // mixins are listed before or after these methods in the spec.\n  if (spec.hasOwnProperty(MIXINS_KEY)) {\n    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n  }\n\n  for (var name in spec) {\n    if (!spec.hasOwnProperty(name)) {\n      continue;\n    }\n\n    if (name === MIXINS_KEY) {\n      // We have already handled mixins in a special case above.\n      continue;\n    }\n\n    var property = spec[name];\n    var isAlreadyDefined = proto.hasOwnProperty(name);\n    validateMethodOverride(isAlreadyDefined, name);\n\n    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n      RESERVED_SPEC_KEYS[name](Constructor, property);\n    } else {\n      // Setup methods on prototype:\n      // The following member methods should not be automatically bound:\n      // 1. Expected ReactClass methods (in the \"interface\").\n      // 2. Overridden methods (that were mixed in).\n      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n      var isFunction = typeof property === 'function';\n      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\n      if (shouldAutoBind) {\n        autoBindPairs.push(name, property);\n        proto[name] = property;\n      } else {\n        if (isAlreadyDefined) {\n          var specPolicy = ReactClassInterface[name];\n\n          // These cases should already be caught by validateMethodOverride.\n          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;\n\n          // For methods which are defined more than once, call the existing\n          // methods before calling the new property, merging if appropriate.\n          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {\n            proto[name] = createMergedResultFunction(proto[name], property);\n          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {\n            proto[name] = createChainedFunction(proto[name], property);\n          }\n        } else {\n          proto[name] = property;\n          if (process.env.NODE_ENV !== 'production') {\n            // Add verbose displayName to the function, which helps when looking\n            // at profiling tools.\n            if (typeof property === 'function' && spec.displayName) {\n              proto[name].displayName = spec.displayName + '_' + name;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction mixStaticSpecIntoComponent(Constructor, statics) {\n  if (!statics) {\n    return;\n  }\n  for (var name in statics) {\n    var property = statics[name];\n    if (!statics.hasOwnProperty(name)) {\n      continue;\n    }\n\n    var isReserved = name in RESERVED_SPEC_KEYS;\n    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;\n\n    var isInherited = name in Constructor;\n    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;\n    Constructor[name] = property;\n  }\n}\n\n/**\n * Merge two objects, but throw if both contain the same key.\n *\n * @param {object} one The first object, which is mutated.\n * @param {object} two The second object\n * @return {object} one after it has been mutated to contain everything in two.\n */\nfunction mergeIntoWithNoDuplicateKeys(one, two) {\n  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;\n\n  for (var key in two) {\n    if (two.hasOwnProperty(key)) {\n      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;\n      one[key] = two[key];\n    }\n  }\n  return one;\n}\n\n/**\n * Creates a function that invokes two functions and merges their return values.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createMergedResultFunction(one, two) {\n  return function mergedResult() {\n    var a = one.apply(this, arguments);\n    var b = two.apply(this, arguments);\n    if (a == null) {\n      return b;\n    } else if (b == null) {\n      return a;\n    }\n    var c = {};\n    mergeIntoWithNoDuplicateKeys(c, a);\n    mergeIntoWithNoDuplicateKeys(c, b);\n    return c;\n  };\n}\n\n/**\n * Creates a function that invokes two functions and ignores their return vales.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createChainedFunction(one, two) {\n  return function chainedFunction() {\n    one.apply(this, arguments);\n    two.apply(this, arguments);\n  };\n}\n\n/**\n * Binds a method to the component.\n *\n * @param {object} component Component whose method is going to be bound.\n * @param {function} method Method to be bound.\n * @return {function} The bound method.\n */\nfunction bindAutoBindMethod(component, method) {\n  var boundMethod = method.bind(component);\n  if (process.env.NODE_ENV !== 'production') {\n    boundMethod.__reactBoundContext = component;\n    boundMethod.__reactBoundMethod = method;\n    boundMethod.__reactBoundArguments = null;\n    var componentName = component.constructor.displayName;\n    var _bind = boundMethod.bind;\n    boundMethod.bind = function (newThis) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      // User is trying to bind() an autobound method; we effectively will\n      // ignore the value of \"this\" that the user is trying to use, so\n      // let's warn.\n      if (newThis !== component && newThis !== null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;\n      } else if (!args.length) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;\n        return boundMethod;\n      }\n      var reboundMethod = _bind.apply(boundMethod, arguments);\n      reboundMethod.__reactBoundContext = component;\n      reboundMethod.__reactBoundMethod = method;\n      reboundMethod.__reactBoundArguments = args;\n      return reboundMethod;\n    };\n  }\n  return boundMethod;\n}\n\n/**\n * Binds all auto-bound methods in a component.\n *\n * @param {object} component Component whose method is going to be bound.\n */\nfunction bindAutoBindMethods(component) {\n  var pairs = component.__reactAutoBindPairs;\n  for (var i = 0; i < pairs.length; i += 2) {\n    var autoBindKey = pairs[i];\n    var method = pairs[i + 1];\n    component[autoBindKey] = bindAutoBindMethod(component, method);\n  }\n}\n\n/**\n * Add more to the ReactClass base class. These are all legacy features and\n * therefore not already part of the modern ReactComponent.\n */\nvar ReactClassMixin = {\n\n  /**\n   * TODO: This will be deprecated because state should always keep a consistent\n   * type signature and the only use case for this, is to avoid that.\n   */\n  replaceState: function (newState, callback) {\n    this.updater.enqueueReplaceState(this, newState);\n    if (callback) {\n      this.updater.enqueueCallback(this, callback, 'replaceState');\n    }\n  },\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function () {\n    return this.updater.isMounted(this);\n  }\n};\n\nvar ReactClassComponent = function () {};\n_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n\n/**\n * Module for creating composite components.\n *\n * @class ReactClass\n */\nvar ReactClass = {\n\n  /**\n   * Creates a composite component class given a class specification.\n   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  createClass: function (spec) {\n    var Constructor = function (props, context, updater) {\n      // This constructor gets overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindPairs.length) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (initialState === undefined && this.getInitialState._isMockFunction) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;\n\n      this.state = initialState;\n    };\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n    Constructor.prototype.__reactAutoBindPairs = [];\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, spec);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  },\n\n  injection: {\n    injectMixin: function (mixin) {\n      injectedMixins.push(mixin);\n    }\n  }\n\n};\n\nmodule.exports = ReactClass;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactClass.js\n ** module id = 64\n ** module chunks = 0\n **/","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMComponentFlags\n */\n\n'use strict';\n\nvar ReactDOMComponentFlags = {\n  hasCachedChildNodes: 1 << 0\n};\n\nmodule.exports = ReactDOMComponentFlags;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMComponentFlags.js\n ** module id = 65\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelect\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar DisabledInputUtils = require('./DisabledInputUtils');\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueLink = false;\nvar didWarnValueDefaultValue = false;\n\nfunction updateOptionsIfPendingUpdateAndMounted() {\n  if (this._rootNodeID && this._wrapperState.pendingUpdate) {\n    this._wrapperState.pendingUpdate = false;\n\n    var props = this._currentElement.props;\n    var value = LinkedValueUtils.getValue(props);\n\n    if (value != null) {\n      updateOptions(this, Boolean(props.multiple), value);\n    }\n  }\n}\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nvar valuePropNames = ['value', 'defaultValue'];\n\n/**\n * Validation function for `value` and `defaultValue`.\n * @private\n */\nfunction checkSelectPropTypes(inst, props) {\n  var owner = inst._currentElement._owner;\n  LinkedValueUtils.checkPropTypes('select', props, owner);\n\n  if (props.valueLink !== undefined && !didWarnValueLink) {\n    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;\n    didWarnValueLink = true;\n  }\n\n  for (var i = 0; i < valuePropNames.length; i++) {\n    var propName = valuePropNames[i];\n    if (props[propName] == null) {\n      continue;\n    }\n    var isArray = Array.isArray(props[propName]);\n    if (props.multiple && !isArray) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n    } else if (!props.multiple && isArray) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n    }\n  }\n}\n\n/**\n * @param {ReactDOMComponent} inst\n * @param {boolean} multiple\n * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n * @private\n */\nfunction updateOptions(inst, multiple, propValue) {\n  var selectedValue, i;\n  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;\n\n  if (multiple) {\n    selectedValue = {};\n    for (i = 0; i < propValue.length; i++) {\n      selectedValue['' + propValue[i]] = true;\n    }\n    for (i = 0; i < options.length; i++) {\n      var selected = selectedValue.hasOwnProperty(options[i].value);\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    selectedValue = '' + propValue;\n    for (i = 0; i < options.length; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n        return;\n      }\n    }\n    if (options.length) {\n      options[0].selected = true;\n    }\n  }\n}\n\n/**\n * Implements a <select> host component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\nvar ReactDOMSelect = {\n  getHostProps: function (inst, props) {\n    return _assign({}, DisabledInputUtils.getHostProps(inst, props), {\n      onChange: inst._wrapperState.onChange,\n      value: undefined\n    });\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkSelectPropTypes(inst, props);\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    inst._wrapperState = {\n      pendingUpdate: false,\n      initialValue: value != null ? value : props.defaultValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst),\n      wasMultiple: Boolean(props.multiple)\n    };\n\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n      didWarnValueDefaultValue = true;\n    }\n  },\n\n  getSelectValueContext: function (inst) {\n    // ReactDOMOption looks at this initial value so the initial generated\n    // markup has correct `selected` attributes\n    return inst._wrapperState.initialValue;\n  },\n\n  postUpdateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // After the initial mount, we control selected-ness manually so don't pass\n    // this value down\n    inst._wrapperState.initialValue = undefined;\n\n    var wasMultiple = inst._wrapperState.wasMultiple;\n    inst._wrapperState.wasMultiple = Boolean(props.multiple);\n\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      inst._wrapperState.pendingUpdate = false;\n      updateOptions(inst, Boolean(props.multiple), value);\n    } else if (wasMultiple !== Boolean(props.multiple)) {\n      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n      if (props.defaultValue != null) {\n        updateOptions(inst, Boolean(props.multiple), props.defaultValue);\n      } else {\n        // Revert the select back to its default unselected state.\n        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');\n      }\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  if (this._rootNodeID) {\n    this._wrapperState.pendingUpdate = true;\n  }\n  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMSelect;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMSelect.js\n ** module id = 66\n ** module chunks = 0\n **/","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEmptyComponent\n */\n\n'use strict';\n\nvar emptyComponentFactory;\n\nvar ReactEmptyComponentInjection = {\n  injectEmptyComponentFactory: function (factory) {\n    emptyComponentFactory = factory;\n  }\n};\n\nvar ReactEmptyComponent = {\n  create: function (instantiate) {\n    return emptyComponentFactory(instantiate);\n  }\n};\n\nReactEmptyComponent.injection = ReactEmptyComponentInjection;\n\nmodule.exports = ReactEmptyComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactEmptyComponent.js\n ** module id = 67\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactFeatureFlags\n * \n */\n\n'use strict';\n\nvar ReactFeatureFlags = {\n  // When true, call console.time() before and .timeEnd() after each top-level\n  // render (both initial renders and updates). Useful when looking at prod-mode\n  // timeline profiles in Chrome, for example.\n  logTopLevelRenders: false\n};\n\nmodule.exports = ReactFeatureFlags;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactFeatureFlags.js\n ** module id = 68\n ** module chunks = 0\n **/","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactHostComponent\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar genericComponentClass = null;\n// This registry keeps track of wrapper classes around host tags.\nvar tagToComponentClass = {};\nvar textComponentClass = null;\n\nvar ReactHostComponentInjection = {\n  // This accepts a class that receives the tag string. This is a catch all\n  // that can render any kind of tag.\n  injectGenericComponentClass: function (componentClass) {\n    genericComponentClass = componentClass;\n  },\n  // This accepts a text component class that takes the text string to be\n  // rendered as props.\n  injectTextComponentClass: function (componentClass) {\n    textComponentClass = componentClass;\n  },\n  // This accepts a keyed object with classes as values. Each key represents a\n  // tag. That particular tag will use this class instead of the generic one.\n  injectComponentClasses: function (componentClasses) {\n    _assign(tagToComponentClass, componentClasses);\n  }\n};\n\n/**\n * Get a host internal component class for a specific tag.\n *\n * @param {ReactElement} element The element to create.\n * @return {function} The internal class constructor function.\n */\nfunction createInternalComponent(element) {\n  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;\n  return new genericComponentClass(element);\n}\n\n/**\n * @param {ReactText} text\n * @return {ReactComponent}\n */\nfunction createInstanceForText(text) {\n  return new textComponentClass(text);\n}\n\n/**\n * @param {ReactComponent} component\n * @return {boolean}\n */\nfunction isTextComponent(component) {\n  return component instanceof textComponentClass;\n}\n\nvar ReactHostComponent = {\n  createInternalComponent: createInternalComponent,\n  createInstanceForText: createInstanceForText,\n  isTextComponent: isTextComponent,\n  injection: ReactHostComponentInjection\n};\n\nmodule.exports = ReactHostComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactHostComponent.js\n ** module id = 69\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInputSelection\n */\n\n'use strict';\n\nvar ReactDOMSelection = require('./ReactDOMSelection');\n\nvar containsNode = require('fbjs/lib/containsNode');\nvar focusNode = require('fbjs/lib/focusNode');\nvar getActiveElement = require('fbjs/lib/getActiveElement');\n\nfunction isInDocument(node) {\n  return containsNode(document.documentElement, node);\n}\n\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\nvar ReactInputSelection = {\n\n  hasSelectionCapabilities: function (elem) {\n    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');\n  },\n\n  getSelectionInformation: function () {\n    var focusedElem = getActiveElement();\n    return {\n      focusedElem: focusedElem,\n      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null\n    };\n  },\n\n  /**\n   * @restoreSelection: If any selection information was potentially lost,\n   * restore it. This is useful when performing operations that could remove dom\n   * nodes and place them back in, resulting in focus being lost.\n   */\n  restoreSelection: function (priorSelectionInformation) {\n    var curFocusedElem = getActiveElement();\n    var priorFocusedElem = priorSelectionInformation.focusedElem;\n    var priorSelectionRange = priorSelectionInformation.selectionRange;\n    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\n        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);\n      }\n      focusNode(priorFocusedElem);\n    }\n  },\n\n  /**\n   * @getSelection: Gets the selection bounds of a focused textarea, input or\n   * contentEditable node.\n   * -@input: Look up selection bounds of this input\n   * -@return {start: selectionStart, end: selectionEnd}\n   */\n  getSelection: function (input) {\n    var selection;\n\n    if ('selectionStart' in input) {\n      // Modern browser with input or textarea.\n      selection = {\n        start: input.selectionStart,\n        end: input.selectionEnd\n      };\n    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n      // IE8 input.\n      var range = document.selection.createRange();\n      // There can only be one selection per document in IE, so it must\n      // be in our element.\n      if (range.parentElement() === input) {\n        selection = {\n          start: -range.moveStart('character', -input.value.length),\n          end: -range.moveEnd('character', -input.value.length)\n        };\n      }\n    } else {\n      // Content editable or old IE textarea.\n      selection = ReactDOMSelection.getOffsets(input);\n    }\n\n    return selection || { start: 0, end: 0 };\n  },\n\n  /**\n   * @setSelection: Sets the selection bounds of a textarea or input and focuses\n   * the input.\n   * -@input     Set selection bounds of this input or textarea\n   * -@offsets   Object of same form that is returned from get*\n   */\n  setSelection: function (input, offsets) {\n    var start = offsets.start;\n    var end = offsets.end;\n    if (end === undefined) {\n      end = start;\n    }\n\n    if ('selectionStart' in input) {\n      input.selectionStart = start;\n      input.selectionEnd = Math.min(end, input.value.length);\n    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n      var range = input.createTextRange();\n      range.collapse(true);\n      range.moveStart('character', start);\n      range.moveEnd('character', end - start);\n      range.select();\n    } else {\n      ReactDOMSelection.setOffsets(input, offsets);\n    }\n  }\n};\n\nmodule.exports = ReactInputSelection;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactInputSelection.js\n ** module id = 70\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMount\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar DOMProperty = require('./DOMProperty');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMContainerInfo = require('./ReactDOMContainerInfo');\nvar ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');\nvar ReactElement = require('./ReactElement');\nvar ReactFeatureFlags = require('./ReactFeatureFlags');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactMarkupChecksum = require('./ReactMarkupChecksum');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar invariant = require('fbjs/lib/invariant');\nvar setInnerHTML = require('./setInnerHTML');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOC_NODE_TYPE = 9;\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\nvar instancesByReactRootID = {};\n\n/**\n * Finds the index of the first character\n * that's not common between the two given strings.\n *\n * @return {number} the index of the character where the strings diverge\n */\nfunction firstDifferenceIndex(string1, string2) {\n  var minLen = Math.min(string1.length, string2.length);\n  for (var i = 0; i < minLen; i++) {\n    if (string1.charAt(i) !== string2.charAt(i)) {\n      return i;\n    }\n  }\n  return string1.length === string2.length ? -1 : minLen;\n}\n\n/**\n * @param {DOMElement|DOMDocument} container DOM element that may contain\n * a React component\n * @return {?*} DOM element that may have the reactRoot ID, or null.\n */\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nfunction internalGetID(node) {\n  // If node is something like a window, document, or text node, none of\n  // which support attributes or a .getAttribute method, gracefully return\n  // the empty string, as if the attribute were missing.\n  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n}\n\n/**\n * Mounts this component and inserts it into the DOM.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {DOMElement} container DOM element to mount into.\n * @param {ReactReconcileTransaction} transaction\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {\n  var markerName;\n  if (ReactFeatureFlags.logTopLevelRenders) {\n    var wrappedElement = wrapperInstance._currentElement.props;\n    var type = wrappedElement.type;\n    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);\n    console.time(markerName);\n  }\n\n  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */\n  );\n\n  if (markerName) {\n    console.timeEnd(markerName);\n  }\n\n  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;\n  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);\n}\n\n/**\n * Batched mount.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {DOMElement} container DOM element to mount into.\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n  /* useCreateElement */\n  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);\n  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n}\n\n/**\n * Unmounts a component and removes it from the DOM.\n *\n * @param {ReactComponent} instance React component instance.\n * @param {DOMElement} container DOM element to unmount from.\n * @final\n * @internal\n * @see {ReactMount.unmountComponentAtNode}\n */\nfunction unmountComponentFromNode(instance, container, safely) {\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onBeginFlush();\n  }\n  ReactReconciler.unmountComponent(instance, safely);\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onEndFlush();\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    container = container.documentElement;\n  }\n\n  // http://jsperf.com/emptying-a-node\n  while (container.lastChild) {\n    container.removeChild(container.lastChild);\n  }\n}\n\n/**\n * True if the supplied DOM node has a direct React-rendered child that is\n * not a React root element. Useful for warning in `render`,\n * `unmountComponentAtNode`, etc.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM element contains a direct child that was\n * rendered by React but is not a root element.\n * @internal\n */\nfunction hasNonRootReactChild(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  if (rootEl) {\n    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);\n    return !!(inst && inst._hostParent);\n  }\n}\n\n/**\n * True if the supplied DOM node is a React DOM element and\n * it has been rendered by another copy of React.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM has been rendered by another copy of React\n * @internal\n */\nfunction nodeIsRenderedByOtherInstance(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));\n}\n\n/**\n * True if the supplied DOM node is a valid node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid DOM node.\n * @internal\n */\nfunction isValidContainer(node) {\n  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));\n}\n\n/**\n * True if the supplied DOM node is a valid React node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid React DOM node.\n * @internal\n */\nfunction isReactNode(node) {\n  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));\n}\n\nfunction getHostRootInstanceInContainer(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);\n  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;\n}\n\nfunction getTopLevelWrapperInContainer(container) {\n  var root = getHostRootInstanceInContainer(container);\n  return root ? root._hostContainerInfo._topLevelWrapper : null;\n}\n\n/**\n * Temporary (?) hack so that we can store all top-level pending updates on\n * composites instead of having to worry about different types of components\n * here.\n */\nvar topLevelRootCounter = 1;\nvar TopLevelWrapper = function () {\n  this.rootID = topLevelRootCounter++;\n};\nTopLevelWrapper.prototype.isReactComponent = {};\nif (process.env.NODE_ENV !== 'production') {\n  TopLevelWrapper.displayName = 'TopLevelWrapper';\n}\nTopLevelWrapper.prototype.render = function () {\n  // this.props is actually a ReactElement\n  return this.props;\n};\n\n/**\n * Mounting is the process of initializing a React component by creating its\n * representative DOM elements and inserting them into a supplied `container`.\n * Any prior content inside `container` is destroyed in the process.\n *\n *   ReactMount.render(\n *     component,\n *     document.getElementById('container')\n *   );\n *\n *   <div id=\"container\">                   <-- Supplied `container`.\n *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n *       // ...                                 component.\n *     </div>\n *   </div>\n *\n * Inside of `container`, the first element rendered is the \"reactRoot\".\n */\nvar ReactMount = {\n\n  TopLevelWrapper: TopLevelWrapper,\n\n  /**\n   * Used by devtools. The keys are not important.\n   */\n  _instancesByReactRootID: instancesByReactRootID,\n\n  /**\n   * This is a hook provided to support rendering React components while\n   * ensuring that the apparent scroll position of its `container` does not\n   * change.\n   *\n   * @param {DOMElement} container The `container` being rendered into.\n   * @param {function} renderCallback This must be called once to do the render.\n   */\n  scrollMonitor: function (container, renderCallback) {\n    renderCallback();\n  },\n\n  /**\n   * Take a component that's already mounted into the DOM and replace its props\n   * @param {ReactComponent} prevComponent component instance already in the DOM\n   * @param {ReactElement} nextElement component instance to render\n   * @param {DOMElement} container container to render into\n   * @param {?function} callback function triggered on completion\n   */\n  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {\n    ReactMount.scrollMonitor(container, function () {\n      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);\n      if (callback) {\n        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n      }\n    });\n\n    return prevComponent;\n  },\n\n  /**\n   * Render a new component into the DOM. Hooked by hooks!\n   *\n   * @param {ReactElement} nextElement element to render\n   * @param {DOMElement} container container to render into\n   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n   * @return {ReactComponent} nextComponent\n   */\n  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case.\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;\n\n    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n    var componentInstance = instantiateReactComponent(nextElement, false);\n\n    // The initial render is synchronous but any updates that happen during\n    // rendering, in componentWillMount or componentDidMount, will be batched\n    // according to the current batching strategy.\n\n    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);\n\n    var wrapperID = componentInstance._instance.rootID;\n    instancesByReactRootID[wrapperID] = componentInstance;\n\n    return componentInstance;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;\n    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);\n  },\n\n  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');\n    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \\'div\\', pass ' + 'React.createElement(\\'div\\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :\n    // Check if it quacks like an element\n    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \\'div\\', pass ' + 'React.createElement(\\'div\\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;\n\n    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;\n\n    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);\n\n    var nextContext;\n    if (parentComponent) {\n      var parentInst = ReactInstanceMap.get(parentComponent);\n      nextContext = parentInst._processChildContext(parentInst._context);\n    } else {\n      nextContext = emptyObject;\n    }\n\n    var prevComponent = getTopLevelWrapperInContainer(container);\n\n    if (prevComponent) {\n      var prevWrappedElement = prevComponent._currentElement;\n      var prevElement = prevWrappedElement.props;\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        var publicInst = prevComponent._renderedComponent.getPublicInstance();\n        var updatedCallback = callback && function () {\n          callback.call(publicInst);\n        };\n        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);\n        return publicInst;\n      } else {\n        ReactMount.unmountComponentAtNode(container);\n      }\n    }\n\n    var reactRootElement = getReactRootElementInContainer(container);\n    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);\n    var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;\n\n      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n        var rootElementSibling = reactRootElement;\n        while (rootElementSibling) {\n          if (internalGetID(rootElementSibling)) {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;\n            break;\n          }\n          rootElementSibling = rootElementSibling.nextSibling;\n        }\n      }\n    }\n\n    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;\n    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();\n    if (callback) {\n      callback.call(component);\n    }\n    return component;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  render: function (nextElement, container, callback) {\n    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);\n  },\n\n  /**\n   * Unmounts and destroys the React component rendered in the `container`.\n   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode\n   *\n   * @param {DOMElement} container DOM element containing a React component.\n   * @return {boolean} True if a component was found in and unmounted from\n   *                   `container`\n   */\n  unmountComponentAtNode: function (container) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n    // render but we still don't expect to be in a render call here.)\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;\n    }\n\n    var prevComponent = getTopLevelWrapperInContainer(container);\n    if (!prevComponent) {\n      // Check if the node being unmounted was rendered by React, but isn't a\n      // root node.\n      var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n      // Check if the container itself is a React root node.\n      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;\n      }\n\n      return false;\n    }\n    delete instancesByReactRootID[prevComponent._instance.rootID];\n    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);\n    return true;\n  },\n\n  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;\n\n    if (shouldReuseMarkup) {\n      var rootElement = getReactRootElementInContainer(container);\n      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n        ReactDOMComponentTree.precacheNode(instance, rootElement);\n        return;\n      } else {\n        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\n        var rootMarkup = rootElement.outerHTML;\n        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);\n\n        var normalizedMarkup = markup;\n        if (process.env.NODE_ENV !== 'production') {\n          // because rootMarkup is retrieved from the DOM, various normalizations\n          // will have occurred which will not be present in `markup`. Here,\n          // insert markup into a <div> or <iframe> depending on the container\n          // type to perform the same normalizations before comparing.\n          var normalizer;\n          if (container.nodeType === ELEMENT_NODE_TYPE) {\n            normalizer = document.createElement('div');\n            normalizer.innerHTML = markup;\n            normalizedMarkup = normalizer.innerHTML;\n          } else {\n            normalizer = document.createElement('iframe');\n            document.body.appendChild(normalizer);\n            normalizer.contentDocument.write(markup);\n            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;\n            document.body.removeChild(normalizer);\n          }\n        }\n\n        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);\n        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\n        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\\n%s', difference) : _prodInvariant('42', difference) : void 0;\n\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\\n%s', difference) : void 0;\n        }\n      }\n    }\n\n    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document but you didn\\'t use server rendering. We can\\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;\n\n    if (transaction.useCreateElement) {\n      while (container.lastChild) {\n        container.removeChild(container.lastChild);\n      }\n      DOMLazyTree.insertTreeBefore(container, markup, null);\n    } else {\n      setInnerHTML(container, markup);\n      ReactDOMComponentTree.precacheNode(instance, container.firstChild);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);\n      if (hostNode._debugID !== 0) {\n        ReactInstrumentation.debugTool.onHostOperation(hostNode._debugID, 'mount', markup.toString());\n      }\n    }\n  }\n};\n\nmodule.exports = ReactMount;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactMount.js\n ** module id = 71\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMultiChildUpdateTypes\n */\n\n'use strict';\n\nvar keyMirror = require('fbjs/lib/keyMirror');\n\n/**\n * When a component's children are updated, a series of update configuration\n * objects are created in order to batch and serialize the required changes.\n *\n * Enumerates all the possible types of update configurations.\n *\n * @internal\n */\nvar ReactMultiChildUpdateTypes = keyMirror({\n  INSERT_MARKUP: null,\n  MOVE_EXISTING: null,\n  REMOVE_NODE: null,\n  SET_MARKUP: null,\n  TEXT_CONTENT: null\n});\n\nmodule.exports = ReactMultiChildUpdateTypes;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactMultiChildUpdateTypes.js\n ** module id = 72\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactNodeTypes\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactElement = require('./ReactElement');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar ReactNodeTypes = {\n  HOST: 0,\n  COMPOSITE: 1,\n  EMPTY: 2,\n\n  getType: function (node) {\n    if (node === null || node === false) {\n      return ReactNodeTypes.EMPTY;\n    } else if (ReactElement.isValidElement(node)) {\n      if (typeof node.type === 'function') {\n        return ReactNodeTypes.COMPOSITE;\n      } else {\n        return ReactNodeTypes.HOST;\n      }\n    }\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;\n  }\n};\n\nmodule.exports = ReactNodeTypes;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactNodeTypes.js\n ** module id = 73\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypes\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactPropTypesSecret = require('./ReactPropTypesSecret');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar getIteratorFn = require('./getIteratorFn');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Collection of methods that allow declaration and validation of props that are\n * supplied to React components. Example usage:\n *\n *   var Props = require('ReactPropTypes');\n *   var MyArticle = React.createClass({\n *     propTypes: {\n *       // An optional string prop named \"description\".\n *       description: Props.string,\n *\n *       // A required enum prop named \"category\".\n *       category: Props.oneOf(['News','Photos']).isRequired,\n *\n *       // A prop named \"dialog\" that requires an instance of Dialog.\n *       dialog: Props.instanceOf(Dialog).isRequired\n *     },\n *     render: function() { ... }\n *   });\n *\n * A more formal specification of how these methods are used:\n *\n *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n *   decl := ReactPropTypes.{type}(.isRequired)?\n *\n * Each and every declaration produces a function with the same signature. This\n * allows the creation of custom validation functions. For example:\n *\n *  var MyLink = React.createClass({\n *    propTypes: {\n *      // An optional string or URI prop named \"href\".\n *      href: function(props, propName, componentName) {\n *        var propValue = props[propName];\n *        if (propValue != null && typeof propValue !== 'string' &&\n *            !(propValue instanceof URI)) {\n *          return new Error(\n *            'Expected a string or an URI for ' + propName + ' in ' +\n *            componentName\n *          );\n *        }\n *      }\n *    },\n *    render: function() {...}\n *  });\n *\n * @internal\n */\n\nvar ANONYMOUS = '<<anonymous>>';\n\nvar ReactPropTypes = {\n  array: createPrimitiveTypeChecker('array'),\n  bool: createPrimitiveTypeChecker('boolean'),\n  func: createPrimitiveTypeChecker('function'),\n  number: createPrimitiveTypeChecker('number'),\n  object: createPrimitiveTypeChecker('object'),\n  string: createPrimitiveTypeChecker('string'),\n  symbol: createPrimitiveTypeChecker('symbol'),\n\n  any: createAnyTypeChecker(),\n  arrayOf: createArrayOfTypeChecker,\n  element: createElementTypeChecker(),\n  instanceOf: createInstanceTypeChecker,\n  node: createNodeChecker(),\n  objectOf: createObjectOfTypeChecker,\n  oneOf: createEnumTypeChecker,\n  oneOfType: createUnionTypeChecker,\n  shape: createShapeTypeChecker\n};\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\n/*eslint-disable no-self-compare*/\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n/*eslint-enable no-self-compare*/\n\n/**\n * We use an Error-like object for backward compatibility as people may call\n * PropTypes directly and inspect their output. However we don't use real\n * Errors anymore. We don't inspect their stack anyway, and creating them\n * is prohibitively expensive if they are created too often, such as what\n * happens in oneOfType() for any type before the one that matched.\n */\nfunction PropTypeError(message) {\n  this.message = message;\n  this.stack = '';\n}\n// Make `instanceof Error` still work for returned errors.\nPropTypeError.prototype = Error.prototype;\n\nfunction createChainableTypeChecker(validate) {\n  if (process.env.NODE_ENV !== 'production') {\n    var manualPropTypeCallCache = {};\n  }\n  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n    componentName = componentName || ANONYMOUS;\n    propFullName = propFullName || propName;\n    if (process.env.NODE_ENV !== 'production') {\n      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {\n        var cacheKey = componentName + ':' + propName;\n        if (!manualPropTypeCallCache[cacheKey]) {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in the next major version. You may be ' + 'seeing this warning due to a third-party PropTypes library. ' + 'See https://fb.me/react-warning-dont-call-proptypes for details.', propFullName, componentName) : void 0;\n          manualPropTypeCallCache[cacheKey] = true;\n        }\n      }\n    }\n    if (props[propName] == null) {\n      var locationName = ReactPropTypeLocationNames[location];\n      if (isRequired) {\n        return new PropTypeError('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));\n      }\n      return null;\n    } else {\n      return validate(props, propName, componentName, location, propFullName);\n    }\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\n\nfunction createPrimitiveTypeChecker(expectedType) {\n  function validate(props, propName, componentName, location, propFullName, secret) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== expectedType) {\n      var locationName = ReactPropTypeLocationNames[location];\n      // `propValue` being instance of, say, date/regexp, pass the 'object'\n      // check, but we can offer a more precise error message here rather than\n      // 'of type `object`'.\n      var preciseType = getPreciseType(propValue);\n\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createAnyTypeChecker() {\n  return createChainableTypeChecker(emptyFunction.thatReturns(null));\n}\n\nfunction createArrayOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (typeof typeChecker !== 'function') {\n      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n    }\n    var propValue = props[propName];\n    if (!Array.isArray(propValue)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var propType = getPropType(propValue);\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n    }\n    for (var i = 0; i < propValue.length; i++) {\n      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createElementTypeChecker() {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    if (!ReactElement.isValidElement(propValue)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var propType = getPropType(propValue);\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createInstanceTypeChecker(expectedClass) {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!(props[propName] instanceof expectedClass)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var expectedClassName = expectedClass.name || ANONYMOUS;\n      var actualClassName = getClassName(props[propName]);\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createEnumTypeChecker(expectedValues) {\n  if (!Array.isArray(expectedValues)) {\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n    return emptyFunction.thatReturnsNull;\n  }\n\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    for (var i = 0; i < expectedValues.length; i++) {\n      if (is(propValue, expectedValues[i])) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    var valuesString = JSON.stringify(expectedValues);\n    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createObjectOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (typeof typeChecker !== 'function') {\n      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n    }\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n    }\n    for (var key in propValue) {\n      if (propValue.hasOwnProperty(key)) {\n        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createUnionTypeChecker(arrayOfTypeCheckers) {\n  if (!Array.isArray(arrayOfTypeCheckers)) {\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n    return emptyFunction.thatReturnsNull;\n  }\n\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createNodeChecker() {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!isNode(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createShapeTypeChecker(shapeTypes) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n    }\n    for (var key in shapeTypes) {\n      var checker = shapeTypes[key];\n      if (!checker) {\n        continue;\n      }\n      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n      if (error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction isNode(propValue) {\n  switch (typeof propValue) {\n    case 'number':\n    case 'string':\n    case 'undefined':\n      return true;\n    case 'boolean':\n      return !propValue;\n    case 'object':\n      if (Array.isArray(propValue)) {\n        return propValue.every(isNode);\n      }\n      if (propValue === null || ReactElement.isValidElement(propValue)) {\n        return true;\n      }\n\n      var iteratorFn = getIteratorFn(propValue);\n      if (iteratorFn) {\n        var iterator = iteratorFn.call(propValue);\n        var step;\n        if (iteratorFn !== propValue.entries) {\n          while (!(step = iterator.next()).done) {\n            if (!isNode(step.value)) {\n              return false;\n            }\n          }\n        } else {\n          // Iterator will provide entry [k,v] tuples rather than values.\n          while (!(step = iterator.next()).done) {\n            var entry = step.value;\n            if (entry) {\n              if (!isNode(entry[1])) {\n                return false;\n              }\n            }\n          }\n        }\n      } else {\n        return false;\n      }\n\n      return true;\n    default:\n      return false;\n  }\n}\n\nfunction isSymbol(propType, propValue) {\n  // Native Symbol.\n  if (propType === 'symbol') {\n    return true;\n  }\n\n  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n  if (propValue['@@toStringTag'] === 'Symbol') {\n    return true;\n  }\n\n  // Fallback for non-spec compliant Symbols which are polyfilled.\n  if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n    return true;\n  }\n\n  return false;\n}\n\n// Equivalent of `typeof` but with special handling for array and regexp.\nfunction getPropType(propValue) {\n  var propType = typeof propValue;\n  if (Array.isArray(propValue)) {\n    return 'array';\n  }\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return 'object';\n  }\n  if (isSymbol(propType, propValue)) {\n    return 'symbol';\n  }\n  return propType;\n}\n\n// This handles more types than `getPropType`. Only used for error messages.\n// See `createPrimitiveTypeChecker`.\nfunction getPreciseType(propValue) {\n  var propType = getPropType(propValue);\n  if (propType === 'object') {\n    if (propValue instanceof Date) {\n      return 'date';\n    } else if (propValue instanceof RegExp) {\n      return 'regexp';\n    }\n  }\n  return propType;\n}\n\n// Returns class name of the object, if any.\nfunction getClassName(propValue) {\n  if (!propValue.constructor || !propValue.constructor.name) {\n    return ANONYMOUS;\n  }\n  return propValue.constructor.name;\n}\n\nmodule.exports = ReactPropTypes;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactPropTypes.js\n ** module id = 74\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactVersion\n */\n\n'use strict';\n\nmodule.exports = '15.3.2';\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactVersion.js\n ** module id = 75\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ViewportMetrics\n */\n\n'use strict';\n\nvar ViewportMetrics = {\n\n  currentScrollLeft: 0,\n\n  currentScrollTop: 0,\n\n  refreshScrollValues: function (scrollPosition) {\n    ViewportMetrics.currentScrollLeft = scrollPosition.x;\n    ViewportMetrics.currentScrollTop = scrollPosition.y;\n  }\n\n};\n\nmodule.exports = ViewportMetrics;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ViewportMetrics.js\n ** module id = 76\n ** module chunks = 0\n **/","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule accumulateInto\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto(current, next) {\n  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;\n\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  if (Array.isArray(current)) {\n    if (Array.isArray(next)) {\n      current.push.apply(current, next);\n      return current;\n    }\n    current.push(next);\n    return current;\n  }\n\n  if (Array.isArray(next)) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nmodule.exports = accumulateInto;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/accumulateInto.js\n ** module id = 77\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule canDefineProperty\n */\n\n'use strict';\n\nvar canDefineProperty = false;\nif (process.env.NODE_ENV !== 'production') {\n  try {\n    Object.defineProperty({}, 'x', { get: function () {} });\n    canDefineProperty = true;\n  } catch (x) {\n    // IE will fail on defineProperty\n  }\n}\n\nmodule.exports = canDefineProperty;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/canDefineProperty.js\n ** module id = 78\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule forEachAccumulated\n * \n */\n\n'use strict';\n\n/**\n * @param {array} arr an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n */\n\nfunction forEachAccumulated(arr, cb, scope) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n}\n\nmodule.exports = forEachAccumulated;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/forEachAccumulated.js\n ** module id = 79\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getHostComponentFromComposite\n */\n\n'use strict';\n\nvar ReactNodeTypes = require('./ReactNodeTypes');\n\nfunction getHostComponentFromComposite(inst) {\n  var type;\n\n  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {\n    inst = inst._renderedComponent;\n  }\n\n  if (type === ReactNodeTypes.HOST) {\n    return inst._renderedComponent;\n  } else if (type === ReactNodeTypes.EMPTY) {\n    return null;\n  }\n}\n\nmodule.exports = getHostComponentFromComposite;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getHostComponentFromComposite.js\n ** module id = 80\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getIteratorFn\n * \n */\n\n'use strict';\n\n/* global Symbol */\n\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n/**\n * Returns the iterator method function contained on the iterable object.\n *\n * Be sure to invoke the function with the iterable as context:\n *\n *     var iteratorFn = getIteratorFn(myIterable);\n *     if (iteratorFn) {\n *       var iterator = iteratorFn.call(myIterable);\n *       ...\n *     }\n *\n * @param {?object} maybeIterable\n * @return {?function}\n */\nfunction getIteratorFn(maybeIterable) {\n  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nmodule.exports = getIteratorFn;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getIteratorFn.js\n ** module id = 81\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getTextContentAccessor\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar contentKey = null;\n\n/**\n * Gets the key used to access text content on a DOM node.\n *\n * @return {?string} Key used to access text content.\n * @internal\n */\nfunction getTextContentAccessor() {\n  if (!contentKey && ExecutionEnvironment.canUseDOM) {\n    // Prefer textContent to innerText because many browsers support both but\n    // SVG <text> elements don't support innerText even when <div> does.\n    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';\n  }\n  return contentKey;\n}\n\nmodule.exports = getTextContentAccessor;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getTextContentAccessor.js\n ** module id = 82\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule instantiateReactComponent\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar ReactCompositeComponent = require('./ReactCompositeComponent');\nvar ReactEmptyComponent = require('./ReactEmptyComponent');\nvar ReactHostComponent = require('./ReactHostComponent');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n// To avoid a cyclic dependency, we create the final class in this module\nvar ReactCompositeComponentWrapper = function (element) {\n  this.construct(element);\n};\n_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {\n  _instantiateReactComponent: instantiateReactComponent\n});\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Check if the type reference is a known internal type. I.e. not a user\n * provided composite type.\n *\n * @param {function} type\n * @return {boolean} Returns true if this is a valid internal type.\n */\nfunction isInternalComponentType(type) {\n  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';\n}\n\nvar nextDebugID = 1;\n\n/**\n * Given a ReactNode, create an instance that will actually be mounted.\n *\n * @param {ReactNode} node\n * @param {boolean} shouldHaveDebugID\n * @return {object} A new instance of the element's constructor.\n * @protected\n */\nfunction instantiateReactComponent(node, shouldHaveDebugID) {\n  var instance;\n\n  if (node === null || node === false) {\n    instance = ReactEmptyComponent.create(instantiateReactComponent);\n  } else if (typeof node === 'object') {\n    var element = node;\n    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : void 0;\n\n    // Special case string values\n    if (typeof element.type === 'string') {\n      instance = ReactHostComponent.createInternalComponent(element);\n    } else if (isInternalComponentType(element.type)) {\n      // This is temporarily available for custom components that are not string\n      // representations. I.e. ART. Once those are updated to use the string\n      // representation, we can drop this code path.\n      instance = new element.type(element);\n\n      // We renamed this. Allow the old name for compat. :(\n      if (!instance.getHostNode) {\n        instance.getHostNode = instance.getNativeNode;\n      }\n    } else {\n      instance = new ReactCompositeComponentWrapper(element);\n    }\n  } else if (typeof node === 'string' || typeof node === 'number') {\n    instance = ReactHostComponent.createInstanceForText(node);\n  } else {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;\n  }\n\n  // These two fields are used by the DOM and ART diffing algorithms\n  // respectively. Instead of using expandos on components, we should be\n  // storing the state needed by the diffing algorithms elsewhere.\n  instance._mountIndex = 0;\n  instance._mountImage = null;\n\n  if (process.env.NODE_ENV !== 'production') {\n    instance._debugID = shouldHaveDebugID ? nextDebugID++ : 0;\n  }\n\n  // Internal instances should fully constructed at this point, so they should\n  // not get any new fields added to them at this point.\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.preventExtensions) {\n      Object.preventExtensions(instance);\n    }\n  }\n\n  return instance;\n}\n\nmodule.exports = instantiateReactComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/instantiateReactComponent.js\n ** module id = 83\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isTextInputElement\n * \n */\n\n'use strict';\n\n/**\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n */\n\nvar supportedInputTypes = {\n  'color': true,\n  'date': true,\n  'datetime': true,\n  'datetime-local': true,\n  'email': true,\n  'month': true,\n  'number': true,\n  'password': true,\n  'range': true,\n  'search': true,\n  'tel': true,\n  'text': true,\n  'time': true,\n  'url': true,\n  'week': true\n};\n\nfunction isTextInputElement(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\n  if (nodeName === 'input') {\n    return !!supportedInputTypes[elem.type];\n  }\n\n  if (nodeName === 'textarea') {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = isTextInputElement;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/isTextInputElement.js\n ** module id = 84\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule setTextContent\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar setInnerHTML = require('./setInnerHTML');\n\n/**\n * Set the textContent property of a node, ensuring that whitespace is preserved\n * even in IE8. innerText is a poor substitute for textContent and, among many\n * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\n * as it should.\n *\n * @param {DOMElement} node\n * @param {string} text\n * @internal\n */\nvar setTextContent = function (node, text) {\n  if (text) {\n    var firstChild = node.firstChild;\n\n    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n  node.textContent = text;\n};\n\nif (ExecutionEnvironment.canUseDOM) {\n  if (!('textContent' in document.documentElement)) {\n    setTextContent = function (node, text) {\n      setInnerHTML(node, escapeTextContentForBrowser(text));\n    };\n  }\n}\n\nmodule.exports = setTextContent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/setTextContent.js\n ** module id = 85\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = require('./lib/React');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/react.js\n ** module id = 86\n ** module chunks = 0\n **/","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar _hyphenPattern = /-(.)/g;\n\n/**\n * Camelcases a hyphenated string, for example:\n *\n *   > camelize('background-color')\n *   < \"backgroundColor\"\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelize(string) {\n  return string.replace(_hyphenPattern, function (_, character) {\n    return character.toUpperCase();\n  });\n}\n\nmodule.exports = camelize;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/camelize.js\n ** module id = 87\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\nvar camelize = require('./camelize');\n\nvar msPattern = /^-ms-/;\n\n/**\n * Camelcases a hyphenated CSS property name, for example:\n *\n *   > camelizeStyleName('background-color')\n *   < \"backgroundColor\"\n *   > camelizeStyleName('-moz-transition')\n *   < \"MozTransition\"\n *   > camelizeStyleName('-ms-transition')\n *   < \"msTransition\"\n *\n * As Andi Smith suggests\n * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n * is converted to lowercase `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelizeStyleName(string) {\n  return camelize(string.replace(msPattern, 'ms-'));\n}\n\nmodule.exports = camelizeStyleName;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/camelizeStyleName.js\n ** module id = 88\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/containsNode.js\n ** module id = 89\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar invariant = require('./invariant');\n\n/**\n * Convert array-like objects to arrays.\n *\n * This API assumes the caller knows the contents of the data type. For less\n * well defined inputs use createArrayFromMixed.\n *\n * @param {object|function|filelist} obj\n * @return {array}\n */\nfunction toArray(obj) {\n  var length = obj.length;\n\n  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList\n  // in old versions of Safari).\n  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;\n\n  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;\n\n  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;\n\n  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;\n\n  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n  // without method will throw during the slice call and skip straight to the\n  // fallback.\n  if (obj.hasOwnProperty) {\n    try {\n      return Array.prototype.slice.call(obj);\n    } catch (e) {\n      // IE < 9 does not support Array#slice on collections objects\n    }\n  }\n\n  // Fall back to copying key by key. This assumes all keys have a value,\n  // so will not preserve sparsely populated inputs.\n  var ret = Array(length);\n  for (var ii = 0; ii < length; ii++) {\n    ret[ii] = obj[ii];\n  }\n  return ret;\n}\n\n/**\n * Perform a heuristic test to determine if an object is \"array-like\".\n *\n *   A monk asked Joshu, a Zen master, \"Has a dog Buddha nature?\"\n *   Joshu replied: \"Mu.\"\n *\n * This function determines if its argument has \"array nature\": it returns\n * true if the argument is an actual array, an `arguments' object, or an\n * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).\n *\n * It will return false for other array-like objects like Filelist.\n *\n * @param {*} obj\n * @return {boolean}\n */\nfunction hasArrayNature(obj) {\n  return (\n    // not null/false\n    !!obj && (\n    // arrays are objects, NodeLists are functions in Safari\n    typeof obj == 'object' || typeof obj == 'function') &&\n    // quacks like an array\n    'length' in obj &&\n    // not window\n    !('setInterval' in obj) &&\n    // no DOM node should be considered an array-like\n    // a 'select' element has 'length' and 'item' properties on IE8\n    typeof obj.nodeType != 'number' && (\n    // a real array\n    Array.isArray(obj) ||\n    // arguments\n    'callee' in obj ||\n    // HTMLCollection/NodeList\n    'item' in obj)\n  );\n}\n\n/**\n * Ensure that the argument is an array by wrapping it in an array if it is not.\n * Creates a copy of the argument if it is already an array.\n *\n * This is mostly useful idiomatically:\n *\n *   var createArrayFromMixed = require('createArrayFromMixed');\n *\n *   function takesOneOrMoreThings(things) {\n *     things = createArrayFromMixed(things);\n *     ...\n *   }\n *\n * This allows you to treat `things' as an array, but accept scalars in the API.\n *\n * If you need to convert an array-like object, like `arguments`, into an array\n * use toArray instead.\n *\n * @param {*} obj\n * @return {array}\n */\nfunction createArrayFromMixed(obj) {\n  if (!hasArrayNature(obj)) {\n    return [obj];\n  } else if (Array.isArray(obj)) {\n    return obj.slice();\n  } else {\n    return toArray(obj);\n  }\n}\n\nmodule.exports = createArrayFromMixed;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/createArrayFromMixed.js\n ** module id = 90\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n/*eslint-disable fb-www/unsafe-html*/\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar createArrayFromMixed = require('./createArrayFromMixed');\nvar getMarkupWrap = require('./getMarkupWrap');\nvar invariant = require('./invariant');\n\n/**\n * Dummy container used to render all markup.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Pattern used by `getNodeName`.\n */\nvar nodeNamePattern = /^\\s*<(\\w+)/;\n\n/**\n * Extracts the `nodeName` of the first element in a string of markup.\n *\n * @param {string} markup String of markup.\n * @return {?string} Node name of the supplied markup.\n */\nfunction getNodeName(markup) {\n  var nodeNameMatch = markup.match(nodeNamePattern);\n  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n}\n\n/**\n * Creates an array containing the nodes rendered from the supplied markup. The\n * optionally supplied `handleScript` function will be invoked once for each\n * <script> element that is rendered. If no `handleScript` function is supplied,\n * an exception is thrown if any <script> elements are rendered.\n *\n * @param {string} markup A string of valid HTML markup.\n * @param {?function} handleScript Invoked once for each rendered <script>.\n * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\n */\nfunction createNodesFromMarkup(markup, handleScript) {\n  var node = dummyNode;\n  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;\n  var nodeName = getNodeName(markup);\n\n  var wrap = nodeName && getMarkupWrap(nodeName);\n  if (wrap) {\n    node.innerHTML = wrap[1] + markup + wrap[2];\n\n    var wrapDepth = wrap[0];\n    while (wrapDepth--) {\n      node = node.lastChild;\n    }\n  } else {\n    node.innerHTML = markup;\n  }\n\n  var scripts = node.getElementsByTagName('script');\n  if (scripts.length) {\n    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;\n    createArrayFromMixed(scripts).forEach(handleScript);\n  }\n\n  var nodes = Array.from(node.childNodes);\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  return nodes;\n}\n\nmodule.exports = createNodesFromMarkup;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/createNodesFromMarkup.js\n ** module id = 91\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/*eslint-disable fb-www/unsafe-html */\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar invariant = require('./invariant');\n\n/**\n * Dummy container used to detect which wraps are necessary.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\n * so we wrap them, render the wrapped nodes, then extract the desired node.\n *\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n */\n\nvar shouldWrap = {};\n\nvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\nvar tableWrap = [1, '<table>', '</table>'];\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nvar svgWrap = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\">', '</svg>'];\n\nvar markupWrap = {\n  '*': [1, '?<div>', '</div>'],\n\n  'area': [1, '<map>', '</map>'],\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  'legend': [1, '<fieldset>', '</fieldset>'],\n  'param': [1, '<object>', '</object>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\n  'optgroup': selectWrap,\n  'option': selectWrap,\n\n  'caption': tableWrap,\n  'colgroup': tableWrap,\n  'tbody': tableWrap,\n  'tfoot': tableWrap,\n  'thead': tableWrap,\n\n  'td': trWrap,\n  'th': trWrap\n};\n\n// Initialize the SVG elements since we know they'll always need to be wrapped\n// consistently. If they are created inside a <div> they will be initialized in\n// the wrong namespace (and will not display).\nvar svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];\nsvgElements.forEach(function (nodeName) {\n  markupWrap[nodeName] = svgWrap;\n  shouldWrap[nodeName] = true;\n});\n\n/**\n * Gets the markup wrap configuration for the supplied `nodeName`.\n *\n * NOTE: This lazily detects which wraps are necessary for the current browser.\n *\n * @param {string} nodeName Lowercase `nodeName`.\n * @return {?array} Markup wrap configuration, if applicable.\n */\nfunction getMarkupWrap(nodeName) {\n  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;\n  if (!markupWrap.hasOwnProperty(nodeName)) {\n    nodeName = '*';\n  }\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\n    if (nodeName === '*') {\n      dummyNode.innerHTML = '<link />';\n    } else {\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n    }\n    shouldWrap[nodeName] = !dummyNode.firstChild;\n  }\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n}\n\nmodule.exports = getMarkupWrap;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/getMarkupWrap.js\n ** module id = 92\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are unbounded, unlike `getScrollPosition`. This means they\n * may be negative or exceed the element boundaries (which is possible using\n * inertial scrolling).\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\n\nfunction getUnboundedScrollPosition(scrollable) {\n  if (scrollable === window) {\n    return {\n      x: window.pageXOffset || document.documentElement.scrollLeft,\n      y: window.pageYOffset || document.documentElement.scrollTop\n    };\n  }\n  return {\n    x: scrollable.scrollLeft,\n    y: scrollable.scrollTop\n  };\n}\n\nmodule.exports = getUnboundedScrollPosition;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/getUnboundedScrollPosition.js\n ** module id = 93\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar _uppercasePattern = /([A-Z])/g;\n\n/**\n * Hyphenates a camelcased string, for example:\n *\n *   > hyphenate('backgroundColor')\n *   < \"background-color\"\n *\n * For CSS style names, use `hyphenateStyleName` instead which works properly\n * with all vendor prefixes, including `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenate(string) {\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n}\n\nmodule.exports = hyphenate;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/hyphenate.js\n ** module id = 94\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\nvar hyphenate = require('./hyphenate');\n\nvar msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/hyphenateStyleName.js\n ** module id = 95\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/isNode.js\n ** module id = 96\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/isTextNode.js\n ** module id = 97\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n */\n\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function (string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/memoizeStringOnly.js\n ** module id = 98\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = require('react/lib/ReactDOM');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-dom/index.js\n ** module id = 99\n ** module chunks = 0\n **/","// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n// @remove-on-eject-end\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-scripts/config/polyfills.js\n ** module id = 100\n ** module chunks = 0\n **/","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-scripts/~/asap/browser-raw.js\n ** module id = 101\n ** module chunks = 0\n **/","/* @flow */\n\nimport type { Track, ToneLoop } from \"./types\";\n\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport * as sequencer from \"./sequencer\";\n\n\nfunction initTracks(): Track[] {\n  return [\n    {name: \"hi-hat (open)\", sample: \"audio/hihato.wav\", vol: .4, muted: false, beats: initBeats(16)},\n    {name: \"hi-hat (close)\", sample: \"audio/hihatc.wav\", vol: .4, muted: false, beats: initBeats(16)},\n    {name: \"snare\", sample: \"audio/snare.wav\", vol: .9, muted: false, beats: initBeats(16)},\n    {name: \"kick\", sample: \"audio/kick.wav\", vol: .8, muted: false, beats: initBeats(16)},\n  ];\n}\n\nfunction initBeats(n) {\n  return new Array(n).fill(false);\n}\n\nfunction _toggleTrackBeat(tracks, name, beat) {\n  return tracks.map((track: Track) => {\n    if (track.name !== name) {\n      return track;\n    } else {\n      return {\n        ...track,\n        beats: track.beats.map((v, i) => i !== beat ? v : !v)\n      };\n    }\n  });\n}\n\nfunction _setTrackVolume(tracks, name, vol) {\n  return tracks.map((track: Track) => {\n    if (track.name !== name) {\n      return track;\n    } else {\n      return {...track, vol};\n    }\n  });\n}\n\nfunction _muteTrack(tracks, name) {\n  return tracks.map((track: Track) => {\n    if (track.name !== name) {\n      return track;\n    } else {\n      return {...track, muted: !track.muted};\n    }\n  });\n}\n\nfunction TrackView({\n  track,\n  currentBeat,\n  toggleTrackBeat,\n  setTrackVolume,\n  muteTrack,\n}) {\n  return (\n    <tr className=\"track\">\n      <th>{track.name}</th>\n      <td>\n        <input type=\"range\" min=\"0\" max=\"1\" step=\".1\" value={track.vol}\n          onChange={event => setTrackVolume(track.name, parseFloat(event.target.value))} /></td>\n      <td>\n        <input type=\"checkbox\" checked={!track.muted}\n          onChange={event => muteTrack(track.name)} /></td>\n      {\n        track.beats.map((v, beat) => {\n          const beatClass = v ? \"active\" : beat === currentBeat ? \"current\" : \"\";\n          return (\n            <td key={beat} className={`beat ${beatClass}`}>\n              <a href=\"\" onClick={(event) => {\n                event.preventDefault();\n                toggleTrackBeat(track.name, beat);\n              }} />\n            </td>\n          );\n        })\n      }\n    </tr>\n  );\n}\n\nfunction TrackListView({\n  tracks,\n  currentBeat,\n  toggleTrackBeat,\n  setTrackVolume,\n  muteTrack,\n}) {\n  return (\n    <table>\n      <tbody>{\n        tracks.map((track, i) => {\n          return (\n            <TrackView key={i}\n              track={track}\n              currentBeat={currentBeat}\n              toggleTrackBeat={toggleTrackBeat}\n              setTrackVolume={setTrackVolume}\n              muteTrack={muteTrack} />\n            );\n        })\n      }</tbody>\n    </table>\n  );\n}\n\nfunction Controls({bpm, updateBPM, start, stop}) {\n  const onChange = event => updateBPM(parseInt(event.target.value, 10));\n  return (\n    <div className=\"controls\">\n      <button className=\"btn btn-start\" onClick={start}>Play</button>\n      <button className=\"btn btn-stop\" onClick={stop}>Stop</button>\n      <div className=\"bpm\">\n        <label>\n          BPM\n          <input type=\"range\" min=\"30\" max=\"240\" value={bpm} onChange={onChange}/>\n          <input type=\"number\" value={bpm} onChange={onChange} />\n        </label>\n      </div>\n    </div>\n  );\n}\n\nclass App extends Component {\n  state: {\n    bpm: number,\n    currentBeat: number,\n    loop: ToneLoop,\n    tracks: Track[],\n  };\n\n  constructor(props: {}) {\n    super(props);\n    const tracks = initTracks();\n    this.state = {\n      bpm: 120,\n      currentBeat: -1,\n      tracks, loop:\n      sequencer.create(tracks, this.updateCurrentBeat),\n    };\n  }\n\n  start = () => {\n    this.state.loop.start();\n  };\n\n  stop = () => {\n    this.state.loop.stop();\n    this.setState({currentBeat: -1});\n  };\n\n  updateCurrentBeat = (beat: number): void => {\n    this.setState({currentBeat: beat});\n  };\n\n  updateTracks = (newTracks: Track[]) => {\n    const {loop} = this.state;\n    this.setState({\n      tracks: newTracks,\n      loop: sequencer.update(loop, newTracks, this.updateCurrentBeat),\n    });\n  };\n\n  toggleTrackBeat = (name: string, beat: number) => {\n    const {tracks} = this.state;\n    this.updateTracks(_toggleTrackBeat(tracks, name, beat));\n  };\n\n  setTrackVolume = (name: string, vol: number) => {\n    const {tracks} = this.state;\n    this.updateTracks(_setTrackVolume(tracks, name, vol));\n  };\n\n  muteTrack = (name: string) => {\n    const {tracks} = this.state;\n    this.updateTracks(_muteTrack(tracks, name));\n  };\n\n  updateBPM = (newBpm: number) => {\n    const {bpm} = this.state;\n    sequencer.updateBPM(bpm);\n    this.setState({bpm: newBpm});\n  }\n\n  render() {\n    const {bpm, currentBeat, tracks} = this.state;\n    const {updateBPM, start, stop} = this;\n    return (\n      <div>\n        <h3>tinysynth</h3>\n        <TrackListView\n          tracks={tracks}\n          currentBeat={currentBeat}\n          toggleTrackBeat={this.toggleTrackBeat}\n          setTrackVolume={this.setTrackVolume}\n          muteTrack={this.muteTrack} />\n        <Controls {...{bpm, updateBPM, start, stop}} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/App.js\n **/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/* @flow */\nimport type { Track, ToneLoop, BeatNotifier } from \"./types\";\n\nimport Tone from \"tone\";\n\n\nconst velocities = [\n  1, .5, .75, .5,\n  1, .5, .75, .5,\n  1, .5, .75, .5,\n  1, .5, .75, .5,\n];\n\nexport function create(tracks: Track[], beatNotifier: BeatNotifier): ToneLoop {\n  const loop = new Tone.Sequence(\n    loopProcessor(tracks, beatNotifier),\n    new Array(16).fill(0).map((_, i) => i),\n    \"16n\"\n  );\n\n  Tone.Transport.bpm.value = 120;\n  Tone.Transport.start();\n\n  return loop;\n}\n\nexport function update(loop: ToneLoop, tracks: Track[], beatNotifier: BeatNotifier): ToneLoop {\n  loop.callback = loopProcessor(tracks, beatNotifier);\n  return loop;\n}\n\nexport function updateBPM(bpm: number): void {\n  Tone.Transport.bpm.value = bpm;\n}\n\nfunction loopProcessor(tracks, beatNotifier: BeatNotifier) {\n  const urls = tracks.reduce((acc, {name, sample}) => {\n    return {...acc, [name]: sample};\n  }, {});\n\n  const keys = new Tone.MultiPlayer({urls}).toMaster();\n\n  return (time, index) => {\n    beatNotifier(index);\n    tracks.forEach(({name, vol, muted, beats}) => {\n      if (beats[index]) {\n        // XXX \"1n\" should be set via some \"resolution\" track prop\n        keys.start(name, time, 0, \"1n\", 0, muted ? 0 : velocities[index] * vol);\n      }\n    });\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/sequencer.js\n **/","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-scripts/~/promise/lib/es6-extensions.js\n ** module id = 108\n ** module chunks = 0\n **/","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-scripts/~/promise/lib/rejection-tracking.js\n ** module id = 109\n ** module chunks = 0\n **/","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-scripts/~/whatwg-fetch/fetch.js\n ** module id = 110\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule AutoFocusUtils\n */\n\n'use strict';\n\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar focusNode = require('fbjs/lib/focusNode');\n\nvar AutoFocusUtils = {\n  focusDOMComponent: function () {\n    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));\n  }\n};\n\nmodule.exports = AutoFocusUtils;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/AutoFocusUtils.js\n ** module id = 111\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule BeforeInputEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar FallbackCompositionState = require('./FallbackCompositionState');\nvar SyntheticCompositionEvent = require('./SyntheticCompositionEvent');\nvar SyntheticInputEvent = require('./SyntheticInputEvent');\n\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\nvar START_KEYCODE = 229;\n\nvar canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;\n\nvar documentMode = null;\nif (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {\n  documentMode = document.documentMode;\n}\n\n// Webkit offers a very useful `textInput` event that can be used to\n// directly represent `beforeInput`. The IE `textinput` event is not as\n// useful, so we don't use it.\nvar canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();\n\n// In IE9+, we have access to composition events, but the data supplied\n// by the native compositionend event may be incorrect. Japanese ideographic\n// spaces, for instance (\\u3000) are not recorded correctly.\nvar useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);\n\n/**\n * Opera <= 12 includes TextEvent in window, but does not fire\n * text input events. Rely on keypress instead.\n */\nfunction isPresto() {\n  var opera = window.opera;\n  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;\n}\n\nvar SPACEBAR_CODE = 32;\nvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\n// Events and their corresponding property names.\nvar eventTypes = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onBeforeInput: null }),\n      captured: keyOf({ onBeforeInputCapture: null })\n    },\n    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCompositionEnd: null }),\n      captured: keyOf({ onCompositionEndCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCompositionStart: null }),\n      captured: keyOf({ onCompositionStartCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCompositionUpdate: null }),\n      captured: keyOf({ onCompositionUpdateCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\n  }\n};\n\n// Track whether we've ever handled a keypress on the space key.\nvar hasSpaceKeypress = false;\n\n/**\n * Return whether a native keypress event is assumed to be a command.\n * This is required because Firefox fires `keypress` events for key commands\n * (cut, copy, select-all, etc.) even though no character is inserted.\n */\nfunction isKeypressCommand(nativeEvent) {\n  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n  // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n  !(nativeEvent.ctrlKey && nativeEvent.altKey);\n}\n\n/**\n * Translate native top level events into event types.\n *\n * @param {string} topLevelType\n * @return {object}\n */\nfunction getCompositionEventType(topLevelType) {\n  switch (topLevelType) {\n    case topLevelTypes.topCompositionStart:\n      return eventTypes.compositionStart;\n    case topLevelTypes.topCompositionEnd:\n      return eventTypes.compositionEnd;\n    case topLevelTypes.topCompositionUpdate:\n      return eventTypes.compositionUpdate;\n  }\n}\n\n/**\n * Does our fallback best-guess model think this event signifies that\n * composition has begun?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;\n}\n\n/**\n * Does our fallback mode think that this event is the end of composition?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case topLevelTypes.topKeyUp:\n      // Command keys insert or clear IME input.\n      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\n    case topLevelTypes.topKeyDown:\n      // Expect IME keyCode on each keydown. If we get any other\n      // code we must have exited earlier.\n      return nativeEvent.keyCode !== START_KEYCODE;\n    case topLevelTypes.topKeyPress:\n    case topLevelTypes.topMouseDown:\n    case topLevelTypes.topBlur:\n      // Events are not possible without cancelling IME.\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Google Input Tools provides composition data via a CustomEvent,\n * with the `data` property populated in the `detail` object. If this\n * is available on the event object, use it. If not, this is a plain\n * composition event and we have nothing special to extract.\n *\n * @param {object} nativeEvent\n * @return {?string}\n */\nfunction getDataFromCustomEvent(nativeEvent) {\n  var detail = nativeEvent.detail;\n  if (typeof detail === 'object' && 'data' in detail) {\n    return detail.data;\n  }\n  return null;\n}\n\n// Track the current IME composition fallback object, if any.\nvar currentComposition = null;\n\n/**\n * @return {?object} A SyntheticCompositionEvent.\n */\nfunction extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var eventType;\n  var fallbackData;\n\n  if (canUseCompositionEvent) {\n    eventType = getCompositionEventType(topLevelType);\n  } else if (!currentComposition) {\n    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n      eventType = eventTypes.compositionStart;\n    }\n  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n    eventType = eventTypes.compositionEnd;\n  }\n\n  if (!eventType) {\n    return null;\n  }\n\n  if (useFallbackCompositionData) {\n    // The current composition is stored statically and must not be\n    // overwritten while composition continues.\n    if (!currentComposition && eventType === eventTypes.compositionStart) {\n      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);\n    } else if (eventType === eventTypes.compositionEnd) {\n      if (currentComposition) {\n        fallbackData = currentComposition.getData();\n      }\n    }\n  }\n\n  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);\n\n  if (fallbackData) {\n    // Inject data generated from fallback path into the synthetic event.\n    // This matches the property of native CompositionEventInterface.\n    event.data = fallbackData;\n  } else {\n    var customData = getDataFromCustomEvent(nativeEvent);\n    if (customData !== null) {\n      event.data = customData;\n    }\n  }\n\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The string corresponding to this `beforeInput` event.\n */\nfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case topLevelTypes.topCompositionEnd:\n      return getDataFromCustomEvent(nativeEvent);\n    case topLevelTypes.topKeyPress:\n      /**\n       * If native `textInput` events are available, our goal is to make\n       * use of them. However, there is a special case: the spacebar key.\n       * In Webkit, preventing default on a spacebar `textInput` event\n       * cancels character insertion, but it *also* causes the browser\n       * to fall back to its default spacebar behavior of scrolling the\n       * page.\n       *\n       * Tracking at:\n       * https://code.google.com/p/chromium/issues/detail?id=355103\n       *\n       * To avoid this issue, use the keypress event as if no `textInput`\n       * event is available.\n       */\n      var which = nativeEvent.which;\n      if (which !== SPACEBAR_CODE) {\n        return null;\n      }\n\n      hasSpaceKeypress = true;\n      return SPACEBAR_CHAR;\n\n    case topLevelTypes.topTextInput:\n      // Record the characters to be added to the DOM.\n      var chars = nativeEvent.data;\n\n      // If it's a spacebar character, assume that we have already handled\n      // it at the keypress level and bail immediately. Android Chrome\n      // doesn't give us keycodes, so we need to blacklist it.\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n        return null;\n      }\n\n      return chars;\n\n    default:\n      // For other native event types, do nothing.\n      return null;\n  }\n}\n\n/**\n * For browsers that do not provide the `textInput` event, extract the\n * appropriate string to use for SyntheticInputEvent.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The fallback string for this `beforeInput` event.\n */\nfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\n  // If we are currently composing (IME) and using a fallback to do so,\n  // try to extract the composed characters from the fallback object.\n  // If composition event is available, we extract a string only at\n  // compositionevent, otherwise extract it at fallback events.\n  if (currentComposition) {\n    if (topLevelType === topLevelTypes.topCompositionEnd || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n      var chars = currentComposition.getData();\n      FallbackCompositionState.release(currentComposition);\n      currentComposition = null;\n      return chars;\n    }\n    return null;\n  }\n\n  switch (topLevelType) {\n    case topLevelTypes.topPaste:\n      // If a paste event occurs after a keypress, throw out the input\n      // chars. Paste events should not lead to BeforeInput events.\n      return null;\n    case topLevelTypes.topKeyPress:\n      /**\n       * As of v27, Firefox may fire keypress events even when no character\n       * will be inserted. A few possibilities:\n       *\n       * - `which` is `0`. Arrow keys, Esc key, etc.\n       *\n       * - `which` is the pressed key code, but no char is available.\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n       *   this key combination and no character is inserted into the\n       *   document, but FF fires the keypress for char code `100` anyway.\n       *   No `input` event will occur.\n       *\n       * - `which` is the pressed key code, but a command combination is\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n       *   `input` event will occur.\n       */\n      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {\n        return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case topLevelTypes.topCompositionEnd:\n      return useFallbackCompositionData ? null : nativeEvent.data;\n    default:\n      return null;\n  }\n}\n\n/**\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n * `textInput` or fallback behavior.\n *\n * @return {?object} A SyntheticInputEvent.\n */\nfunction extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var chars;\n\n  if (canUseTextInputEvent) {\n    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n  } else {\n    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n  }\n\n  // If no characters are being inserted, no BeforeInput event should\n  // be fired.\n  if (!chars) {\n    return null;\n  }\n\n  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);\n\n  event.data = chars;\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * Create an `onBeforeInput` event to match\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n *\n * This event plugin is based on the native `textInput` event\n * available in Chrome, Safari, Opera, and IE. This event fires after\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n *\n * `beforeInput` is spec'd but not implemented in any browsers, and\n * the `input` event does not provide any useful information about what has\n * actually been added, contrary to the spec. Thus, `textInput` is the best\n * available event to identify the characters that have actually been inserted\n * into the target node.\n *\n * This plugin is also responsible for emitting `composition` events, thus\n * allowing us to share composition fallback code for both `beforeInput` and\n * `composition` event types.\n */\nvar BeforeInputEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];\n  }\n};\n\nmodule.exports = BeforeInputEventPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/BeforeInputEventPlugin.js\n ** module id = 112\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSPropertyOperations\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar camelizeStyleName = require('fbjs/lib/camelizeStyleName');\nvar dangerousStyleValue = require('./dangerousStyleValue');\nvar hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');\nvar memoizeStringOnly = require('fbjs/lib/memoizeStringOnly');\nvar warning = require('fbjs/lib/warning');\n\nvar processStyleName = memoizeStringOnly(function (styleName) {\n  return hyphenateStyleName(styleName);\n});\n\nvar hasShorthandPropertyBug = false;\nvar styleFloatAccessor = 'cssFloat';\nif (ExecutionEnvironment.canUseDOM) {\n  var tempStyle = document.createElement('div').style;\n  try {\n    // IE8 throws \"Invalid argument.\" if resetting shorthand style properties.\n    tempStyle.font = '';\n  } catch (e) {\n    hasShorthandPropertyBug = true;\n  }\n  // IE8 only supports accessing cssFloat (standard) as styleFloat\n  if (document.documentElement.style.cssFloat === undefined) {\n    styleFloatAccessor = 'styleFloat';\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\n  // style values shouldn't contain a semicolon\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n  var warnedForNaNValue = false;\n\n  var warnHyphenatedStyleName = function (name, owner) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;\n  };\n\n  var warnBadVendoredStyleName = function (name, owner) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;\n  };\n\n  var warnStyleValueWithSemicolon = function (name, value, owner) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\\'t contain a semicolon.%s ' + 'Try \"%s: %s\" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;\n  };\n\n  var warnStyleValueIsNaN = function (name, value, owner) {\n    if (warnedForNaNValue) {\n      return;\n    }\n\n    warnedForNaNValue = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;\n  };\n\n  var checkRenderMessage = function (owner) {\n    if (owner) {\n      var name = owner.getName();\n      if (name) {\n        return ' Check the render method of `' + name + '`.';\n      }\n    }\n    return '';\n  };\n\n  /**\n   * @param {string} name\n   * @param {*} value\n   * @param {ReactDOMComponent} component\n   */\n  var warnValidStyle = function (name, value, component) {\n    var owner;\n    if (component) {\n      owner = component._currentElement._owner;\n    }\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name, owner);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name, owner);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value, owner);\n    }\n\n    if (typeof value === 'number' && isNaN(value)) {\n      warnStyleValueIsNaN(name, value, owner);\n    }\n  };\n}\n\n/**\n * Operations for dealing with CSS properties.\n */\nvar CSSPropertyOperations = {\n\n  /**\n   * Serializes a mapping of style properties for use as inline styles:\n   *\n   *   > createMarkupForStyles({width: '200px', height: 0})\n   *   \"width:200px;height:0;\"\n   *\n   * Undefined values are ignored so that declarative programming is easier.\n   * The result should be HTML-escaped before insertion into the DOM.\n   *\n   * @param {object} styles\n   * @param {ReactDOMComponent} component\n   * @return {?string}\n   */\n  createMarkupForStyles: function (styles, component) {\n    var serialized = '';\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      var styleValue = styles[styleName];\n      if (process.env.NODE_ENV !== 'production') {\n        warnValidStyle(styleName, styleValue, component);\n      }\n      if (styleValue != null) {\n        serialized += processStyleName(styleName) + ':';\n        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';\n      }\n    }\n    return serialized || null;\n  },\n\n  /**\n   * Sets the value for multiple styles on a node.  If a value is specified as\n   * '' (empty string), the corresponding style property will be unset.\n   *\n   * @param {DOMElement} node\n   * @param {object} styles\n   * @param {ReactDOMComponent} component\n   */\n  setValueForStyles: function (node, styles, component) {\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);\n    }\n\n    var style = node.style;\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        warnValidStyle(styleName, styles[styleName], component);\n      }\n      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);\n      if (styleName === 'float' || styleName === 'cssFloat') {\n        styleName = styleFloatAccessor;\n      }\n      if (styleValue) {\n        style[styleName] = styleValue;\n      } else {\n        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];\n        if (expansion) {\n          // Shorthand property that IE8 won't like unsetting, so unset each\n          // component to placate it\n          for (var individualStyleName in expansion) {\n            style[individualStyleName] = '';\n          }\n        } else {\n          style[styleName] = '';\n        }\n      }\n    }\n  }\n\n};\n\nmodule.exports = CSSPropertyOperations;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/CSSPropertyOperations.js\n ** module id = 113\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ChangeEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getEventTarget = require('./getEventTarget');\nvar isEventSupported = require('./isEventSupported');\nvar isTextInputElement = require('./isTextInputElement');\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onChange: null }),\n      captured: keyOf({ onChangeCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]\n  }\n};\n\n/**\n * For IE shims\n */\nvar activeElement = null;\nvar activeElementInst = null;\nvar activeElementValue = null;\nvar activeElementValueProp = null;\n\n/**\n * SECTION: handle `change` event\n */\nfunction shouldUseChangeEvent(elem) {\n  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\n}\n\nvar doesChangeEventBubble = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // See `handleChange` comment below\n  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n\n  // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n  ReactUpdates.batchedUpdates(runEventInBatch, event);\n}\n\nfunction runEventInBatch(event) {\n  EventPluginHub.enqueueEvents(event);\n  EventPluginHub.processEventQueue(false);\n}\n\nfunction startWatchingForChangeEventIE8(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n}\n\nfunction stopWatchingForChangeEventIE8() {\n  if (!activeElement) {\n    return;\n  }\n  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n  activeElement = null;\n  activeElementInst = null;\n}\n\nfunction getTargetInstForChangeEvent(topLevelType, targetInst) {\n  if (topLevelType === topLevelTypes.topChange) {\n    return targetInst;\n  }\n}\nfunction handleEventsForChangeEventIE8(topLevelType, target, targetInst) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForChangeEventIE8();\n    startWatchingForChangeEventIE8(target, targetInst);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForChangeEventIE8();\n  }\n}\n\n/**\n * SECTION: handle `input` event\n */\nvar isInputEventSupported = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events.\n  // IE10+ fire input events to often, such when a placeholder\n  // changes or when an input with a placeholder is focused.\n  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);\n}\n\n/**\n * (For IE <=11) Replacement getter/setter for the `value` property that gets\n * set on the active element.\n */\nvar newValueProp = {\n  get: function () {\n    return activeElementValueProp.get.call(this);\n  },\n  set: function (val) {\n    // Cast to a string so we can do equality checks.\n    activeElementValue = '' + val;\n    activeElementValueProp.set.call(this, val);\n  }\n};\n\n/**\n * (For IE <=11) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\nfunction startWatchingForValueChange(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  activeElementValue = target.value;\n  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');\n\n  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only\n  // on DOM elements\n  Object.defineProperty(activeElement, 'value', newValueProp);\n  if (activeElement.attachEvent) {\n    activeElement.attachEvent('onpropertychange', handlePropertyChange);\n  } else {\n    activeElement.addEventListener('propertychange', handlePropertyChange, false);\n  }\n}\n\n/**\n * (For IE <=11) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n\n  // delete restores the original property definition\n  delete activeElement.value;\n\n  if (activeElement.detachEvent) {\n    activeElement.detachEvent('onpropertychange', handlePropertyChange);\n  } else {\n    activeElement.removeEventListener('propertychange', handlePropertyChange, false);\n  }\n\n  activeElement = null;\n  activeElementInst = null;\n  activeElementValue = null;\n  activeElementValueProp = null;\n}\n\n/**\n * (For IE <=11) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n  var value = nativeEvent.srcElement.value;\n  if (value === activeElementValue) {\n    return;\n  }\n  activeElementValue = value;\n\n  manualDispatchChangeEvent(nativeEvent);\n}\n\n/**\n * If a `change` event should be fired, returns the target's ID.\n */\nfunction getTargetInstForInputEvent(topLevelType, targetInst) {\n  if (topLevelType === topLevelTypes.topInput) {\n    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\n    // what we want so fall through here and trigger an abstract event\n    return targetInst;\n  }\n}\n\nfunction handleEventsForInputEventIE(topLevelType, target, targetInst) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // In IE8, we can capture almost all .value changes by adding a\n    // propertychange handler and looking for events with propertyName\n    // equal to 'value'\n    // In IE9-11, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(target, targetInst);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForValueChange();\n  }\n}\n\n// For IE8 and IE9.\nfunction getTargetInstForInputEventIE(topLevelType, targetInst) {\n  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    if (activeElement && activeElement.value !== activeElementValue) {\n      activeElementValue = activeElement.value;\n      return activeElementInst;\n    }\n  }\n}\n\n/**\n * SECTION: handle `click` event\n */\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\n}\n\nfunction getTargetInstForClickEvent(topLevelType, targetInst) {\n  if (topLevelType === topLevelTypes.topClick) {\n    return targetInst;\n  }\n}\n\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\nvar ChangeEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\n    var getTargetInstFunc, handleEventFunc;\n    if (shouldUseChangeEvent(targetNode)) {\n      if (doesChangeEventBubble) {\n        getTargetInstFunc = getTargetInstForChangeEvent;\n      } else {\n        handleEventFunc = handleEventsForChangeEventIE8;\n      }\n    } else if (isTextInputElement(targetNode)) {\n      if (isInputEventSupported) {\n        getTargetInstFunc = getTargetInstForInputEvent;\n      } else {\n        getTargetInstFunc = getTargetInstForInputEventIE;\n        handleEventFunc = handleEventsForInputEventIE;\n      }\n    } else if (shouldUseClickEvent(targetNode)) {\n      getTargetInstFunc = getTargetInstForClickEvent;\n    }\n\n    if (getTargetInstFunc) {\n      var inst = getTargetInstFunc(topLevelType, targetInst);\n      if (inst) {\n        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);\n        event.type = 'change';\n        EventPropagators.accumulateTwoPhaseDispatches(event);\n        return event;\n      }\n    }\n\n    if (handleEventFunc) {\n      handleEventFunc(topLevelType, targetNode, targetInst);\n    }\n  }\n\n};\n\nmodule.exports = ChangeEventPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ChangeEventPlugin.js\n ** module id = 114\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Danger\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar createNodesFromMarkup = require('fbjs/lib/createNodesFromMarkup');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\n\nvar Danger = {\n\n  /**\n   * Replaces a node with a string of markup at its current position within its\n   * parent. The markup must render into a single root node.\n   *\n   * @param {DOMElement} oldChild Child node to replace.\n   * @param {string} markup Markup to render in place of the child node.\n   * @internal\n   */\n  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {\n    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;\n    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;\n    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;\n\n    if (typeof markup === 'string') {\n      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];\n      oldChild.parentNode.replaceChild(newChild, oldChild);\n    } else {\n      DOMLazyTree.replaceChildWithTree(oldChild, markup);\n    }\n  }\n\n};\n\nmodule.exports = Danger;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/Danger.js\n ** module id = 115\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DefaultEventPluginOrder\n */\n\n'use strict';\n\nvar keyOf = require('fbjs/lib/keyOf');\n\n/**\n * Module that is injectable into `EventPluginHub`, that specifies a\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n * plugins, without having to package every one of them. This is better than\n * having plugins be ordered in the same order that they are injected because\n * that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\nvar DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];\n\nmodule.exports = DefaultEventPluginOrder;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DefaultEventPluginOrder.js\n ** module id = 116\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EnterLeaveEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPropagators = require('./EventPropagators');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: keyOf({ onMouseEnter: null }),\n    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n  },\n  mouseLeave: {\n    registrationName: keyOf({ onMouseLeave: null }),\n    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n  }\n};\n\nvar EnterLeaveEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   */\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n\n    var win;\n    if (nativeEventTarget.window === nativeEventTarget) {\n      // `nativeEventTarget` is probably a window object.\n      win = nativeEventTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = nativeEventTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    var from;\n    var to;\n    if (topLevelType === topLevelTypes.topMouseOut) {\n      from = targetInst;\n      var related = nativeEvent.relatedTarget || nativeEvent.toElement;\n      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;\n    } else {\n      // Moving to a node from outside the window.\n      from = null;\n      to = targetInst;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);\n    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);\n\n    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);\n    leave.type = 'mouseleave';\n    leave.target = fromNode;\n    leave.relatedTarget = toNode;\n\n    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);\n    enter.type = 'mouseenter';\n    enter.target = toNode;\n    enter.relatedTarget = fromNode;\n\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);\n\n    return [leave, enter];\n  }\n\n};\n\nmodule.exports = EnterLeaveEventPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EnterLeaveEventPlugin.js\n ** module id = 117\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FallbackCompositionState\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\n\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * This helper class stores information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n * @param {DOMEventTarget} root\n */\nfunction FallbackCompositionState(root) {\n  this._root = root;\n  this._startText = this.getText();\n  this._fallbackText = null;\n}\n\n_assign(FallbackCompositionState.prototype, {\n  destructor: function () {\n    this._root = null;\n    this._startText = null;\n    this._fallbackText = null;\n  },\n\n  /**\n   * Get current text of input.\n   *\n   * @return {string}\n   */\n  getText: function () {\n    if ('value' in this._root) {\n      return this._root.value;\n    }\n    return this._root[getTextContentAccessor()];\n  },\n\n  /**\n   * Determine the differing substring between the initially stored\n   * text content and the current content.\n   *\n   * @return {string}\n   */\n  getData: function () {\n    if (this._fallbackText) {\n      return this._fallbackText;\n    }\n\n    var start;\n    var startValue = this._startText;\n    var startLength = startValue.length;\n    var end;\n    var endValue = this.getText();\n    var endLength = endValue.length;\n\n    for (start = 0; start < startLength; start++) {\n      if (startValue[start] !== endValue[start]) {\n        break;\n      }\n    }\n\n    var minEnd = startLength - start;\n    for (end = 1; end <= minEnd; end++) {\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\n        break;\n      }\n    }\n\n    var sliceTail = end > 1 ? 1 - end : undefined;\n    this._fallbackText = endValue.slice(start, sliceTail);\n    return this._fallbackText;\n  }\n});\n\nPooledClass.addPoolingTo(FallbackCompositionState);\n\nmodule.exports = FallbackCompositionState;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/FallbackCompositionState.js\n ** module id = 118\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule HTMLDOMPropertyConfig\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\n\nvar MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\nvar HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\nvar HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;\nvar HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\nvar HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;\n\nvar HTMLDOMPropertyConfig = {\n  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),\n  Properties: {\n    /**\n     * Standard Properties\n     */\n    accept: 0,\n    acceptCharset: 0,\n    accessKey: 0,\n    action: 0,\n    allowFullScreen: HAS_BOOLEAN_VALUE,\n    allowTransparency: 0,\n    alt: 0,\n    // specifies target context for links with `preload` type\n    as: 0,\n    async: HAS_BOOLEAN_VALUE,\n    autoComplete: 0,\n    // autoFocus is polyfilled/normalized by AutoFocusUtils\n    // autoFocus: HAS_BOOLEAN_VALUE,\n    autoPlay: HAS_BOOLEAN_VALUE,\n    capture: HAS_BOOLEAN_VALUE,\n    cellPadding: 0,\n    cellSpacing: 0,\n    charSet: 0,\n    challenge: 0,\n    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    cite: 0,\n    classID: 0,\n    className: 0,\n    cols: HAS_POSITIVE_NUMERIC_VALUE,\n    colSpan: 0,\n    content: 0,\n    contentEditable: 0,\n    contextMenu: 0,\n    controls: HAS_BOOLEAN_VALUE,\n    coords: 0,\n    crossOrigin: 0,\n    data: 0, // For `<object />` acts as `src`.\n    dateTime: 0,\n    'default': HAS_BOOLEAN_VALUE,\n    defer: HAS_BOOLEAN_VALUE,\n    dir: 0,\n    disabled: HAS_BOOLEAN_VALUE,\n    download: HAS_OVERLOADED_BOOLEAN_VALUE,\n    draggable: 0,\n    encType: 0,\n    form: 0,\n    formAction: 0,\n    formEncType: 0,\n    formMethod: 0,\n    formNoValidate: HAS_BOOLEAN_VALUE,\n    formTarget: 0,\n    frameBorder: 0,\n    headers: 0,\n    height: 0,\n    hidden: HAS_BOOLEAN_VALUE,\n    high: 0,\n    href: 0,\n    hrefLang: 0,\n    htmlFor: 0,\n    httpEquiv: 0,\n    icon: 0,\n    id: 0,\n    inputMode: 0,\n    integrity: 0,\n    is: 0,\n    keyParams: 0,\n    keyType: 0,\n    kind: 0,\n    label: 0,\n    lang: 0,\n    list: 0,\n    loop: HAS_BOOLEAN_VALUE,\n    low: 0,\n    manifest: 0,\n    marginHeight: 0,\n    marginWidth: 0,\n    max: 0,\n    maxLength: 0,\n    media: 0,\n    mediaGroup: 0,\n    method: 0,\n    min: 0,\n    minLength: 0,\n    // Caution; `option.selected` is not updated if `select.multiple` is\n    // disabled with `removeAttribute`.\n    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    name: 0,\n    nonce: 0,\n    noValidate: HAS_BOOLEAN_VALUE,\n    open: HAS_BOOLEAN_VALUE,\n    optimum: 0,\n    pattern: 0,\n    placeholder: 0,\n    playsInline: HAS_BOOLEAN_VALUE,\n    poster: 0,\n    preload: 0,\n    profile: 0,\n    radioGroup: 0,\n    readOnly: HAS_BOOLEAN_VALUE,\n    referrerPolicy: 0,\n    rel: 0,\n    required: HAS_BOOLEAN_VALUE,\n    reversed: HAS_BOOLEAN_VALUE,\n    role: 0,\n    rows: HAS_POSITIVE_NUMERIC_VALUE,\n    rowSpan: HAS_NUMERIC_VALUE,\n    sandbox: 0,\n    scope: 0,\n    scoped: HAS_BOOLEAN_VALUE,\n    scrolling: 0,\n    seamless: HAS_BOOLEAN_VALUE,\n    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    shape: 0,\n    size: HAS_POSITIVE_NUMERIC_VALUE,\n    sizes: 0,\n    span: HAS_POSITIVE_NUMERIC_VALUE,\n    spellCheck: 0,\n    src: 0,\n    srcDoc: 0,\n    srcLang: 0,\n    srcSet: 0,\n    start: HAS_NUMERIC_VALUE,\n    step: 0,\n    style: 0,\n    summary: 0,\n    tabIndex: 0,\n    target: 0,\n    title: 0,\n    // Setting .type throws on non-<input> tags\n    type: 0,\n    useMap: 0,\n    value: 0,\n    width: 0,\n    wmode: 0,\n    wrap: 0,\n\n    /**\n     * RDFa Properties\n     */\n    about: 0,\n    datatype: 0,\n    inlist: 0,\n    prefix: 0,\n    // property is also supported for OpenGraph in meta tags.\n    property: 0,\n    resource: 0,\n    'typeof': 0,\n    vocab: 0,\n\n    /**\n     * Non-standard Properties\n     */\n    // autoCapitalize and autoCorrect are supported in Mobile Safari for\n    // keyboard hints.\n    autoCapitalize: 0,\n    autoCorrect: 0,\n    // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n    autoSave: 0,\n    // color is for Safari mask-icon link\n    color: 0,\n    // itemProp, itemScope, itemType are for\n    // Microdata support. See http://schema.org/docs/gs.html\n    itemProp: 0,\n    itemScope: HAS_BOOLEAN_VALUE,\n    itemType: 0,\n    // itemID and itemRef are for Microdata support as well but\n    // only specified in the WHATWG spec document. See\n    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n    itemID: 0,\n    itemRef: 0,\n    // results show looking glass icon and recent searches on input\n    // search fields in WebKit/Blink\n    results: 0,\n    // IE-only attribute that specifies security restrictions on an iframe\n    // as an alternative to the sandbox attribute on IE<10\n    security: 0,\n    // IE-only attribute that controls focus behavior\n    unselectable: 0\n  },\n  DOMAttributeNames: {\n    acceptCharset: 'accept-charset',\n    className: 'class',\n    htmlFor: 'for',\n    httpEquiv: 'http-equiv'\n  },\n  DOMPropertyNames: {}\n};\n\nmodule.exports = HTMLDOMPropertyConfig;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/HTMLDOMPropertyConfig.js\n ** module id = 119\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule React\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactChildren = require('./ReactChildren');\nvar ReactComponent = require('./ReactComponent');\nvar ReactPureComponent = require('./ReactPureComponent');\nvar ReactClass = require('./ReactClass');\nvar ReactDOMFactories = require('./ReactDOMFactories');\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypes = require('./ReactPropTypes');\nvar ReactVersion = require('./ReactVersion');\n\nvar onlyChild = require('./onlyChild');\nvar warning = require('fbjs/lib/warning');\n\nvar createElement = ReactElement.createElement;\nvar createFactory = ReactElement.createFactory;\nvar cloneElement = ReactElement.cloneElement;\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactElementValidator = require('./ReactElementValidator');\n  createElement = ReactElementValidator.createElement;\n  createFactory = ReactElementValidator.createFactory;\n  cloneElement = ReactElementValidator.cloneElement;\n}\n\nvar __spread = _assign;\n\nif (process.env.NODE_ENV !== 'production') {\n  var warned = false;\n  __spread = function () {\n    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;\n    warned = true;\n    return _assign.apply(null, arguments);\n  };\n}\n\nvar React = {\n\n  // Modern\n\n  Children: {\n    map: ReactChildren.map,\n    forEach: ReactChildren.forEach,\n    count: ReactChildren.count,\n    toArray: ReactChildren.toArray,\n    only: onlyChild\n  },\n\n  Component: ReactComponent,\n  PureComponent: ReactPureComponent,\n\n  createElement: createElement,\n  cloneElement: cloneElement,\n  isValidElement: ReactElement.isValidElement,\n\n  // Classic\n\n  PropTypes: ReactPropTypes,\n  createClass: ReactClass.createClass,\n  createFactory: createFactory,\n  createMixin: function (mixin) {\n    // Currently a noop. Will be used to validate and trace mixins.\n    return mixin;\n  },\n\n  // This looks DOM specific but these are actually isomorphic helpers\n  // since they are just generating DOM strings.\n  DOM: ReactDOMFactories,\n\n  version: ReactVersion,\n\n  // Deprecated hook for JSX spread, don't use this for anything.\n  __spread: __spread\n};\n\nmodule.exports = React;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/React.js\n ** module id = 120\n ** module chunks = 0\n **/","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildReconciler\n */\n\n'use strict';\n\nvar ReactReconciler = require('./ReactReconciler');\n\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar traverseAllChildren = require('./traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('./ReactComponentTreeHook');\n}\n\nfunction instantiateChild(childInstances, child, name, selfDebugID) {\n  // We found a component instance.\n  var keyUnique = childInstances[name] === undefined;\n  if (process.env.NODE_ENV !== 'production') {\n    if (!ReactComponentTreeHook) {\n      ReactComponentTreeHook = require('./ReactComponentTreeHook');\n    }\n    if (!keyUnique) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n    }\n  }\n  if (child != null && keyUnique) {\n    childInstances[name] = instantiateReactComponent(child, true);\n  }\n}\n\n/**\n * ReactChildReconciler provides helpers for initializing or updating a set of\n * children. Its output is suitable for passing it onto ReactMultiChild which\n * does diffed reordering and insertion.\n */\nvar ReactChildReconciler = {\n  /**\n   * Generates a \"mount image\" for each of the supplied children. In the case\n   * of `ReactDOMComponent`, a mount image is a string of markup.\n   *\n   * @param {?object} nestedChildNodes Nested child maps.\n   * @return {?object} A set of child instances.\n   * @internal\n   */\n  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots\n  ) {\n    if (nestedChildNodes == null) {\n      return null;\n    }\n    var childInstances = {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {\n        return instantiateChild(childInsts, child, name, selfDebugID);\n      }, childInstances);\n    } else {\n      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);\n    }\n    return childInstances;\n  },\n\n  /**\n   * Updates the rendered children and returns a new set of children.\n   *\n   * @param {?object} prevChildren Previously initialized set of children.\n   * @param {?object} nextChildren Flat child element maps.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @return {?object} A new set of child instances.\n   * @internal\n   */\n  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots\n  ) {\n    // We currently don't have a way to track moves here but if we use iterators\n    // instead of for..in we can zip the iterators and check if an item has\n    // moved.\n    // TODO: If nothing has changed, return the prevChildren object so that we\n    // can quickly bailout if nothing has changed.\n    if (!nextChildren && !prevChildren) {\n      return;\n    }\n    var name;\n    var prevChild;\n    for (name in nextChildren) {\n      if (!nextChildren.hasOwnProperty(name)) {\n        continue;\n      }\n      prevChild = prevChildren && prevChildren[name];\n      var prevElement = prevChild && prevChild._currentElement;\n      var nextElement = nextChildren[name];\n      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {\n        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);\n        nextChildren[name] = prevChild;\n      } else {\n        if (prevChild) {\n          removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n          ReactReconciler.unmountComponent(prevChild, false);\n        }\n        // The child must be instantiated before it's mounted.\n        var nextChildInstance = instantiateReactComponent(nextElement, true);\n        nextChildren[name] = nextChildInstance;\n        // Creating mount image now ensures refs are resolved in right order\n        // (see https://github.com/facebook/react/pull/7101 for explanation).\n        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);\n        mountImages.push(nextChildMountImage);\n      }\n    }\n    // Unmount children that are no longer present.\n    for (name in prevChildren) {\n      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\n        prevChild = prevChildren[name];\n        removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n        ReactReconciler.unmountComponent(prevChild, false);\n      }\n    }\n  },\n\n  /**\n   * Unmounts all rendered children. This should be used to clean up children\n   * when this component is unmounted.\n   *\n   * @param {?object} renderedChildren Previously initialized set of children.\n   * @internal\n   */\n  unmountChildren: function (renderedChildren, safely) {\n    for (var name in renderedChildren) {\n      if (renderedChildren.hasOwnProperty(name)) {\n        var renderedChild = renderedChildren[name];\n        ReactReconciler.unmountComponent(renderedChild, safely);\n      }\n    }\n  }\n\n};\n\nmodule.exports = ReactChildReconciler;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactChildReconciler.js\n ** module id = 121\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentBrowserEnvironment\n */\n\n'use strict';\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\n\n/**\n * Abstracts away all functionality of the reconciler that requires knowledge of\n * the browser context. TODO: These callers should be refactored to avoid the\n * need for this injection.\n */\nvar ReactComponentBrowserEnvironment = {\n\n  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n\n  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup\n\n};\n\nmodule.exports = ReactComponentBrowserEnvironment;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactComponentBrowserEnvironment.js\n ** module id = 122\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCompositeComponent\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactElement = require('./ReactElement');\nvar ReactErrorUtils = require('./ReactErrorUtils');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactNodeTypes = require('./ReactNodeTypes');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\nvar ReactReconciler = require('./ReactReconciler');\n\nvar checkReactTypeSpec = require('./checkReactTypeSpec');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\n\nvar CompositeTypes = {\n  ImpureClass: 0,\n  PureClass: 1,\n  StatelessFunctional: 2\n};\n\nfunction StatelessComponent(Component) {}\nStatelessComponent.prototype.render = function () {\n  var Component = ReactInstanceMap.get(this)._currentElement.type;\n  var element = Component(this.props, this.context, this.updater);\n  warnIfInvalidElement(Component, element);\n  return element;\n};\n\nfunction warnIfInvalidElement(Component, element) {\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;\n  }\n}\n\nfunction shouldConstruct(Component) {\n  return !!(Component.prototype && Component.prototype.isReactComponent);\n}\n\nfunction isPureComponent(Component) {\n  return !!(Component.prototype && Component.prototype.isPureReactComponent);\n}\n\n// Separated into a function to contain deoptimizations caused by try/finally.\nfunction measureLifeCyclePerf(fn, debugID, timerType) {\n  if (debugID === 0) {\n    // Top-level wrappers (see ReactMount) and empty components (see\n    // ReactDOMEmptyComponent) are invisible to hooks and devtools.\n    // Both are implementation details that should go away in the future.\n    return fn();\n  }\n\n  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);\n  try {\n    return fn();\n  } finally {\n    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);\n  }\n}\n\n/**\n * ------------------ The Life-Cycle of a Composite Component ------------------\n *\n * - constructor: Initialization of state. The instance is now retained.\n *   - componentWillMount\n *   - render\n *   - [children's constructors]\n *     - [children's componentWillMount and render]\n *     - [children's componentDidMount]\n *     - componentDidMount\n *\n *       Update Phases:\n *       - componentWillReceiveProps (only called if parent updated)\n *       - shouldComponentUpdate\n *         - componentWillUpdate\n *           - render\n *           - [children's constructors or receive props phases]\n *         - componentDidUpdate\n *\n *     - componentWillUnmount\n *     - [children's componentWillUnmount]\n *   - [children destroyed]\n * - (destroyed): The instance is now blank, released by React and ready for GC.\n *\n * -----------------------------------------------------------------------------\n */\n\n/**\n * An incrementing ID assigned to each component when it is mounted. This is\n * used to enforce the order in which `ReactUpdates` updates dirty components.\n *\n * @private\n */\nvar nextMountID = 1;\n\n/**\n * @lends {ReactCompositeComponent.prototype}\n */\nvar ReactCompositeComponentMixin = {\n\n  /**\n   * Base constructor for all composite component.\n   *\n   * @param {ReactElement} element\n   * @final\n   * @internal\n   */\n  construct: function (element) {\n    this._currentElement = element;\n    this._rootNodeID = 0;\n    this._compositeType = null;\n    this._instance = null;\n    this._hostParent = null;\n    this._hostContainerInfo = null;\n\n    // See ReactUpdateQueue\n    this._updateBatchNumber = null;\n    this._pendingElement = null;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    this._renderedNodeType = null;\n    this._renderedComponent = null;\n    this._context = null;\n    this._mountOrder = 0;\n    this._topLevelWrapper = null;\n\n    // See ReactUpdates and ReactUpdateQueue.\n    this._pendingCallbacks = null;\n\n    // ComponentWillUnmount shall only be called once\n    this._calledComponentWillUnmount = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._warnedAboutRefsInRender = false;\n    }\n  },\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?object} hostParent\n   * @param {?object} hostContainerInfo\n   * @param {?object} context\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    var _this = this;\n\n    this._context = context;\n    this._mountOrder = nextMountID++;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var publicProps = this._currentElement.props;\n    var publicContext = this._processContext(context);\n\n    var Component = this._currentElement.type;\n\n    var updateQueue = transaction.getUpdateQueue();\n\n    // Initialize the public class\n    var doConstruct = shouldConstruct(Component);\n    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);\n    var renderedElement;\n\n    // Support functional components\n    if (!doConstruct && (inst == null || inst.render == null)) {\n      renderedElement = inst;\n      warnIfInvalidElement(Component, renderedElement);\n      !(inst === null || inst === false || ReactElement.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;\n      inst = new StatelessComponent(Component);\n      this._compositeType = CompositeTypes.StatelessFunctional;\n    } else {\n      if (isPureComponent(Component)) {\n        this._compositeType = CompositeTypes.PureClass;\n      } else {\n        this._compositeType = CompositeTypes.ImpureClass;\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This will throw later in _renderValidatedComponent, but add an early\n      // warning now to help debugging\n      if (inst.render == null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;\n      }\n\n      var propsMutated = inst.props !== publicProps;\n      var componentName = Component.displayName || Component.name || 'Component';\n\n      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\\'s constructor was passed.', componentName, componentName) : void 0;\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    inst.props = publicProps;\n    inst.context = publicContext;\n    inst.refs = emptyObject;\n    inst.updater = updateQueue;\n\n    this._instance = inst;\n\n    // Store a reference from the instance back to the internal representation\n    ReactInstanceMap.set(inst, this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Since plain JS classes are defined without any special initialization\n      // logic, we can not catch common errors early. Therefore, we have to\n      // catch them here, at initialization time, instead.\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;\n    }\n\n    var initialState = inst.state;\n    if (initialState === undefined) {\n      inst.state = initialState = null;\n    }\n    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    var markup;\n    if (inst.unstable_handleError) {\n      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    } else {\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    }\n\n    if (inst.componentDidMount) {\n      if (process.env.NODE_ENV !== 'production') {\n        transaction.getReactMountReady().enqueue(function () {\n          measureLifeCyclePerf(function () {\n            return inst.componentDidMount();\n          }, _this._debugID, 'componentDidMount');\n        });\n      } else {\n        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n      }\n    }\n\n    return markup;\n  },\n\n  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {\n    if (process.env.NODE_ENV !== 'production') {\n      ReactCurrentOwner.current = this;\n      try {\n        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n    }\n  },\n\n  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {\n    var Component = this._currentElement.type;\n\n    if (doConstruct) {\n      if (process.env.NODE_ENV !== 'production') {\n        return measureLifeCyclePerf(function () {\n          return new Component(publicProps, publicContext, updateQueue);\n        }, this._debugID, 'ctor');\n      } else {\n        return new Component(publicProps, publicContext, updateQueue);\n      }\n    }\n\n    // This can still be an instance in case of factory components\n    // but we'll count this as time spent rendering as the more common case.\n    if (process.env.NODE_ENV !== 'production') {\n      return measureLifeCyclePerf(function () {\n        return Component(publicProps, publicContext, updateQueue);\n      }, this._debugID, 'render');\n    } else {\n      return Component(publicProps, publicContext, updateQueue);\n    }\n  },\n\n  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n    var markup;\n    var checkpoint = transaction.checkpoint();\n    try {\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    } catch (e) {\n      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint\n      transaction.rollback(checkpoint);\n      this._instance.unstable_handleError(e);\n      if (this._pendingStateQueue) {\n        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);\n      }\n      checkpoint = transaction.checkpoint();\n\n      this._renderedComponent.unmountComponent(true);\n      transaction.rollback(checkpoint);\n\n      // Try again - we've informed the component about the error, so they can render an error message this time.\n      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    }\n    return markup;\n  },\n\n  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n    var inst = this._instance;\n\n    var debugID = 0;\n    if (process.env.NODE_ENV !== 'production') {\n      debugID = this._debugID;\n    }\n\n    if (inst.componentWillMount) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillMount();\n        }, debugID, 'componentWillMount');\n      } else {\n        inst.componentWillMount();\n      }\n      // When mounting, calls to `setState` by `componentWillMount` will set\n      // `this._pendingStateQueue` without triggering a re-render.\n      if (this._pendingStateQueue) {\n        inst.state = this._processPendingState(inst.props, inst.context);\n      }\n    }\n\n    // If not a stateless component, we now render\n    if (renderedElement === undefined) {\n      renderedElement = this._renderValidatedComponent();\n    }\n\n    var nodeType = ReactNodeTypes.getType(renderedElement);\n    this._renderedNodeType = nodeType;\n    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n    );\n    this._renderedComponent = child;\n\n    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (debugID !== 0) {\n        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n      }\n    }\n\n    return markup;\n  },\n\n  getHostNode: function () {\n    return ReactReconciler.getHostNode(this._renderedComponent);\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function (safely) {\n    if (!this._renderedComponent) {\n      return;\n    }\n\n    var inst = this._instance;\n\n    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {\n      inst._calledComponentWillUnmount = true;\n\n      if (safely) {\n        var name = this.getName() + '.componentWillUnmount()';\n        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          measureLifeCyclePerf(function () {\n            return inst.componentWillUnmount();\n          }, this._debugID, 'componentWillUnmount');\n        } else {\n          inst.componentWillUnmount();\n        }\n      }\n    }\n\n    if (this._renderedComponent) {\n      ReactReconciler.unmountComponent(this._renderedComponent, safely);\n      this._renderedNodeType = null;\n      this._renderedComponent = null;\n      this._instance = null;\n    }\n\n    // Reset pending fields\n    // Even if this component is scheduled for another update in ReactUpdates,\n    // it would still be ignored because these fields are reset.\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._pendingCallbacks = null;\n    this._pendingElement = null;\n\n    // These fields do not really need to be reset since this object is no\n    // longer accessible.\n    this._context = null;\n    this._rootNodeID = 0;\n    this._topLevelWrapper = null;\n\n    // Delete the reference from the instance to this internal representation\n    // which allow the internals to be properly cleaned up even if the user\n    // leaks a reference to the public instance.\n    ReactInstanceMap.remove(inst);\n\n    // Some existing components rely on inst.props even after they've been\n    // destroyed (in event handlers).\n    // TODO: inst.props = null;\n    // TODO: inst.state = null;\n    // TODO: inst.context = null;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _maskContext: function (context) {\n    var Component = this._currentElement.type;\n    var contextTypes = Component.contextTypes;\n    if (!contextTypes) {\n      return emptyObject;\n    }\n    var maskedContext = {};\n    for (var contextName in contextTypes) {\n      maskedContext[contextName] = context[contextName];\n    }\n    return maskedContext;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`, and asserts that they are valid.\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _processContext: function (context) {\n    var maskedContext = this._maskContext(context);\n    if (process.env.NODE_ENV !== 'production') {\n      var Component = this._currentElement.type;\n      if (Component.contextTypes) {\n        this._checkContextTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);\n      }\n    }\n    return maskedContext;\n  },\n\n  /**\n   * @param {object} currentContext\n   * @return {object}\n   * @private\n   */\n  _processChildContext: function (currentContext) {\n    var Component = this._currentElement.type;\n    var inst = this._instance;\n    var childContext;\n\n    if (inst.getChildContext) {\n      if (process.env.NODE_ENV !== 'production') {\n        ReactInstrumentation.debugTool.onBeginProcessingChildContext();\n        try {\n          childContext = inst.getChildContext();\n        } finally {\n          ReactInstrumentation.debugTool.onEndProcessingChildContext();\n        }\n      } else {\n        childContext = inst.getChildContext();\n      }\n    }\n\n    if (childContext) {\n      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;\n      if (process.env.NODE_ENV !== 'production') {\n        this._checkContextTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);\n      }\n      for (var name in childContext) {\n        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;\n      }\n      return _assign({}, currentContext, childContext);\n    }\n    return currentContext;\n  },\n\n  /**\n   * Assert that the context types are valid\n   *\n   * @param {object} typeSpecs Map of context field to a ReactPropType\n   * @param {object} values Runtime values that need to be type-checked\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @private\n   */\n  _checkContextTypes: function (typeSpecs, values, location) {\n    checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);\n  },\n\n  receiveComponent: function (nextElement, transaction, nextContext) {\n    var prevElement = this._currentElement;\n    var prevContext = this._context;\n\n    this._pendingElement = null;\n\n    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);\n  },\n\n  /**\n   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n   * is set, update the component.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (transaction) {\n    if (this._pendingElement != null) {\n      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);\n    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);\n    } else {\n      this._updateBatchNumber = null;\n    }\n  },\n\n  /**\n   * Perform an update to a mounted component. The componentWillReceiveProps and\n   * shouldComponentUpdate methods are called, then (assuming the update isn't\n   * skipped) the remaining update lifecycle methods are called and the DOM\n   * representation is updated.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevParentElement\n   * @param {ReactElement} nextParentElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {\n    var inst = this._instance;\n    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    var willReceive = false;\n    var nextContext;\n\n    // Determine if the context has changed or not\n    if (this._context === nextUnmaskedContext) {\n      nextContext = inst.context;\n    } else {\n      nextContext = this._processContext(nextUnmaskedContext);\n      willReceive = true;\n    }\n\n    var prevProps = prevParentElement.props;\n    var nextProps = nextParentElement.props;\n\n    // Not a simple state update but a props update\n    if (prevParentElement !== nextParentElement) {\n      willReceive = true;\n    }\n\n    // An update here will schedule an update but immediately set\n    // _pendingStateQueue which will ensure that any state updates gets\n    // immediately reconciled instead of waiting for the next batch.\n    if (willReceive && inst.componentWillReceiveProps) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillReceiveProps(nextProps, nextContext);\n        }, this._debugID, 'componentWillReceiveProps');\n      } else {\n        inst.componentWillReceiveProps(nextProps, nextContext);\n      }\n    }\n\n    var nextState = this._processPendingState(nextProps, nextContext);\n    var shouldUpdate = true;\n\n    if (!this._pendingForceUpdate) {\n      if (inst.shouldComponentUpdate) {\n        if (process.env.NODE_ENV !== 'production') {\n          shouldUpdate = measureLifeCyclePerf(function () {\n            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n          }, this._debugID, 'shouldComponentUpdate');\n        } else {\n          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n        }\n      } else {\n        if (this._compositeType === CompositeTypes.PureClass) {\n          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);\n        }\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;\n    }\n\n    this._updateBatchNumber = null;\n    if (shouldUpdate) {\n      this._pendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this._currentElement = nextParentElement;\n      this._context = nextUnmaskedContext;\n      inst.props = nextProps;\n      inst.state = nextState;\n      inst.context = nextContext;\n    }\n  },\n\n  _processPendingState: function (props, context) {\n    var inst = this._instance;\n    var queue = this._pendingStateQueue;\n    var replace = this._pendingReplaceState;\n    this._pendingReplaceState = false;\n    this._pendingStateQueue = null;\n\n    if (!queue) {\n      return inst.state;\n    }\n\n    if (replace && queue.length === 1) {\n      return queue[0];\n    }\n\n    var nextState = _assign({}, replace ? queue[0] : inst.state);\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n      var partial = queue[i];\n      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\n    }\n\n    return nextState;\n  },\n\n  /**\n   * Merges new props and state, notifies delegate methods of update and\n   * performs update.\n   *\n   * @param {ReactElement} nextElement Next element\n   * @param {object} nextProps Next public object to set as properties.\n   * @param {?object} nextState Next object to set as state.\n   * @param {?object} nextContext Next public object to set as context.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?object} unmaskedContext\n   * @private\n   */\n  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {\n    var _this2 = this;\n\n    var inst = this._instance;\n\n    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);\n    var prevProps;\n    var prevState;\n    var prevContext;\n    if (hasComponentDidUpdate) {\n      prevProps = inst.props;\n      prevState = inst.state;\n      prevContext = inst.context;\n    }\n\n    if (inst.componentWillUpdate) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillUpdate(nextProps, nextState, nextContext);\n        }, this._debugID, 'componentWillUpdate');\n      } else {\n        inst.componentWillUpdate(nextProps, nextState, nextContext);\n      }\n    }\n\n    this._currentElement = nextElement;\n    this._context = unmaskedContext;\n    inst.props = nextProps;\n    inst.state = nextState;\n    inst.context = nextContext;\n\n    this._updateRenderedComponent(transaction, unmaskedContext);\n\n    if (hasComponentDidUpdate) {\n      if (process.env.NODE_ENV !== 'production') {\n        transaction.getReactMountReady().enqueue(function () {\n          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');\n        });\n      } else {\n        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);\n      }\n    }\n  },\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponent: function (transaction, context) {\n    var prevComponentInstance = this._renderedComponent;\n    var prevRenderedElement = prevComponentInstance._currentElement;\n    var nextRenderedElement = this._renderValidatedComponent();\n\n    var debugID = 0;\n    if (process.env.NODE_ENV !== 'production') {\n      debugID = this._debugID;\n    }\n\n    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));\n    } else {\n      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);\n      ReactReconciler.unmountComponent(prevComponentInstance, false);\n\n      var nodeType = ReactNodeTypes.getType(nextRenderedElement);\n      this._renderedNodeType = nodeType;\n      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n      );\n      this._renderedComponent = child;\n\n      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (debugID !== 0) {\n          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n        }\n      }\n\n      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);\n    }\n  },\n\n  /**\n   * Overridden in shallow rendering.\n   *\n   * @protected\n   */\n  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {\n    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);\n  },\n\n  /**\n   * @protected\n   */\n  _renderValidatedComponentWithoutOwnerOrContext: function () {\n    var inst = this._instance;\n    var renderedComponent;\n\n    if (process.env.NODE_ENV !== 'production') {\n      renderedComponent = measureLifeCyclePerf(function () {\n        return inst.render();\n      }, this._debugID, 'render');\n    } else {\n      renderedComponent = inst.render();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // We allow auto-mocks to proceed as if they're returning null.\n      if (renderedComponent === undefined && inst.render._isMockFunction) {\n        // This is probably bad practice. Consider warning here and\n        // deprecating this convenience.\n        renderedComponent = null;\n      }\n    }\n\n    return renderedComponent;\n  },\n\n  /**\n   * @private\n   */\n  _renderValidatedComponent: function () {\n    var renderedComponent;\n    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {\n      ReactCurrentOwner.current = this;\n      try {\n        renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();\n    }\n    !(\n    // TODO: An `isValidNode` function would probably be more appropriate\n    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    return renderedComponent;\n  },\n\n  /**\n   * Lazily allocates the refs object and stores `component` as `ref`.\n   *\n   * @param {string} ref Reference name.\n   * @param {component} component Component to store as `ref`.\n   * @final\n   * @private\n   */\n  attachRef: function (ref, component) {\n    var inst = this.getPublicInstance();\n    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;\n    var publicComponentInstance = component.getPublicInstance();\n    if (process.env.NODE_ENV !== 'production') {\n      var componentName = component && component.getName ? component.getName() : 'a component';\n      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref \"%s\" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;\n    }\n    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;\n    refs[ref] = publicComponentInstance;\n  },\n\n  /**\n   * Detaches a reference name.\n   *\n   * @param {string} ref Name to dereference.\n   * @final\n   * @private\n   */\n  detachRef: function (ref) {\n    var refs = this.getPublicInstance().refs;\n    delete refs[ref];\n  },\n\n  /**\n   * Get a text description of the component that can be used to identify it\n   * in error messages.\n   * @return {string} The name or null.\n   * @internal\n   */\n  getName: function () {\n    var type = this._currentElement.type;\n    var constructor = this._instance && this._instance.constructor;\n    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;\n  },\n\n  /**\n   * Get the publicly accessible representation of this component - i.e. what\n   * is exposed by refs and returned by render. Can be null for stateless\n   * components.\n   *\n   * @return {ReactComponent} the public component instance.\n   * @internal\n   */\n  getPublicInstance: function () {\n    var inst = this._instance;\n    if (this._compositeType === CompositeTypes.StatelessFunctional) {\n      return null;\n    }\n    return inst;\n  },\n\n  // Stub\n  _instantiateReactComponent: null\n\n};\n\nvar ReactCompositeComponent = {\n\n  Mixin: ReactCompositeComponentMixin\n\n};\n\nmodule.exports = ReactCompositeComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactCompositeComponent.js\n ** module id = 123\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOM\n */\n\n/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/\n\n'use strict';\n\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDefaultInjection = require('./ReactDefaultInjection');\nvar ReactMount = require('./ReactMount');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdates = require('./ReactUpdates');\nvar ReactVersion = require('./ReactVersion');\n\nvar findDOMNode = require('./findDOMNode');\nvar getHostComponentFromComposite = require('./getHostComponentFromComposite');\nvar renderSubtreeIntoContainer = require('./renderSubtreeIntoContainer');\nvar warning = require('fbjs/lib/warning');\n\nReactDefaultInjection.inject();\n\nvar ReactDOM = {\n  findDOMNode: findDOMNode,\n  render: ReactMount.render,\n  unmountComponentAtNode: ReactMount.unmountComponentAtNode,\n  version: ReactVersion,\n\n  /* eslint-disable camelcase */\n  unstable_batchedUpdates: ReactUpdates.batchedUpdates,\n  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer\n};\n\n// Inject the runtime into a devtools global hook regardless of browser.\n// Allows for debugging when the hook is injected on the page.\n/* eslint-enable camelcase */\nif (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({\n    ComponentTree: {\n      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,\n      getNodeFromInstance: function (inst) {\n        // inst is an internal instance (but could be a composite)\n        if (inst._renderedComponent) {\n          inst = getHostComponentFromComposite(inst);\n        }\n        if (inst) {\n          return ReactDOMComponentTree.getNodeFromInstance(inst);\n        } else {\n          return null;\n        }\n      }\n    },\n    Mount: ReactMount,\n    Reconciler: ReactReconciler\n  });\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {\n\n    // First check if devtools is not installed\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n      // If we're in Chrome or Firefox, provide a download link if not installed.\n      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {\n        // Firefox does not have the issue with devtools loaded over file://\n        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;\n        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');\n      }\n    }\n\n    var testFunc = function testFn() {};\n    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;\n\n    // If we're in IE8, check to see if we are in compatibility mode and provide\n    // information on preventing compatibility mode\n    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;\n\n    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />') : void 0;\n\n    var expectedFeatures = [\n    // shims\n    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];\n\n    for (var i = 0; i < expectedFeatures.length; i++) {\n      if (!expectedFeatures[i]) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;\n        break;\n      }\n    }\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactInstrumentation = require('./ReactInstrumentation');\n  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');\n  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');\n\n  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);\n  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);\n}\n\nmodule.exports = ReactDOM;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOM.js\n ** module id = 124\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMButton\n */\n\n'use strict';\n\nvar DisabledInputUtils = require('./DisabledInputUtils');\n\n/**\n * Implements a <button> host component that does not receive mouse events\n * when `disabled` is set.\n */\nvar ReactDOMButton = {\n  getHostProps: DisabledInputUtils.getHostProps\n};\n\nmodule.exports = ReactDOMButton;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMButton.js\n ** module id = 125\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMComponent\n */\n\n/* global hasOwnProperty:true */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar AutoFocusUtils = require('./AutoFocusUtils');\nvar CSSPropertyOperations = require('./CSSPropertyOperations');\nvar DOMLazyTree = require('./DOMLazyTree');\nvar DOMNamespaces = require('./DOMNamespaces');\nvar DOMProperty = require('./DOMProperty');\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\nvar EventConstants = require('./EventConstants');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactDOMButton = require('./ReactDOMButton');\nvar ReactDOMComponentFlags = require('./ReactDOMComponentFlags');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMInput = require('./ReactDOMInput');\nvar ReactDOMOption = require('./ReactDOMOption');\nvar ReactDOMSelect = require('./ReactDOMSelect');\nvar ReactDOMTextarea = require('./ReactDOMTextarea');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactMultiChild = require('./ReactMultiChild');\nvar ReactServerRenderingTransaction = require('./ReactServerRenderingTransaction');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar invariant = require('fbjs/lib/invariant');\nvar isEventSupported = require('./isEventSupported');\nvar keyOf = require('fbjs/lib/keyOf');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\nvar validateDOMNesting = require('./validateDOMNesting');\nvar warning = require('fbjs/lib/warning');\n\nvar Flags = ReactDOMComponentFlags;\nvar deleteListener = EventPluginHub.deleteListener;\nvar getNode = ReactDOMComponentTree.getNodeFromInstance;\nvar listenTo = ReactBrowserEventEmitter.listenTo;\nvar registrationNameModules = EventPluginRegistry.registrationNameModules;\n\n// For quickly matching children type, to test if can be treated as content.\nvar CONTENT_TYPES = { 'string': true, 'number': true };\n\nvar STYLE = keyOf({ style: null });\nvar HTML = keyOf({ __html: null });\nvar RESERVED_PROPS = {\n  children: null,\n  dangerouslySetInnerHTML: null,\n  suppressContentEditableWarning: null\n};\n\n// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).\nvar DOC_FRAGMENT_TYPE = 11;\n\nfunction getDeclarationErrorAddendum(internalInstance) {\n  if (internalInstance) {\n    var owner = internalInstance._currentElement._owner || null;\n    if (owner) {\n      var name = owner.getName();\n      if (name) {\n        return ' This DOM node was rendered by `' + name + '`.';\n      }\n    }\n  }\n  return '';\n}\n\nfunction friendlyStringify(obj) {\n  if (typeof obj === 'object') {\n    if (Array.isArray(obj)) {\n      return '[' + obj.map(friendlyStringify).join(', ') + ']';\n    } else {\n      var pairs = [];\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var keyEscaped = /^[a-z$_][\\w$_]*$/i.test(key) ? key : JSON.stringify(key);\n          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));\n        }\n      }\n      return '{' + pairs.join(', ') + '}';\n    }\n  } else if (typeof obj === 'string') {\n    return JSON.stringify(obj);\n  } else if (typeof obj === 'function') {\n    return '[function object]';\n  }\n  // Differs from JSON.stringify in that undefined because undefined and that\n  // inf and nan don't become null\n  return String(obj);\n}\n\nvar styleMutationWarning = {};\n\nfunction checkAndWarnForMutatedStyle(style1, style2, component) {\n  if (style1 == null || style2 == null) {\n    return;\n  }\n  if (shallowEqual(style1, style2)) {\n    return;\n  }\n\n  var componentName = component._tag;\n  var owner = component._currentElement._owner;\n  var ownerName;\n  if (owner) {\n    ownerName = owner.getName();\n  }\n\n  var hash = ownerName + '|' + componentName;\n\n  if (styleMutationWarning.hasOwnProperty(hash)) {\n    return;\n  }\n\n  styleMutationWarning[hash] = true;\n\n  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;\n}\n\n/**\n * @param {object} component\n * @param {?object} props\n */\nfunction assertValidProps(component, props) {\n  if (!props) {\n    return;\n  }\n  // Note the use of `==` which checks for null or undefined.\n  if (voidElementTags[component._tag]) {\n    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;\n  }\n  if (props.dangerouslySetInnerHTML != null) {\n    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;\n    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;\n  }\n  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \\'em\\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;\n}\n\nfunction enqueuePutListener(inst, registrationName, listener, transaction) {\n  if (transaction instanceof ReactServerRenderingTransaction) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // IE8 has no API for event capturing and the `onScroll` event doesn't\n    // bubble.\n    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\\'t support the `onScroll` event') : void 0;\n  }\n  var containerInfo = inst._hostContainerInfo;\n  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;\n  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;\n  listenTo(registrationName, doc);\n  transaction.getReactMountReady().enqueue(putListener, {\n    inst: inst,\n    registrationName: registrationName,\n    listener: listener\n  });\n}\n\nfunction putListener() {\n  var listenerToPut = this;\n  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);\n}\n\nfunction inputPostMount() {\n  var inst = this;\n  ReactDOMInput.postMountWrapper(inst);\n}\n\nfunction textareaPostMount() {\n  var inst = this;\n  ReactDOMTextarea.postMountWrapper(inst);\n}\n\nfunction optionPostMount() {\n  var inst = this;\n  ReactDOMOption.postMountWrapper(inst);\n}\n\nvar setAndValidateContentChildDev = emptyFunction;\nif (process.env.NODE_ENV !== 'production') {\n  setAndValidateContentChildDev = function (content) {\n    var hasExistingContent = this._contentDebugID != null;\n    var debugID = this._debugID;\n    // This ID represents the inlined child that has no backing instance:\n    var contentDebugID = -debugID;\n\n    if (content == null) {\n      if (hasExistingContent) {\n        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);\n      }\n      this._contentDebugID = null;\n      return;\n    }\n\n    validateDOMNesting(null, String(content), this, this._ancestorInfo);\n    this._contentDebugID = contentDebugID;\n    if (hasExistingContent) {\n      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);\n      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);\n    } else {\n      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);\n      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);\n      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);\n    }\n  };\n}\n\n// There are so many media events, it makes sense to just\n// maintain a list rather than create a `trapBubbledEvent` for each\nvar mediaEvents = {\n  topAbort: 'abort',\n  topCanPlay: 'canplay',\n  topCanPlayThrough: 'canplaythrough',\n  topDurationChange: 'durationchange',\n  topEmptied: 'emptied',\n  topEncrypted: 'encrypted',\n  topEnded: 'ended',\n  topError: 'error',\n  topLoadedData: 'loadeddata',\n  topLoadedMetadata: 'loadedmetadata',\n  topLoadStart: 'loadstart',\n  topPause: 'pause',\n  topPlay: 'play',\n  topPlaying: 'playing',\n  topProgress: 'progress',\n  topRateChange: 'ratechange',\n  topSeeked: 'seeked',\n  topSeeking: 'seeking',\n  topStalled: 'stalled',\n  topSuspend: 'suspend',\n  topTimeUpdate: 'timeupdate',\n  topVolumeChange: 'volumechange',\n  topWaiting: 'waiting'\n};\n\nfunction trapBubbledEventsLocal() {\n  var inst = this;\n  // If a component renders to null or if another component fatals and causes\n  // the state of the tree to be corrupted, `node` here can be null.\n  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;\n  var node = getNode(inst);\n  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;\n\n  switch (inst._tag) {\n    case 'iframe':\n    case 'object':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];\n      break;\n    case 'video':\n    case 'audio':\n\n      inst._wrapperState.listeners = [];\n      // Create listener for each media event\n      for (var event in mediaEvents) {\n        if (mediaEvents.hasOwnProperty(event)) {\n          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));\n        }\n      }\n      break;\n    case 'source':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node)];\n      break;\n    case 'img':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];\n      break;\n    case 'form':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];\n      break;\n    case 'input':\n    case 'select':\n    case 'textarea':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];\n      break;\n  }\n}\n\nfunction postUpdateSelectWrapper() {\n  ReactDOMSelect.postUpdateWrapper(this);\n}\n\n// For HTML, certain tags should omit their close tag. We keep a whitelist for\n// those special-case tags.\n\nvar omittedCloseTags = {\n  'area': true,\n  'base': true,\n  'br': true,\n  'col': true,\n  'embed': true,\n  'hr': true,\n  'img': true,\n  'input': true,\n  'keygen': true,\n  'link': true,\n  'meta': true,\n  'param': true,\n  'source': true,\n  'track': true,\n  'wbr': true\n};\n\n// NOTE: menuitem's close tag should be omitted, but that causes problems.\nvar newlineEatingTags = {\n  'listing': true,\n  'pre': true,\n  'textarea': true\n};\n\n// For HTML, certain tags cannot have children. This has the same purpose as\n// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\nvar voidElementTags = _assign({\n  'menuitem': true\n}, omittedCloseTags);\n\n// We accept any tag to be rendered but since this gets injected into arbitrary\n// HTML, we want to make sure that it's a safe tag.\n// http://www.w3.org/TR/REC-xml/#NT-Name\n\nvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\nvar validatedTagCache = {};\nvar hasOwnProperty = {}.hasOwnProperty;\n\nfunction validateDangerousTag(tag) {\n  if (!hasOwnProperty.call(validatedTagCache, tag)) {\n    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;\n    validatedTagCache[tag] = true;\n  }\n}\n\nfunction isCustomComponent(tagName, props) {\n  return tagName.indexOf('-') >= 0 || props.is != null;\n}\n\nvar globalIdCounter = 1;\n\n/**\n * Creates a new React class that is idempotent and capable of containing other\n * React components. It accepts event listeners and DOM properties that are\n * valid according to `DOMProperty`.\n *\n *  - Event listeners: `onClick`, `onMouseDown`, etc.\n *  - DOM properties: `className`, `name`, `title`, etc.\n *\n * The `style` property functions differently from the DOM API. It accepts an\n * object mapping of style properties to values.\n *\n * @constructor ReactDOMComponent\n * @extends ReactMultiChild\n */\nfunction ReactDOMComponent(element) {\n  var tag = element.type;\n  validateDangerousTag(tag);\n  this._currentElement = element;\n  this._tag = tag.toLowerCase();\n  this._namespaceURI = null;\n  this._renderedChildren = null;\n  this._previousStyle = null;\n  this._previousStyleCopy = null;\n  this._hostNode = null;\n  this._hostParent = null;\n  this._rootNodeID = 0;\n  this._domID = 0;\n  this._hostContainerInfo = null;\n  this._wrapperState = null;\n  this._topLevelWrapper = null;\n  this._flags = 0;\n  if (process.env.NODE_ENV !== 'production') {\n    this._ancestorInfo = null;\n    setAndValidateContentChildDev.call(this, null);\n  }\n}\n\nReactDOMComponent.displayName = 'ReactDOMComponent';\n\nReactDOMComponent.Mixin = {\n\n  /**\n   * Generates root tag markup then recurses. This method has side effects and\n   * is not idempotent.\n   *\n   * @internal\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?ReactDOMComponent} the parent component instance\n   * @param {?object} info about the host container\n   * @param {object} context\n   * @return {string} The computed markup.\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    this._rootNodeID = globalIdCounter++;\n    this._domID = hostContainerInfo._idCounter++;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var props = this._currentElement.props;\n\n    switch (this._tag) {\n      case 'audio':\n      case 'form':\n      case 'iframe':\n      case 'img':\n      case 'link':\n      case 'object':\n      case 'source':\n      case 'video':\n        this._wrapperState = {\n          listeners: null\n        };\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'button':\n        props = ReactDOMButton.getHostProps(this, props, hostParent);\n        break;\n      case 'input':\n        ReactDOMInput.mountWrapper(this, props, hostParent);\n        props = ReactDOMInput.getHostProps(this, props);\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'option':\n        ReactDOMOption.mountWrapper(this, props, hostParent);\n        props = ReactDOMOption.getHostProps(this, props);\n        break;\n      case 'select':\n        ReactDOMSelect.mountWrapper(this, props, hostParent);\n        props = ReactDOMSelect.getHostProps(this, props);\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'textarea':\n        ReactDOMTextarea.mountWrapper(this, props, hostParent);\n        props = ReactDOMTextarea.getHostProps(this, props);\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n    }\n\n    assertValidProps(this, props);\n\n    // We create tags in the namespace of their parent container, except HTML\n    // tags get no namespace.\n    var namespaceURI;\n    var parentTag;\n    if (hostParent != null) {\n      namespaceURI = hostParent._namespaceURI;\n      parentTag = hostParent._tag;\n    } else if (hostContainerInfo._tag) {\n      namespaceURI = hostContainerInfo._namespaceURI;\n      parentTag = hostContainerInfo._tag;\n    }\n    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {\n      namespaceURI = DOMNamespaces.html;\n    }\n    if (namespaceURI === DOMNamespaces.html) {\n      if (this._tag === 'svg') {\n        namespaceURI = DOMNamespaces.svg;\n      } else if (this._tag === 'math') {\n        namespaceURI = DOMNamespaces.mathml;\n      }\n    }\n    this._namespaceURI = namespaceURI;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var parentInfo;\n      if (hostParent != null) {\n        parentInfo = hostParent._ancestorInfo;\n      } else if (hostContainerInfo._tag) {\n        parentInfo = hostContainerInfo._ancestorInfo;\n      }\n      if (parentInfo) {\n        // parentInfo should always be present except for the top-level\n        // component when server rendering\n        validateDOMNesting(this._tag, null, this, parentInfo);\n      }\n      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);\n    }\n\n    var mountImage;\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var el;\n      if (namespaceURI === DOMNamespaces.html) {\n        if (this._tag === 'script') {\n          // Create the script via .innerHTML so its \"parser-inserted\" flag is\n          // set to true and it does not execute\n          var div = ownerDocument.createElement('div');\n          var type = this._currentElement.type;\n          div.innerHTML = '<' + type + '></' + type + '>';\n          el = div.removeChild(div.firstChild);\n        } else if (props.is) {\n          el = ownerDocument.createElement(this._currentElement.type, props.is);\n        } else {\n          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.\n          // See discussion in https://github.com/facebook/react/pull/6896\n          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n          el = ownerDocument.createElement(this._currentElement.type);\n        }\n      } else {\n        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);\n      }\n      ReactDOMComponentTree.precacheNode(this, el);\n      this._flags |= Flags.hasCachedChildNodes;\n      if (!this._hostParent) {\n        DOMPropertyOperations.setAttributeForRoot(el);\n      }\n      this._updateDOMProperties(null, props, transaction);\n      var lazyTree = DOMLazyTree(el);\n      this._createInitialChildren(transaction, props, context, lazyTree);\n      mountImage = lazyTree;\n    } else {\n      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);\n      var tagContent = this._createContentMarkup(transaction, props, context);\n      if (!tagContent && omittedCloseTags[this._tag]) {\n        mountImage = tagOpen + '/>';\n      } else {\n        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';\n      }\n    }\n\n    switch (this._tag) {\n      case 'input':\n        transaction.getReactMountReady().enqueue(inputPostMount, this);\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'textarea':\n        transaction.getReactMountReady().enqueue(textareaPostMount, this);\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'select':\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'button':\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'option':\n        transaction.getReactMountReady().enqueue(optionPostMount, this);\n        break;\n    }\n\n    return mountImage;\n  },\n\n  /**\n   * Creates markup for the open tag and all attributes.\n   *\n   * This method has side effects because events get registered.\n   *\n   * Iterating over object properties is faster than iterating over arrays.\n   * @see http://jsperf.com/obj-vs-arr-iteration\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} props\n   * @return {string} Markup of opening tag.\n   */\n  _createOpenTagMarkupAndPutListeners: function (transaction, props) {\n    var ret = '<' + this._currentElement.type;\n\n    for (var propKey in props) {\n      if (!props.hasOwnProperty(propKey)) {\n        continue;\n      }\n      var propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (propValue) {\n          enqueuePutListener(this, propKey, propValue, transaction);\n        }\n      } else {\n        if (propKey === STYLE) {\n          if (propValue) {\n            if (process.env.NODE_ENV !== 'production') {\n              // See `_updateDOMProperties`. style block\n              this._previousStyle = propValue;\n            }\n            propValue = this._previousStyleCopy = _assign({}, props.style);\n          }\n          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);\n        }\n        var markup = null;\n        if (this._tag != null && isCustomComponent(this._tag, props)) {\n          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);\n          }\n        } else {\n          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);\n        }\n        if (markup) {\n          ret += ' ' + markup;\n        }\n      }\n    }\n\n    // For static pages, no need to put React ID and checksum. Saves lots of\n    // bytes.\n    if (transaction.renderToStaticMarkup) {\n      return ret;\n    }\n\n    if (!this._hostParent) {\n      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();\n    }\n    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);\n    return ret;\n  },\n\n  /**\n   * Creates markup for the content between the tags.\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} props\n   * @param {object} context\n   * @return {string} Content markup.\n   */\n  _createContentMarkup: function (transaction, props, context) {\n    var ret = '';\n\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        ret = innerHTML.__html;\n      }\n    } else {\n      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      if (contentToUse != null) {\n        // TODO: Validate that text is allowed as a child of this node\n        ret = escapeTextContentForBrowser(contentToUse);\n        if (process.env.NODE_ENV !== 'production') {\n          setAndValidateContentChildDev.call(this, contentToUse);\n        }\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n        ret = mountImages.join('');\n      }\n    }\n    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\\n') {\n      // text/html ignores the first character in these tags if it's a newline\n      // Prefer to break application/xml over text/html (for now) by adding\n      // a newline specifically to get eaten by the parser. (Alternately for\n      // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n      // \\r is normalized out by HTMLTextAreaElement#value.)\n      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n      // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n      return '\\n' + ret;\n    } else {\n      return ret;\n    }\n  },\n\n  _createInitialChildren: function (transaction, props, context, lazyTree) {\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);\n      }\n    } else {\n      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      if (contentToUse != null) {\n        // TODO: Validate that text is allowed as a child of this node\n        if (process.env.NODE_ENV !== 'production') {\n          setAndValidateContentChildDev.call(this, contentToUse);\n        }\n        DOMLazyTree.queueText(lazyTree, contentToUse);\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n        for (var i = 0; i < mountImages.length; i++) {\n          DOMLazyTree.queueChild(lazyTree, mountImages[i]);\n        }\n      }\n    }\n  },\n\n  /**\n   * Receives a next element and updates the component.\n   *\n   * @internal\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} context\n   */\n  receiveComponent: function (nextElement, transaction, context) {\n    var prevElement = this._currentElement;\n    this._currentElement = nextElement;\n    this.updateComponent(transaction, prevElement, nextElement, context);\n  },\n\n  /**\n   * Updates a DOM component after it has already been allocated and\n   * attached to the DOM. Reconciles the root DOM node, then recurses.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevElement\n   * @param {ReactElement} nextElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevElement, nextElement, context) {\n    var lastProps = prevElement.props;\n    var nextProps = this._currentElement.props;\n\n    switch (this._tag) {\n      case 'button':\n        lastProps = ReactDOMButton.getHostProps(this, lastProps);\n        nextProps = ReactDOMButton.getHostProps(this, nextProps);\n        break;\n      case 'input':\n        lastProps = ReactDOMInput.getHostProps(this, lastProps);\n        nextProps = ReactDOMInput.getHostProps(this, nextProps);\n        break;\n      case 'option':\n        lastProps = ReactDOMOption.getHostProps(this, lastProps);\n        nextProps = ReactDOMOption.getHostProps(this, nextProps);\n        break;\n      case 'select':\n        lastProps = ReactDOMSelect.getHostProps(this, lastProps);\n        nextProps = ReactDOMSelect.getHostProps(this, nextProps);\n        break;\n      case 'textarea':\n        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);\n        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);\n        break;\n    }\n\n    assertValidProps(this, nextProps);\n    this._updateDOMProperties(lastProps, nextProps, transaction);\n    this._updateDOMChildren(lastProps, nextProps, transaction, context);\n\n    switch (this._tag) {\n      case 'input':\n        // Update the wrapper around inputs *after* updating props. This has to\n        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations\n        // raise warnings and prevent the new value from being assigned.\n        ReactDOMInput.updateWrapper(this);\n        break;\n      case 'textarea':\n        ReactDOMTextarea.updateWrapper(this);\n        break;\n      case 'select':\n        // <select> value update needs to occur after <option> children\n        // reconciliation\n        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);\n        break;\n    }\n  },\n\n  /**\n   * Reconciles the properties by detecting differences in property values and\n   * updating the DOM as necessary. This function is probably the single most\n   * critical path for performance optimization.\n   *\n   * TODO: Benchmark whether checking for changed values in memory actually\n   *       improves performance (especially statically positioned elements).\n   * TODO: Benchmark the effects of putting this at the top since 99% of props\n   *       do not change for a given reconciliation.\n   * TODO: Benchmark areas that can be improved with caching.\n   *\n   * @private\n   * @param {object} lastProps\n   * @param {object} nextProps\n   * @param {?DOMElement} node\n   */\n  _updateDOMProperties: function (lastProps, nextProps, transaction) {\n    var propKey;\n    var styleName;\n    var styleUpdates;\n    for (propKey in lastProps) {\n      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        var lastStyle = this._previousStyleCopy;\n        for (styleName in lastStyle) {\n          if (lastStyle.hasOwnProperty(styleName)) {\n            styleUpdates = styleUpdates || {};\n            styleUpdates[styleName] = '';\n          }\n        }\n        this._previousStyleCopy = null;\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (lastProps[propKey]) {\n          // Only call deleteListener if there was a listener previously or\n          // else willDeleteListener gets called when there wasn't actually a\n          // listener (e.g., onClick={null})\n          deleteListener(this, propKey);\n        }\n      } else if (isCustomComponent(this._tag, lastProps)) {\n        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);\n        }\n      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);\n      }\n    }\n    for (propKey in nextProps) {\n      var nextProp = nextProps[propKey];\n      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;\n      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        if (nextProp) {\n          if (process.env.NODE_ENV !== 'production') {\n            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);\n            this._previousStyle = nextProp;\n          }\n          nextProp = this._previousStyleCopy = _assign({}, nextProp);\n        } else {\n          this._previousStyleCopy = null;\n        }\n        if (lastProp) {\n          // Unset styles on `lastProp` but not on `nextProp`.\n          for (styleName in lastProp) {\n            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = '';\n            }\n          }\n          // Update styles that changed since `lastProp`.\n          for (styleName in nextProp) {\n            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = nextProp[styleName];\n            }\n          }\n        } else {\n          // Relies on `updateStylesByID` not mutating `styleUpdates`.\n          styleUpdates = nextProp;\n        }\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (nextProp) {\n          enqueuePutListener(this, propKey, nextProp, transaction);\n        } else if (lastProp) {\n          deleteListener(this, propKey);\n        }\n      } else if (isCustomComponent(this._tag, nextProps)) {\n        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);\n        }\n      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n        var node = getNode(this);\n        // If we're updating to null or undefined, we should remove the property\n        // from the DOM node instead of inadvertently setting to a string. This\n        // brings us in line with the same behavior we have on initial render.\n        if (nextProp != null) {\n          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);\n        } else {\n          DOMPropertyOperations.deleteValueForProperty(node, propKey);\n        }\n      }\n    }\n    if (styleUpdates) {\n      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);\n    }\n  },\n\n  /**\n   * Reconciles the children with the various properties that affect the\n   * children content.\n   *\n   * @param {object} lastProps\n   * @param {object} nextProps\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   */\n  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {\n    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;\n    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;\n\n    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;\n    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;\n\n    // Note the use of `!=` which checks for null or undefined.\n    var lastChildren = lastContent != null ? null : lastProps.children;\n    var nextChildren = nextContent != null ? null : nextProps.children;\n\n    // If we're switching from children to content/html or vice versa, remove\n    // the old content\n    var lastHasContentOrHtml = lastContent != null || lastHtml != null;\n    var nextHasContentOrHtml = nextContent != null || nextHtml != null;\n    if (lastChildren != null && nextChildren == null) {\n      this.updateChildren(null, transaction, context);\n    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {\n      this.updateTextContent('');\n      if (process.env.NODE_ENV !== 'production') {\n        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n      }\n    }\n\n    if (nextContent != null) {\n      if (lastContent !== nextContent) {\n        this.updateTextContent('' + nextContent);\n        if (process.env.NODE_ENV !== 'production') {\n          setAndValidateContentChildDev.call(this, nextContent);\n        }\n      }\n    } else if (nextHtml != null) {\n      if (lastHtml !== nextHtml) {\n        this.updateMarkup('' + nextHtml);\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n      }\n    } else if (nextChildren != null) {\n      if (process.env.NODE_ENV !== 'production') {\n        setAndValidateContentChildDev.call(this, null);\n      }\n\n      this.updateChildren(nextChildren, transaction, context);\n    }\n  },\n\n  getHostNode: function () {\n    return getNode(this);\n  },\n\n  /**\n   * Destroys all event registrations for this instance. Does not remove from\n   * the DOM. That must be done by the parent.\n   *\n   * @internal\n   */\n  unmountComponent: function (safely) {\n    switch (this._tag) {\n      case 'audio':\n      case 'form':\n      case 'iframe':\n      case 'img':\n      case 'link':\n      case 'object':\n      case 'source':\n      case 'video':\n        var listeners = this._wrapperState.listeners;\n        if (listeners) {\n          for (var i = 0; i < listeners.length; i++) {\n            listeners[i].remove();\n          }\n        }\n        break;\n      case 'html':\n      case 'head':\n      case 'body':\n        /**\n         * Components like <html> <head> and <body> can't be removed or added\n         * easily in a cross-browser way, however it's valuable to be able to\n         * take advantage of React's reconciliation for styling and <title>\n         * management. So we just document it and throw in dangerous cases.\n         */\n        !false ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;\n        break;\n    }\n\n    this.unmountChildren(safely);\n    ReactDOMComponentTree.uncacheNode(this);\n    EventPluginHub.deleteAllListeners(this);\n    this._rootNodeID = 0;\n    this._domID = 0;\n    this._wrapperState = null;\n\n    if (process.env.NODE_ENV !== 'production') {\n      setAndValidateContentChildDev.call(this, null);\n    }\n  },\n\n  getPublicInstance: function () {\n    return getNode(this);\n  }\n\n};\n\n_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);\n\nmodule.exports = ReactDOMComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMComponent.js\n ** module id = 126\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMContainerInfo\n */\n\n'use strict';\n\nvar validateDOMNesting = require('./validateDOMNesting');\n\nvar DOC_NODE_TYPE = 9;\n\nfunction ReactDOMContainerInfo(topLevelWrapper, node) {\n  var info = {\n    _topLevelWrapper: topLevelWrapper,\n    _idCounter: 1,\n    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,\n    _node: node,\n    _tag: node ? node.nodeName.toLowerCase() : null,\n    _namespaceURI: node ? node.namespaceURI : null\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;\n  }\n  return info;\n}\n\nmodule.exports = ReactDOMContainerInfo;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMContainerInfo.js\n ** module id = 127\n ** module chunks = 0\n **/","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMEmptyComponent\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar ReactDOMEmptyComponent = function (instantiate) {\n  // ReactCompositeComponent uses this:\n  this._currentElement = null;\n  // ReactDOMComponentTree uses these:\n  this._hostNode = null;\n  this._hostParent = null;\n  this._hostContainerInfo = null;\n  this._domID = 0;\n};\n_assign(ReactDOMEmptyComponent.prototype, {\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    var domID = hostContainerInfo._idCounter++;\n    this._domID = domID;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var nodeValue = ' react-empty: ' + this._domID + ' ';\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var node = ownerDocument.createComment(nodeValue);\n      ReactDOMComponentTree.precacheNode(this, node);\n      return DOMLazyTree(node);\n    } else {\n      if (transaction.renderToStaticMarkup) {\n        // Normally we'd insert a comment node, but since this is a situation\n        // where React won't take over (static pages), we can simply return\n        // nothing.\n        return '';\n      }\n      return '<!--' + nodeValue + '-->';\n    }\n  },\n  receiveComponent: function () {},\n  getHostNode: function () {\n    return ReactDOMComponentTree.getNodeFromInstance(this);\n  },\n  unmountComponent: function () {\n    ReactDOMComponentTree.uncacheNode(this);\n  }\n});\n\nmodule.exports = ReactDOMEmptyComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMEmptyComponent.js\n ** module id = 128\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMFactories\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\n\n/**\n * Create a factory that creates HTML tag elements.\n *\n * @private\n */\nvar createDOMFactory = ReactElement.createFactory;\nif (process.env.NODE_ENV !== 'production') {\n  var ReactElementValidator = require('./ReactElementValidator');\n  createDOMFactory = ReactElementValidator.createFactory;\n}\n\n/**\n * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n * This is also accessible via `React.DOM`.\n *\n * @public\n */\nvar ReactDOMFactories = {\n  a: createDOMFactory('a'),\n  abbr: createDOMFactory('abbr'),\n  address: createDOMFactory('address'),\n  area: createDOMFactory('area'),\n  article: createDOMFactory('article'),\n  aside: createDOMFactory('aside'),\n  audio: createDOMFactory('audio'),\n  b: createDOMFactory('b'),\n  base: createDOMFactory('base'),\n  bdi: createDOMFactory('bdi'),\n  bdo: createDOMFactory('bdo'),\n  big: createDOMFactory('big'),\n  blockquote: createDOMFactory('blockquote'),\n  body: createDOMFactory('body'),\n  br: createDOMFactory('br'),\n  button: createDOMFactory('button'),\n  canvas: createDOMFactory('canvas'),\n  caption: createDOMFactory('caption'),\n  cite: createDOMFactory('cite'),\n  code: createDOMFactory('code'),\n  col: createDOMFactory('col'),\n  colgroup: createDOMFactory('colgroup'),\n  data: createDOMFactory('data'),\n  datalist: createDOMFactory('datalist'),\n  dd: createDOMFactory('dd'),\n  del: createDOMFactory('del'),\n  details: createDOMFactory('details'),\n  dfn: createDOMFactory('dfn'),\n  dialog: createDOMFactory('dialog'),\n  div: createDOMFactory('div'),\n  dl: createDOMFactory('dl'),\n  dt: createDOMFactory('dt'),\n  em: createDOMFactory('em'),\n  embed: createDOMFactory('embed'),\n  fieldset: createDOMFactory('fieldset'),\n  figcaption: createDOMFactory('figcaption'),\n  figure: createDOMFactory('figure'),\n  footer: createDOMFactory('footer'),\n  form: createDOMFactory('form'),\n  h1: createDOMFactory('h1'),\n  h2: createDOMFactory('h2'),\n  h3: createDOMFactory('h3'),\n  h4: createDOMFactory('h4'),\n  h5: createDOMFactory('h5'),\n  h6: createDOMFactory('h6'),\n  head: createDOMFactory('head'),\n  header: createDOMFactory('header'),\n  hgroup: createDOMFactory('hgroup'),\n  hr: createDOMFactory('hr'),\n  html: createDOMFactory('html'),\n  i: createDOMFactory('i'),\n  iframe: createDOMFactory('iframe'),\n  img: createDOMFactory('img'),\n  input: createDOMFactory('input'),\n  ins: createDOMFactory('ins'),\n  kbd: createDOMFactory('kbd'),\n  keygen: createDOMFactory('keygen'),\n  label: createDOMFactory('label'),\n  legend: createDOMFactory('legend'),\n  li: createDOMFactory('li'),\n  link: createDOMFactory('link'),\n  main: createDOMFactory('main'),\n  map: createDOMFactory('map'),\n  mark: createDOMFactory('mark'),\n  menu: createDOMFactory('menu'),\n  menuitem: createDOMFactory('menuitem'),\n  meta: createDOMFactory('meta'),\n  meter: createDOMFactory('meter'),\n  nav: createDOMFactory('nav'),\n  noscript: createDOMFactory('noscript'),\n  object: createDOMFactory('object'),\n  ol: createDOMFactory('ol'),\n  optgroup: createDOMFactory('optgroup'),\n  option: createDOMFactory('option'),\n  output: createDOMFactory('output'),\n  p: createDOMFactory('p'),\n  param: createDOMFactory('param'),\n  picture: createDOMFactory('picture'),\n  pre: createDOMFactory('pre'),\n  progress: createDOMFactory('progress'),\n  q: createDOMFactory('q'),\n  rp: createDOMFactory('rp'),\n  rt: createDOMFactory('rt'),\n  ruby: createDOMFactory('ruby'),\n  s: createDOMFactory('s'),\n  samp: createDOMFactory('samp'),\n  script: createDOMFactory('script'),\n  section: createDOMFactory('section'),\n  select: createDOMFactory('select'),\n  small: createDOMFactory('small'),\n  source: createDOMFactory('source'),\n  span: createDOMFactory('span'),\n  strong: createDOMFactory('strong'),\n  style: createDOMFactory('style'),\n  sub: createDOMFactory('sub'),\n  summary: createDOMFactory('summary'),\n  sup: createDOMFactory('sup'),\n  table: createDOMFactory('table'),\n  tbody: createDOMFactory('tbody'),\n  td: createDOMFactory('td'),\n  textarea: createDOMFactory('textarea'),\n  tfoot: createDOMFactory('tfoot'),\n  th: createDOMFactory('th'),\n  thead: createDOMFactory('thead'),\n  time: createDOMFactory('time'),\n  title: createDOMFactory('title'),\n  tr: createDOMFactory('tr'),\n  track: createDOMFactory('track'),\n  u: createDOMFactory('u'),\n  ul: createDOMFactory('ul'),\n  'var': createDOMFactory('var'),\n  video: createDOMFactory('video'),\n  wbr: createDOMFactory('wbr'),\n\n  // SVG\n  circle: createDOMFactory('circle'),\n  clipPath: createDOMFactory('clipPath'),\n  defs: createDOMFactory('defs'),\n  ellipse: createDOMFactory('ellipse'),\n  g: createDOMFactory('g'),\n  image: createDOMFactory('image'),\n  line: createDOMFactory('line'),\n  linearGradient: createDOMFactory('linearGradient'),\n  mask: createDOMFactory('mask'),\n  path: createDOMFactory('path'),\n  pattern: createDOMFactory('pattern'),\n  polygon: createDOMFactory('polygon'),\n  polyline: createDOMFactory('polyline'),\n  radialGradient: createDOMFactory('radialGradient'),\n  rect: createDOMFactory('rect'),\n  stop: createDOMFactory('stop'),\n  svg: createDOMFactory('svg'),\n  text: createDOMFactory('text'),\n  tspan: createDOMFactory('tspan')\n};\n\nmodule.exports = ReactDOMFactories;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMFactories.js\n ** module id = 129\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMFeatureFlags\n */\n\n'use strict';\n\nvar ReactDOMFeatureFlags = {\n  useCreateElement: true\n};\n\nmodule.exports = ReactDOMFeatureFlags;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMFeatureFlags.js\n ** module id = 130\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMIDOperations\n */\n\n'use strict';\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\n/**\n * Operations used to process updates to DOM nodes.\n */\nvar ReactDOMIDOperations = {\n\n  /**\n   * Updates a component's children by processing a series of updates.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @internal\n   */\n  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {\n    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);\n    DOMChildrenOperations.processUpdates(node, updates);\n  }\n};\n\nmodule.exports = ReactDOMIDOperations;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMIDOperations.js\n ** module id = 131\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMInput\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar DisabledInputUtils = require('./DisabledInputUtils');\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueLink = false;\nvar didWarnCheckedLink = false;\nvar didWarnValueDefaultValue = false;\nvar didWarnCheckedDefaultChecked = false;\nvar didWarnControlledToUncontrolled = false;\nvar didWarnUncontrolledToControlled = false;\n\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMInput.updateWrapper(this);\n  }\n}\n\nfunction isControlled(props) {\n  var usesChecked = props.type === 'checkbox' || props.type === 'radio';\n  return usesChecked ? props.checked != null : props.value != null;\n}\n\n/**\n * Implements an <input> host component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\nvar ReactDOMInput = {\n  getHostProps: function (inst, props) {\n    var value = LinkedValueUtils.getValue(props);\n    var checked = LinkedValueUtils.getChecked(props);\n\n    var hostProps = _assign({\n      // Make sure we set .type before any other properties (setting .value\n      // before .type means .value is lost in IE11 and below)\n      type: undefined,\n      // Make sure we set .step before .value (setting .value before .step\n      // means .value is rounded on mount, based upon step precision)\n      step: undefined,\n      // Make sure we set .min & .max before .value (to ensure proper order\n      // in corner cases such as min or max deriving from value, e.g. Issue #7170)\n      min: undefined,\n      max: undefined\n    }, DisabledInputUtils.getHostProps(inst, props), {\n      defaultChecked: undefined,\n      defaultValue: undefined,\n      value: value != null ? value : inst._wrapperState.initialValue,\n      checked: checked != null ? checked : inst._wrapperState.initialChecked,\n      onChange: inst._wrapperState.onChange\n    });\n\n    return hostProps;\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);\n\n      var owner = inst._currentElement._owner;\n\n      if (props.valueLink !== undefined && !didWarnValueLink) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnValueLink = true;\n      }\n      if (props.checkedLink !== undefined && !didWarnCheckedLink) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnCheckedLink = true;\n      }\n      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnCheckedDefaultChecked = true;\n      }\n      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnValueDefaultValue = true;\n      }\n    }\n\n    var defaultValue = props.defaultValue;\n    inst._wrapperState = {\n      initialChecked: props.checked != null ? props.checked : props.defaultChecked,\n      initialValue: props.value != null ? props.value : defaultValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst)\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      inst._wrapperState.controlled = isControlled(props);\n    }\n  },\n\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var controlled = isControlled(props);\n      var owner = inst._currentElement._owner;\n\n      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnUncontrolledToControlled = true;\n      }\n      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnControlledToUncontrolled = true;\n      }\n    }\n\n    // TODO: Shouldn't this be getChecked(props)?\n    var checked = props.checked;\n    if (checked != null) {\n      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);\n    }\n\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      var newValue = '' + value;\n\n      // To avoid side effects (such as losing text selection), only set value if changed\n      if (newValue !== node.value) {\n        node.value = newValue;\n      }\n    } else {\n      if (props.value == null && props.defaultValue != null) {\n        node.defaultValue = '' + props.defaultValue;\n      }\n      if (props.checked == null && props.defaultChecked != null) {\n        node.defaultChecked = !!props.defaultChecked;\n      }\n    }\n  },\n\n  postMountWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // This is in postMount because we need access to the DOM node, which is not\n    // available until after the component has mounted.\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\n    // Detach value from defaultValue. We won't do anything if we're working on\n    // submit or reset inputs as those values & defaultValues are linked. They\n    // are not resetable nodes so this operation doesn't matter and actually\n    // removes browser-default values (eg \"Submit Query\") when no value is\n    // provided.\n\n    switch (props.type) {\n      case 'submit':\n      case 'reset':\n        break;\n      case 'color':\n      case 'date':\n      case 'datetime':\n      case 'datetime-local':\n      case 'month':\n      case 'time':\n      case 'week':\n        // This fixes the no-show issue on iOS Safari and Android Chrome:\n        // https://github.com/facebook/react/issues/7233\n        node.value = '';\n        node.value = node.defaultValue;\n        break;\n      default:\n        node.value = node.value;\n        break;\n    }\n\n    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug\n    // this is needed to work around a chrome bug where setting defaultChecked\n    // will sometimes influence the value of checked (even after detachment).\n    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416\n    // We need to temporarily unset name to avoid disrupting radio button groups.\n    var name = node.name;\n    if (name !== '') {\n      node.name = '';\n    }\n    node.defaultChecked = !node.defaultChecked;\n    node.defaultChecked = !node.defaultChecked;\n    if (name !== '') {\n      node.name = name;\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  // Here we use asap to wait until all updates have propagated, which\n  // is important when using controlled components within layers:\n  // https://github.com/facebook/react/issues/1698\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n\n  var name = props.name;\n  if (props.type === 'radio' && name != null) {\n    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);\n    var queryRoot = rootNode;\n\n    while (queryRoot.parentNode) {\n      queryRoot = queryRoot.parentNode;\n    }\n\n    // If `rootNode.form` was non-null, then we could try `form.elements`,\n    // but that sometimes behaves strangely in IE8. We could also try using\n    // `form.getElementsByName`, but that will only return direct children\n    // and won't include inputs that use the HTML5 `form=` attribute. Since\n    // the input might not even be in a form, let's just use the global\n    // `querySelectorAll` to ensure we don't miss anything.\n    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\n    for (var i = 0; i < group.length; i++) {\n      var otherNode = group[i];\n      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n        continue;\n      }\n      // This will throw if radio buttons rendered by different copies of React\n      // and the same name are rendered into the same form (same as #1939).\n      // That's probably okay; we don't support it just as we don't support\n      // mixing React radio buttons with non-React ones.\n      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);\n      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;\n      // If this is a controlled radio button group, forcing the input that\n      // was previously checked to update will cause it to be come re-checked\n      // as appropriate.\n      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\n    }\n  }\n\n  return returnValue;\n}\n\nmodule.exports = ReactDOMInput;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMInput.js\n ** module id = 132\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMOption\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactChildren = require('./ReactChildren');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMSelect = require('./ReactDOMSelect');\n\nvar warning = require('fbjs/lib/warning');\nvar didWarnInvalidOptionChildren = false;\n\nfunction flattenChildren(children) {\n  var content = '';\n\n  // Flatten children and warn if they aren't strings or numbers;\n  // invalid types are ignored.\n  ReactChildren.forEach(children, function (child) {\n    if (child == null) {\n      return;\n    }\n    if (typeof child === 'string' || typeof child === 'number') {\n      content += child;\n    } else if (!didWarnInvalidOptionChildren) {\n      didWarnInvalidOptionChildren = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;\n    }\n  });\n\n  return content;\n}\n\n/**\n * Implements an <option> host component that warns when `selected` is set.\n */\nvar ReactDOMOption = {\n  mountWrapper: function (inst, props, hostParent) {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;\n    }\n\n    // Look up whether this option is 'selected'\n    var selectValue = null;\n    if (hostParent != null) {\n      var selectParent = hostParent;\n\n      if (selectParent._tag === 'optgroup') {\n        selectParent = selectParent._hostParent;\n      }\n\n      if (selectParent != null && selectParent._tag === 'select') {\n        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);\n      }\n    }\n\n    // If the value is null (e.g., no specified value or after initial mount)\n    // or missing (e.g., for <datalist>), we don't change props.selected\n    var selected = null;\n    if (selectValue != null) {\n      var value;\n      if (props.value != null) {\n        value = props.value + '';\n      } else {\n        value = flattenChildren(props.children);\n      }\n      selected = false;\n      if (Array.isArray(selectValue)) {\n        // multiple\n        for (var i = 0; i < selectValue.length; i++) {\n          if ('' + selectValue[i] === value) {\n            selected = true;\n            break;\n          }\n        }\n      } else {\n        selected = '' + selectValue === value;\n      }\n    }\n\n    inst._wrapperState = { selected: selected };\n  },\n\n  postMountWrapper: function (inst) {\n    // value=\"\" should make a value attribute (#6219)\n    var props = inst._currentElement.props;\n    if (props.value != null) {\n      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n      node.setAttribute('value', props.value);\n    }\n  },\n\n  getHostProps: function (inst, props) {\n    var hostProps = _assign({ selected: undefined, children: undefined }, props);\n\n    // Read state only from initial mount because <select> updates value\n    // manually; we need the initial state only for server rendering\n    if (inst._wrapperState.selected != null) {\n      hostProps.selected = inst._wrapperState.selected;\n    }\n\n    var content = flattenChildren(props.children);\n\n    if (content) {\n      hostProps.children = content;\n    }\n\n    return hostProps;\n  }\n\n};\n\nmodule.exports = ReactDOMOption;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMOption.js\n ** module id = 133\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelection\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar getNodeForCharacterOffset = require('./getNodeForCharacterOffset');\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * While `isCollapsed` is available on the Selection object and `collapsed`\n * is available on the Range object, IE11 sometimes gets them wrong.\n * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n */\nfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n  return anchorNode === focusNode && anchorOffset === focusOffset;\n}\n\n/**\n * Get the appropriate anchor and focus node/offset pairs for IE.\n *\n * The catch here is that IE's selection API doesn't provide information\n * about whether the selection is forward or backward, so we have to\n * behave as though it's always forward.\n *\n * IE text differs from modern selection in that it behaves as though\n * block elements end with a new line. This means character offsets will\n * differ between the two APIs.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getIEOffsets(node) {\n  var selection = document.selection;\n  var selectedRange = selection.createRange();\n  var selectedLength = selectedRange.text.length;\n\n  // Duplicate selection so we can move range without breaking user selection.\n  var fromStart = selectedRange.duplicate();\n  fromStart.moveToElementText(node);\n  fromStart.setEndPoint('EndToStart', selectedRange);\n\n  var startOffset = fromStart.text.length;\n  var endOffset = startOffset + selectedLength;\n\n  return {\n    start: startOffset,\n    end: endOffset\n  };\n}\n\n/**\n * @param {DOMElement} node\n * @return {?object}\n */\nfunction getModernOffsets(node) {\n  var selection = window.getSelection && window.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  var anchorNode = selection.anchorNode;\n  var anchorOffset = selection.anchorOffset;\n  var focusNode = selection.focusNode;\n  var focusOffset = selection.focusOffset;\n\n  var currentRange = selection.getRangeAt(0);\n\n  // In Firefox, range.startContainer and range.endContainer can be \"anonymous\n  // divs\", e.g. the up/down buttons on an <input type=\"number\">. Anonymous\n  // divs do not seem to expose properties, triggering a \"Permission denied\n  // error\" if any of its properties are accessed. The only seemingly possible\n  // way to avoid erroring is to access a property that typically works for\n  // non-anonymous divs and catch any error that may otherwise arise. See\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n  try {\n    /* eslint-disable no-unused-expressions */\n    currentRange.startContainer.nodeType;\n    currentRange.endContainer.nodeType;\n    /* eslint-enable no-unused-expressions */\n  } catch (e) {\n    return null;\n  }\n\n  // If the node and offset values are the same, the selection is collapsed.\n  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n  // this value wrong.\n  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\n\n  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\n  var tempRange = currentRange.cloneRange();\n  tempRange.selectNodeContents(node);\n  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\n  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);\n\n  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n  var end = start + rangeLength;\n\n  // Detect whether the selection is backward.\n  var detectionRange = document.createRange();\n  detectionRange.setStart(anchorNode, anchorOffset);\n  detectionRange.setEnd(focusNode, focusOffset);\n  var isBackward = detectionRange.collapsed;\n\n  return {\n    start: isBackward ? end : start,\n    end: isBackward ? start : end\n  };\n}\n\n/**\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setIEOffsets(node, offsets) {\n  var range = document.selection.createRange().duplicate();\n  var start, end;\n\n  if (offsets.end === undefined) {\n    start = offsets.start;\n    end = start;\n  } else if (offsets.start > offsets.end) {\n    start = offsets.end;\n    end = offsets.start;\n  } else {\n    start = offsets.start;\n    end = offsets.end;\n  }\n\n  range.moveToElementText(node);\n  range.moveStart('character', start);\n  range.setEndPoint('EndToStart', range);\n  range.moveEnd('character', end - start);\n  range.select();\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programmatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setModernOffsets(node, offsets) {\n  if (!window.getSelection) {\n    return;\n  }\n\n  var selection = window.getSelection();\n  var length = node[getTextContentAccessor()].length;\n  var start = Math.min(offsets.start, length);\n  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    var temp = end;\n    end = start;\n    start = temp;\n  }\n\n  var startMarker = getNodeForCharacterOffset(node, start);\n  var endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    var range = document.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n\nvar useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);\n\nvar ReactDOMSelection = {\n  /**\n   * @param {DOMElement} node\n   */\n  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\n  /**\n   * @param {DOMElement|DOMTextNode} node\n   * @param {object} offsets\n   */\n  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n};\n\nmodule.exports = ReactDOMSelection;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMSelection.js\n ** module id = 134\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTextComponent\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar DOMLazyTree = require('./DOMLazyTree');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar invariant = require('fbjs/lib/invariant');\nvar validateDOMNesting = require('./validateDOMNesting');\n\n/**\n * Text nodes violate a couple assumptions that React makes about components:\n *\n *  - When mounting text into the DOM, adjacent text nodes are merged.\n *  - Text nodes cannot be assigned a React root ID.\n *\n * This component is used to wrap strings between comment nodes so that they\n * can undergo the same reconciliation that is applied to elements.\n *\n * TODO: Investigate representing React components in the DOM with text nodes.\n *\n * @class ReactDOMTextComponent\n * @extends ReactComponent\n * @internal\n */\nvar ReactDOMTextComponent = function (text) {\n  // TODO: This is really a ReactText (ReactNode), not a ReactElement\n  this._currentElement = text;\n  this._stringText = '' + text;\n  // ReactDOMComponentTree uses these:\n  this._hostNode = null;\n  this._hostParent = null;\n\n  // Properties\n  this._domID = 0;\n  this._mountIndex = 0;\n  this._closingComment = null;\n  this._commentNodes = null;\n};\n\n_assign(ReactDOMTextComponent.prototype, {\n\n  /**\n   * Creates the markup for this text node. This node is not intended to have\n   * any features besides containing text content.\n   *\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} Markup for this text node.\n   * @internal\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    if (process.env.NODE_ENV !== 'production') {\n      var parentInfo;\n      if (hostParent != null) {\n        parentInfo = hostParent._ancestorInfo;\n      } else if (hostContainerInfo != null) {\n        parentInfo = hostContainerInfo._ancestorInfo;\n      }\n      if (parentInfo) {\n        // parentInfo should always be present except for the top-level\n        // component when server rendering\n        validateDOMNesting(null, this._stringText, this, parentInfo);\n      }\n    }\n\n    var domID = hostContainerInfo._idCounter++;\n    var openingValue = ' react-text: ' + domID + ' ';\n    var closingValue = ' /react-text ';\n    this._domID = domID;\n    this._hostParent = hostParent;\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var openingComment = ownerDocument.createComment(openingValue);\n      var closingComment = ownerDocument.createComment(closingValue);\n      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());\n      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));\n      if (this._stringText) {\n        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));\n      }\n      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));\n      ReactDOMComponentTree.precacheNode(this, openingComment);\n      this._closingComment = closingComment;\n      return lazyTree;\n    } else {\n      var escapedText = escapeTextContentForBrowser(this._stringText);\n\n      if (transaction.renderToStaticMarkup) {\n        // Normally we'd wrap this between comment nodes for the reasons stated\n        // above, but since this is a situation where React won't take over\n        // (static pages), we can simply return the text as it is.\n        return escapedText;\n      }\n\n      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';\n    }\n  },\n\n  /**\n   * Updates this component by updating the text content.\n   *\n   * @param {ReactText} nextText The next text content\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  receiveComponent: function (nextText, transaction) {\n    if (nextText !== this._currentElement) {\n      this._currentElement = nextText;\n      var nextStringText = '' + nextText;\n      if (nextStringText !== this._stringText) {\n        // TODO: Save this as pending props and use performUpdateIfNecessary\n        // and/or updateComponent to do the actual update for consistency with\n        // other component types?\n        this._stringText = nextStringText;\n        var commentNodes = this.getHostNode();\n        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);\n      }\n    }\n  },\n\n  getHostNode: function () {\n    var hostNode = this._commentNodes;\n    if (hostNode) {\n      return hostNode;\n    }\n    if (!this._closingComment) {\n      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);\n      var node = openingComment.nextSibling;\n      while (true) {\n        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;\n        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {\n          this._closingComment = node;\n          break;\n        }\n        node = node.nextSibling;\n      }\n    }\n    hostNode = [this._hostNode, this._closingComment];\n    this._commentNodes = hostNode;\n    return hostNode;\n  },\n\n  unmountComponent: function () {\n    this._closingComment = null;\n    this._commentNodes = null;\n    ReactDOMComponentTree.uncacheNode(this);\n  }\n\n});\n\nmodule.exports = ReactDOMTextComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMTextComponent.js\n ** module id = 135\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTextarea\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar DisabledInputUtils = require('./DisabledInputUtils');\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueLink = false;\nvar didWarnValDefaultVal = false;\n\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMTextarea.updateWrapper(this);\n  }\n}\n\n/**\n * Implements a <textarea> host component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\nvar ReactDOMTextarea = {\n  getHostProps: function (inst, props) {\n    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;\n\n    // Always set children to the same thing. In IE9, the selection range will\n    // get reset if `textContent` is mutated.  We could add a check in setTextContent\n    // to only set the value if/when the value differs from the node value (which would\n    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.\n    // The value can be a boolean or object so that's why it's forced to be a string.\n    var hostProps = _assign({}, DisabledInputUtils.getHostProps(inst, props), {\n      value: undefined,\n      defaultValue: undefined,\n      children: '' + inst._wrapperState.initialValue,\n      onChange: inst._wrapperState.onChange\n    });\n\n    return hostProps;\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);\n      if (props.valueLink !== undefined && !didWarnValueLink) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnValueLink = true;\n      }\n      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n        didWarnValDefaultVal = true;\n      }\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    var initialValue = value;\n\n    // Only bother fetching default value if we're going to use it\n    if (value == null) {\n      var defaultValue = props.defaultValue;\n      // TODO (yungsters): Remove support for children content in <textarea>.\n      var children = props.children;\n      if (children != null) {\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;\n        }\n        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;\n        if (Array.isArray(children)) {\n          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;\n          children = children[0];\n        }\n\n        defaultValue = '' + children;\n      }\n      if (defaultValue == null) {\n        defaultValue = '';\n      }\n      initialValue = defaultValue;\n    }\n\n    inst._wrapperState = {\n      initialValue: '' + initialValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst)\n    };\n  },\n\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      var newValue = '' + value;\n\n      // To avoid side effects (such as losing text selection), only set value if changed\n      if (newValue !== node.value) {\n        node.value = newValue;\n      }\n      if (props.defaultValue == null) {\n        node.defaultValue = newValue;\n      }\n    }\n    if (props.defaultValue != null) {\n      node.defaultValue = props.defaultValue;\n    }\n  },\n\n  postMountWrapper: function (inst) {\n    // This is in postMount because we need access to the DOM node, which is not\n    // available until after the component has mounted.\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\n    // Warning: node.value may be the empty string at this point (IE11) if placeholder is set.\n    node.value = node.textContent; // Detach value from defaultValue\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMTextarea;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMTextarea.js\n ** module id = 136\n ** module chunks = 0\n **/","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTreeTraversal\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Return the lowest common ancestor of A and B, or null if they are in\n * different trees.\n */\nfunction getLowestCommonAncestor(instA, instB) {\n  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\n  var depthA = 0;\n  for (var tempA = instA; tempA; tempA = tempA._hostParent) {\n    depthA++;\n  }\n  var depthB = 0;\n  for (var tempB = instB; tempB; tempB = tempB._hostParent) {\n    depthB++;\n  }\n\n  // If A is deeper, crawl up.\n  while (depthA - depthB > 0) {\n    instA = instA._hostParent;\n    depthA--;\n  }\n\n  // If B is deeper, crawl up.\n  while (depthB - depthA > 0) {\n    instB = instB._hostParent;\n    depthB--;\n  }\n\n  // Walk in lockstep until we find a match.\n  var depth = depthA;\n  while (depth--) {\n    if (instA === instB) {\n      return instA;\n    }\n    instA = instA._hostParent;\n    instB = instB._hostParent;\n  }\n  return null;\n}\n\n/**\n * Return if A is an ancestor of B.\n */\nfunction isAncestor(instA, instB) {\n  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n\n  while (instB) {\n    if (instB === instA) {\n      return true;\n    }\n    instB = instB._hostParent;\n  }\n  return false;\n}\n\n/**\n * Return the parent instance of the passed-in instance.\n */\nfunction getParentInstance(inst) {\n  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;\n\n  return inst._hostParent;\n}\n\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\nfunction traverseTwoPhase(inst, fn, arg) {\n  var path = [];\n  while (inst) {\n    path.push(inst);\n    inst = inst._hostParent;\n  }\n  var i;\n  for (i = path.length; i-- > 0;) {\n    fn(path[i], false, arg);\n  }\n  for (i = 0; i < path.length; i++) {\n    fn(path[i], true, arg);\n  }\n}\n\n/**\n * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n * should would receive a `mouseEnter` or `mouseLeave` event.\n *\n * Does not invoke the callback on the nearest common ancestor because nothing\n * \"entered\" or \"left\" that element.\n */\nfunction traverseEnterLeave(from, to, fn, argFrom, argTo) {\n  var common = from && to ? getLowestCommonAncestor(from, to) : null;\n  var pathFrom = [];\n  while (from && from !== common) {\n    pathFrom.push(from);\n    from = from._hostParent;\n  }\n  var pathTo = [];\n  while (to && to !== common) {\n    pathTo.push(to);\n    to = to._hostParent;\n  }\n  var i;\n  for (i = 0; i < pathFrom.length; i++) {\n    fn(pathFrom[i], true, argFrom);\n  }\n  for (i = pathTo.length; i-- > 0;) {\n    fn(pathTo[i], false, argTo);\n  }\n}\n\nmodule.exports = {\n  isAncestor: isAncestor,\n  getLowestCommonAncestor: getLowestCommonAncestor,\n  getParentInstance: getParentInstance,\n  traverseTwoPhase: traverseTwoPhase,\n  traverseEnterLeave: traverseEnterLeave\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMTreeTraversal.js\n ** module id = 137\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultBatchingStrategy\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactUpdates = require('./ReactUpdates');\nvar Transaction = require('./Transaction');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\nvar RESET_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: function () {\n    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n  }\n};\n\nvar FLUSH_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n};\n\nvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\nfunction ReactDefaultBatchingStrategyTransaction() {\n  this.reinitializeTransaction();\n}\n\n_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  }\n});\n\nvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\nvar ReactDefaultBatchingStrategy = {\n  isBatchingUpdates: false,\n\n  /**\n   * Call the provided function in a context within which calls to `setState`\n   * and friends are batched such that components aren't updated unnecessarily.\n   */\n  batchedUpdates: function (callback, a, b, c, d, e) {\n    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\n    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\n    // The code is written this way to avoid extra allocations\n    if (alreadyBatchingUpdates) {\n      callback(a, b, c, d, e);\n    } else {\n      transaction.perform(callback, null, a, b, c, d, e);\n    }\n  }\n};\n\nmodule.exports = ReactDefaultBatchingStrategy;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDefaultBatchingStrategy.js\n ** module id = 138\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultInjection\n */\n\n'use strict';\n\nvar BeforeInputEventPlugin = require('./BeforeInputEventPlugin');\nvar ChangeEventPlugin = require('./ChangeEventPlugin');\nvar DefaultEventPluginOrder = require('./DefaultEventPluginOrder');\nvar EnterLeaveEventPlugin = require('./EnterLeaveEventPlugin');\nvar HTMLDOMPropertyConfig = require('./HTMLDOMPropertyConfig');\nvar ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');\nvar ReactDOMComponent = require('./ReactDOMComponent');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMEmptyComponent = require('./ReactDOMEmptyComponent');\nvar ReactDOMTreeTraversal = require('./ReactDOMTreeTraversal');\nvar ReactDOMTextComponent = require('./ReactDOMTextComponent');\nvar ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');\nvar ReactEventListener = require('./ReactEventListener');\nvar ReactInjection = require('./ReactInjection');\nvar ReactReconcileTransaction = require('./ReactReconcileTransaction');\nvar SVGDOMPropertyConfig = require('./SVGDOMPropertyConfig');\nvar SelectEventPlugin = require('./SelectEventPlugin');\nvar SimpleEventPlugin = require('./SimpleEventPlugin');\n\nvar alreadyInjected = false;\n\nfunction inject() {\n  if (alreadyInjected) {\n    // TODO: This is currently true because these injections are shared between\n    // the client and the server package. They should be built independently\n    // and not share any injection state. Then this problem will be solved.\n    return;\n  }\n  alreadyInjected = true;\n\n  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);\n\n  /**\n   * Inject modules for resolving DOM hierarchy and plugin ordering.\n   */\n  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);\n  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);\n\n  /**\n   * Some important event plugins included by default (without having to require\n   * them).\n   */\n  ReactInjection.EventPluginHub.injectEventPluginsByName({\n    SimpleEventPlugin: SimpleEventPlugin,\n    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n    ChangeEventPlugin: ChangeEventPlugin,\n    SelectEventPlugin: SelectEventPlugin,\n    BeforeInputEventPlugin: BeforeInputEventPlugin\n  });\n\n  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);\n\n  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);\n\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n\n  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {\n    return new ReactDOMEmptyComponent(instantiate);\n  });\n\n  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);\n  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n\n  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n}\n\nmodule.exports = {\n  inject: inject\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDefaultInjection.js\n ** module id = 139\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventEmitterMixin\n */\n\n'use strict';\n\nvar EventPluginHub = require('./EventPluginHub');\n\nfunction runEventQueueInBatch(events) {\n  EventPluginHub.enqueueEvents(events);\n  EventPluginHub.processEventQueue(false);\n}\n\nvar ReactEventEmitterMixin = {\n\n  /**\n   * Streams a fired top-level event to `EventPluginHub` where plugins have the\n   * opportunity to create `ReactEvent`s to be dispatched.\n   */\n  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n    runEventQueueInBatch(events);\n  }\n};\n\nmodule.exports = ReactEventEmitterMixin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactEventEmitterMixin.js\n ** module id = 140\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventListener\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar EventListener = require('fbjs/lib/EventListener');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar PooledClass = require('./PooledClass');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar getEventTarget = require('./getEventTarget');\nvar getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');\n\n/**\n * Find the deepest React component completely containing the root of the\n * passed-in instance (for use when entire React trees are nested within each\n * other). If React trees are not nested, returns null.\n */\nfunction findParent(inst) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  while (inst._hostParent) {\n    inst = inst._hostParent;\n  }\n  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);\n  var container = rootNode.parentNode;\n  return ReactDOMComponentTree.getClosestInstanceFromNode(container);\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\n_assign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function () {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\n\nfunction handleTopLevelImpl(bookKeeping) {\n  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);\n  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = targetInst;\n  do {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = ancestor && findParent(ancestor);\n  } while (ancestor);\n\n  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n    targetInst = bookKeeping.ancestors[i];\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\n\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\n  setHandleTopLevel: function (handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n\n  setEnabled: function (enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n\n  isEnabled: function () {\n    return ReactEventListener._enabled;\n  },\n\n  /**\n   * Traps top-level events by using event bubbling.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  /**\n   * Traps a top-level event by using event capturing.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  monitorScrollValue: function (refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n\n  dispatchEvent: function (topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\n\nmodule.exports = ReactEventListener;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactEventListener.js\n ** module id = 141\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInjection\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPluginUtils = require('./EventPluginUtils');\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactClass = require('./ReactClass');\nvar ReactEmptyComponent = require('./ReactEmptyComponent');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactHostComponent = require('./ReactHostComponent');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar ReactInjection = {\n  Component: ReactComponentEnvironment.injection,\n  Class: ReactClass.injection,\n  DOMProperty: DOMProperty.injection,\n  EmptyComponent: ReactEmptyComponent.injection,\n  EventPluginHub: EventPluginHub.injection,\n  EventPluginUtils: EventPluginUtils.injection,\n  EventEmitter: ReactBrowserEventEmitter.injection,\n  HostComponent: ReactHostComponent.injection,\n  Updates: ReactUpdates.injection\n};\n\nmodule.exports = ReactInjection;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactInjection.js\n ** module id = 142\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMarkupChecksum\n */\n\n'use strict';\n\nvar adler32 = require('./adler32');\n\nvar TAG_END = /\\/?>/;\nvar COMMENT_START = /^<\\!\\-\\-/;\n\nvar ReactMarkupChecksum = {\n  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\n  /**\n   * @param {string} markup Markup string\n   * @return {string} Markup string with checksum attribute attached\n   */\n  addChecksumToMarkup: function (markup) {\n    var checksum = adler32(markup);\n\n    // Add checksum (handle both parent tags, comments and self-closing tags)\n    if (COMMENT_START.test(markup)) {\n      return markup;\n    } else {\n      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\"$&');\n    }\n  },\n\n  /**\n   * @param {string} markup to use\n   * @param {DOMElement} element root React element\n   * @returns {boolean} whether or not the markup is the same\n   */\n  canReuseMarkup: function (markup, element) {\n    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n    var markupChecksum = adler32(markup);\n    return markupChecksum === existingChecksum;\n  }\n};\n\nmodule.exports = ReactMarkupChecksum;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactMarkupChecksum.js\n ** module id = 143\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMultiChild\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactMultiChildUpdateTypes = require('./ReactMultiChildUpdateTypes');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactChildReconciler = require('./ReactChildReconciler');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar flattenChildren = require('./flattenChildren');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Make an update for markup to be rendered and inserted at a supplied index.\n *\n * @param {string} markup Markup that renders into an element.\n * @param {number} toIndex Destination index.\n * @private\n */\nfunction makeInsertMarkup(markup, afterNode, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,\n    content: markup,\n    fromIndex: null,\n    fromNode: null,\n    toIndex: toIndex,\n    afterNode: afterNode\n  };\n}\n\n/**\n * Make an update for moving an existing element to another index.\n *\n * @param {number} fromIndex Source index of the existing element.\n * @param {number} toIndex Destination index of the element.\n * @private\n */\nfunction makeMove(child, afterNode, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,\n    content: null,\n    fromIndex: child._mountIndex,\n    fromNode: ReactReconciler.getHostNode(child),\n    toIndex: toIndex,\n    afterNode: afterNode\n  };\n}\n\n/**\n * Make an update for removing an element at an index.\n *\n * @param {number} fromIndex Index of the element to remove.\n * @private\n */\nfunction makeRemove(child, node) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: ReactMultiChildUpdateTypes.REMOVE_NODE,\n    content: null,\n    fromIndex: child._mountIndex,\n    fromNode: node,\n    toIndex: null,\n    afterNode: null\n  };\n}\n\n/**\n * Make an update for setting the markup of a node.\n *\n * @param {string} markup Markup that renders into an element.\n * @private\n */\nfunction makeSetMarkup(markup) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: ReactMultiChildUpdateTypes.SET_MARKUP,\n    content: markup,\n    fromIndex: null,\n    fromNode: null,\n    toIndex: null,\n    afterNode: null\n  };\n}\n\n/**\n * Make an update for setting the text content.\n *\n * @param {string} textContent Text content to set.\n * @private\n */\nfunction makeTextContent(textContent) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,\n    content: textContent,\n    fromIndex: null,\n    fromNode: null,\n    toIndex: null,\n    afterNode: null\n  };\n}\n\n/**\n * Push an update, if any, onto the queue. Creates a new queue if none is\n * passed and always returns the queue. Mutative.\n */\nfunction enqueue(queue, update) {\n  if (update) {\n    queue = queue || [];\n    queue.push(update);\n  }\n  return queue;\n}\n\n/**\n * Processes any enqueued updates.\n *\n * @private\n */\nfunction processQueue(inst, updateQueue) {\n  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);\n}\n\nvar setChildrenForInstrumentation = emptyFunction;\nif (process.env.NODE_ENV !== 'production') {\n  var getDebugID = function (inst) {\n    if (!inst._debugID) {\n      // Check for ART-like instances. TODO: This is silly/gross.\n      var internal;\n      if (internal = ReactInstanceMap.get(inst)) {\n        inst = internal;\n      }\n    }\n    return inst._debugID;\n  };\n  setChildrenForInstrumentation = function (children) {\n    var debugID = getDebugID(this);\n    // TODO: React Native empty components are also multichild.\n    // This means they still get into this method but don't have _debugID.\n    if (debugID !== 0) {\n      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {\n        return children[key]._debugID;\n      }) : []);\n    }\n  };\n}\n\n/**\n * ReactMultiChild are capable of reconciling multiple children.\n *\n * @class ReactMultiChild\n * @internal\n */\nvar ReactMultiChild = {\n\n  /**\n   * Provides common functionality for components that must reconcile multiple\n   * children. This is used by `ReactDOMComponent` to mount, update, and\n   * unmount child components.\n   *\n   * @lends {ReactMultiChild.prototype}\n   */\n  Mixin: {\n\n    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {\n      if (process.env.NODE_ENV !== 'production') {\n        var selfDebugID = getDebugID(this);\n        if (this._currentElement) {\n          try {\n            ReactCurrentOwner.current = this._currentElement._owner;\n            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);\n          } finally {\n            ReactCurrentOwner.current = null;\n          }\n        }\n      }\n      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);\n    },\n\n    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {\n      var nextChildren;\n      var selfDebugID = 0;\n      if (process.env.NODE_ENV !== 'production') {\n        selfDebugID = getDebugID(this);\n        if (this._currentElement) {\n          try {\n            ReactCurrentOwner.current = this._currentElement._owner;\n            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n          } finally {\n            ReactCurrentOwner.current = null;\n          }\n          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n          return nextChildren;\n        }\n      }\n      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n      return nextChildren;\n    },\n\n    /**\n     * Generates a \"mount image\" for each of the supplied children. In the case\n     * of `ReactDOMComponent`, a mount image is a string of markup.\n     *\n     * @param {?object} nestedChildren Nested child maps.\n     * @return {array} An array of mounted representations.\n     * @internal\n     */\n    mountChildren: function (nestedChildren, transaction, context) {\n      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);\n      this._renderedChildren = children;\n\n      var mountImages = [];\n      var index = 0;\n      for (var name in children) {\n        if (children.hasOwnProperty(name)) {\n          var child = children[name];\n          var selfDebugID = 0;\n          if (process.env.NODE_ENV !== 'production') {\n            selfDebugID = getDebugID(this);\n          }\n          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);\n          child._mountIndex = index++;\n          mountImages.push(mountImage);\n        }\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        setChildrenForInstrumentation.call(this, children);\n      }\n\n      return mountImages;\n    },\n\n    /**\n     * Replaces any rendered children with a text content string.\n     *\n     * @param {string} nextContent String of content.\n     * @internal\n     */\n    updateTextContent: function (nextContent) {\n      var prevChildren = this._renderedChildren;\n      // Remove any rendered children.\n      ReactChildReconciler.unmountChildren(prevChildren, false);\n      for (var name in prevChildren) {\n        if (prevChildren.hasOwnProperty(name)) {\n          !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n        }\n      }\n      // Set new text content.\n      var updates = [makeTextContent(nextContent)];\n      processQueue(this, updates);\n    },\n\n    /**\n     * Replaces any rendered children with a markup string.\n     *\n     * @param {string} nextMarkup String of markup.\n     * @internal\n     */\n    updateMarkup: function (nextMarkup) {\n      var prevChildren = this._renderedChildren;\n      // Remove any rendered children.\n      ReactChildReconciler.unmountChildren(prevChildren, false);\n      for (var name in prevChildren) {\n        if (prevChildren.hasOwnProperty(name)) {\n          !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n        }\n      }\n      var updates = [makeSetMarkup(nextMarkup)];\n      processQueue(this, updates);\n    },\n\n    /**\n     * Updates the rendered children with new children.\n     *\n     * @param {?object} nextNestedChildrenElements Nested child element maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     */\n    updateChildren: function (nextNestedChildrenElements, transaction, context) {\n      // Hook used by React ART\n      this._updateChildren(nextNestedChildrenElements, transaction, context);\n    },\n\n    /**\n     * @param {?object} nextNestedChildrenElements Nested child element maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @final\n     * @protected\n     */\n    _updateChildren: function (nextNestedChildrenElements, transaction, context) {\n      var prevChildren = this._renderedChildren;\n      var removedNodes = {};\n      var mountImages = [];\n      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);\n      if (!nextChildren && !prevChildren) {\n        return;\n      }\n      var updates = null;\n      var name;\n      // `nextIndex` will increment for each child in `nextChildren`, but\n      // `lastIndex` will be the last index visited in `prevChildren`.\n      var nextIndex = 0;\n      var lastIndex = 0;\n      // `nextMountIndex` will increment for each newly mounted child.\n      var nextMountIndex = 0;\n      var lastPlacedNode = null;\n      for (name in nextChildren) {\n        if (!nextChildren.hasOwnProperty(name)) {\n          continue;\n        }\n        var prevChild = prevChildren && prevChildren[name];\n        var nextChild = nextChildren[name];\n        if (prevChild === nextChild) {\n          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));\n          lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n          prevChild._mountIndex = nextIndex;\n        } else {\n          if (prevChild) {\n            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.\n            lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n            // The `removedNodes` loop below will actually remove the child.\n          }\n          // The child must be instantiated before it's mounted.\n          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));\n          nextMountIndex++;\n        }\n        nextIndex++;\n        lastPlacedNode = ReactReconciler.getHostNode(nextChild);\n      }\n      // Remove children that are no longer present.\n      for (name in removedNodes) {\n        if (removedNodes.hasOwnProperty(name)) {\n          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));\n        }\n      }\n      if (updates) {\n        processQueue(this, updates);\n      }\n      this._renderedChildren = nextChildren;\n\n      if (process.env.NODE_ENV !== 'production') {\n        setChildrenForInstrumentation.call(this, nextChildren);\n      }\n    },\n\n    /**\n     * Unmounts all rendered children. This should be used to clean up children\n     * when this component is unmounted. It does not actually perform any\n     * backend operations.\n     *\n     * @internal\n     */\n    unmountChildren: function (safely) {\n      var renderedChildren = this._renderedChildren;\n      ReactChildReconciler.unmountChildren(renderedChildren, safely);\n      this._renderedChildren = null;\n    },\n\n    /**\n     * Moves a child component to the supplied index.\n     *\n     * @param {ReactComponent} child Component to move.\n     * @param {number} toIndex Destination index of the element.\n     * @param {number} lastIndex Last index visited of the siblings of `child`.\n     * @protected\n     */\n    moveChild: function (child, afterNode, toIndex, lastIndex) {\n      // If the index of `child` is less than `lastIndex`, then it needs to\n      // be moved. Otherwise, we do not need to move it because a child will be\n      // inserted or moved before `child`.\n      if (child._mountIndex < lastIndex) {\n        return makeMove(child, afterNode, toIndex);\n      }\n    },\n\n    /**\n     * Creates a child component.\n     *\n     * @param {ReactComponent} child Component to create.\n     * @param {string} mountImage Markup to insert.\n     * @protected\n     */\n    createChild: function (child, afterNode, mountImage) {\n      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);\n    },\n\n    /**\n     * Removes a child component.\n     *\n     * @param {ReactComponent} child Child to remove.\n     * @protected\n     */\n    removeChild: function (child, node) {\n      return makeRemove(child, node);\n    },\n\n    /**\n     * Mounts a child with the supplied name.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to mount.\n     * @param {string} name Name of the child.\n     * @param {number} index Index at which to insert the child.\n     * @param {ReactReconcileTransaction} transaction\n     * @private\n     */\n    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {\n      child._mountIndex = index;\n      return this.createChild(child, afterNode, mountImage);\n    },\n\n    /**\n     * Unmounts a rendered child.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to unmount.\n     * @private\n     */\n    _unmountChild: function (child, node) {\n      var update = this.removeChild(child, node);\n      child._mountIndex = null;\n      return update;\n    }\n\n  }\n\n};\n\nmodule.exports = ReactMultiChild;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactMultiChild.js\n ** module id = 144\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactOwner\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * ReactOwners are capable of storing references to owned components.\n *\n * All components are capable of //being// referenced by owner components, but\n * only ReactOwner components are capable of //referencing// owned components.\n * The named reference is known as a \"ref\".\n *\n * Refs are available when mounted and updated during reconciliation.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return (\n *         <div onClick={this.handleClick}>\n *           <CustomComponent ref=\"custom\" />\n *         </div>\n *       );\n *     },\n *     handleClick: function() {\n *       this.refs.custom.handleClick();\n *     },\n *     componentDidMount: function() {\n *       this.refs.custom.initialize();\n *     }\n *   });\n *\n * Refs should rarely be used. When refs are used, they should only be done to\n * control data that is not handled by React's data flow.\n *\n * @class ReactOwner\n */\nvar ReactOwner = {\n\n  /**\n   * @param {?object} object\n   * @return {boolean} True if `object` is a valid owner.\n   * @final\n   */\n  isValidOwner: function (object) {\n    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');\n  },\n\n  /**\n   * Adds a component by ref to an owner component.\n   *\n   * @param {ReactComponent} component Component to reference.\n   * @param {string} ref Name by which to refer to the component.\n   * @param {ReactOwner} owner Component on which to record the ref.\n   * @final\n   * @internal\n   */\n  addComponentAsRefTo: function (component, ref, owner) {\n    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;\n    owner.attachRef(ref, component);\n  },\n\n  /**\n   * Removes a component by ref from an owner component.\n   *\n   * @param {ReactComponent} component Component to dereference.\n   * @param {string} ref Name of the ref to remove.\n   * @param {ReactOwner} owner Component on which the ref is recorded.\n   * @final\n   * @internal\n   */\n  removeComponentAsRefFrom: function (component, ref, owner) {\n    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;\n    var ownerPublicInstance = owner.getPublicInstance();\n    // Check that `component`'s owner is still alive and that `component` is still the current ref\n    // because we do not want to detach the ref if another component stole it.\n    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {\n      owner.detachRef(ref);\n    }\n  }\n\n};\n\nmodule.exports = ReactOwner;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactOwner.js\n ** module id = 145\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPureComponent\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactComponent = require('./ReactComponent');\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactPureComponent(props, context, updater) {\n  // Duplicated from ReactComponent.\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = ReactComponent.prototype;\nReactPureComponent.prototype = new ComponentDummy();\nReactPureComponent.prototype.constructor = ReactPureComponent;\n// Avoid an extra prototype jump for these methods.\n_assign(ReactPureComponent.prototype, ReactComponent.prototype);\nReactPureComponent.prototype.isPureReactComponent = true;\n\nmodule.exports = ReactPureComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactPureComponent.js\n ** module id = 146\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconcileTransaction\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar CallbackQueue = require('./CallbackQueue');\nvar PooledClass = require('./PooledClass');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar Transaction = require('./Transaction');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\n\n/**\n * Ensures that, when possible, the selection range (currently selected text\n * input) is not disturbed by performing the transaction.\n */\nvar SELECTION_RESTORATION = {\n  /**\n   * @return {Selection} Selection information.\n   */\n  initialize: ReactInputSelection.getSelectionInformation,\n  /**\n   * @param {Selection} sel Selection information returned from `initialize`.\n   */\n  close: ReactInputSelection.restoreSelection\n};\n\n/**\n * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n * high level DOM manipulations (like temporarily removing a text input from the\n * DOM).\n */\nvar EVENT_SUPPRESSION = {\n  /**\n   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n   * the reconciliation.\n   */\n  initialize: function () {\n    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n    ReactBrowserEventEmitter.setEnabled(false);\n    return currentlyEnabled;\n  },\n\n  /**\n   * @param {boolean} previouslyEnabled Enabled status of\n   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`\n   *   restores the previous value.\n   */\n  close: function (previouslyEnabled) {\n    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n  }\n};\n\n/**\n * Provides a queue for collecting `componentDidMount` and\n * `componentDidUpdate` callbacks during the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function () {\n    this.reactMountReady.reset();\n  },\n\n  /**\n   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n   */\n  close: function () {\n    this.reactMountReady.notifyAll();\n  }\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];\n\nif (process.env.NODE_ENV !== 'production') {\n  TRANSACTION_WRAPPERS.push({\n    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n    close: ReactInstrumentation.debugTool.onEndFlush\n  });\n}\n\n/**\n * Currently:\n * - The order that these are listed in the transaction is critical:\n * - Suppresses events.\n * - Restores selection range.\n *\n * Future:\n * - Restore document/overflow scroll positions that were unintentionally\n *   modified via DOM insertions above the top viewport boundary.\n * - Implement/integrate with customized constraint based layout system and keep\n *   track of which dimensions must be remeasured.\n *\n * @class ReactReconcileTransaction\n */\nfunction ReactReconcileTransaction(useCreateElement) {\n  this.reinitializeTransaction();\n  // Only server-side rendering really needs this option (see\n  // `ReactServerRendering`), but server-side uses\n  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n  // accessible and defaults to false when `ReactDOMComponent` and\n  // `ReactDOMTextComponent` checks it in `mountComponent`.`\n  this.renderToStaticMarkup = false;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.useCreateElement = useCreateElement;\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array<object>} List of operation wrap procedures.\n   *   TODO: convert to array<TransactionWrapper>\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return this.reactMountReady;\n  },\n\n  /**\n   * @return {object} The queue to collect React async events.\n   */\n  getUpdateQueue: function () {\n    return ReactUpdateQueue;\n  },\n\n  /**\n   * Save current transaction state -- if the return value from this method is\n   * passed to `rollback`, the transaction will be reset to that state.\n   */\n  checkpoint: function () {\n    // reactMountReady is the our only stateful wrapper\n    return this.reactMountReady.checkpoint();\n  },\n\n  rollback: function (checkpoint) {\n    this.reactMountReady.rollback(checkpoint);\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n  }\n};\n\n_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);\n\nPooledClass.addPoolingTo(ReactReconcileTransaction);\n\nmodule.exports = ReactReconcileTransaction;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactReconcileTransaction.js\n ** module id = 147\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactRef\n */\n\n'use strict';\n\nvar ReactOwner = require('./ReactOwner');\n\nvar ReactRef = {};\n\nfunction attachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(component.getPublicInstance());\n  } else {\n    // Legacy ref\n    ReactOwner.addComponentAsRefTo(component, ref, owner);\n  }\n}\n\nfunction detachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(null);\n  } else {\n    // Legacy ref\n    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\n  }\n}\n\nReactRef.attachRefs = function (instance, element) {\n  if (element === null || element === false) {\n    return;\n  }\n  var ref = element.ref;\n  if (ref != null) {\n    attachRef(ref, instance, element._owner);\n  }\n};\n\nReactRef.shouldUpdateRefs = function (prevElement, nextElement) {\n  // If either the owner or a `ref` has changed, make sure the newest owner\n  // has stored a reference to `this`, and the previous owner (if different)\n  // has forgotten the reference to `this`. We use the element instead\n  // of the public this.props because the post processing cannot determine\n  // a ref. The ref conceptually lives on the element.\n\n  // TODO: Should this even be possible? The owner cannot change because\n  // it's forbidden by shouldUpdateReactComponent. The ref can change\n  // if you swap the keys of but not the refs. Reconsider where this check\n  // is made. It probably belongs where the key checking and\n  // instantiateReactComponent is done.\n\n  var prevEmpty = prevElement === null || prevElement === false;\n  var nextEmpty = nextElement === null || nextElement === false;\n\n  return (\n    // This has a few false positives w/r/t empty components.\n    prevEmpty || nextEmpty || nextElement.ref !== prevElement.ref ||\n    // If owner changes but we have an unchanged function ref, don't update refs\n    typeof nextElement.ref === 'string' && nextElement._owner !== prevElement._owner\n  );\n};\n\nReactRef.detachRefs = function (instance, element) {\n  if (element === null || element === false) {\n    return;\n  }\n  var ref = element.ref;\n  if (ref != null) {\n    detachRef(ref, instance, element._owner);\n  }\n};\n\nmodule.exports = ReactRef;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactRef.js\n ** module id = 148\n ** module chunks = 0\n **/","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactServerRenderingTransaction\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\nvar Transaction = require('./Transaction');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactServerUpdateQueue = require('./ReactServerUpdateQueue');\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [];\n\nif (process.env.NODE_ENV !== 'production') {\n  TRANSACTION_WRAPPERS.push({\n    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n    close: ReactInstrumentation.debugTool.onEndFlush\n  });\n}\n\nvar noopCallbackQueue = {\n  enqueue: function () {}\n};\n\n/**\n * @class ReactServerRenderingTransaction\n * @param {boolean} renderToStaticMarkup\n */\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.useCreateElement = false;\n  this.updateQueue = new ReactServerUpdateQueue(this);\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array} Empty list of operation wrap procedures.\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return noopCallbackQueue;\n  },\n\n  /**\n   * @return {object} The queue to collect React async events.\n   */\n  getUpdateQueue: function () {\n    return this.updateQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {},\n\n  checkpoint: function () {},\n\n  rollback: function () {}\n};\n\n_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);\n\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\nmodule.exports = ReactServerRenderingTransaction;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactServerRenderingTransaction.js\n ** module id = 149\n ** module chunks = 0\n **/","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactServerUpdateQueue\n * \n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\nvar Transaction = require('./Transaction');\nvar warning = require('fbjs/lib/warning');\n\nfunction warnNoop(publicInstance, callerName) {\n  if (process.env.NODE_ENV !== 'production') {\n    var constructor = publicInstance.constructor;\n    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n  }\n}\n\n/**\n * This is the update queue used for server rendering.\n * It delegates to ReactUpdateQueue while server rendering is in progress and\n * switches to ReactNoopUpdateQueue after the transaction has completed.\n * @class ReactServerUpdateQueue\n * @param {Transaction} transaction\n */\n\nvar ReactServerUpdateQueue = function () {\n  /* :: transaction: Transaction; */\n\n  function ReactServerUpdateQueue(transaction) {\n    _classCallCheck(this, ReactServerUpdateQueue);\n\n    this.transaction = transaction;\n  }\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n\n\n  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {\n    return false;\n  };\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);\n    }\n  };\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueForceUpdate(publicInstance);\n    } else {\n      warnNoop(publicInstance, 'forceUpdate');\n    }\n  };\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object|function} completeState Next state.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);\n    } else {\n      warnNoop(publicInstance, 'replaceState');\n    }\n  };\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object|function} partialState Next partial state to be merged with state.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);\n    } else {\n      warnNoop(publicInstance, 'setState');\n    }\n  };\n\n  return ReactServerUpdateQueue;\n}();\n\nmodule.exports = ReactServerUpdateQueue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactServerUpdateQueue.js\n ** module id = 150\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SVGDOMPropertyConfig\n */\n\n'use strict';\n\nvar NS = {\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace'\n};\n\n// We use attributes for everything SVG so let's avoid some duplication and run\n// code instead.\n// The following are all specified in the HTML config already so we exclude here.\n// - class (as className)\n// - color\n// - height\n// - id\n// - lang\n// - max\n// - media\n// - method\n// - min\n// - name\n// - style\n// - target\n// - type\n// - width\nvar ATTRS = {\n  accentHeight: 'accent-height',\n  accumulate: 0,\n  additive: 0,\n  alignmentBaseline: 'alignment-baseline',\n  allowReorder: 'allowReorder',\n  alphabetic: 0,\n  amplitude: 0,\n  arabicForm: 'arabic-form',\n  ascent: 0,\n  attributeName: 'attributeName',\n  attributeType: 'attributeType',\n  autoReverse: 'autoReverse',\n  azimuth: 0,\n  baseFrequency: 'baseFrequency',\n  baseProfile: 'baseProfile',\n  baselineShift: 'baseline-shift',\n  bbox: 0,\n  begin: 0,\n  bias: 0,\n  by: 0,\n  calcMode: 'calcMode',\n  capHeight: 'cap-height',\n  clip: 0,\n  clipPath: 'clip-path',\n  clipRule: 'clip-rule',\n  clipPathUnits: 'clipPathUnits',\n  colorInterpolation: 'color-interpolation',\n  colorInterpolationFilters: 'color-interpolation-filters',\n  colorProfile: 'color-profile',\n  colorRendering: 'color-rendering',\n  contentScriptType: 'contentScriptType',\n  contentStyleType: 'contentStyleType',\n  cursor: 0,\n  cx: 0,\n  cy: 0,\n  d: 0,\n  decelerate: 0,\n  descent: 0,\n  diffuseConstant: 'diffuseConstant',\n  direction: 0,\n  display: 0,\n  divisor: 0,\n  dominantBaseline: 'dominant-baseline',\n  dur: 0,\n  dx: 0,\n  dy: 0,\n  edgeMode: 'edgeMode',\n  elevation: 0,\n  enableBackground: 'enable-background',\n  end: 0,\n  exponent: 0,\n  externalResourcesRequired: 'externalResourcesRequired',\n  fill: 0,\n  fillOpacity: 'fill-opacity',\n  fillRule: 'fill-rule',\n  filter: 0,\n  filterRes: 'filterRes',\n  filterUnits: 'filterUnits',\n  floodColor: 'flood-color',\n  floodOpacity: 'flood-opacity',\n  focusable: 0,\n  fontFamily: 'font-family',\n  fontSize: 'font-size',\n  fontSizeAdjust: 'font-size-adjust',\n  fontStretch: 'font-stretch',\n  fontStyle: 'font-style',\n  fontVariant: 'font-variant',\n  fontWeight: 'font-weight',\n  format: 0,\n  from: 0,\n  fx: 0,\n  fy: 0,\n  g1: 0,\n  g2: 0,\n  glyphName: 'glyph-name',\n  glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n  glyphOrientationVertical: 'glyph-orientation-vertical',\n  glyphRef: 'glyphRef',\n  gradientTransform: 'gradientTransform',\n  gradientUnits: 'gradientUnits',\n  hanging: 0,\n  horizAdvX: 'horiz-adv-x',\n  horizOriginX: 'horiz-origin-x',\n  ideographic: 0,\n  imageRendering: 'image-rendering',\n  'in': 0,\n  in2: 0,\n  intercept: 0,\n  k: 0,\n  k1: 0,\n  k2: 0,\n  k3: 0,\n  k4: 0,\n  kernelMatrix: 'kernelMatrix',\n  kernelUnitLength: 'kernelUnitLength',\n  kerning: 0,\n  keyPoints: 'keyPoints',\n  keySplines: 'keySplines',\n  keyTimes: 'keyTimes',\n  lengthAdjust: 'lengthAdjust',\n  letterSpacing: 'letter-spacing',\n  lightingColor: 'lighting-color',\n  limitingConeAngle: 'limitingConeAngle',\n  local: 0,\n  markerEnd: 'marker-end',\n  markerMid: 'marker-mid',\n  markerStart: 'marker-start',\n  markerHeight: 'markerHeight',\n  markerUnits: 'markerUnits',\n  markerWidth: 'markerWidth',\n  mask: 0,\n  maskContentUnits: 'maskContentUnits',\n  maskUnits: 'maskUnits',\n  mathematical: 0,\n  mode: 0,\n  numOctaves: 'numOctaves',\n  offset: 0,\n  opacity: 0,\n  operator: 0,\n  order: 0,\n  orient: 0,\n  orientation: 0,\n  origin: 0,\n  overflow: 0,\n  overlinePosition: 'overline-position',\n  overlineThickness: 'overline-thickness',\n  paintOrder: 'paint-order',\n  panose1: 'panose-1',\n  pathLength: 'pathLength',\n  patternContentUnits: 'patternContentUnits',\n  patternTransform: 'patternTransform',\n  patternUnits: 'patternUnits',\n  pointerEvents: 'pointer-events',\n  points: 0,\n  pointsAtX: 'pointsAtX',\n  pointsAtY: 'pointsAtY',\n  pointsAtZ: 'pointsAtZ',\n  preserveAlpha: 'preserveAlpha',\n  preserveAspectRatio: 'preserveAspectRatio',\n  primitiveUnits: 'primitiveUnits',\n  r: 0,\n  radius: 0,\n  refX: 'refX',\n  refY: 'refY',\n  renderingIntent: 'rendering-intent',\n  repeatCount: 'repeatCount',\n  repeatDur: 'repeatDur',\n  requiredExtensions: 'requiredExtensions',\n  requiredFeatures: 'requiredFeatures',\n  restart: 0,\n  result: 0,\n  rotate: 0,\n  rx: 0,\n  ry: 0,\n  scale: 0,\n  seed: 0,\n  shapeRendering: 'shape-rendering',\n  slope: 0,\n  spacing: 0,\n  specularConstant: 'specularConstant',\n  specularExponent: 'specularExponent',\n  speed: 0,\n  spreadMethod: 'spreadMethod',\n  startOffset: 'startOffset',\n  stdDeviation: 'stdDeviation',\n  stemh: 0,\n  stemv: 0,\n  stitchTiles: 'stitchTiles',\n  stopColor: 'stop-color',\n  stopOpacity: 'stop-opacity',\n  strikethroughPosition: 'strikethrough-position',\n  strikethroughThickness: 'strikethrough-thickness',\n  string: 0,\n  stroke: 0,\n  strokeDasharray: 'stroke-dasharray',\n  strokeDashoffset: 'stroke-dashoffset',\n  strokeLinecap: 'stroke-linecap',\n  strokeLinejoin: 'stroke-linejoin',\n  strokeMiterlimit: 'stroke-miterlimit',\n  strokeOpacity: 'stroke-opacity',\n  strokeWidth: 'stroke-width',\n  surfaceScale: 'surfaceScale',\n  systemLanguage: 'systemLanguage',\n  tableValues: 'tableValues',\n  targetX: 'targetX',\n  targetY: 'targetY',\n  textAnchor: 'text-anchor',\n  textDecoration: 'text-decoration',\n  textRendering: 'text-rendering',\n  textLength: 'textLength',\n  to: 0,\n  transform: 0,\n  u1: 0,\n  u2: 0,\n  underlinePosition: 'underline-position',\n  underlineThickness: 'underline-thickness',\n  unicode: 0,\n  unicodeBidi: 'unicode-bidi',\n  unicodeRange: 'unicode-range',\n  unitsPerEm: 'units-per-em',\n  vAlphabetic: 'v-alphabetic',\n  vHanging: 'v-hanging',\n  vIdeographic: 'v-ideographic',\n  vMathematical: 'v-mathematical',\n  values: 0,\n  vectorEffect: 'vector-effect',\n  version: 0,\n  vertAdvY: 'vert-adv-y',\n  vertOriginX: 'vert-origin-x',\n  vertOriginY: 'vert-origin-y',\n  viewBox: 'viewBox',\n  viewTarget: 'viewTarget',\n  visibility: 0,\n  widths: 0,\n  wordSpacing: 'word-spacing',\n  writingMode: 'writing-mode',\n  x: 0,\n  xHeight: 'x-height',\n  x1: 0,\n  x2: 0,\n  xChannelSelector: 'xChannelSelector',\n  xlinkActuate: 'xlink:actuate',\n  xlinkArcrole: 'xlink:arcrole',\n  xlinkHref: 'xlink:href',\n  xlinkRole: 'xlink:role',\n  xlinkShow: 'xlink:show',\n  xlinkTitle: 'xlink:title',\n  xlinkType: 'xlink:type',\n  xmlBase: 'xml:base',\n  xmlns: 0,\n  xmlnsXlink: 'xmlns:xlink',\n  xmlLang: 'xml:lang',\n  xmlSpace: 'xml:space',\n  y: 0,\n  y1: 0,\n  y2: 0,\n  yChannelSelector: 'yChannelSelector',\n  z: 0,\n  zoomAndPan: 'zoomAndPan'\n};\n\nvar SVGDOMPropertyConfig = {\n  Properties: {},\n  DOMAttributeNamespaces: {\n    xlinkActuate: NS.xlink,\n    xlinkArcrole: NS.xlink,\n    xlinkHref: NS.xlink,\n    xlinkRole: NS.xlink,\n    xlinkShow: NS.xlink,\n    xlinkTitle: NS.xlink,\n    xlinkType: NS.xlink,\n    xmlBase: NS.xml,\n    xmlLang: NS.xml,\n    xmlSpace: NS.xml\n  },\n  DOMAttributeNames: {}\n};\n\nObject.keys(ATTRS).forEach(function (key) {\n  SVGDOMPropertyConfig.Properties[key] = 0;\n  if (ATTRS[key]) {\n    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];\n  }\n});\n\nmodule.exports = SVGDOMPropertyConfig;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SVGDOMPropertyConfig.js\n ** module id = 151\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SelectEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getActiveElement = require('fbjs/lib/getActiveElement');\nvar isTextInputElement = require('./isTextInputElement');\nvar keyOf = require('fbjs/lib/keyOf');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\nvar eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSelect: null }),\n      captured: keyOf({ onSelectCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]\n  }\n};\n\nvar activeElement = null;\nvar activeElementInst = null;\nvar lastSelection = null;\nvar mouseDown = false;\n\n// Track whether a listener exists for this plugin. If none exist, we do\n// not extract events. See #3639.\nvar hasListener = false;\nvar ON_SELECT_KEY = keyOf({ onSelect: null });\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else if (window.getSelection) {\n    var selection = window.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  } else if (document.selection) {\n    var range = document.selection.createRange();\n    return {\n      parentElement: range.parentElement(),\n      text: range.text,\n      top: range.boundingTop,\n      left: range.boundingLeft\n    };\n  }\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {\n    return null;\n  }\n\n  // Only fire when selection has actually changed.\n  var currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);\n\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\n    return syntheticEvent;\n  }\n\n  return null;\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nvar SelectEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    if (!hasListener) {\n      return null;\n    }\n\n    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case topLevelTypes.topFocus:\n        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {\n          activeElement = targetNode;\n          activeElementInst = targetInst;\n          lastSelection = null;\n        }\n        break;\n      case topLevelTypes.topBlur:\n        activeElement = null;\n        activeElementInst = null;\n        lastSelection = null;\n        break;\n\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case topLevelTypes.topMouseDown:\n        mouseDown = true;\n        break;\n      case topLevelTypes.topContextMenu:\n      case topLevelTypes.topMouseUp:\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't). IE's event fires out of order with respect\n      // to key and input events on deletion, so we discard it.\n      //\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      // This is also our approach for IE handling, for the reason above.\n      case topLevelTypes.topSelectionChange:\n        if (skipSelectionChangeEvent) {\n          break;\n        }\n      // falls through\n      case topLevelTypes.topKeyDown:\n      case topLevelTypes.topKeyUp:\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n    }\n\n    return null;\n  },\n\n  didPutListener: function (inst, registrationName, listener) {\n    if (registrationName === ON_SELECT_KEY) {\n      hasListener = true;\n    }\n  }\n};\n\nmodule.exports = SelectEventPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SelectEventPlugin.js\n ** module id = 152\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SimpleEventPlugin\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar EventConstants = require('./EventConstants');\nvar EventListener = require('fbjs/lib/EventListener');\nvar EventPropagators = require('./EventPropagators');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar SyntheticAnimationEvent = require('./SyntheticAnimationEvent');\nvar SyntheticClipboardEvent = require('./SyntheticClipboardEvent');\nvar SyntheticEvent = require('./SyntheticEvent');\nvar SyntheticFocusEvent = require('./SyntheticFocusEvent');\nvar SyntheticKeyboardEvent = require('./SyntheticKeyboardEvent');\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\nvar SyntheticDragEvent = require('./SyntheticDragEvent');\nvar SyntheticTouchEvent = require('./SyntheticTouchEvent');\nvar SyntheticTransitionEvent = require('./SyntheticTransitionEvent');\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\nvar SyntheticWheelEvent = require('./SyntheticWheelEvent');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar getEventCharCode = require('./getEventCharCode');\nvar invariant = require('fbjs/lib/invariant');\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  abort: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onAbort: true }),\n      captured: keyOf({ onAbortCapture: true })\n    }\n  },\n  animationEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onAnimationEnd: true }),\n      captured: keyOf({ onAnimationEndCapture: true })\n    }\n  },\n  animationIteration: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onAnimationIteration: true }),\n      captured: keyOf({ onAnimationIterationCapture: true })\n    }\n  },\n  animationStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onAnimationStart: true }),\n      captured: keyOf({ onAnimationStartCapture: true })\n    }\n  },\n  blur: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onBlur: true }),\n      captured: keyOf({ onBlurCapture: true })\n    }\n  },\n  canPlay: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCanPlay: true }),\n      captured: keyOf({ onCanPlayCapture: true })\n    }\n  },\n  canPlayThrough: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCanPlayThrough: true }),\n      captured: keyOf({ onCanPlayThroughCapture: true })\n    }\n  },\n  click: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onClick: true }),\n      captured: keyOf({ onClickCapture: true })\n    }\n  },\n  contextMenu: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onContextMenu: true }),\n      captured: keyOf({ onContextMenuCapture: true })\n    }\n  },\n  copy: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCopy: true }),\n      captured: keyOf({ onCopyCapture: true })\n    }\n  },\n  cut: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCut: true }),\n      captured: keyOf({ onCutCapture: true })\n    }\n  },\n  doubleClick: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDoubleClick: true }),\n      captured: keyOf({ onDoubleClickCapture: true })\n    }\n  },\n  drag: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDrag: true }),\n      captured: keyOf({ onDragCapture: true })\n    }\n  },\n  dragEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragEnd: true }),\n      captured: keyOf({ onDragEndCapture: true })\n    }\n  },\n  dragEnter: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragEnter: true }),\n      captured: keyOf({ onDragEnterCapture: true })\n    }\n  },\n  dragExit: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragExit: true }),\n      captured: keyOf({ onDragExitCapture: true })\n    }\n  },\n  dragLeave: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragLeave: true }),\n      captured: keyOf({ onDragLeaveCapture: true })\n    }\n  },\n  dragOver: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragOver: true }),\n      captured: keyOf({ onDragOverCapture: true })\n    }\n  },\n  dragStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragStart: true }),\n      captured: keyOf({ onDragStartCapture: true })\n    }\n  },\n  drop: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDrop: true }),\n      captured: keyOf({ onDropCapture: true })\n    }\n  },\n  durationChange: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDurationChange: true }),\n      captured: keyOf({ onDurationChangeCapture: true })\n    }\n  },\n  emptied: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onEmptied: true }),\n      captured: keyOf({ onEmptiedCapture: true })\n    }\n  },\n  encrypted: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onEncrypted: true }),\n      captured: keyOf({ onEncryptedCapture: true })\n    }\n  },\n  ended: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onEnded: true }),\n      captured: keyOf({ onEndedCapture: true })\n    }\n  },\n  error: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onError: true }),\n      captured: keyOf({ onErrorCapture: true })\n    }\n  },\n  focus: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onFocus: true }),\n      captured: keyOf({ onFocusCapture: true })\n    }\n  },\n  input: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onInput: true }),\n      captured: keyOf({ onInputCapture: true })\n    }\n  },\n  invalid: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onInvalid: true }),\n      captured: keyOf({ onInvalidCapture: true })\n    }\n  },\n  keyDown: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onKeyDown: true }),\n      captured: keyOf({ onKeyDownCapture: true })\n    }\n  },\n  keyPress: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onKeyPress: true }),\n      captured: keyOf({ onKeyPressCapture: true })\n    }\n  },\n  keyUp: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onKeyUp: true }),\n      captured: keyOf({ onKeyUpCapture: true })\n    }\n  },\n  load: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onLoad: true }),\n      captured: keyOf({ onLoadCapture: true })\n    }\n  },\n  loadedData: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onLoadedData: true }),\n      captured: keyOf({ onLoadedDataCapture: true })\n    }\n  },\n  loadedMetadata: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onLoadedMetadata: true }),\n      captured: keyOf({ onLoadedMetadataCapture: true })\n    }\n  },\n  loadStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onLoadStart: true }),\n      captured: keyOf({ onLoadStartCapture: true })\n    }\n  },\n  // Note: We do not allow listening to mouseOver events. Instead, use the\n  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.\n  mouseDown: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onMouseDown: true }),\n      captured: keyOf({ onMouseDownCapture: true })\n    }\n  },\n  mouseMove: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onMouseMove: true }),\n      captured: keyOf({ onMouseMoveCapture: true })\n    }\n  },\n  mouseOut: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onMouseOut: true }),\n      captured: keyOf({ onMouseOutCapture: true })\n    }\n  },\n  mouseOver: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onMouseOver: true }),\n      captured: keyOf({ onMouseOverCapture: true })\n    }\n  },\n  mouseUp: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onMouseUp: true }),\n      captured: keyOf({ onMouseUpCapture: true })\n    }\n  },\n  paste: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onPaste: true }),\n      captured: keyOf({ onPasteCapture: true })\n    }\n  },\n  pause: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onPause: true }),\n      captured: keyOf({ onPauseCapture: true })\n    }\n  },\n  play: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onPlay: true }),\n      captured: keyOf({ onPlayCapture: true })\n    }\n  },\n  playing: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onPlaying: true }),\n      captured: keyOf({ onPlayingCapture: true })\n    }\n  },\n  progress: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onProgress: true }),\n      captured: keyOf({ onProgressCapture: true })\n    }\n  },\n  rateChange: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onRateChange: true }),\n      captured: keyOf({ onRateChangeCapture: true })\n    }\n  },\n  reset: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onReset: true }),\n      captured: keyOf({ onResetCapture: true })\n    }\n  },\n  scroll: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onScroll: true }),\n      captured: keyOf({ onScrollCapture: true })\n    }\n  },\n  seeked: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSeeked: true }),\n      captured: keyOf({ onSeekedCapture: true })\n    }\n  },\n  seeking: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSeeking: true }),\n      captured: keyOf({ onSeekingCapture: true })\n    }\n  },\n  stalled: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onStalled: true }),\n      captured: keyOf({ onStalledCapture: true })\n    }\n  },\n  submit: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSubmit: true }),\n      captured: keyOf({ onSubmitCapture: true })\n    }\n  },\n  suspend: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSuspend: true }),\n      captured: keyOf({ onSuspendCapture: true })\n    }\n  },\n  timeUpdate: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTimeUpdate: true }),\n      captured: keyOf({ onTimeUpdateCapture: true })\n    }\n  },\n  touchCancel: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTouchCancel: true }),\n      captured: keyOf({ onTouchCancelCapture: true })\n    }\n  },\n  touchEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTouchEnd: true }),\n      captured: keyOf({ onTouchEndCapture: true })\n    }\n  },\n  touchMove: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTouchMove: true }),\n      captured: keyOf({ onTouchMoveCapture: true })\n    }\n  },\n  touchStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTouchStart: true }),\n      captured: keyOf({ onTouchStartCapture: true })\n    }\n  },\n  transitionEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTransitionEnd: true }),\n      captured: keyOf({ onTransitionEndCapture: true })\n    }\n  },\n  volumeChange: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onVolumeChange: true }),\n      captured: keyOf({ onVolumeChangeCapture: true })\n    }\n  },\n  waiting: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onWaiting: true }),\n      captured: keyOf({ onWaitingCapture: true })\n    }\n  },\n  wheel: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onWheel: true }),\n      captured: keyOf({ onWheelCapture: true })\n    }\n  }\n};\n\nvar topLevelEventsToDispatchConfig = {\n  topAbort: eventTypes.abort,\n  topAnimationEnd: eventTypes.animationEnd,\n  topAnimationIteration: eventTypes.animationIteration,\n  topAnimationStart: eventTypes.animationStart,\n  topBlur: eventTypes.blur,\n  topCanPlay: eventTypes.canPlay,\n  topCanPlayThrough: eventTypes.canPlayThrough,\n  topClick: eventTypes.click,\n  topContextMenu: eventTypes.contextMenu,\n  topCopy: eventTypes.copy,\n  topCut: eventTypes.cut,\n  topDoubleClick: eventTypes.doubleClick,\n  topDrag: eventTypes.drag,\n  topDragEnd: eventTypes.dragEnd,\n  topDragEnter: eventTypes.dragEnter,\n  topDragExit: eventTypes.dragExit,\n  topDragLeave: eventTypes.dragLeave,\n  topDragOver: eventTypes.dragOver,\n  topDragStart: eventTypes.dragStart,\n  topDrop: eventTypes.drop,\n  topDurationChange: eventTypes.durationChange,\n  topEmptied: eventTypes.emptied,\n  topEncrypted: eventTypes.encrypted,\n  topEnded: eventTypes.ended,\n  topError: eventTypes.error,\n  topFocus: eventTypes.focus,\n  topInput: eventTypes.input,\n  topInvalid: eventTypes.invalid,\n  topKeyDown: eventTypes.keyDown,\n  topKeyPress: eventTypes.keyPress,\n  topKeyUp: eventTypes.keyUp,\n  topLoad: eventTypes.load,\n  topLoadedData: eventTypes.loadedData,\n  topLoadedMetadata: eventTypes.loadedMetadata,\n  topLoadStart: eventTypes.loadStart,\n  topMouseDown: eventTypes.mouseDown,\n  topMouseMove: eventTypes.mouseMove,\n  topMouseOut: eventTypes.mouseOut,\n  topMouseOver: eventTypes.mouseOver,\n  topMouseUp: eventTypes.mouseUp,\n  topPaste: eventTypes.paste,\n  topPause: eventTypes.pause,\n  topPlay: eventTypes.play,\n  topPlaying: eventTypes.playing,\n  topProgress: eventTypes.progress,\n  topRateChange: eventTypes.rateChange,\n  topReset: eventTypes.reset,\n  topScroll: eventTypes.scroll,\n  topSeeked: eventTypes.seeked,\n  topSeeking: eventTypes.seeking,\n  topStalled: eventTypes.stalled,\n  topSubmit: eventTypes.submit,\n  topSuspend: eventTypes.suspend,\n  topTimeUpdate: eventTypes.timeUpdate,\n  topTouchCancel: eventTypes.touchCancel,\n  topTouchEnd: eventTypes.touchEnd,\n  topTouchMove: eventTypes.touchMove,\n  topTouchStart: eventTypes.touchStart,\n  topTransitionEnd: eventTypes.transitionEnd,\n  topVolumeChange: eventTypes.volumeChange,\n  topWaiting: eventTypes.waiting,\n  topWheel: eventTypes.wheel\n};\n\nfor (var type in topLevelEventsToDispatchConfig) {\n  topLevelEventsToDispatchConfig[type].dependencies = [type];\n}\n\nvar ON_CLICK_KEY = keyOf({ onClick: null });\nvar onClickListeners = {};\n\nfunction getDictionaryKey(inst) {\n  // Prevents V8 performance issue:\n  // https://github.com/facebook/react/pull/7232\n  return '.' + inst._rootNodeID;\n}\n\nvar SimpleEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n    if (!dispatchConfig) {\n      return null;\n    }\n    var EventConstructor;\n    switch (topLevelType) {\n      case topLevelTypes.topAbort:\n      case topLevelTypes.topCanPlay:\n      case topLevelTypes.topCanPlayThrough:\n      case topLevelTypes.topDurationChange:\n      case topLevelTypes.topEmptied:\n      case topLevelTypes.topEncrypted:\n      case topLevelTypes.topEnded:\n      case topLevelTypes.topError:\n      case topLevelTypes.topInput:\n      case topLevelTypes.topInvalid:\n      case topLevelTypes.topLoad:\n      case topLevelTypes.topLoadedData:\n      case topLevelTypes.topLoadedMetadata:\n      case topLevelTypes.topLoadStart:\n      case topLevelTypes.topPause:\n      case topLevelTypes.topPlay:\n      case topLevelTypes.topPlaying:\n      case topLevelTypes.topProgress:\n      case topLevelTypes.topRateChange:\n      case topLevelTypes.topReset:\n      case topLevelTypes.topSeeked:\n      case topLevelTypes.topSeeking:\n      case topLevelTypes.topStalled:\n      case topLevelTypes.topSubmit:\n      case topLevelTypes.topSuspend:\n      case topLevelTypes.topTimeUpdate:\n      case topLevelTypes.topVolumeChange:\n      case topLevelTypes.topWaiting:\n        // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n        EventConstructor = SyntheticEvent;\n        break;\n      case topLevelTypes.topKeyPress:\n        // Firefox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n      /* falls through */\n      case topLevelTypes.topKeyDown:\n      case topLevelTypes.topKeyUp:\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n      case topLevelTypes.topBlur:\n      case topLevelTypes.topFocus:\n        EventConstructor = SyntheticFocusEvent;\n        break;\n      case topLevelTypes.topClick:\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n      /* falls through */\n      case topLevelTypes.topContextMenu:\n      case topLevelTypes.topDoubleClick:\n      case topLevelTypes.topMouseDown:\n      case topLevelTypes.topMouseMove:\n      case topLevelTypes.topMouseOut:\n      case topLevelTypes.topMouseOver:\n      case topLevelTypes.topMouseUp:\n        EventConstructor = SyntheticMouseEvent;\n        break;\n      case topLevelTypes.topDrag:\n      case topLevelTypes.topDragEnd:\n      case topLevelTypes.topDragEnter:\n      case topLevelTypes.topDragExit:\n      case topLevelTypes.topDragLeave:\n      case topLevelTypes.topDragOver:\n      case topLevelTypes.topDragStart:\n      case topLevelTypes.topDrop:\n        EventConstructor = SyntheticDragEvent;\n        break;\n      case topLevelTypes.topTouchCancel:\n      case topLevelTypes.topTouchEnd:\n      case topLevelTypes.topTouchMove:\n      case topLevelTypes.topTouchStart:\n        EventConstructor = SyntheticTouchEvent;\n        break;\n      case topLevelTypes.topAnimationEnd:\n      case topLevelTypes.topAnimationIteration:\n      case topLevelTypes.topAnimationStart:\n        EventConstructor = SyntheticAnimationEvent;\n        break;\n      case topLevelTypes.topTransitionEnd:\n        EventConstructor = SyntheticTransitionEvent;\n        break;\n      case topLevelTypes.topScroll:\n        EventConstructor = SyntheticUIEvent;\n        break;\n      case topLevelTypes.topWheel:\n        EventConstructor = SyntheticWheelEvent;\n        break;\n      case topLevelTypes.topCopy:\n      case topLevelTypes.topCut:\n      case topLevelTypes.topPaste:\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n    }\n    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;\n    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);\n    EventPropagators.accumulateTwoPhaseDispatches(event);\n    return event;\n  },\n\n  didPutListener: function (inst, registrationName, listener) {\n    // Mobile Safari does not fire properly bubble click events on\n    // non-interactive elements, which means delegated click listeners do not\n    // fire. The workaround for this bug involves attaching an empty click\n    // listener on the target node.\n    if (registrationName === ON_CLICK_KEY) {\n      var key = getDictionaryKey(inst);\n      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n      if (!onClickListeners[key]) {\n        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);\n      }\n    }\n  },\n\n  willDeleteListener: function (inst, registrationName) {\n    if (registrationName === ON_CLICK_KEY) {\n      var key = getDictionaryKey(inst);\n      onClickListeners[key].remove();\n      delete onClickListeners[key];\n    }\n  }\n\n};\n\nmodule.exports = SimpleEventPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SimpleEventPlugin.js\n ** module id = 153\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticAnimationEvent\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\n */\nvar AnimationEventInterface = {\n  animationName: null,\n  elapsedTime: null,\n  pseudoElement: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);\n\nmodule.exports = SyntheticAnimationEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticAnimationEvent.js\n ** module id = 154\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticClipboardEvent\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\nvar ClipboardEventInterface = {\n  clipboardData: function (event) {\n    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\n\nmodule.exports = SyntheticClipboardEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticClipboardEvent.js\n ** module id = 155\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticCompositionEvent\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n */\nvar CompositionEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);\n\nmodule.exports = SyntheticCompositionEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticCompositionEvent.js\n ** module id = 156\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticDragEvent\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar DragEventInterface = {\n  dataTransfer: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);\n\nmodule.exports = SyntheticDragEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticDragEvent.js\n ** module id = 157\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticFocusEvent\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\n/**\n * @interface FocusEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar FocusEventInterface = {\n  relatedTarget: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);\n\nmodule.exports = SyntheticFocusEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticFocusEvent.js\n ** module id = 158\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticInputEvent\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n *      /#events-inputevents\n */\nvar InputEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);\n\nmodule.exports = SyntheticInputEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticInputEvent.js\n ** module id = 159\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticKeyboardEvent\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\nvar getEventCharCode = require('./getEventCharCode');\nvar getEventKey = require('./getEventKey');\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar KeyboardEventInterface = {\n  key: getEventKey,\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function (event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    return 0;\n  },\n  keyCode: function (event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  },\n  which: function (event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\n\nmodule.exports = SyntheticKeyboardEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticKeyboardEvent.js\n ** module id = 160\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticTouchEvent\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\nvar TouchEventInterface = {\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: getEventModifierState\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\n\nmodule.exports = SyntheticTouchEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticTouchEvent.js\n ** module id = 161\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticTransitionEvent\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\n */\nvar TransitionEventInterface = {\n  propertyName: null,\n  elapsedTime: null,\n  pseudoElement: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);\n\nmodule.exports = SyntheticTransitionEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticTransitionEvent.js\n ** module id = 162\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticWheelEvent\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar WheelEventInterface = {\n  deltaX: function (event) {\n    return 'deltaX' in event ? event.deltaX :\n    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n  },\n  deltaY: function (event) {\n    return 'deltaY' in event ? event.deltaY :\n    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n    'wheelDeltaY' in event ? -event.wheelDeltaY :\n    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n    'wheelDelta' in event ? -event.wheelDelta : 0;\n  },\n  deltaZ: null,\n\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticMouseEvent}\n */\nfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\n\nmodule.exports = SyntheticWheelEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticWheelEvent.js\n ** module id = 163\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule adler32\n * \n */\n\n'use strict';\n\nvar MOD = 65521;\n\n// adler32 is not cryptographically strong, and is only used to sanity check that\n// markup generated on the server matches the markup generated on the client.\n// This implementation (a modified version of the SheetJS version) has been optimized\n// for our use case, at the expense of conforming to the adler32 specification\n// for non-ascii inputs.\nfunction adler32(data) {\n  var a = 1;\n  var b = 0;\n  var i = 0;\n  var l = data.length;\n  var m = l & ~0x3;\n  while (i < m) {\n    var n = Math.min(i + 4096, m);\n    for (; i < n; i += 4) {\n      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));\n    }\n    a %= MOD;\n    b %= MOD;\n  }\n  for (; i < l; i++) {\n    b += a += data.charCodeAt(i);\n  }\n  a %= MOD;\n  b %= MOD;\n  return a | b << 16;\n}\n\nmodule.exports = adler32;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/adler32.js\n ** module id = 164\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule checkReactTypeSpec\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactPropTypesSecret = require('./ReactPropTypesSecret');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('./ReactComponentTreeHook');\n}\n\nvar loggedTypeFailures = {};\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?object} element The React element that is being type-checked\n * @param {?number} debugID The React component instance that is being type-checked\n * @private\n */\nfunction checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {\n  for (var typeSpecName in typeSpecs) {\n    if (typeSpecs.hasOwnProperty(typeSpecName)) {\n      var error;\n      // Prop type validation may throw. In case they do, we don't want to\n      // fail the render phase where it didn't fail before. So we log it.\n      // After these have been cleaned up, we'll let them throw.\n      try {\n        // This is intentionally an invariant that gets caught. It's the same\n        // behavior as without this statement except with a better message.\n        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;\n        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n      } catch (ex) {\n        error = ex;\n      }\n      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var componentStackInfo = '';\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (!ReactComponentTreeHook) {\n            ReactComponentTreeHook = require('./ReactComponentTreeHook');\n          }\n          if (debugID !== null) {\n            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);\n          } else if (element !== null) {\n            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);\n          }\n        }\n\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;\n      }\n    }\n  }\n}\n\nmodule.exports = checkReactTypeSpec;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/checkReactTypeSpec.js\n ** module id = 165\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule dangerousStyleValue\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\nvar warning = require('fbjs/lib/warning');\n\nvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\nvar styleWarnings = {};\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @param {ReactDOMComponent} component\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value, component) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n\n  var isNonNumeric = isNaN(value);\n  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n    return '' + value; // cast to string\n  }\n\n  if (typeof value === 'string') {\n    if (process.env.NODE_ENV !== 'production') {\n      // Allow '0' to pass through without warning. 0 is already special and\n      // doesn't require units, so we don't need to warn about it.\n      if (component && value !== '0') {\n        var owner = component._currentElement._owner;\n        var ownerName = owner ? owner.getName() : null;\n        if (ownerName && !styleWarnings[ownerName]) {\n          styleWarnings[ownerName] = {};\n        }\n        var warned = false;\n        if (ownerName) {\n          var warnings = styleWarnings[ownerName];\n          warned = warnings[name];\n          if (!warned) {\n            warnings[name] = true;\n          }\n        }\n        if (!warned) {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;\n        }\n      }\n    }\n    value = value.trim();\n  }\n  return value + 'px';\n}\n\nmodule.exports = dangerousStyleValue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/dangerousStyleValue.js\n ** module id = 166\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule findDOMNode\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstanceMap = require('./ReactInstanceMap');\n\nvar getHostComponentFromComposite = require('./getHostComponentFromComposite');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Returns the DOM node rendered by this element.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode\n *\n * @param {ReactComponent|DOMElement} componentOrElement\n * @return {?DOMElement} The root node of this element.\n */\nfunction findDOMNode(componentOrElement) {\n  if (process.env.NODE_ENV !== 'production') {\n    var owner = ReactCurrentOwner.current;\n    if (owner !== null) {\n      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n      owner._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrElement == null) {\n    return null;\n  }\n  if (componentOrElement.nodeType === 1) {\n    return componentOrElement;\n  }\n\n  var inst = ReactInstanceMap.get(componentOrElement);\n  if (inst) {\n    inst = getHostComponentFromComposite(inst);\n    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;\n  }\n\n  if (typeof componentOrElement.render === 'function') {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;\n  } else {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;\n  }\n}\n\nmodule.exports = findDOMNode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/findDOMNode.js\n ** module id = 167\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule flattenChildren\n * \n */\n\n'use strict';\n\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar traverseAllChildren = require('./traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('./ReactComponentTreeHook');\n}\n\n/**\n * @param {function} traverseContext Context passed through traversal.\n * @param {?ReactComponent} child React child component.\n * @param {!string} name String name of key path to child.\n * @param {number=} selfDebugID Optional debugID of the current internal instance.\n */\nfunction flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {\n  // We found a component instance.\n  if (traverseContext && typeof traverseContext === 'object') {\n    var result = traverseContext;\n    var keyUnique = result[name] === undefined;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!ReactComponentTreeHook) {\n        ReactComponentTreeHook = require('./ReactComponentTreeHook');\n      }\n      if (!keyUnique) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n      }\n    }\n    if (keyUnique && child != null) {\n      result[name] = child;\n    }\n  }\n}\n\n/**\n * Flattens children that are typically specified as `props.children`. Any null\n * children will not be included in the resulting object.\n * @return {!object} flattened children keyed by name.\n */\nfunction flattenChildren(children, selfDebugID) {\n  if (children == null) {\n    return children;\n  }\n  var result = {};\n\n  if (process.env.NODE_ENV !== 'production') {\n    traverseAllChildren(children, function (traverseContext, child, name) {\n      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);\n    }, result);\n  } else {\n    traverseAllChildren(children, flattenSingleChildIntoContext, result);\n  }\n  return result;\n}\n\nmodule.exports = flattenChildren;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/flattenChildren.js\n ** module id = 168\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventKey\n */\n\n'use strict';\n\nvar getEventCharCode = require('./getEventCharCode');\n\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar normalizeKey = {\n  'Esc': 'Escape',\n  'Spacebar': ' ',\n  'Left': 'ArrowLeft',\n  'Up': 'ArrowUp',\n  'Right': 'ArrowRight',\n  'Down': 'ArrowDown',\n  'Del': 'Delete',\n  'Win': 'OS',\n  'Menu': 'ContextMenu',\n  'Apps': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'MozPrintableKey': 'Unidentified'\n};\n\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar translateToKey = {\n  8: 'Backspace',\n  9: 'Tab',\n  12: 'Clear',\n  13: 'Enter',\n  16: 'Shift',\n  17: 'Control',\n  18: 'Alt',\n  19: 'Pause',\n  20: 'CapsLock',\n  27: 'Escape',\n  32: ' ',\n  33: 'PageUp',\n  34: 'PageDown',\n  35: 'End',\n  36: 'Home',\n  37: 'ArrowLeft',\n  38: 'ArrowUp',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n  45: 'Insert',\n  46: 'Delete',\n  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',\n  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',\n  144: 'NumLock',\n  145: 'ScrollLock',\n  224: 'Meta'\n};\n\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\nfunction getEventKey(nativeEvent) {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  }\n\n  // Browser does not implement `key`, polyfill as much of it as we can.\n  if (nativeEvent.type === 'keypress') {\n    var charCode = getEventCharCode(nativeEvent);\n\n    // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n  return '';\n}\n\nmodule.exports = getEventKey;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getEventKey.js\n ** module id = 169\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getNodeForCharacterOffset\n */\n\n'use strict';\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\n\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n  return node;\n}\n\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  var nodeStart = 0;\n  var nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === 3) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\nmodule.exports = getNodeForCharacterOffset;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getNodeForCharacterOffset.js\n ** module id = 170\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getVendorPrefixedEventName\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\n/**\n * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n *\n * @param {string} styleProp\n * @param {string} eventName\n * @returns {object}\n */\nfunction makePrefixMap(styleProp, eventName) {\n  var prefixes = {};\n\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n  prefixes['Moz' + styleProp] = 'moz' + eventName;\n  prefixes['ms' + styleProp] = 'MS' + eventName;\n  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();\n\n  return prefixes;\n}\n\n/**\n * A list of event names to a configurable list of vendor prefixes.\n */\nvar vendorPrefixes = {\n  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n  transitionend: makePrefixMap('Transition', 'TransitionEnd')\n};\n\n/**\n * Event names that have already been detected and prefixed (if applicable).\n */\nvar prefixedEventNames = {};\n\n/**\n * Element to check for prefixes on.\n */\nvar style = {};\n\n/**\n * Bootstrap if a DOM exists.\n */\nif (ExecutionEnvironment.canUseDOM) {\n  style = document.createElement('div').style;\n\n  // On some platforms, in particular some releases of Android 4.x,\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n  // style object but the events that fire will still be prefixed, so we need\n  // to check if the un-prefixed events are usable, and if not remove them from the map.\n  if (!('AnimationEvent' in window)) {\n    delete vendorPrefixes.animationend.animation;\n    delete vendorPrefixes.animationiteration.animation;\n    delete vendorPrefixes.animationstart.animation;\n  }\n\n  // Same as above\n  if (!('TransitionEvent' in window)) {\n    delete vendorPrefixes.transitionend.transition;\n  }\n}\n\n/**\n * Attempts to determine the correct vendor prefixed event name.\n *\n * @param {string} eventName\n * @returns {string}\n */\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) {\n    return prefixedEventNames[eventName];\n  } else if (!vendorPrefixes[eventName]) {\n    return eventName;\n  }\n\n  var prefixMap = vendorPrefixes[eventName];\n\n  for (var styleProp in prefixMap) {\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n      return prefixedEventNames[eventName] = prefixMap[styleProp];\n    }\n  }\n\n  return '';\n}\n\nmodule.exports = getVendorPrefixedEventName;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getVendorPrefixedEventName.js\n ** module id = 171\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule onlyChild\n */\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactElement = require('./ReactElement');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;\n  return children;\n}\n\nmodule.exports = onlyChild;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/onlyChild.js\n ** module id = 172\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule quoteAttributeValueForBrowser\n */\n\n'use strict';\n\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\n\n/**\n * Escapes attribute value to prevent scripting attacks.\n *\n * @param {*} value Value to escape.\n * @return {string} An escaped string.\n */\nfunction quoteAttributeValueForBrowser(value) {\n  return '\"' + escapeTextContentForBrowser(value) + '\"';\n}\n\nmodule.exports = quoteAttributeValueForBrowser;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/quoteAttributeValueForBrowser.js\n ** module id = 173\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n* @providesModule renderSubtreeIntoContainer\n*/\n\n'use strict';\n\nvar ReactMount = require('./ReactMount');\n\nmodule.exports = ReactMount.renderSubtreeIntoContainer;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/renderSubtreeIntoContainer.js\n ** module id = 174\n ** module chunks = 0\n **/","(function(root, factory){\n\n\t//UMD\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\tdefine(function() {\n\t\t\treturn factory();\n\t\t});\n\t} else if (typeof module === \"object\") {\n\t\tmodule.exports = factory();\n \t} else {\n\t\troot.Tone = factory();\n\t}\n\n}(this, function(){\n\n\t\"use strict\";\n\t\n\tvar Tone;\n\t//constructs the main Tone object\n\tfunction Main(func){\n\t\tTone = func();\n\t}\n\t//invokes each of the modules with the main Tone object as the argument\n\tfunction Module(func){\n\t\tfunc(Tone);\n\t}\t/**\n\t *  Tone.js\n\t *  @author Yotam Mann\n\t *  @license http://opensource.org/licenses/MIT MIT License\n\t *  @copyright 2014-2016 Yotam Mann\n\t */\n\tMain(function () {\n\t    \n\t    //////////////////////////////////////////////////////////////////////////\n\t    //\tWEB AUDIO CONTEXT\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    function isUndef(val) {\n\t        return typeof val === 'undefined';\n\t    }\n\t    function isFunction(val) {\n\t        return typeof val === 'function';\n\t    }\n\t    var audioContext;\n\t    //polyfill for AudioContext and OfflineAudioContext\n\t    if (isUndef(window.AudioContext)) {\n\t        window.AudioContext = window.webkitAudioContext;\n\t    }\n\t    if (isUndef(window.OfflineAudioContext)) {\n\t        window.OfflineAudioContext = window.webkitOfflineAudioContext;\n\t    }\n\t    if (!isUndef(AudioContext)) {\n\t        audioContext = new AudioContext();\n\t    } else {\n\t        throw new Error('Web Audio is not supported in this browser');\n\t    }\n\t    //SHIMS////////////////////////////////////////////////////////////////////\n\t    if (!isFunction(AudioContext.prototype.createGain)) {\n\t        AudioContext.prototype.createGain = AudioContext.prototype.createGainNode;\n\t    }\n\t    if (!isFunction(AudioContext.prototype.createDelay)) {\n\t        AudioContext.prototype.createDelay = AudioContext.prototype.createDelayNode;\n\t    }\n\t    if (!isFunction(AudioContext.prototype.createPeriodicWave)) {\n\t        AudioContext.prototype.createPeriodicWave = AudioContext.prototype.createWaveTable;\n\t    }\n\t    if (!isFunction(AudioBufferSourceNode.prototype.start)) {\n\t        AudioBufferSourceNode.prototype.start = AudioBufferSourceNode.prototype.noteGrainOn;\n\t    }\n\t    if (!isFunction(AudioBufferSourceNode.prototype.stop)) {\n\t        AudioBufferSourceNode.prototype.stop = AudioBufferSourceNode.prototype.noteOff;\n\t    }\n\t    if (!isFunction(OscillatorNode.prototype.start)) {\n\t        OscillatorNode.prototype.start = OscillatorNode.prototype.noteOn;\n\t    }\n\t    if (!isFunction(OscillatorNode.prototype.stop)) {\n\t        OscillatorNode.prototype.stop = OscillatorNode.prototype.noteOff;\n\t    }\n\t    if (!isFunction(OscillatorNode.prototype.setPeriodicWave)) {\n\t        OscillatorNode.prototype.setPeriodicWave = OscillatorNode.prototype.setWaveTable;\n\t    }\n\t    //extend the connect function to include Tones\n\t    if (isUndef(AudioNode.prototype._nativeConnect)) {\n\t        AudioNode.prototype._nativeConnect = AudioNode.prototype.connect;\n\t        AudioNode.prototype.connect = function (B, outNum, inNum) {\n\t            if (B.input) {\n\t                if (Array.isArray(B.input)) {\n\t                    if (isUndef(inNum)) {\n\t                        inNum = 0;\n\t                    }\n\t                    this.connect(B.input[inNum]);\n\t                } else {\n\t                    this.connect(B.input, outNum, inNum);\n\t                }\n\t            } else {\n\t                try {\n\t                    if (B instanceof AudioNode) {\n\t                        this._nativeConnect(B, outNum, inNum);\n\t                    } else {\n\t                        this._nativeConnect(B, outNum);\n\t                    }\n\t                } catch (e) {\n\t                    throw new Error('error connecting to node: ' + B);\n\t                }\n\t            }\n\t        };\n\t    }\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tTONE\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  @class  Tone is the base class of all other classes. It provides \n\t\t *          a lot of methods and functionality to all classes that extend\n\t\t *          it. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @alias Tone\n\t\t *  @param {number} [inputs=1] the number of input nodes\n\t\t *  @param {number} [outputs=1] the number of output nodes\n\t\t */\n\t    var Tone = function (inputs, outputs) {\n\t        /**\n\t\t\t *  the input node(s)\n\t\t\t *  @type {GainNode|Array}\n\t\t\t */\n\t        if (isUndef(inputs) || inputs === 1) {\n\t            this.input = this.context.createGain();\n\t        } else if (inputs > 1) {\n\t            this.input = new Array(inputs);\n\t        }\n\t        /**\n\t\t\t *  the output node(s)\n\t\t\t *  @type {GainNode|Array}\n\t\t\t */\n\t        if (isUndef(outputs) || outputs === 1) {\n\t            this.output = this.context.createGain();\n\t        } else if (outputs > 1) {\n\t            this.output = new Array(inputs);\n\t        }\n\t    };\n\t    /**\n\t\t *  Set the parameters at once. Either pass in an\n\t\t *  object mapping parameters to values, or to set a\n\t\t *  single parameter, by passing in a string and value.\n\t\t *  The last argument is an optional ramp time which \n\t\t *  will ramp any signal values to their destination value\n\t\t *  over the duration of the rampTime.\n\t\t *  @param {Object|string} params\n\t\t *  @param {number=} value\n\t\t *  @param {Time=} rampTime\n\t\t *  @returns {Tone} this\n\t\t *  @example\n\t\t * //set values using an object\n\t\t * filter.set({\n\t\t * \t\"frequency\" : 300,\n\t\t * \t\"type\" : highpass\n\t\t * });\n\t\t *  @example\n\t\t * filter.set(\"type\", \"highpass\");\n\t\t *  @example\n\t\t * //ramp to the value 220 over 3 seconds. \n\t\t * oscillator.set({\n\t\t * \t\"frequency\" : 220\n\t\t * }, 3);\n\t\t */\n\t    Tone.prototype.set = function (params, value, rampTime) {\n\t        if (this.isObject(params)) {\n\t            rampTime = value;\n\t        } else if (this.isString(params)) {\n\t            var tmpObj = {};\n\t            tmpObj[params] = value;\n\t            params = tmpObj;\n\t        }\n\t        for (var attr in params) {\n\t            value = params[attr];\n\t            var parent = this;\n\t            if (attr.indexOf('.') !== -1) {\n\t                var attrSplit = attr.split('.');\n\t                for (var i = 0; i < attrSplit.length - 1; i++) {\n\t                    parent = parent[attrSplit[i]];\n\t                }\n\t                attr = attrSplit[attrSplit.length - 1];\n\t            }\n\t            var param = parent[attr];\n\t            if (isUndef(param)) {\n\t                continue;\n\t            }\n\t            if (Tone.Signal && param instanceof Tone.Signal || Tone.Param && param instanceof Tone.Param) {\n\t                if (param.value !== value) {\n\t                    if (isUndef(rampTime)) {\n\t                        param.value = value;\n\t                    } else {\n\t                        param.rampTo(value, rampTime);\n\t                    }\n\t                }\n\t            } else if (param instanceof AudioParam) {\n\t                if (param.value !== value) {\n\t                    param.value = value;\n\t                }\n\t            } else if (param instanceof Tone) {\n\t                param.set(value);\n\t            } else if (param !== value) {\n\t                parent[attr] = value;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the object's attributes. Given no arguments get\n\t\t *  will return all available object properties and their corresponding\n\t\t *  values. Pass in a single attribute to retrieve or an array\n\t\t *  of attributes. The attribute strings can also include a \".\"\n\t\t *  to access deeper properties.\n\t\t *  @example\n\t\t * osc.get();\n\t\t * //returns {\"type\" : \"sine\", \"frequency\" : 440, ...etc}\n\t\t *  @example\n\t\t * osc.get(\"type\");\n\t\t * //returns { \"type\" : \"sine\"}\n\t\t * @example\n\t\t * //use dot notation to access deep properties\n\t\t * synth.get([\"envelope.attack\", \"envelope.release\"]);\n\t\t * //returns {\"envelope\" : {\"attack\" : 0.2, \"release\" : 0.4}}\n\t\t *  @param {Array=|string|undefined} params the parameters to get, otherwise will return \n\t\t *  \t\t\t\t\t                  all available.\n\t\t *  @returns {Object}\n\t\t */\n\t    Tone.prototype.get = function (params) {\n\t        if (isUndef(params)) {\n\t            params = this._collectDefaults(this.constructor);\n\t        } else if (this.isString(params)) {\n\t            params = [params];\n\t        }\n\t        var ret = {};\n\t        for (var i = 0; i < params.length; i++) {\n\t            var attr = params[i];\n\t            var parent = this;\n\t            var subRet = ret;\n\t            if (attr.indexOf('.') !== -1) {\n\t                var attrSplit = attr.split('.');\n\t                for (var j = 0; j < attrSplit.length - 1; j++) {\n\t                    var subAttr = attrSplit[j];\n\t                    subRet[subAttr] = subRet[subAttr] || {};\n\t                    subRet = subRet[subAttr];\n\t                    parent = parent[subAttr];\n\t                }\n\t                attr = attrSplit[attrSplit.length - 1];\n\t            }\n\t            var param = parent[attr];\n\t            if (this.isObject(params[attr])) {\n\t                subRet[attr] = param.get();\n\t            } else if (Tone.Signal && param instanceof Tone.Signal) {\n\t                subRet[attr] = param.value;\n\t            } else if (Tone.Param && param instanceof Tone.Param) {\n\t                subRet[attr] = param.value;\n\t            } else if (param instanceof AudioParam) {\n\t                subRet[attr] = param.value;\n\t            } else if (param instanceof Tone) {\n\t                subRet[attr] = param.get();\n\t            } else if (!isFunction(param) && !isUndef(param)) {\n\t                subRet[attr] = param;\n\t            }\n\t        }\n\t        return ret;\n\t    };\n\t    /**\n\t\t *  collect all of the default attributes in one\n\t\t *  @private\n\t\t *  @param {function} constr the constructor to find the defaults from\n\t\t *  @return {Array} all of the attributes which belong to the class\n\t\t */\n\t    Tone.prototype._collectDefaults = function (constr) {\n\t        var ret = [];\n\t        if (!isUndef(constr.defaults)) {\n\t            ret = Object.keys(constr.defaults);\n\t        }\n\t        if (!isUndef(constr._super)) {\n\t            var superDefs = this._collectDefaults(constr._super);\n\t            //filter out repeats\n\t            for (var i = 0; i < superDefs.length; i++) {\n\t                if (ret.indexOf(superDefs[i]) === -1) {\n\t                    ret.push(superDefs[i]);\n\t                }\n\t            }\n\t        }\n\t        return ret;\n\t    };\n\t    /**\n\t\t *  @returns {string} returns the name of the class as a string\n\t\t */\n\t    Tone.prototype.toString = function () {\n\t        for (var className in Tone) {\n\t            var isLetter = className[0].match(/^[A-Z]$/);\n\t            var sameConstructor = Tone[className] === this.constructor;\n\t            if (isFunction(Tone[className]) && isLetter && sameConstructor) {\n\t                return className;\n\t            }\n\t        }\n\t        return 'Tone';\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tCLASS VARS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  A static pointer to the audio context accessible as Tone.context. \n\t\t *  @type {AudioContext}\n\t\t */\n\t    Tone.context = audioContext;\n\t    /**\n\t\t *  The audio context.\n\t\t *  @type {AudioContext}\n\t\t */\n\t    Tone.prototype.context = Tone.context;\n\t    /**\n\t\t *  the default buffer size\n\t\t *  @type {number}\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.prototype.bufferSize = 2048;\n\t    /**\n\t\t *  The delay time of a single frame (128 samples according to the spec). \n\t\t *  @type {number}\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.prototype.blockTime = 128 / Tone.context.sampleRate;\n\t    /**\n\t\t *  The time of a single sample\n\t\t *  @type {number}\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.prototype.sampleTime = 1 / Tone.context.sampleRate;\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tCONNECTIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  disconnect and dispose\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.dispose = function () {\n\t        if (!this.isUndef(this.input)) {\n\t            if (this.input instanceof AudioNode) {\n\t                this.input.disconnect();\n\t            }\n\t            this.input = null;\n\t        }\n\t        if (!this.isUndef(this.output)) {\n\t            if (this.output instanceof AudioNode) {\n\t                this.output.disconnect();\n\t            }\n\t            this.output = null;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  a silent connection to the DesinationNode\n\t\t *  which will ensure that anything connected to it\n\t\t *  will not be garbage collected\n\t\t *  \n\t\t *  @private\n\t\t */\n\t    var _silentNode = null;\n\t    /**\n\t\t *  makes a connection to ensure that the node will not be garbage collected\n\t\t *  until 'dispose' is explicitly called\n\t\t *\n\t\t *  use carefully. circumvents JS and WebAudio's normal Garbage Collection behavior\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.noGC = function () {\n\t        this.output.connect(_silentNode);\n\t        return this;\n\t    };\n\t    AudioNode.prototype.noGC = function () {\n\t        this.connect(_silentNode);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  connect the output of a ToneNode to an AudioParam, AudioNode, or ToneNode\n\t\t *  @param  {Tone | AudioParam | AudioNode} unit \n\t\t *  @param {number} [outputNum=0] optionally which output to connect from\n\t\t *  @param {number} [inputNum=0] optionally which input to connect to\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.connect = function (unit, outputNum, inputNum) {\n\t        if (Array.isArray(this.output)) {\n\t            outputNum = this.defaultArg(outputNum, 0);\n\t            this.output[outputNum].connect(unit, 0, inputNum);\n\t        } else {\n\t            this.output.connect(unit, outputNum, inputNum);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  disconnect the output\n\t\t *  @param {Number|AudioNode} output Either the output index to disconnect\n\t\t *                                   if the output is an array, or the\n\t\t *                                   node to disconnect from.\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.disconnect = function (output) {\n\t        if (Array.isArray(this.output)) {\n\t            output = this.defaultArg(output, 0);\n\t            this.output[output].disconnect();\n\t        } else if (!this.isUndef(output)) {\n\t            this.output.disconnect(output);\n\t        } else {\n\t            this.output.disconnect();\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  connect together all of the arguments in series\n\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.connectSeries = function () {\n\t        if (arguments.length > 1) {\n\t            var currentUnit = arguments[0];\n\t            for (var i = 1; i < arguments.length; i++) {\n\t                var toUnit = arguments[i];\n\t                currentUnit.connect(toUnit);\n\t                currentUnit = toUnit;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Connect the output of this node to the rest of the nodes in series.\n\t\t *  @example\n\t\t *  //connect a node to an effect, panVol and then to the master output\n\t\t *  node.chain(effect, panVol, Tone.Master);\n\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.chain = function () {\n\t        if (arguments.length > 0) {\n\t            var currentUnit = this;\n\t            for (var i = 0; i < arguments.length; i++) {\n\t                var toUnit = arguments[i];\n\t                currentUnit.connect(toUnit);\n\t                currentUnit = toUnit;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  connect the output of this node to the rest of the nodes in parallel.\n\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.fan = function () {\n\t        if (arguments.length > 0) {\n\t            for (var i = 0; i < arguments.length; i++) {\n\t                this.connect(arguments[i]);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    //give native nodes chain and fan methods\n\t    AudioNode.prototype.chain = Tone.prototype.chain;\n\t    AudioNode.prototype.fan = Tone.prototype.fan;\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tUTILITIES / HELPERS / MATHS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  If the `given` parameter is undefined, use the `fallback`. \n\t\t *  If both `given` and `fallback` are object literals, it will\n\t\t *  return a deep copy which includes all of the parameters from both \n\t\t *  objects. If a parameter is undefined in given, it will return\n\t\t *  the fallback property. \n\t\t *  <br><br>\n\t\t *  WARNING: if object is self referential, it will go into an an \n\t\t *  infinite recursive loop.\n\t\t *  \n\t\t *  @param  {*} given    \n\t\t *  @param  {*} fallback \n\t\t *  @return {*}          \n\t\t */\n\t    Tone.prototype.defaultArg = function (given, fallback) {\n\t        if (this.isObject(given) && this.isObject(fallback)) {\n\t            var ret = {};\n\t            //make a deep copy of the given object\n\t            for (var givenProp in given) {\n\t                ret[givenProp] = this.defaultArg(fallback[givenProp], given[givenProp]);\n\t            }\n\t            for (var fallbackProp in fallback) {\n\t                ret[fallbackProp] = this.defaultArg(given[fallbackProp], fallback[fallbackProp]);\n\t            }\n\t            return ret;\n\t        } else {\n\t            return isUndef(given) ? fallback : given;\n\t        }\n\t    };\n\t    /**\n\t\t *  returns the args as an options object with given arguments\n\t\t *  mapped to the names provided. \n\t\t *\n\t\t *  if the args given is an array containing only one object, it is assumed\n\t\t *  that that's already the options object and will just return it. \n\t\t *  \n\t\t *  @param  {Array} values  the 'arguments' object of the function\n\t\t *  @param  {Array} keys the names of the arguments as they\n\t\t *                                 should appear in the options object\n\t\t *  @param {Object=} defaults optional defaults to mixin to the returned \n\t\t *                            options object                              \n\t\t *  @return {Object}       the options object with the names mapped to the arguments\n\t\t */\n\t    Tone.prototype.optionsObject = function (values, keys, defaults) {\n\t        var options = {};\n\t        if (values.length === 1 && this.isObject(values[0])) {\n\t            options = values[0];\n\t        } else {\n\t            for (var i = 0; i < keys.length; i++) {\n\t                options[keys[i]] = values[i];\n\t            }\n\t        }\n\t        if (!this.isUndef(defaults)) {\n\t            return this.defaultArg(options, defaults);\n\t        } else {\n\t            return options;\n\t        }\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // TYPE CHECKING\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  test if the arg is undefined\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is undefined\n\t\t *  @function\n\t\t */\n\t    Tone.prototype.isUndef = isUndef;\n\t    /**\n\t\t *  test if the arg is a function\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a function\n\t\t *  @function\n\t\t */\n\t    Tone.prototype.isFunction = isFunction;\n\t    /**\n\t\t *  Test if the argument is a number.\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a number\n\t\t */\n\t    Tone.prototype.isNumber = function (arg) {\n\t        return typeof arg === 'number';\n\t    };\n\t    /**\n\t\t *  Test if the given argument is an object literal (i.e. `{}`);\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is an object literal.\n\t\t */\n\t    Tone.prototype.isObject = function (arg) {\n\t        return Object.prototype.toString.call(arg) === '[object Object]' && arg.constructor === Object;\n\t    };\n\t    /**\n\t\t *  Test if the argument is a boolean.\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a boolean\n\t\t */\n\t    Tone.prototype.isBoolean = function (arg) {\n\t        return typeof arg === 'boolean';\n\t    };\n\t    /**\n\t\t *  Test if the argument is an Array\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is an array\n\t\t */\n\t    Tone.prototype.isArray = function (arg) {\n\t        return Array.isArray(arg);\n\t    };\n\t    /**\n\t\t *  Test if the argument is a string.\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a string\n\t\t */\n\t    Tone.prototype.isString = function (arg) {\n\t        return typeof arg === 'string';\n\t    };\n\t    /**\n\t\t *  An empty function.\n\t\t *  @static\n\t\t */\n\t    Tone.noOp = function () {\n\t    };\n\t    /**\n\t\t *  Make the property not writable. Internal use only. \n\t\t *  @private\n\t\t *  @param  {string}  property  the property to make not writable\n\t\t */\n\t    Tone.prototype._readOnly = function (property) {\n\t        if (Array.isArray(property)) {\n\t            for (var i = 0; i < property.length; i++) {\n\t                this._readOnly(property[i]);\n\t            }\n\t        } else {\n\t            Object.defineProperty(this, property, {\n\t                writable: false,\n\t                enumerable: true\n\t            });\n\t        }\n\t    };\n\t    /**\n\t\t *  Make an attribute writeable. Interal use only. \n\t\t *  @private\n\t\t *  @param  {string}  property  the property to make writable\n\t\t */\n\t    Tone.prototype._writable = function (property) {\n\t        if (Array.isArray(property)) {\n\t            for (var i = 0; i < property.length; i++) {\n\t                this._writable(property[i]);\n\t            }\n\t        } else {\n\t            Object.defineProperty(this, property, { writable: true });\n\t        }\n\t    };\n\t    /**\n\t\t * Possible play states. \n\t\t * @enum {string}\n\t\t */\n\t    Tone.State = {\n\t        Started: 'started',\n\t        Stopped: 'stopped',\n\t        Paused: 'paused'\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // GAIN CONVERSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Equal power gain scale. Good for cross-fading.\n\t\t *  @param  {NormalRange} percent (0-1)\n\t\t *  @return {Number}         output gain (0-1)\n\t\t */\n\t    Tone.prototype.equalPowerScale = function (percent) {\n\t        var piFactor = 0.5 * Math.PI;\n\t        return Math.sin(percent * piFactor);\n\t    };\n\t    /**\n\t\t *  Convert decibels into gain.\n\t\t *  @param  {Decibels} db\n\t\t *  @return {Number}   \n\t\t */\n\t    Tone.prototype.dbToGain = function (db) {\n\t        return Math.pow(2, db / 6);\n\t    };\n\t    /**\n\t\t *  Convert gain to decibels.\n\t\t *  @param  {Number} gain (0-1)\n\t\t *  @return {Decibels}   \n\t\t */\n\t    Tone.prototype.gainToDb = function (gain) {\n\t        return 20 * (Math.log(gain) / Math.LN10);\n\t    };\n\t    /**\n\t\t *  Convert an interval (in semitones) to a frequency ratio.\n\t\t *  @param  {Interval} interval the number of semitones above the base note\n\t\t *  @return {number}          the frequency ratio\n\t\t *  @example\n\t\t * tone.intervalToFrequencyRatio(0); // 1\n\t\t * tone.intervalToFrequencyRatio(12); // 2\n\t\t * tone.intervalToFrequencyRatio(-12); // 0.5\n\t\t */\n\t    Tone.prototype.intervalToFrequencyRatio = function (interval) {\n\t        return Math.pow(2, interval / 12);\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tTIMING\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Return the current time of the AudioContext clock.\n\t\t *  @return {Number} the currentTime from the AudioContext\n\t\t */\n\t    Tone.prototype.now = function () {\n\t        return this.context.currentTime;\n\t    };\n\t    /**\n\t\t *  Return the current time of the AudioContext clock.\n\t\t *  @return {Number} the currentTime from the AudioContext\n\t\t *  @static\n\t\t */\n\t    Tone.now = function () {\n\t        return Tone.context.currentTime;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tINHERITANCE\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  have a child inherit all of Tone's (or a parent's) prototype\n\t\t *  to inherit the parent's properties, make sure to call \n\t\t *  Parent.call(this) in the child's constructor\n\t\t *\n\t\t *  based on closure library's inherit function\n\t\t *\n\t\t *  @static\n\t\t *  @param  {function} \tchild  \n\t\t *  @param  {function=} parent (optional) parent to inherit from\n\t\t *                             if no parent is supplied, the child\n\t\t *                             will inherit from Tone\n\t\t */\n\t    Tone.extend = function (child, parent) {\n\t        if (isUndef(parent)) {\n\t            parent = Tone;\n\t        }\n\t        function TempConstructor() {\n\t        }\n\t        TempConstructor.prototype = parent.prototype;\n\t        child.prototype = new TempConstructor();\n\t        /** @override */\n\t        child.prototype.constructor = child;\n\t        child._super = parent;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tCONTEXT\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  array of callbacks to be invoked when a new context is added\n\t\t *  @private \n\t\t *  @private\n\t\t */\n\t    var newContextCallbacks = [];\n\t    /**\n\t\t *  invoke this callback when a new context is added\n\t\t *  will be invoked initially with the first context\n\t\t *  @private \n\t\t *  @static\n\t\t *  @param {function(AudioContext)} callback the callback to be invoked\n\t\t *                                           with the audio context\n\t\t */\n\t    Tone._initAudioContext = function (callback) {\n\t        //invoke the callback with the existing AudioContext\n\t        callback(Tone.context);\n\t        //add it to the array\n\t        newContextCallbacks.push(callback);\n\t    };\n\t    /**\n\t\t *  Tone automatically creates a context on init, but if you are working\n\t\t *  with other libraries which also create an AudioContext, it can be\n\t\t *  useful to set your own. If you are going to set your own context, \n\t\t *  be sure to do it at the start of your code, before creating any objects.\n\t\t *  @static\n\t\t *  @param {AudioContext} ctx The new audio context to set\n\t\t */\n\t    Tone.setContext = function (ctx) {\n\t        //set the prototypes\n\t        Tone.prototype.context = ctx;\n\t        Tone.context = ctx;\n\t        //invoke all the callbacks\n\t        for (var i = 0; i < newContextCallbacks.length; i++) {\n\t            newContextCallbacks[i](ctx);\n\t        }\n\t    };\n\t    //setup the context\n\t    Tone._initAudioContext(function (audioContext) {\n\t        //set the blockTime\n\t        Tone.prototype.blockTime = 128 / audioContext.sampleRate;\n\t        Tone.prototype.sampleTime = 1 / audioContext.sampleRate;\n\t        _silentNode = audioContext.createGain();\n\t        _silentNode.gain.value = 0;\n\t        _silentNode.connect(audioContext.destination);\n\t    });\n\t    Tone.version = 'r8';\n\t    // allow optional silencing of this log\n\t    if (!window.TONE_SILENCE_VERSION_LOGGING) {\n\t        console.log('%c * Tone.js ' + Tone.version + ' * ', 'background: #000; color: #fff');\n\t    }\n\t    return Tone;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Base class for all Signals. Used Internally. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.SignalBase = function () {\n\t    };\n\t    Tone.extend(Tone.SignalBase);\n\t    /**\n\t\t *  When signals connect to other signals or AudioParams, \n\t\t *  they take over the output value of that signal or AudioParam. \n\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>. \n\t\t *\n\t\t *  @override\n\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node \n\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t *  @returns {Tone.SignalBase} this\n\t\t */\n\t    Tone.SignalBase.prototype.connect = function (node, outputNumber, inputNumber) {\n\t        //zero it out so that the signal can have full control\n\t        if (Tone.Signal && Tone.Signal === node.constructor || Tone.Param && Tone.Param === node.constructor || Tone.TimelineSignal && Tone.TimelineSignal === node.constructor) {\n\t            //cancel changes\n\t            node._param.cancelScheduledValues(0);\n\t            //reset the value\n\t            node._param.value = 0;\n\t            //mark the value as overridden\n\t            node.overridden = true;\n\t        } else if (node instanceof AudioParam) {\n\t            node.cancelScheduledValues(0);\n\t            node.value = 0;\n\t        }\n\t        Tone.prototype.connect.call(this, node, outputNumber, inputNumber);\n\t        return this;\n\t    };\n\t    return Tone.SignalBase;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Wraps the native Web Audio API \n\t\t *         [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {function|Array|Number} mapping The function used to define the values. \n\t\t *                                    The mapping function should take two arguments: \n\t\t *                                    the first is the value at the current position \n\t\t *                                    and the second is the array position. \n\t\t *                                    If the argument is an array, that array will be\n\t\t *                                    set as the wave shaping function. The input\n\t\t *                                    signal is an AudioRange [-1, 1] value and the output\n\t\t *                                    signal can take on any numerical values. \n\t\t *                                    \n\t\t *  @param {Number} [bufferLen=1024] The length of the WaveShaperNode buffer.\n\t\t *  @example\n\t\t * var timesTwo = new Tone.WaveShaper(function(val){\n\t\t * \treturn val * 2;\n\t\t * }, 2048);\n\t\t *  @example\n\t\t * //a waveshaper can also be constructed with an array of values\n\t\t * var invert = new Tone.WaveShaper([1, -1]);\n\t\t */\n\t    Tone.WaveShaper = function (mapping, bufferLen) {\n\t        /**\n\t\t\t *  the waveshaper\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._shaper = this.input = this.output = this.context.createWaveShaper();\n\t        /**\n\t\t\t *  the waveshapers curve\n\t\t\t *  @type {Float32Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._curve = null;\n\t        if (Array.isArray(mapping)) {\n\t            this.curve = mapping;\n\t        } else if (isFinite(mapping) || this.isUndef(mapping)) {\n\t            this._curve = new Float32Array(this.defaultArg(mapping, 1024));\n\t        } else if (this.isFunction(mapping)) {\n\t            this._curve = new Float32Array(this.defaultArg(bufferLen, 1024));\n\t            this.setMap(mapping);\n\t        }\n\t    };\n\t    Tone.extend(Tone.WaveShaper, Tone.SignalBase);\n\t    /**\n\t\t *  Uses a mapping function to set the value of the curve. \n\t\t *  @param {function} mapping The function used to define the values. \n\t\t *                            The mapping function take two arguments: \n\t\t *                            the first is the value at the current position \n\t\t *                            which goes from -1 to 1 over the number of elements\n\t\t *                            in the curve array. The second argument is the array position. \n\t\t *  @returns {Tone.WaveShaper} this\n\t\t *  @example\n\t\t * //map the input signal from [-1, 1] to [0, 10]\n\t\t * shaper.setMap(function(val, index){\n\t\t * \treturn (val + 1) * 5;\n\t\t * })\n\t\t */\n\t    Tone.WaveShaper.prototype.setMap = function (mapping) {\n\t        for (var i = 0, len = this._curve.length; i < len; i++) {\n\t            var normalized = i / (len - 1) * 2 - 1;\n\t            this._curve[i] = mapping(normalized, i);\n\t        }\n\t        this._shaper.curve = this._curve;\n\t        return this;\n\t    };\n\t    /**\n\t\t * The array to set as the waveshaper curve. For linear curves\n\t\t * array length does not make much difference, but for complex curves\n\t\t * longer arrays will provide smoother interpolation. \n\t\t * @memberOf Tone.WaveShaper#\n\t\t * @type {Array}\n\t\t * @name curve\n\t\t */\n\t    Object.defineProperty(Tone.WaveShaper.prototype, 'curve', {\n\t        get: function () {\n\t            return this._shaper.curve;\n\t        },\n\t        set: function (mapping) {\n\t            this._curve = new Float32Array(mapping);\n\t            this._shaper.curve = this._curve;\n\t        }\n\t    });\n\t    /**\n\t\t * Specifies what type of oversampling (if any) should be used when \n\t\t * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\". \n\t\t * @memberOf Tone.WaveShaper#\n\t\t * @type {string}\n\t\t * @name oversample\n\t\t */\n\t    Object.defineProperty(Tone.WaveShaper.prototype, 'oversample', {\n\t        get: function () {\n\t            return this._shaper.oversample;\n\t        },\n\t        set: function (oversampling) {\n\t            if ([\n\t                    'none',\n\t                    '2x',\n\t                    '4x'\n\t                ].indexOf(oversampling) !== -1) {\n\t                this._shaper.oversample = oversampling;\n\t            } else {\n\t                throw new RangeError('Tone.WaveShaper: oversampling must be either \\'none\\', \\'2x\\', or \\'4x\\'');\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.WaveShaper} this\n\t\t */\n\t    Tone.WaveShaper.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._shaper.disconnect();\n\t        this._shaper = null;\n\t        this._curve = null;\n\t        return this;\n\t    };\n\t    return Tone.WaveShaper;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.TimeBase is a flexible encoding of time\n\t\t *         which can be evaluated to and from a string.\n\t\t *         Parsing code modified from https://code.google.com/p/tapdigit/\n\t\t *         Copyright 2011 2012 Ariya Hidayat, New BSD License\n\t\t *  @extends {Tone}\n\t\t *  @param  {Time}  val    The time value as a number or string\n\t\t *  @param  {String=}  units  Unit values\n\t\t *  @example\n\t\t * Tone.TimeBase(4, \"n\")\n\t\t * Tone.TimeBase(2, \"t\")\n\t\t * Tone.TimeBase(\"2t\").add(\"1m\")\n\t\t * Tone.TimeBase(\"2t + 1m\");\n\t\t */\n\t    Tone.TimeBase = function (val, units) {\n\t        //allows it to be constructed with or without 'new'\n\t        if (this instanceof Tone.TimeBase) {\n\t            /**\n\t\t\t\t *  Any expressions parsed from the Time\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._expr = this._noOp;\n\t            if (val instanceof Tone.TimeBase) {\n\t                this.copy(val);\n\t            } else if (!this.isUndef(units) || this.isNumber(val)) {\n\t                //default units\n\t                units = this.defaultArg(units, this._defaultUnits);\n\t                var method = this._primaryExpressions[units].method;\n\t                this._expr = method.bind(this, val);\n\t            } else if (this.isString(val)) {\n\t                this.set(val);\n\t            } else if (this.isUndef(val)) {\n\t                //default expression\n\t                this._expr = this._defaultExpr();\n\t            }\n\t        } else {\n\t            return new Tone.TimeBase(val, units);\n\t        }\n\t    };\n\t    Tone.extend(Tone.TimeBase);\n\t    /**\n\t\t *  Repalce the current time value with the value\n\t\t *  given by the expression string.\n\t\t *  @param  {String}  exprString\n\t\t *  @return {Tone.TimeBase} this\n\t\t */\n\t    Tone.TimeBase.prototype.set = function (exprString) {\n\t        this._expr = this._parseExprString(exprString);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Return a clone of the TimeBase object.\n\t\t *  @return  {Tone.TimeBase} The new cloned Tone.TimeBase\n\t\t */\n\t    Tone.TimeBase.prototype.clone = function () {\n\t        var instance = new this.constructor();\n\t        instance.copy(this);\n\t        return instance;\n\t    };\n\t    /**\n\t\t *  Copies the value of time to this Time\n\t\t *  @param {Tone.TimeBase} time\n\t\t *  @return  {TimeBase}\n\t\t */\n\t    Tone.TimeBase.prototype.copy = function (time) {\n\t        var val = time._expr();\n\t        return this.set(val);\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tABSTRACT SYNTAX TREE PARSER\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  All the primary expressions.\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.TimeBase.prototype._primaryExpressions = {\n\t        'n': {\n\t            regexp: /^(\\d+)n/i,\n\t            method: function (value) {\n\t                value = parseInt(value);\n\t                if (value === 1) {\n\t                    return this._beatsToUnits(this._timeSignature());\n\t                } else {\n\t                    return this._beatsToUnits(4 / value);\n\t                }\n\t            }\n\t        },\n\t        't': {\n\t            regexp: /^(\\d+)t/i,\n\t            method: function (value) {\n\t                value = parseInt(value);\n\t                return this._beatsToUnits(8 / (parseInt(value) * 3));\n\t            }\n\t        },\n\t        'm': {\n\t            regexp: /^(\\d+)m/i,\n\t            method: function (value) {\n\t                return this._beatsToUnits(parseInt(value) * this._timeSignature());\n\t            }\n\t        },\n\t        'i': {\n\t            regexp: /^(\\d+)i/i,\n\t            method: function (value) {\n\t                return this._ticksToUnits(parseInt(value));\n\t            }\n\t        },\n\t        'hz': {\n\t            regexp: /^(\\d+(?:\\.\\d+)?)hz/i,\n\t            method: function (value) {\n\t                return this._frequencyToUnits(parseFloat(value));\n\t            }\n\t        },\n\t        'tr': {\n\t            regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t            method: function (m, q, s) {\n\t                var total = 0;\n\t                if (m && m !== '0') {\n\t                    total += this._beatsToUnits(this._timeSignature() * parseFloat(m));\n\t                }\n\t                if (q && q !== '0') {\n\t                    total += this._beatsToUnits(parseFloat(q));\n\t                }\n\t                if (s && s !== '0') {\n\t                    total += this._beatsToUnits(parseFloat(s) / 4);\n\t                }\n\t                return total;\n\t            }\n\t        },\n\t        's': {\n\t            regexp: /^(\\d+(?:\\.\\d+)?s)/,\n\t            method: function (value) {\n\t                return this._secondsToUnits(parseFloat(value));\n\t            }\n\t        },\n\t        'samples': {\n\t            regexp: /^(\\d+)samples/,\n\t            method: function (value) {\n\t                return parseInt(value) / this.context.sampleRate;\n\t            }\n\t        },\n\t        'default': {\n\t            regexp: /^(\\d+(?:\\.\\d+)?)/,\n\t            method: function (value) {\n\t                return this._primaryExpressions[this._defaultUnits].method.call(this, value);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  All the binary expressions that TimeBase can accept.\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.TimeBase.prototype._binaryExpressions = {\n\t        '+': {\n\t            regexp: /^\\+/,\n\t            precedence: 2,\n\t            method: function (lh, rh) {\n\t                return lh() + rh();\n\t            }\n\t        },\n\t        '-': {\n\t            regexp: /^\\-/,\n\t            precedence: 2,\n\t            method: function (lh, rh) {\n\t                return lh() - rh();\n\t            }\n\t        },\n\t        '*': {\n\t            regexp: /^\\*/,\n\t            precedence: 1,\n\t            method: function (lh, rh) {\n\t                return lh() * rh();\n\t            }\n\t        },\n\t        '/': {\n\t            regexp: /^\\//,\n\t            precedence: 1,\n\t            method: function (lh, rh) {\n\t                return lh() / rh();\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  All the unary expressions.\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.TimeBase.prototype._unaryExpressions = {\n\t        'neg': {\n\t            regexp: /^\\-/,\n\t            method: function (lh) {\n\t                return -lh();\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Syntactic glue which holds expressions together\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.TimeBase.prototype._syntaxGlue = {\n\t        '(': { regexp: /^\\(/ },\n\t        ')': { regexp: /^\\)/ }\n\t    };\n\t    /**\n\t\t *  tokenize the expression based on the Expressions object\n\t\t *  @param   {string} expr \n\t\t *  @return  {Object}      returns two methods on the tokenized list, next and peek\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._tokenize = function (expr) {\n\t        var position = -1;\n\t        var tokens = [];\n\t        while (expr.length > 0) {\n\t            expr = expr.trim();\n\t            var token = getNextToken(expr, this);\n\t            tokens.push(token);\n\t            expr = expr.substr(token.value.length);\n\t        }\n\t        function getNextToken(expr, context) {\n\t            var expressions = [\n\t                '_binaryExpressions',\n\t                '_unaryExpressions',\n\t                '_primaryExpressions',\n\t                '_syntaxGlue'\n\t            ];\n\t            for (var i = 0; i < expressions.length; i++) {\n\t                var group = context[expressions[i]];\n\t                for (var opName in group) {\n\t                    var op = group[opName];\n\t                    var reg = op.regexp;\n\t                    var match = expr.match(reg);\n\t                    if (match !== null) {\n\t                        return {\n\t                            method: op.method,\n\t                            precedence: op.precedence,\n\t                            regexp: op.regexp,\n\t                            value: match[0]\n\t                        };\n\t                    }\n\t                }\n\t            }\n\t            throw new SyntaxError('Tone.TimeBase: Unexpected token ' + expr);\n\t        }\n\t        return {\n\t            next: function () {\n\t                return tokens[++position];\n\t            },\n\t            peek: function () {\n\t                return tokens[position + 1];\n\t            }\n\t        };\n\t    };\n\t    /**\n\t\t *  Given a token, find the value within the groupName\n\t\t *  @param {Object} token\n\t\t *  @param {String} groupName\n\t\t *  @param {Number} precedence\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._matchGroup = function (token, group, prec) {\n\t        var ret = false;\n\t        if (!this.isUndef(token)) {\n\t            for (var opName in group) {\n\t                var op = group[opName];\n\t                if (op.regexp.test(token.value)) {\n\t                    if (!this.isUndef(prec)) {\n\t                        if (op.precedence === prec) {\n\t                            return op;\n\t                        }\n\t                    } else {\n\t                        return op;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return ret;\n\t    };\n\t    /**\n\t\t *  Match a binary expression given the token and the precedence\n\t\t *  @param {Lexer} lexer\n\t\t *  @param {Number} precedence\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._parseBinary = function (lexer, precedence) {\n\t        if (this.isUndef(precedence)) {\n\t            precedence = 2;\n\t        }\n\t        var expr;\n\t        if (precedence < 0) {\n\t            expr = this._parseUnary(lexer);\n\t        } else {\n\t            expr = this._parseBinary(lexer, precedence - 1);\n\t        }\n\t        var token = lexer.peek();\n\t        while (token && this._matchGroup(token, this._binaryExpressions, precedence)) {\n\t            token = lexer.next();\n\t            expr = token.method.bind(this, expr, this._parseBinary(lexer, precedence - 1));\n\t            token = lexer.peek();\n\t        }\n\t        return expr;\n\t    };\n\t    /**\n\t\t *  Match a unary expression.\n\t\t *  @param {Lexer} lexer\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._parseUnary = function (lexer) {\n\t        var token, expr;\n\t        token = lexer.peek();\n\t        var op = this._matchGroup(token, this._unaryExpressions);\n\t        if (op) {\n\t            token = lexer.next();\n\t            expr = this._parseUnary(lexer);\n\t            return op.method.bind(this, expr);\n\t        }\n\t        return this._parsePrimary(lexer);\n\t    };\n\t    /**\n\t\t *  Match a primary expression (a value).\n\t\t *  @param {Lexer} lexer\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._parsePrimary = function (lexer) {\n\t        var token, expr;\n\t        token = lexer.peek();\n\t        if (this.isUndef(token)) {\n\t            throw new SyntaxError('Tone.TimeBase: Unexpected end of expression');\n\t        }\n\t        if (this._matchGroup(token, this._primaryExpressions)) {\n\t            token = lexer.next();\n\t            var matching = token.value.match(token.regexp);\n\t            return token.method.bind(this, matching[1], matching[2], matching[3]);\n\t        }\n\t        if (token && token.value === '(') {\n\t            lexer.next();\n\t            expr = this._parseBinary(lexer);\n\t            token = lexer.next();\n\t            if (!(token && token.value === ')')) {\n\t                throw new SyntaxError('Expected )');\n\t            }\n\t            return expr;\n\t        }\n\t        throw new SyntaxError('Tone.TimeBase: Cannot process token ' + token.value);\n\t    };\n\t    /**\n\t\t *  Recursively parse the string expression into a syntax tree.\n\t\t *  @param   {string} expr \n\t\t *  @return  {Function} the bound method to be evaluated later\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._parseExprString = function (exprString) {\n\t        if (!this.isString(exprString)) {\n\t            exprString = exprString.toString();\n\t        }\n\t        var lexer = this._tokenize(exprString);\n\t        var tree = this._parseBinary(lexer);\n\t        return tree;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tDEFAULTS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  The initial expression value\n\t\t *  @return  {Number}  The initial value 0\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._noOp = function () {\n\t        return 0;\n\t    };\n\t    /**\n\t\t *  The default expression value if no arguments are given\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._defaultExpr = function () {\n\t        return this._noOp;\n\t    };\n\t    /**\n\t\t *  The default units if none are given.\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._defaultUnits = 's';\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tUNIT CONVERSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Returns the value of a frequency in the current units\n\t\t *  @param {Frequency} freq\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._frequencyToUnits = function (freq) {\n\t        return 1 / freq;\n\t    };\n\t    /**\n\t\t *  Return the value of the beats in the current units\n\t\t *  @param {Number} beats\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._beatsToUnits = function (beats) {\n\t        return 60 / Tone.Transport.bpm.value * beats;\n\t    };\n\t    /**\n\t\t *  Returns the value of a second in the current units\n\t\t *  @param {Seconds} seconds\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._secondsToUnits = function (seconds) {\n\t        return seconds;\n\t    };\n\t    /**\n\t\t *  Returns the value of a tick in the current time units\n\t\t *  @param {Ticks} ticks\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._ticksToUnits = function (ticks) {\n\t        return ticks * (this._beatsToUnits(1) / Tone.Transport.PPQ);\n\t    };\n\t    /**\n\t\t *  Return the time signature.\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._timeSignature = function () {\n\t        return Tone.Transport.timeSignature;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tEXPRESSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Push an expression onto the expression list\n\t\t *  @param  {Time}  val\n\t\t *  @param  {String}  type\n\t\t *  @param  {String}  units\n\t\t *  @return  {Tone.TimeBase} \n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._pushExpr = function (val, name, units) {\n\t        //create the expression\n\t        if (!(val instanceof Tone.TimeBase)) {\n\t            val = new this.constructor(val, units);\n\t        }\n\t        this._expr = this._binaryExpressions[name].method.bind(this, this._expr, val._expr);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Add to the current value.\n\t\t *  @param  {Time}  val    The value to add\n\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t *  @return  {Tone.TimeBase}  this\n\t\t *  @example\n\t\t * Tone.TimeBase(\"2m\").add(\"1m\"); //\"3m\"\n\t\t */\n\t    Tone.TimeBase.prototype.add = function (val, units) {\n\t        return this._pushExpr(val, '+', units);\n\t    };\n\t    /**\n\t\t *  Subtract the value from the current time.\n\t\t *  @param  {Time}  val    The value to subtract\n\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t *  @return  {Tone.TimeBase}  this\n\t\t *  @example\n\t\t * Tone.TimeBase(\"2m\").sub(\"1m\"); //\"1m\"\n\t\t */\n\t    Tone.TimeBase.prototype.sub = function (val, units) {\n\t        return this._pushExpr(val, '-', units);\n\t    };\n\t    /**\n\t\t *  Multiply the current value by the given time.\n\t\t *  @param  {Time}  val    The value to multiply\n\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t *  @return  {Tone.TimeBase}  this\n\t\t *  @example\n\t\t * Tone.TimeBase(\"2m\").mult(\"2\"); //\"4m\"\n\t\t */\n\t    Tone.TimeBase.prototype.mult = function (val, units) {\n\t        return this._pushExpr(val, '*', units);\n\t    };\n\t    /**\n\t\t *  Divide the current value by the given time.\n\t\t *  @param  {Time}  val    The value to divide by\n\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t *  @return  {Tone.TimeBase}  this\n\t\t *  @example\n\t\t * Tone.TimeBase(\"2m\").div(2); //\"1m\"\n\t\t */\n\t    Tone.TimeBase.prototype.div = function (val, units) {\n\t        return this._pushExpr(val, '/', units);\n\t    };\n\t    /**\n\t\t *  Evaluate the time value. Returns the time\n\t\t *  in seconds.\n\t\t *  @return  {Seconds} \n\t\t */\n\t    Tone.TimeBase.prototype.eval = function () {\n\t        return this._expr();\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return {Tone.TimeBase} this\n\t\t */\n\t    Tone.TimeBase.prototype.dispose = function () {\n\t        this._expr = null;\n\t    };\n\t    return Tone.TimeBase;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Time is a primitive type for encoding Time values. \n\t\t *         Eventually all time values are evaluated to seconds\n\t\t *         using the `eval` method. Tone.Time can be constructed\n\t\t *         with or without the `new` keyword. Tone.Time can be passed\n\t\t *         into the parameter of any method which takes time as an argument. \n\t\t *  @constructor\n\t\t *  @extends {Tone.TimeBase}\n\t\t *  @param  {String|Number}  val    The time value.\n\t\t *  @param  {String=}  units  The units of the value.\n\t\t *  @example\n\t\t * var t = Tone.Time(\"4n\");//encodes a quarter note\n\t\t * t.mult(4); // multiply that value by 4\n\t\t * t.toNotation(); //returns \"1m\"\n\t\t */\n\t    Tone.Time = function (val, units) {\n\t        if (this instanceof Tone.Time) {\n\t            /**\n\t\t\t\t *  If the current clock time should\n\t\t\t\t *  be added to the output\n\t\t\t\t *  @type  {Boolean}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._plusNow = false;\n\t            Tone.TimeBase.call(this, val, units);\n\t        } else {\n\t            return new Tone.Time(val, units);\n\t        }\n\t    };\n\t    Tone.extend(Tone.Time, Tone.TimeBase);\n\t    //clone the expressions so that \n\t    //we can add more without modifying the original\n\t    Tone.Time.prototype._unaryExpressions = Object.create(Tone.TimeBase.prototype._unaryExpressions);\n\t    /*\n\t\t *  Adds an additional unary expression\n\t\t *  which quantizes values to the next subdivision\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._unaryExpressions.quantize = {\n\t        regexp: /^@/,\n\t        method: function (rh) {\n\t            return Tone.Transport.nextSubdivision(rh());\n\t        }\n\t    };\n\t    /*\n\t\t *  Adds an additional unary expression\n\t\t *  which adds the current clock time.\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._unaryExpressions.now = {\n\t        regexp: /^\\+/,\n\t        method: function (lh) {\n\t            this._plusNow = true;\n\t            return lh();\n\t        }\n\t    };\n\t    /**\n\t\t *  Quantize the time by the given subdivision. Optionally add a\n\t\t *  percentage which will move the time value towards the ideal\n\t\t *  quantized value by that percentage. \n\t\t *  @param  {Number|Time}  val    The subdivision to quantize to\n\t\t *  @param  {NormalRange}  [percent=1]  Move the time value\n\t\t *                                   towards the quantized value by\n\t\t *                                   a percentage.\n\t\t *  @return  {Tone.Time}  this\n\t\t *  @example\n\t\t * Tone.Time(21).quantize(2).eval() //returns 22\n\t\t * Tone.Time(0.6).quantize(\"4n\", 0.5).eval() //returns 0.55\n\t\t */\n\t    Tone.Time.prototype.quantize = function (subdiv, percent) {\n\t        percent = this.defaultArg(percent, 1);\n\t        this._expr = function (expr, subdivision, percent) {\n\t            expr = expr();\n\t            subdivision = subdivision.toSeconds();\n\t            var multiple = Math.round(expr / subdivision);\n\t            var ideal = multiple * subdivision;\n\t            var diff = ideal - expr;\n\t            return expr + diff * percent;\n\t        }.bind(this, this._expr, new this.constructor(subdiv), percent);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Adds the clock time to the time expression at the \n\t\t *  moment of evaluation. \n\t\t *  @return  {Tone.Time}  this\n\t\t */\n\t    Tone.Time.prototype.addNow = function () {\n\t        this._plusNow = true;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  @override\n\t\t *  Override the default value return when no arguments are passed in.\n\t\t *  The default value is 'now'\n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._defaultExpr = function () {\n\t        this._plusNow = true;\n\t        return this._noOp;\n\t    };\n\t    /**\n\t\t *  Copies the value of time to this Time\n\t\t *  @param {Tone.Time} time\n\t\t *  @return  {Time}\n\t\t */\n\t    Tone.Time.prototype.copy = function (time) {\n\t        Tone.TimeBase.prototype.copy.call(this, time);\n\t        this._plusNow = time._plusNow;\n\t        return this;\n\t    };\n\t    //CONVERSIONS//////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Convert a Time to Notation. Values will be thresholded to the nearest 128th note. \n\t\t *  @return {Notation} \n\t\t *  @example\n\t\t * //if the Transport is at 120bpm:\n\t\t * Tone.Time(2).toNotation();//returns \"1m\"\n\t\t */\n\t    Tone.Time.prototype.toNotation = function () {\n\t        var time = this.toSeconds();\n\t        var testNotations = [\n\t            '1m',\n\t            '2n',\n\t            '4n',\n\t            '8n',\n\t            '16n',\n\t            '32n',\n\t            '64n',\n\t            '128n'\n\t        ];\n\t        var retNotation = this._toNotationHelper(time, testNotations);\n\t        //try the same thing but with tripelets\n\t        var testTripletNotations = [\n\t            '1m',\n\t            '2n',\n\t            '2t',\n\t            '4n',\n\t            '4t',\n\t            '8n',\n\t            '8t',\n\t            '16n',\n\t            '16t',\n\t            '32n',\n\t            '32t',\n\t            '64n',\n\t            '64t',\n\t            '128n'\n\t        ];\n\t        var retTripletNotation = this._toNotationHelper(time, testTripletNotations);\n\t        //choose the simpler expression of the two\n\t        if (retTripletNotation.split('+').length < retNotation.split('+').length) {\n\t            return retTripletNotation;\n\t        } else {\n\t            return retNotation;\n\t        }\n\t    };\n\t    /**\n\t\t *  Helper method for Tone.toNotation\n\t\t *  @param {Number} units \n\t\t *  @param {Array} testNotations\n\t\t *  @return {String}\n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._toNotationHelper = function (units, testNotations) {\n\t        //the threshold is the last value in the array\n\t        var threshold = this._notationToUnits(testNotations[testNotations.length - 1]);\n\t        var retNotation = '';\n\t        for (var i = 0; i < testNotations.length; i++) {\n\t            var notationTime = this._notationToUnits(testNotations[i]);\n\t            //account for floating point errors (i.e. round up if the value is 0.999999)\n\t            var multiple = units / notationTime;\n\t            var floatingPointError = 0.000001;\n\t            if (1 - multiple % 1 < floatingPointError) {\n\t                multiple += floatingPointError;\n\t            }\n\t            multiple = Math.floor(multiple);\n\t            if (multiple > 0) {\n\t                if (multiple === 1) {\n\t                    retNotation += testNotations[i];\n\t                } else {\n\t                    retNotation += multiple.toString() + '*' + testNotations[i];\n\t                }\n\t                units -= multiple * notationTime;\n\t                if (units < threshold) {\n\t                    break;\n\t                } else {\n\t                    retNotation += ' + ';\n\t                }\n\t            }\n\t        }\n\t        if (retNotation === '') {\n\t            retNotation = '0';\n\t        }\n\t        return retNotation;\n\t    };\n\t    /**\n\t\t *  Convert a notation value to the current units\n\t\t *  @param  {Notation}  notation \n\t\t *  @return  {Number} \n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._notationToUnits = function (notation) {\n\t        var primaryExprs = this._primaryExpressions;\n\t        var notationExprs = [\n\t            primaryExprs.n,\n\t            primaryExprs.t,\n\t            primaryExprs.m\n\t        ];\n\t        for (var i = 0; i < notationExprs.length; i++) {\n\t            var expr = notationExprs[i];\n\t            var match = notation.match(expr.regexp);\n\t            if (match) {\n\t                return expr.method.call(this, match[1]);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Return the time encoded as Bars:Beats:Sixteenths.\n\t\t *  @return  {BarsBeatsSixteenths}\n\t\t */\n\t    Tone.Time.prototype.toBarsBeatsSixteenths = function () {\n\t        var quarterTime = this._beatsToUnits(1);\n\t        var quarters = this.toSeconds() / quarterTime;\n\t        var measures = Math.floor(quarters / this._timeSignature());\n\t        var sixteenths = quarters % 1 * 4;\n\t        quarters = Math.floor(quarters) % this._timeSignature();\n\t        sixteenths = sixteenths.toString();\n\t        if (sixteenths.length > 3) {\n\t            sixteenths = parseFloat(sixteenths).toFixed(3);\n\t        }\n\t        var progress = [\n\t            measures,\n\t            quarters,\n\t            sixteenths\n\t        ];\n\t        return progress.join(':');\n\t    };\n\t    /**\n\t\t *  Return the time in ticks.\n\t\t *  @return  {Ticks}\n\t\t */\n\t    Tone.Time.prototype.toTicks = function () {\n\t        var quarterTime = this._beatsToUnits(1);\n\t        var quarters = this.eval() / quarterTime;\n\t        return Math.floor(quarters * Tone.Transport.PPQ);\n\t    };\n\t    /**\n\t\t *  Return the time in samples\n\t\t *  @return  {Samples}  \n\t\t */\n\t    Tone.Time.prototype.toSamples = function () {\n\t        return this.toSeconds() * this.context.sampleRate;\n\t    };\n\t    /**\n\t\t *  Return the time as a frequency value\n\t\t *  @return  {Frequency} \n\t\t *  @example\n\t\t * Tone.Time(2).toFrequency(); //0.5\n\t\t */\n\t    Tone.Time.prototype.toFrequency = function () {\n\t        return 1 / this.toSeconds();\n\t    };\n\t    /**\n\t\t *  Return the time in seconds.\n\t\t *  @return  {Seconds} \n\t\t */\n\t    Tone.Time.prototype.toSeconds = function () {\n\t        return this.eval();\n\t    };\n\t    /**\n\t\t *  Return the time in milliseconds.\n\t\t *  @return  {Milliseconds} \n\t\t */\n\t    Tone.Time.prototype.toMilliseconds = function () {\n\t        return this.toSeconds() * 1000;\n\t    };\n\t    /**\n\t\t *  Return the time in seconds.\n\t\t *  @return  {Seconds} \n\t\t */\n\t    Tone.Time.prototype.eval = function () {\n\t        var val = this._expr();\n\t        return val + (this._plusNow ? this.now() : 0);\n\t    };\n\t    return Tone.Time;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Frequency is a primitive type for encoding Frequency values. \n\t\t *         Eventually all time values are evaluated to hertz\n\t\t *         using the `eval` method. \n\t\t *  @constructor\n\t\t *  @extends {Tone.TimeBase}\n\t\t *  @param  {String|Number}  val    The time value.\n\t\t *  @param  {String=}  units  The units of the value.\n\t\t *  @example\n\t\t * Tone.Frequency(\"C3\").eval() // 261\n\t\t * Tone.Frequency(38, \"midi\").eval() //\n\t\t * Tone.Frequency(\"C3\").transpose(4).eval();\n\t\t */\n\t    Tone.Frequency = function (val, units) {\n\t        if (this instanceof Tone.Frequency) {\n\t            Tone.TimeBase.call(this, val, units);\n\t        } else {\n\t            return new Tone.Frequency(val, units);\n\t        }\n\t    };\n\t    Tone.extend(Tone.Frequency, Tone.TimeBase);\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tAUGMENT BASE EXPRESSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //clone the expressions so that \n\t    //we can add more without modifying the original\n\t    Tone.Frequency.prototype._primaryExpressions = Object.create(Tone.TimeBase.prototype._primaryExpressions);\n\t    /*\n\t\t *  midi type primary expression\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._primaryExpressions.midi = {\n\t        regexp: /^(\\d+(?:\\.\\d+)?midi)/,\n\t        method: function (value) {\n\t            return this.midiToFrequency(value);\n\t        }\n\t    };\n\t    /*\n\t\t *  note type primary expression\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._primaryExpressions.note = {\n\t        regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n\t        method: function (pitch, octave) {\n\t            var index = noteToScaleIndex[pitch.toLowerCase()];\n\t            var noteNumber = index + (parseInt(octave) + 1) * 12;\n\t            return this.midiToFrequency(noteNumber);\n\t        }\n\t    };\n\t    /*\n\t\t *  BeatsBarsSixteenths type primary expression\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._primaryExpressions.tr = {\n\t        regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t        method: function (m, q, s) {\n\t            var total = 1;\n\t            if (m && m !== '0') {\n\t                total *= this._beatsToUnits(this._timeSignature() * parseFloat(m));\n\t            }\n\t            if (q && q !== '0') {\n\t                total *= this._beatsToUnits(parseFloat(q));\n\t            }\n\t            if (s && s !== '0') {\n\t                total *= this._beatsToUnits(parseFloat(s) / 4);\n\t            }\n\t            return total;\n\t        }\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tEXPRESSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Transposes the frequency by the given number of semitones.\n\t\t *  @param  {Interval}  interval\n\t\t *  @return  {Tone.Frequency} this\n\t\t *  @example\n\t\t * Tone.Frequency(\"A4\").transpose(3); //\"C5\"\n\t\t */\n\t    Tone.Frequency.prototype.transpose = function (interval) {\n\t        this._expr = function (expr, interval) {\n\t            var val = expr();\n\t            return val * this.intervalToFrequencyRatio(interval);\n\t        }.bind(this, this._expr, interval);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Takes an array of semitone intervals and returns\n\t\t *  an array of frequencies transposed by those intervals.\n\t\t *  @param  {Array}  intervals\n\t\t *  @return  {Tone.Frequency} this\n\t\t *  @example\n\t\t * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); //[\"A4\", \"C5\", \"E5\"]\n\t\t */\n\t    Tone.Frequency.prototype.harmonize = function (intervals) {\n\t        this._expr = function (expr, intervals) {\n\t            var val = expr();\n\t            var ret = [];\n\t            for (var i = 0; i < intervals.length; i++) {\n\t                ret[i] = val * this.intervalToFrequencyRatio(intervals[i]);\n\t            }\n\t            return ret;\n\t        }.bind(this, this._expr, intervals);\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tUNIT CONVERSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Return the value of the frequency as a MIDI note\n\t\t *  @return  {MIDI}\n\t\t *  @example\n\t\t * Tone.Frequency(\"C4\").toMidi(); //60\n\t\t */\n\t    Tone.Frequency.prototype.toMidi = function () {\n\t        return this.frequencyToMidi(this.eval());\n\t    };\n\t    /**\n\t\t *  Return the value of the frequency in Scientific Pitch Notation\n\t\t *  @return  {Note}\n\t\t *  @example\n\t\t * Tone.Frequency(69, \"midi\").toNote(); //\"A4\"\n\t\t */\n\t    Tone.Frequency.prototype.toNote = function () {\n\t        var freq = this.eval();\n\t        var log = Math.log(freq / Tone.Frequency.A4) / Math.LN2;\n\t        var noteNumber = Math.round(12 * log) + 57;\n\t        var octave = Math.floor(noteNumber / 12);\n\t        if (octave < 0) {\n\t            noteNumber += -12 * octave;\n\t        }\n\t        var noteName = scaleIndexToNote[noteNumber % 12];\n\t        return noteName + octave.toString();\n\t    };\n\t    /**\n\t\t *  Return the duration of one cycle in seconds.\n\t\t *  @return  {Seconds}\n\t\t */\n\t    Tone.Frequency.prototype.toSeconds = function () {\n\t        return 1 / this.eval();\n\t    };\n\t    /**\n\t\t *  Return the value in Hertz\n\t\t *  @return  {Frequency}\n\t\t */\n\t    Tone.Frequency.prototype.toFrequency = function () {\n\t        return this.eval();\n\t    };\n\t    /**\n\t\t *  Return the duration of one cycle in ticks\n\t\t *  @return  {Ticks}\n\t\t */\n\t    Tone.Frequency.prototype.toTicks = function () {\n\t        var quarterTime = this._beatsToUnits(1);\n\t        var quarters = this.eval() / quarterTime;\n\t        return Math.floor(quarters * Tone.Transport.PPQ);\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tUNIT CONVERSIONS HELPERS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Returns the value of a frequency in the current units\n\t\t *  @param {Frequency} freq\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._frequencyToUnits = function (freq) {\n\t        return freq;\n\t    };\n\t    /**\n\t\t *  Returns the value of a tick in the current time units\n\t\t *  @param {Ticks} ticks\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._ticksToUnits = function (ticks) {\n\t        return 1 / (ticks * 60 / (Tone.Transport.bpm.value * Tone.Transport.PPQ));\n\t    };\n\t    /**\n\t\t *  Return the value of the beats in the current units\n\t\t *  @param {Number} beats\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._beatsToUnits = function (beats) {\n\t        return 1 / Tone.TimeBase.prototype._beatsToUnits.call(this, beats);\n\t    };\n\t    /**\n\t\t *  Returns the value of a second in the current units\n\t\t *  @param {Seconds} seconds\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._secondsToUnits = function (seconds) {\n\t        return 1 / seconds;\n\t    };\n\t    /**\n\t\t *  The default units if none are given.\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._defaultUnits = 'hz';\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tFREQUENCY CONVERSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Note to scale index\n\t\t *  @type  {Object}\n\t\t */\n\t    var noteToScaleIndex = {\n\t        'cbb': -2,\n\t        'cb': -1,\n\t        'c': 0,\n\t        'c#': 1,\n\t        'cx': 2,\n\t        'dbb': 0,\n\t        'db': 1,\n\t        'd': 2,\n\t        'd#': 3,\n\t        'dx': 4,\n\t        'ebb': 2,\n\t        'eb': 3,\n\t        'e': 4,\n\t        'e#': 5,\n\t        'ex': 6,\n\t        'fbb': 3,\n\t        'fb': 4,\n\t        'f': 5,\n\t        'f#': 6,\n\t        'fx': 7,\n\t        'gbb': 5,\n\t        'gb': 6,\n\t        'g': 7,\n\t        'g#': 8,\n\t        'gx': 9,\n\t        'abb': 7,\n\t        'ab': 8,\n\t        'a': 9,\n\t        'a#': 10,\n\t        'ax': 11,\n\t        'bbb': 9,\n\t        'bb': 10,\n\t        'b': 11,\n\t        'b#': 12,\n\t        'bx': 13\n\t    };\n\t    /**\n\t\t *  scale index to note (sharps)\n\t\t *  @type  {Array}\n\t\t */\n\t    var scaleIndexToNote = [\n\t        'C',\n\t        'C#',\n\t        'D',\n\t        'D#',\n\t        'E',\n\t        'F',\n\t        'F#',\n\t        'G',\n\t        'G#',\n\t        'A',\n\t        'A#',\n\t        'B'\n\t    ];\n\t    /**\n\t\t *  The [concert pitch](https://en.wikipedia.org/wiki/Concert_pitch)\n\t\t *  A4's values in Hertz. \n\t\t *  @type {Frequency}\n\t\t *  @static\n\t\t */\n\t    Tone.Frequency.A4 = 440;\n\t    /**\n\t\t *  Convert a MIDI note to frequency value. \n\t\t *  @param  {MIDI} midi The midi number to convert.\n\t\t *  @return {Frequency} the corresponding frequency value\n\t\t *  @example\n\t\t * tone.midiToFrequency(69); // returns 440\n\t\t */\n\t    Tone.Frequency.prototype.midiToFrequency = function (midi) {\n\t        return Tone.Frequency.A4 * Math.pow(2, (midi - 69) / 12);\n\t    };\n\t    /**\n\t\t *  Convert a frequency value to a MIDI note.\n\t\t *  @param {Frequency} frequency The value to frequency value to convert.\n\t\t *  @returns  {MIDI}\n\t\t *  @example\n\t\t * tone.midiToFrequency(440); // returns 69\n\t\t */\n\t    Tone.Frequency.prototype.frequencyToMidi = function (frequency) {\n\t        return 69 + 12 * Math.log(frequency / Tone.Frequency.A4) / Math.LN2;\n\t    };\n\t    return Tone.Frequency;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.TransportTime is a the time along the Transport's\n\t\t *         timeline. It is similar to Tone.Time, but instead of evaluating\n\t\t *         against the AudioContext's clock, it is evaluated against\n\t\t *         the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n\t\t *  @constructor\n\t\t *  @param  {Time}  val    The time value as a number or string\n\t\t *  @param  {String=}  units  Unit values\n\t\t *  @extends {Tone.Time}\n\t\t */\n\t    Tone.TransportTime = function (val, units) {\n\t        if (this instanceof Tone.TransportTime) {\n\t            Tone.Time.call(this, val, units);\n\t        } else {\n\t            return new Tone.TransportTime(val, units);\n\t        }\n\t    };\n\t    Tone.extend(Tone.TransportTime, Tone.Time);\n\t    //clone the expressions so that \n\t    //we can add more without modifying the original\n\t    Tone.TransportTime.prototype._unaryExpressions = Object.create(Tone.Time.prototype._unaryExpressions);\n\t    /**\n\t\t *  Adds an additional unary expression\n\t\t *  which quantizes values to the next subdivision\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.TransportTime.prototype._unaryExpressions.quantize = {\n\t        regexp: /^@/,\n\t        method: function (rh) {\n\t            var subdivision = this._secondsToTicks(rh());\n\t            var multiple = Math.ceil(Tone.Transport.ticks / subdivision);\n\t            return this._ticksToUnits(multiple * subdivision);\n\t        }\n\t    };\n\t    /**\n\t\t *  Convert seconds into ticks\n\t\t *  @param {Seconds} seconds\n\t\t *  @return  {Ticks}\n\t\t *  @private\n\t\t */\n\t    Tone.TransportTime.prototype._secondsToTicks = function (seconds) {\n\t        var quarterTime = this._beatsToUnits(1);\n\t        var quarters = seconds / quarterTime;\n\t        return Math.round(quarters * Tone.Transport.PPQ);\n\t    };\n\t    /**\n\t\t *  Evaluate the time expression. Returns values in ticks\n\t\t *  @return {Ticks}\n\t\t */\n\t    Tone.TransportTime.prototype.eval = function () {\n\t        var val = this._secondsToTicks(this._expr());\n\t        return val + (this._plusNow ? Tone.Transport.ticks : 0);\n\t    };\n\t    /**\n\t\t *  Return the time in ticks.\n\t\t *  @return  {Ticks}\n\t\t */\n\t    Tone.TransportTime.prototype.toTicks = function () {\n\t        return this.eval();\n\t    };\n\t    /**\n\t\t *  Return the time in seconds.\n\t\t *  @return  {Seconds}\n\t\t */\n\t    Tone.TransportTime.prototype.toSeconds = function () {\n\t        var val = this._expr();\n\t        return val + (this._plusNow ? Tone.Transport.seconds : 0);\n\t    };\n\t    /**\n\t\t *  Return the time as a frequency value\n\t\t *  @return  {Frequency} \n\t\t */\n\t    Tone.TransportTime.prototype.toFrequency = function () {\n\t        return 1 / this.toSeconds();\n\t    };\n\t    return Tone.TransportTime;\n\t});\n\tModule(function (Tone) {\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tTYPES\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t * Units which a value can take on.\n\t\t * @enum {String}\n\t\t */\n\t    Tone.Type = {\n\t        /** \n\t\t\t *  Default units\n\t\t\t *  @typedef {Default}\n\t\t\t */\n\t        Default: 'number',\n\t        /**\n\t\t\t *  Time can be described in a number of ways. Read more [Time](https://github.com/Tonejs/Tone.js/wiki/Time).\n\t\t\t *\n\t\t\t *  <ul>\n\t\t\t *  <li>Numbers, which will be taken literally as the time (in seconds).</li>\n\t\t\t *  <li>Notation, (\"4n\", \"8t\") describes time in BPM and time signature relative values.</li>\n\t\t\t *  <li>TransportTime, (\"4:3:2\") will also provide tempo and time signature relative times \n\t\t\t *  in the form BARS:QUARTERS:SIXTEENTHS.</li>\n\t\t\t *  <li>Frequency, (\"8hz\") is converted to the length of the cycle in seconds.</li>\n\t\t\t *  <li>Now-Relative, (\"+1\") prefix any of the above with \"+\" and it will be interpreted as \n\t\t\t *  \"the current time plus whatever expression follows\".</li>\n\t\t\t *  <li>Expressions, (\"3:0 + 2 - (1m / 7)\") any of the above can also be combined \n\t\t\t *  into a mathematical expression which will be evaluated to compute the desired time.</li>\n\t\t\t *  <li>No Argument, for methods which accept time, no argument will be interpreted as \n\t\t\t *  \"now\" (i.e. the currentTime).</li>\n\t\t\t *  </ul>\n\t\t\t *  \n\t\t\t *  @typedef {Time}\n\t\t\t */\n\t        Time: 'time',\n\t        /**\n\t\t\t *  Frequency can be described similar to time, except ultimately the\n\t\t\t *  values are converted to frequency instead of seconds. A number\n\t\t\t *  is taken literally as the value in hertz. Additionally any of the \n\t\t\t *  Time encodings can be used. Note names in the form\n\t\t\t *  of NOTE OCTAVE (i.e. C4) are also accepted and converted to their\n\t\t\t *  frequency value. \n\t\t\t *  @typedef {Frequency}\n\t\t\t */\n\t        Frequency: 'frequency',\n\t        /**\n\t\t\t *  TransportTime describes a position along the Transport's timeline. It is\n\t\t\t *  similar to Time in that it uses all the same encodings, but TransportTime specifically\n\t\t\t *  pertains to the Transport's timeline, which is startable, stoppable, loopable, and seekable. \n\t\t\t *  [Read more](https://github.com/Tonejs/Tone.js/wiki/TransportTime)\n\t\t\t *  @typedef {TransportTime}\n\t\t\t */\n\t        TransportTime: 'transportTime',\n\t        /** \n\t\t\t *  Ticks are the basic subunit of the Transport. They are\n\t\t\t *  the smallest unit of time that the Transport supports.\n\t\t\t *  @typedef {Ticks}\n\t\t\t */\n\t        Ticks: 'ticks',\n\t        /** \n\t\t\t *  Normal values are within the range [0, 1].\n\t\t\t *  @typedef {NormalRange}\n\t\t\t */\n\t        NormalRange: 'normalRange',\n\t        /** \n\t\t\t *  AudioRange values are between [-1, 1].\n\t\t\t *  @typedef {AudioRange}\n\t\t\t */\n\t        AudioRange: 'audioRange',\n\t        /** \n\t\t\t *  Decibels are a logarithmic unit of measurement which is useful for volume\n\t\t\t *  because of the logarithmic way that we perceive loudness. 0 decibels \n\t\t\t *  means no change in volume. -10db is approximately half as loud and 10db \n\t\t\t *  is twice is loud. \n\t\t\t *  @typedef {Decibels}\n\t\t\t */\n\t        Decibels: 'db',\n\t        /** \n\t\t\t *  Half-step note increments, i.e. 12 is an octave above the root. and 1 is a half-step up.\n\t\t\t *  @typedef {Interval}\n\t\t\t */\n\t        Interval: 'interval',\n\t        /** \n\t\t\t *  Beats per minute. \n\t\t\t *  @typedef {BPM}\n\t\t\t */\n\t        BPM: 'bpm',\n\t        /** \n\t\t\t *  The value must be greater than or equal to 0.\n\t\t\t *  @typedef {Positive}\n\t\t\t */\n\t        Positive: 'positive',\n\t        /** \n\t\t\t *  A cent is a hundredth of a semitone. \n\t\t\t *  @typedef {Cents}\n\t\t\t */\n\t        Cents: 'cents',\n\t        /** \n\t\t\t *  Angle between 0 and 360. \n\t\t\t *  @typedef {Degrees}\n\t\t\t */\n\t        Degrees: 'degrees',\n\t        /** \n\t\t\t *  A number representing a midi note.\n\t\t\t *  @typedef {MIDI}\n\t\t\t */\n\t        MIDI: 'midi',\n\t        /** \n\t\t\t *  A colon-separated representation of time in the form of\n\t\t\t *  Bars:Beats:Sixteenths. \n\t\t\t *  @typedef {BarsBeatsSixteenths}\n\t\t\t */\n\t        BarsBeatsSixteenths: 'barsBeatsSixteenths',\n\t        /** \n\t\t\t *  Sampling is the reduction of a continuous signal to a discrete signal.\n\t\t\t *  Audio is typically sampled 44100 times per second. \n\t\t\t *  @typedef {Samples}\n\t\t\t */\n\t        Samples: 'samples',\n\t        /** \n\t\t\t *  Hertz are a frequency representation defined as one cycle per second.\n\t\t\t *  @typedef {Hertz}\n\t\t\t */\n\t        Hertz: 'hertz',\n\t        /** \n\t\t\t *  A frequency represented by a letter name, \n\t\t\t *  accidental and octave. This system is known as\n\t\t\t *  [Scientific Pitch Notation](https://en.wikipedia.org/wiki/Scientific_pitch_notation).\n\t\t\t *  @typedef {Note}\n\t\t\t */\n\t        Note: 'note',\n\t        /** \n\t\t\t *  One millisecond is a thousandth of a second. \n\t\t\t *  @typedef {Milliseconds}\n\t\t\t */\n\t        Milliseconds: 'milliseconds',\n\t        /** \n\t\t\t *  Seconds are the time unit of the AudioContext. In the end, \n\t\t\t *  all values need to be evaluated to seconds. \n\t\t\t *  @typedef {Seconds}\n\t\t\t */\n\t        Seconds: 'seconds',\n\t        /** \n\t\t\t *  A string representing a duration relative to a measure. \n\t\t\t *  <ul>\n\t\t\t *  \t<li>\"4n\" = quarter note</li>\n\t\t\t *   \t<li>\"2m\" = two measures</li>\n\t\t\t *    \t<li>\"8t\" = eighth-note triplet</li>\n\t\t\t *  </ul>\n\t\t\t *  @typedef {Notation}\n\t\t\t */\n\t        Notation: 'notation'\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // AUGMENT TONE's PROTOTYPE\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Convert Time into seconds.\n\t\t *  \n\t\t *  Unlike the method which it overrides, this takes into account \n\t\t *  transporttime and musical notation.\n\t\t *\n\t\t *  Time : 1.40\n\t\t *  Notation: 4n|1m|2t\n\t\t *  Now Relative: +3n\n\t\t *  Math: 3n+16n or even complicated expressions ((3n*2)/6 + 1)\n\t\t *\n\t\t *  @param  {Time} time \n\t\t *  @return {Seconds} \n\t\t */\n\t    Tone.prototype.toSeconds = function (time) {\n\t        if (this.isNumber(time)) {\n\t            return time;\n\t        } else if (this.isUndef(time)) {\n\t            return this.now();\n\t        } else if (this.isString(time)) {\n\t            return new Tone.Time(time).toSeconds();\n\t        } else if (time instanceof Tone.TimeBase) {\n\t            return time.toSeconds();\n\t        }\n\t    };\n\t    /**\n\t\t *  Convert a frequency representation into a number.\n\t\t *  @param  {Frequency} freq \n\t\t *  @return {Hertz}      the frequency in hertz\n\t\t */\n\t    Tone.prototype.toFrequency = function (freq) {\n\t        if (this.isNumber(freq)) {\n\t            return freq;\n\t        } else if (this.isString(freq) || this.isUndef(freq)) {\n\t            return new Tone.Frequency(freq).eval();\n\t        } else if (freq instanceof Tone.TimeBase) {\n\t            return freq.toFrequency();\n\t        }\n\t    };\n\t    /**\n\t\t *  Convert a time representation into ticks.\n\t\t *  @param  {Time} time\n\t\t *  @return {Ticks}  the time in ticks\n\t\t */\n\t    Tone.prototype.toTicks = function (time) {\n\t        if (this.isNumber(time) || this.isString(time)) {\n\t            return new Tone.TransportTime(time).toTicks();\n\t        } else if (this.isUndef(time)) {\n\t            return Tone.Transport.ticks;\n\t        } else if (time instanceof Tone.TimeBase) {\n\t            return time.toTicks();\n\t        }\n\t    };\n\t    return Tone;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Param wraps the native Web Audio's AudioParam to provide\n\t\t *         additional unit conversion functionality. It also\n\t\t *         serves as a base-class for classes which have a single,\n\t\t *         automatable parameter. \n\t\t *  @extends {Tone}\n\t\t *  @param  {AudioParam}  param  The parameter to wrap.\n\t\t *  @param  {Tone.Type} units The units of the audio param.\n\t\t *  @param  {Boolean} convert If the param should be converted.\n\t\t */\n\t    Tone.Param = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'param',\n\t            'units',\n\t            'convert'\n\t        ], Tone.Param.defaults);\n\t        /**\n\t\t\t *  The native parameter to control\n\t\t\t *  @type  {AudioParam}\n\t\t\t *  @private\n\t\t\t */\n\t        this._param = this.input = options.param;\n\t        /**\n\t\t\t *  The units of the parameter\n\t\t\t *  @type {Tone.Type}\n\t\t\t */\n\t        this.units = options.units;\n\t        /**\n\t\t\t *  If the value should be converted or not\n\t\t\t *  @type {Boolean}\n\t\t\t */\n\t        this.convert = options.convert;\n\t        /**\n\t\t\t *  True if the signal value is being overridden by \n\t\t\t *  a connected signal.\n\t\t\t *  @readOnly\n\t\t\t *  @type  {boolean}\n\t\t\t *  @private\n\t\t\t */\n\t        this.overridden = false;\n\t        /**\n\t\t\t *  If there is an LFO, this is where it is held.\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfo = null;\n\t        if (this.isObject(options.lfo)) {\n\t            this.value = options.lfo;\n\t        } else if (!this.isUndef(options.value)) {\n\t            this.value = options.value;\n\t        }\n\t    };\n\t    Tone.extend(Tone.Param);\n\t    /**\n\t\t *  Defaults\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Param.defaults = {\n\t        'units': Tone.Type.Default,\n\t        'convert': true,\n\t        'param': undefined\n\t    };\n\t    /**\n\t\t * The current value of the parameter. \n\t\t * @memberOf Tone.Param#\n\t\t * @type {Number}\n\t\t * @name value\n\t\t */\n\t    Object.defineProperty(Tone.Param.prototype, 'value', {\n\t        get: function () {\n\t            return this._toUnits(this._param.value);\n\t        },\n\t        set: function (value) {\n\t            if (this.isObject(value)) {\n\t                //throw an error if the LFO needs to be included\n\t                if (this.isUndef(Tone.LFO)) {\n\t                    throw new Error('Include \\'Tone.LFO\\' to use an LFO as a Param value.');\n\t                }\n\t                //remove the old one\n\t                if (this._lfo) {\n\t                    this._lfo.dispose();\n\t                }\n\t                this._lfo = new Tone.LFO(value).start();\n\t                this._lfo.connect(this.input);\n\t            } else {\n\t                var convertedVal = this._fromUnits(value);\n\t                this._param.cancelScheduledValues(0);\n\t                this._param.value = convertedVal;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Convert the given value from the type specified by Tone.Param.units\n\t\t *  into the destination value (such as Gain or Frequency).\n\t\t *  @private\n\t\t *  @param  {*} val the value to convert\n\t\t *  @return {number}     the number which the value should be set to\n\t\t */\n\t    Tone.Param.prototype._fromUnits = function (val) {\n\t        if (this.convert || this.isUndef(this.convert)) {\n\t            switch (this.units) {\n\t            case Tone.Type.Time:\n\t                return this.toSeconds(val);\n\t            case Tone.Type.Frequency:\n\t                return this.toFrequency(val);\n\t            case Tone.Type.Decibels:\n\t                return this.dbToGain(val);\n\t            case Tone.Type.NormalRange:\n\t                return Math.min(Math.max(val, 0), 1);\n\t            case Tone.Type.AudioRange:\n\t                return Math.min(Math.max(val, -1), 1);\n\t            case Tone.Type.Positive:\n\t                return Math.max(val, 0);\n\t            default:\n\t                return val;\n\t            }\n\t        } else {\n\t            return val;\n\t        }\n\t    };\n\t    /**\n\t\t * Convert the parameters value into the units specified by Tone.Param.units.\n\t\t * @private\n\t\t * @param  {number} val the value to convert\n\t\t * @return {number}\n\t\t */\n\t    Tone.Param.prototype._toUnits = function (val) {\n\t        if (this.convert || this.isUndef(this.convert)) {\n\t            switch (this.units) {\n\t            case Tone.Type.Decibels:\n\t                return this.gainToDb(val);\n\t            default:\n\t                return val;\n\t            }\n\t        } else {\n\t            return val;\n\t        }\n\t    };\n\t    /**\n\t\t *  the minimum output value\n\t\t *  @type {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Param.prototype._minOutput = 0.00001;\n\t    /**\n\t\t *  Schedules a parameter value change at the given time.\n\t\t *  @param {*}\tvalue The value to set the signal.\n\t\t *  @param {Time}  time The time when the change should occur.\n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //set the frequency to \"G4\" in exactly 1 second from now. \n\t\t * freq.setValueAtTime(\"G4\", \"+1\");\n\t\t */\n\t    Tone.Param.prototype.setValueAtTime = function (value, time) {\n\t        value = this._fromUnits(value);\n\t        time = this.toSeconds(time);\n\t        if (time <= this.now() + this.blockTime) {\n\t            this._param.value = value;\n\t        } else {\n\t            this._param.setValueAtTime(value, time);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Creates a schedule point with the current value at the current time.\n\t\t *  This is useful for creating an automation anchor point in order to \n\t\t *  schedule changes from the current value. \n\t\t *\n\t\t *  @param {number=} now (Optionally) pass the now value in. \n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.setRampPoint = function (now) {\n\t        now = this.defaultArg(now, this.now());\n\t        var currentVal = this._param.value;\n\t        // exponentialRampToValueAt cannot ever ramp from or to 0\n\t        // More info: https://bugzilla.mozilla.org/show_bug.cgi?id=1125600#c2\n\t        if (currentVal === 0) {\n\t            currentVal = this._minOutput;\n\t        }\n\t        this._param.setValueAtTime(currentVal, now);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules a linear continuous change in parameter value from the \n\t\t *  previous scheduled parameter value to the given value.\n\t\t *  \n\t\t *  @param  {number} value   \n\t\t *  @param  {Time} endTime \n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.linearRampToValueAtTime = function (value, endTime) {\n\t        value = this._fromUnits(value);\n\t        this._param.linearRampToValueAtTime(value, this.toSeconds(endTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an exponential continuous change in parameter value from \n\t\t *  the previous scheduled parameter value to the given value.\n\t\t *  \n\t\t *  @param  {number} value   \n\t\t *  @param  {Time} endTime \n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.exponentialRampToValueAtTime = function (value, endTime) {\n\t        value = this._fromUnits(value);\n\t        value = Math.max(this._minOutput, value);\n\t        this._param.exponentialRampToValueAtTime(value, this.toSeconds(endTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an exponential continuous change in parameter value from \n\t\t *  the current time and current value to the given value over the \n\t\t *  duration of the rampTime.\n\t\t *  \n\t\t *  @param  {number} value   The value to ramp to.\n\t\t *  @param  {Time} rampTime the time that it takes the \n\t\t *                               value to ramp from it's current value\n\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start. \n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //exponentially ramp to the value 2 over 4 seconds. \n\t\t * signal.exponentialRampToValue(2, 4);\n\t\t */\n\t    Tone.Param.prototype.exponentialRampToValue = function (value, rampTime, startTime) {\n\t        startTime = this.toSeconds(startTime);\n\t        this.setRampPoint(startTime);\n\t        this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an linear continuous change in parameter value from \n\t\t *  the current time and current value to the given value over the \n\t\t *  duration of the rampTime.\n\t\t *  \n\t\t *  @param  {number} value   The value to ramp to.\n\t\t *  @param  {Time} rampTime the time that it takes the \n\t\t *                               value to ramp from it's current value\n\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start. \n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //linearly ramp to the value 4 over 3 seconds. \n\t\t * signal.linearRampToValue(4, 3);\n\t\t */\n\t    Tone.Param.prototype.linearRampToValue = function (value, rampTime, startTime) {\n\t        startTime = this.toSeconds(startTime);\n\t        this.setRampPoint(startTime);\n\t        this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start exponentially approaching the target value at the given time with\n\t\t *  a rate having the given time constant.\n\t\t *  @param {number} value        \n\t\t *  @param {Time} startTime    \n\t\t *  @param {number} timeConstant \n\t\t *  @returns {Tone.Param} this \n\t\t */\n\t    Tone.Param.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n\t        value = this._fromUnits(value);\n\t        // The value will never be able to approach without timeConstant > 0.\n\t        // http://www.w3.org/TR/webaudio/#dfn-setTargetAtTime, where the equation\n\t        // is described. 0 results in a division by 0.\n\t        value = Math.max(this._minOutput, value);\n\t        timeConstant = Math.max(this._minOutput, timeConstant);\n\t        this._param.setTargetAtTime(value, this.toSeconds(startTime), timeConstant);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sets an array of arbitrary parameter values starting at the given time\n\t\t *  for the given duration.\n\t\t *  \t\n\t\t *  @param {Array} values    \n\t\t *  @param {Time} startTime \n\t\t *  @param {Time} duration  \n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.setValueCurveAtTime = function (values, startTime, duration) {\n\t        for (var i = 0; i < values.length; i++) {\n\t            values[i] = this._fromUnits(values[i]);\n\t        }\n\t        this._param.setValueCurveAtTime(values, this.toSeconds(startTime), this.toSeconds(duration));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancels all scheduled parameter changes with times greater than or \n\t\t *  equal to startTime.\n\t\t *  \n\t\t *  @param  {Time} startTime\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.cancelScheduledValues = function (startTime) {\n\t        this._param.cancelScheduledValues(this.toSeconds(startTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Ramps to the given value over the duration of the rampTime. \n\t\t *  Automatically selects the best ramp type (exponential or linear)\n\t\t *  depending on the `units` of the signal\n\t\t *  \n\t\t *  @param  {number} value   \n\t\t *  @param  {Time} rampTime \tThe time that it takes the \n\t\t *                              value to ramp from it's current value\n\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start. \n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //ramp to the value either linearly or exponentially \n\t\t * //depending on the \"units\" value of the signal\n\t\t * signal.rampTo(0, 10);\n\t\t *  @example\n\t\t * //schedule it to ramp starting at a specific time\n\t\t * signal.rampTo(0, 10, 5)\n\t\t */\n\t    Tone.Param.prototype.rampTo = function (value, rampTime, startTime) {\n\t        rampTime = this.defaultArg(rampTime, 0);\n\t        if (this.units === Tone.Type.Frequency || this.units === Tone.Type.BPM) {\n\t            this.exponentialRampToValue(value, rampTime, startTime);\n\t        } else {\n\t            this.linearRampToValue(value, rampTime, startTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The LFO created by the signal instance. If none\n\t\t *  was created, this is null.\n\t\t *  @type {Tone.LFO}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Param#\n\t\t *  @name lfo\n\t\t */\n\t    Object.defineProperty(Tone.Param.prototype, 'lfo', {\n\t        get: function () {\n\t            return this._lfo;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._param = null;\n\t        if (this._lfo) {\n\t            this._lfo.dispose();\n\t            this._lfo = null;\n\t        }\n\t        return this;\n\t    };\n\t    return Tone.Param;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A thin wrapper around the Native Web Audio GainNode.\n\t\t *         The GainNode is a basic building block of the Web Audio\n\t\t *         API and is useful for routing audio and adjusting gains. \n\t\t *  @extends {Tone}\n\t\t *  @param  {Number=}  gain  The initial gain of the GainNode\n\t\t *  @param {Tone.Type=} units The units of the gain parameter. \n\t\t */\n\t    Tone.Gain = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'gain',\n\t            'units'\n\t        ], Tone.Gain.defaults);\n\t        /**\n\t\t\t *  The GainNode\n\t\t\t *  @type  {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.input = this.output = this._gainNode = this.context.createGain();\n\t        /**\n\t\t\t *  The gain parameter of the gain node.\n\t\t\t *  @type {Tone.Param}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.gain = new Tone.Param({\n\t            'param': this._gainNode.gain,\n\t            'units': options.units,\n\t            'value': options.gain,\n\t            'convert': options.convert\n\t        });\n\t        this._readOnly('gain');\n\t    };\n\t    Tone.extend(Tone.Gain);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Gain.defaults = {\n\t        'gain': 1,\n\t        'convert': true\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Gain}  this\n\t\t */\n\t    Tone.Gain.prototype.dispose = function () {\n\t        Tone.Param.prototype.dispose.call(this);\n\t        this._gainNode.disconnect();\n\t        this._gainNode = null;\n\t        this._writable('gain');\n\t        this.gain.dispose();\n\t        this.gain = null;\n\t    };\n\t    //STATIC///////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Create input and outputs for this object.\n\t\t *  @param  {Number}  input   The number of inputs\n\t\t *  @param  {Number=}  outputs  The number of outputs\n\t\t *  @return  {Tone}  this\n\t\t *  @internal\n\t\t */\n\t    Tone.prototype.createInsOuts = function (inputs, outputs) {\n\t        if (inputs === 1) {\n\t            this.input = new Tone.Gain();\n\t        } else if (inputs > 1) {\n\t            this.input = new Array(inputs);\n\t        }\n\t        if (outputs === 1) {\n\t            this.output = new Tone.Gain();\n\t        } else if (outputs > 1) {\n\t            this.output = new Array(inputs);\n\t        }\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    return Tone.Gain;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A signal is an audio-rate value. Tone.Signal is a core component of the library.\n\t\t *          Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n\t\t *          has all of the methods available to native Web Audio \n\t\t *          [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n\t\t *          as well as additional conveniences. Read more about working with signals \n\t\t *          [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Param}\n\t\t *  @param {Number|AudioParam} [value] Initial value of the signal. If an AudioParam\n\t\t *                                     is passed in, that parameter will be wrapped\n\t\t *                                     and controlled by the Signal. \n\t\t *  @param {string} [units=Number] unit The units the signal is in. \n\t\t *  @example\n\t\t * var signal = new Tone.Signal(10);\n\t\t */\n\t    Tone.Signal = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'value',\n\t            'units'\n\t        ], Tone.Signal.defaults);\n\t        /**\n\t\t\t * The node where the constant signal value is scaled.\n\t\t\t * @type {GainNode}\n\t\t\t * @private\n\t\t\t */\n\t        this.output = this._gain = this.context.createGain();\n\t        options.param = this._gain.gain;\n\t        Tone.Param.call(this, options);\n\t        /**\n\t\t\t * The node where the value is set.\n\t\t\t * @type {Tone.Param}\n\t\t\t * @private\n\t\t\t */\n\t        this.input = this._param = this._gain.gain;\n\t        //connect the const output to the node output\n\t        Tone.Signal._constant.chain(this._gain);\n\t    };\n\t    Tone.extend(Tone.Signal, Tone.Param);\n\t    /**\n\t\t *  The default values\n\t\t *  @type  {Object}\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.Signal.defaults = {\n\t        'value': 0,\n\t        'units': Tone.Type.Default,\n\t        'convert': true\n\t    };\n\t    /**\n\t\t *  When signals connect to other signals or AudioParams, \n\t\t *  they take over the output value of that signal or AudioParam. \n\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>. \n\t\t *\n\t\t *  @override\n\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node \n\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t *  @returns {Tone.SignalBase} this\n\t\t *  @method\n\t\t */\n\t    Tone.Signal.prototype.connect = Tone.SignalBase.prototype.connect;\n\t    /**\n\t\t *  dispose and disconnect\n\t\t *  @returns {Tone.Signal} this\n\t\t */\n\t    Tone.Signal.prototype.dispose = function () {\n\t        Tone.Param.prototype.dispose.call(this);\n\t        this._param = null;\n\t        this._gain.disconnect();\n\t        this._gain = null;\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tSTATIC\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Generates a constant output of 1.\n\t\t *  @static\n\t\t *  @private\n\t\t *  @const\n\t\t *  @type {AudioBufferSourceNode}\n\t\t */\n\t    Tone.Signal._constant = null;\n\t    /**\n\t\t *  initializer function\n\t\t */\n\t    Tone._initAudioContext(function (audioContext) {\n\t        var buffer = audioContext.createBuffer(1, 128, audioContext.sampleRate);\n\t        var arr = buffer.getChannelData(0);\n\t        for (var i = 0; i < arr.length; i++) {\n\t            arr[i] = 1;\n\t        }\n\t        Tone.Signal._constant = audioContext.createBufferSource();\n\t        Tone.Signal._constant.channelCount = 1;\n\t        Tone.Signal._constant.channelCountMode = 'explicit';\n\t        Tone.Signal._constant.buffer = buffer;\n\t        Tone.Signal._constant.loop = true;\n\t        Tone.Signal._constant.start(0);\n\t        Tone.Signal._constant.noGC();\n\t    });\n\t    return Tone.Signal;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A Timeline class for scheduling and maintaining state\n\t\t *         along a timeline. All events must have a \"time\" property. \n\t\t *         Internally, events are stored in time order for fast \n\t\t *         retrieval.\n\t\t *  @extends {Tone}\n\t\t *  @param {Positive} [memory=Infinity] The number of previous events that are retained.\n\t\t */\n\t    Tone.Timeline = function () {\n\t        var options = this.optionsObject(arguments, ['memory'], Tone.Timeline.defaults);\n\t        /**\n\t\t\t *  The array of scheduled timeline events\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._timeline = [];\n\t        /**\n\t\t\t *  An array of items to remove from the list. \n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._toRemove = [];\n\t        /**\n\t\t\t *  Flag if the tieline is mid iteration\n\t\t\t *  @private\n\t\t\t *  @type {Boolean}\n\t\t\t */\n\t        this._iterating = false;\n\t        /**\n\t\t\t *  The memory of the timeline, i.e.\n\t\t\t *  how many events in the past it will retain\n\t\t\t *  @type {Positive}\n\t\t\t */\n\t        this.memory = options.memory;\n\t    };\n\t    Tone.extend(Tone.Timeline);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.Timeline.defaults = { 'memory': Infinity };\n\t    /**\n\t\t *  The number of items in the timeline.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Timeline#\n\t\t *  @name length\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Timeline.prototype, 'length', {\n\t        get: function () {\n\t            return this._timeline.length;\n\t        }\n\t    });\n\t    /**\n\t\t *  Insert an event object onto the timeline. Events must have a \"time\" attribute.\n\t\t *  @param  {Object}  event  The event object to insert into the \n\t\t *                           timeline. \n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.addEvent = function (event) {\n\t        //the event needs to have a time attribute\n\t        if (this.isUndef(event.time)) {\n\t            throw new Error('Tone.Timeline: events must have a time attribute');\n\t        }\n\t        if (this._timeline.length) {\n\t            var index = this._search(event.time);\n\t            this._timeline.splice(index + 1, 0, event);\n\t        } else {\n\t            this._timeline.push(event);\n\t        }\n\t        //if the length is more than the memory, remove the previous ones\n\t        if (this.length > this.memory) {\n\t            var diff = this.length - this.memory;\n\t            this._timeline.splice(0, diff);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove an event from the timeline.\n\t\t *  @param  {Object}  event  The event object to remove from the list.\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.removeEvent = function (event) {\n\t        if (this._iterating) {\n\t            this._toRemove.push(event);\n\t        } else {\n\t            var index = this._timeline.indexOf(event);\n\t            if (index !== -1) {\n\t                this._timeline.splice(index, 1);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the nearest event whose time is less than or equal to the given time.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @returns {Object} The event object set after that time.\n\t\t */\n\t    Tone.Timeline.prototype.getEvent = function (time) {\n\t        var index = this._search(time);\n\t        if (index !== -1) {\n\t            return this._timeline[index];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Get the event which is scheduled after the given time.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @returns {Object} The event object after the given time\n\t\t */\n\t    Tone.Timeline.prototype.getEventAfter = function (time) {\n\t        var index = this._search(time);\n\t        if (index + 1 < this._timeline.length) {\n\t            return this._timeline[index + 1];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Get the event before the event at the given time.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @returns {Object} The event object before the given time\n\t\t */\n\t    Tone.Timeline.prototype.getEventBefore = function (time) {\n\t        var len = this._timeline.length;\n\t        //if it's after the last item, return the last item\n\t        if (len > 0 && this._timeline[len - 1].time < time) {\n\t            return this._timeline[len - 1];\n\t        }\n\t        var index = this._search(time);\n\t        if (index - 1 >= 0) {\n\t            return this._timeline[index - 1];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Cancel events after the given time\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.cancel = function (after) {\n\t        if (this._timeline.length > 1) {\n\t            var index = this._search(after);\n\t            if (index >= 0) {\n\t                if (this._timeline[index].time === after) {\n\t                    //get the first item with that time\n\t                    for (var i = index; i >= 0; i--) {\n\t                        if (this._timeline[i].time === after) {\n\t                            index = i;\n\t                        } else {\n\t                            break;\n\t                        }\n\t                    }\n\t                    this._timeline = this._timeline.slice(0, index);\n\t                } else {\n\t                    this._timeline = this._timeline.slice(0, index + 1);\n\t                }\n\t            } else {\n\t                this._timeline = [];\n\t            }\n\t        } else if (this._timeline.length === 1) {\n\t            //the first item's time\n\t            if (this._timeline[0].time >= after) {\n\t                this._timeline = [];\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel events before or equal to the given time.\n\t\t *  @param  {Number}  time  The time to cancel before.\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.cancelBefore = function (time) {\n\t        if (this._timeline.length) {\n\t            var index = this._search(time);\n\t            if (index >= 0) {\n\t                this._timeline = this._timeline.slice(index + 1);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Does a binary serach on the timeline array and returns the \n\t\t *  nearest event index whose time is after or equal to the given time.\n\t\t *  If a time is searched before the first index in the timeline, -1 is returned.\n\t\t *  If the time is after the end, the index of the last item is returned.\n\t\t *  @param  {Number}  time  \n\t\t *  @return  {Number} the index in the timeline array \n\t\t *  @private\n\t\t */\n\t    Tone.Timeline.prototype._search = function (time) {\n\t        var beginning = 0;\n\t        var len = this._timeline.length;\n\t        var end = len;\n\t        if (len > 0 && this._timeline[len - 1].time <= time) {\n\t            return len - 1;\n\t        }\n\t        while (beginning < end) {\n\t            // calculate the midpoint for roughly equal partition\n\t            var midPoint = Math.floor(beginning + (end - beginning) / 2);\n\t            var event = this._timeline[midPoint];\n\t            var nextEvent = this._timeline[midPoint + 1];\n\t            if (event.time === time) {\n\t                //choose the last one that has the same time\n\t                for (var i = midPoint; i < this._timeline.length; i++) {\n\t                    var testEvent = this._timeline[i];\n\t                    if (testEvent.time === time) {\n\t                        midPoint = i;\n\t                    }\n\t                }\n\t                return midPoint;\n\t            } else if (event.time < time && nextEvent.time > time) {\n\t                return midPoint;\n\t            } else if (event.time > time) {\n\t                //search lower\n\t                end = midPoint;\n\t            } else if (event.time < time) {\n\t                //search upper\n\t                beginning = midPoint + 1;\n\t            }\n\t        }\n\t        return -1;\n\t    };\n\t    /**\n\t\t *  Internal iterator. Applies extra safety checks for \n\t\t *  removing items from the array. \n\t\t *  @param  {Function}  callback \n\t\t *  @param  {Number=}    lowerBound     \n\t\t *  @param  {Number=}    upperBound    \n\t\t *  @private\n\t\t */\n\t    Tone.Timeline.prototype._iterate = function (callback, lowerBound, upperBound) {\n\t        this._iterating = true;\n\t        lowerBound = this.defaultArg(lowerBound, 0);\n\t        upperBound = this.defaultArg(upperBound, this._timeline.length - 1);\n\t        for (var i = lowerBound; i <= upperBound; i++) {\n\t            callback(this._timeline[i]);\n\t        }\n\t        this._iterating = false;\n\t        if (this._toRemove.length > 0) {\n\t            for (var j = 0; j < this._toRemove.length; j++) {\n\t                var index = this._timeline.indexOf(this._toRemove[j]);\n\t                if (index !== -1) {\n\t                    this._timeline.splice(index, 1);\n\t                }\n\t            }\n\t            this._toRemove = [];\n\t        }\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEach = function (callback) {\n\t        this._iterate(callback);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array at or before the given time.\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEachBefore = function (time, callback) {\n\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t        var upperBound = this._search(time);\n\t        if (upperBound !== -1) {\n\t            this._iterate(callback, 0, upperBound);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array after the given time.\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEachAfter = function (time, callback) {\n\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t        var lowerBound = this._search(time);\n\t        this._iterate(callback, lowerBound + 1);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array at or after the given time. Similar to \n\t\t *  forEachAfter, but includes the item(s) at the given time.\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEachFrom = function (time, callback) {\n\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t        var lowerBound = this._search(time);\n\t        //work backwards until the event time is less than time\n\t        while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n\t            lowerBound--;\n\t        }\n\t        this._iterate(callback, lowerBound + 1);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array at the given time\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEachAtTime = function (time, callback) {\n\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t        var upperBound = this._search(time);\n\t        if (upperBound !== -1) {\n\t            this._iterate(function (event) {\n\t                if (event.time === time) {\n\t                    callback(event);\n\t                }\n\t            }, 0, upperBound);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Timeline}  this\n\t\t */\n\t    Tone.Timeline.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._timeline = null;\n\t        this._toRemove = null;\n\t    };\n\t    return Tone.Timeline;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A signal which adds the method getValueAtTime. \n\t\t *         Code and inspiration from https://github.com/jsantell/web-audio-automation-timeline\n\t\t *  @extends {Tone.Param}\n\t\t *  @param {Number=} value The initial value of the signal\n\t\t *  @param {String=} units The conversion units of the signal.\n\t\t */\n\t    Tone.TimelineSignal = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'value',\n\t            'units'\n\t        ], Tone.Signal.defaults);\n\t        /**\n\t\t\t *  The scheduled events\n\t\t\t *  @type {Tone.Timeline}\n\t\t\t *  @private\n\t\t\t */\n\t        this._events = new Tone.Timeline(10);\n\t        //constructors\n\t        Tone.Signal.apply(this, options);\n\t        options.param = this._param;\n\t        Tone.Param.call(this, options);\n\t        /**\n\t\t\t *  The initial scheduled value\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._initial = this._fromUnits(this._param.value);\n\t    };\n\t    Tone.extend(Tone.TimelineSignal, Tone.Param);\n\t    /**\n\t\t *  The event types of a schedulable signal.\n\t\t *  @enum {String}\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.Type = {\n\t        Linear: 'linear',\n\t        Exponential: 'exponential',\n\t        Target: 'target',\n\t        Curve: 'curve',\n\t        Set: 'set'\n\t    };\n\t    /**\n\t\t * The current value of the signal. \n\t\t * @memberOf Tone.TimelineSignal#\n\t\t * @type {Number}\n\t\t * @name value\n\t\t */\n\t    Object.defineProperty(Tone.TimelineSignal.prototype, 'value', {\n\t        get: function () {\n\t            var now = this.now();\n\t            var val = this.getValueAtTime(now);\n\t            return this._toUnits(val);\n\t        },\n\t        set: function (value) {\n\t            var convertedVal = this._fromUnits(value);\n\t            this._initial = convertedVal;\n\t            this.cancelScheduledValues();\n\t            this._param.value = convertedVal;\n\t        }\n\t    });\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tSCHEDULING\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Schedules a parameter value change at the given time.\n\t\t *  @param {*}\tvalue The value to set the signal.\n\t\t *  @param {Time}  time The time when the change should occur.\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t *  @example\n\t\t * //set the frequency to \"G4\" in exactly 1 second from now. \n\t\t * freq.setValueAtTime(\"G4\", \"+1\");\n\t\t */\n\t    Tone.TimelineSignal.prototype.setValueAtTime = function (value, startTime) {\n\t        value = this._fromUnits(value);\n\t        startTime = this.toSeconds(startTime);\n\t        this._events.addEvent({\n\t            'type': Tone.TimelineSignal.Type.Set,\n\t            'value': value,\n\t            'time': startTime\n\t        });\n\t        //invoke the original event\n\t        this._param.setValueAtTime(value, startTime);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules a linear continuous change in parameter value from the \n\t\t *  previous scheduled parameter value to the given value.\n\t\t *  \n\t\t *  @param  {number} value   \n\t\t *  @param  {Time} endTime \n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.linearRampToValueAtTime = function (value, endTime) {\n\t        value = this._fromUnits(value);\n\t        endTime = this.toSeconds(endTime);\n\t        this._events.addEvent({\n\t            'type': Tone.TimelineSignal.Type.Linear,\n\t            'value': value,\n\t            'time': endTime\n\t        });\n\t        this._param.linearRampToValueAtTime(value, endTime);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an exponential continuous change in parameter value from \n\t\t *  the previous scheduled parameter value to the given value.\n\t\t *  \n\t\t *  @param  {number} value   \n\t\t *  @param  {Time} endTime \n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.exponentialRampToValueAtTime = function (value, endTime) {\n\t        //get the previous event and make sure it's not starting from 0\n\t        endTime = this.toSeconds(endTime);\n\t        var beforeEvent = this._searchBefore(endTime);\n\t        if (beforeEvent && beforeEvent.value === 0) {\n\t            //reschedule that event\n\t            this.setValueAtTime(this._minOutput, beforeEvent.time);\n\t        }\n\t        value = this._fromUnits(value);\n\t        var setValue = Math.max(value, this._minOutput);\n\t        this._events.addEvent({\n\t            'type': Tone.TimelineSignal.Type.Exponential,\n\t            'value': setValue,\n\t            'time': endTime\n\t        });\n\t        //if the ramped to value is 0, make it go to the min output, and then set to 0.\n\t        if (value < this._minOutput) {\n\t            this._param.exponentialRampToValueAtTime(this._minOutput, endTime - this.sampleTime);\n\t            this.setValueAtTime(0, endTime);\n\t        } else {\n\t            this._param.exponentialRampToValueAtTime(value, endTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start exponentially approaching the target value at the given time with\n\t\t *  a rate having the given time constant.\n\t\t *  @param {number} value        \n\t\t *  @param {Time} startTime    \n\t\t *  @param {number} timeConstant \n\t\t *  @returns {Tone.TimelineSignal} this \n\t\t */\n\t    Tone.TimelineSignal.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n\t        value = this._fromUnits(value);\n\t        value = Math.max(this._minOutput, value);\n\t        timeConstant = Math.max(this._minOutput, timeConstant);\n\t        startTime = this.toSeconds(startTime);\n\t        this._events.addEvent({\n\t            'type': Tone.TimelineSignal.Type.Target,\n\t            'value': value,\n\t            'time': startTime,\n\t            'constant': timeConstant\n\t        });\n\t        this._param.setTargetAtTime(value, startTime, timeConstant);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set an array of arbitrary values starting at the given time for the given duration.\n\t\t *  @param {Float32Array} values        \n\t\t *  @param {Time} startTime    \n\t\t *  @param {Time} duration\n\t\t *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value\n\t\t *  @returns {Tone.TimelineSignal} this \n\t\t */\n\t    Tone.TimelineSignal.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n\t        scaling = this.defaultArg(scaling, 1);\n\t        //copy the array\n\t        var floats = new Array(values.length);\n\t        for (var i = 0; i < floats.length; i++) {\n\t            floats[i] = this._fromUnits(values[i]) * scaling;\n\t        }\n\t        startTime = this.toSeconds(startTime);\n\t        duration = this.toSeconds(duration);\n\t        this._events.addEvent({\n\t            'type': Tone.TimelineSignal.Type.Curve,\n\t            'value': floats,\n\t            'time': startTime,\n\t            'duration': duration\n\t        });\n\t        //set the first value\n\t        this._param.setValueAtTime(floats[0], startTime);\n\t        //schedule a lienar ramp for each of the segments\n\t        for (var j = 1; j < floats.length; j++) {\n\t            var segmentTime = startTime + j / (floats.length - 1) * duration;\n\t            this._param.linearRampToValueAtTime(floats[j], segmentTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancels all scheduled parameter changes with times greater than or \n\t\t *  equal to startTime.\n\t\t *  \n\t\t *  @param  {Time} startTime\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.cancelScheduledValues = function (after) {\n\t        after = this.toSeconds(after);\n\t        this._events.cancel(after);\n\t        this._param.cancelScheduledValues(after);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sets the computed value at the given time. This provides\n\t\t *  a point from which a linear or exponential curve\n\t\t *  can be scheduled after. Will cancel events after \n\t\t *  the given time and shorten the currently scheduled\n\t\t *  linear or exponential ramp so that it ends at `time` .\n\t\t *  This is to avoid discontinuities and clicks in envelopes. \n\t\t *  @param {Time} time When to set the ramp point\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.setRampPoint = function (time) {\n\t        time = this.toSeconds(time);\n\t        //get the value at the given time\n\t        var val = this._toUnits(this.getValueAtTime(time));\n\t        //if there is an event at the given time\n\t        //and that even is not a \"set\"\n\t        var before = this._searchBefore(time);\n\t        if (before && before.time === time) {\n\t            //remove everything after\n\t            this.cancelScheduledValues(time + this.sampleTime);\n\t        } else if (before && before.type === Tone.TimelineSignal.Type.Curve && before.time + before.duration > time) {\n\t            //if the curve is still playing\n\t            //cancel the curve\n\t            this.cancelScheduledValues(time);\n\t            this.linearRampToValueAtTime(val, time);\n\t        } else {\n\t            //reschedule the next event to end at the given time\n\t            var after = this._searchAfter(time);\n\t            if (after) {\n\t                //cancel the next event(s)\n\t                this.cancelScheduledValues(time);\n\t                if (after.type === Tone.TimelineSignal.Type.Linear) {\n\t                    this.linearRampToValueAtTime(val, time);\n\t                } else if (after.type === Tone.TimelineSignal.Type.Exponential) {\n\t                    this.exponentialRampToValueAtTime(val, time);\n\t                }\n\t            }\n\t            this.setValueAtTime(val, time);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Do a linear ramp to the given value between the start and finish times.\n\t\t *  @param {Number} value The value to ramp to.\n\t\t *  @param {Time} start The beginning anchor point to do the linear ramp\n\t\t *  @param {Time} finish The ending anchor point by which the value of\n\t\t *                       the signal will equal the given value.\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.linearRampToValueBetween = function (value, start, finish) {\n\t        this.setRampPoint(start);\n\t        this.linearRampToValueAtTime(value, finish);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Do a exponential ramp to the given value between the start and finish times.\n\t\t *  @param {Number} value The value to ramp to.\n\t\t *  @param {Time} start The beginning anchor point to do the exponential ramp\n\t\t *  @param {Time} finish The ending anchor point by which the value of\n\t\t *                       the signal will equal the given value.\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.exponentialRampToValueBetween = function (value, start, finish) {\n\t        this.setRampPoint(start);\n\t        this.exponentialRampToValueAtTime(value, finish);\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tGETTING SCHEDULED VALUES\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Returns the value before or equal to the given time\n\t\t *  @param  {Number}  time  The time to query\n\t\t *  @return  {Object}  The event at or before the given time.\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._searchBefore = function (time) {\n\t        return this._events.getEvent(time);\n\t    };\n\t    /**\n\t\t *  The event after the given time\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @return  {Object}  The next event after the given time\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._searchAfter = function (time) {\n\t        return this._events.getEventAfter(time);\n\t    };\n\t    /**\n\t\t *  Get the scheduled value at the given time. This will\n\t\t *  return the unconverted (raw) value.\n\t\t *  @param  {Number}  time  The time in seconds.\n\t\t *  @return  {Number}  The scheduled value at the given time.\n\t\t */\n\t    Tone.TimelineSignal.prototype.getValueAtTime = function (time) {\n\t        time = this.toSeconds(time);\n\t        var after = this._searchAfter(time);\n\t        var before = this._searchBefore(time);\n\t        var value = this._initial;\n\t        //if it was set by\n\t        if (before === null) {\n\t            value = this._initial;\n\t        } else if (before.type === Tone.TimelineSignal.Type.Target) {\n\t            var previous = this._events.getEventBefore(before.time);\n\t            var previouVal;\n\t            if (previous === null) {\n\t                previouVal = this._initial;\n\t            } else {\n\t                previouVal = previous.value;\n\t            }\n\t            value = this._exponentialApproach(before.time, previouVal, before.value, before.constant, time);\n\t        } else if (before.type === Tone.TimelineSignal.Type.Curve) {\n\t            value = this._curveInterpolate(before.time, before.value, before.duration, time);\n\t        } else if (after === null) {\n\t            value = before.value;\n\t        } else if (after.type === Tone.TimelineSignal.Type.Linear) {\n\t            value = this._linearInterpolate(before.time, before.value, after.time, after.value, time);\n\t        } else if (after.type === Tone.TimelineSignal.Type.Exponential) {\n\t            value = this._exponentialInterpolate(before.time, before.value, after.time, after.value, time);\n\t        } else {\n\t            value = before.value;\n\t        }\n\t        return value;\n\t    };\n\t    /**\n\t\t *  When signals connect to other signals or AudioParams, \n\t\t *  they take over the output value of that signal or AudioParam. \n\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>. \n\t\t *\n\t\t *  @override\n\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node \n\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t *  @method\n\t\t */\n\t    Tone.TimelineSignal.prototype.connect = Tone.SignalBase.prototype.connect;\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tAUTOMATION CURVE CALCULATIONS\n\t    //\tMIT License, copyright (c) 2014 Jordan Santell\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Calculates the the value along the curve produced by setTargetAtTime\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._exponentialApproach = function (t0, v0, v1, timeConstant, t) {\n\t        return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n\t    };\n\t    /**\n\t\t *  Calculates the the value along the curve produced by linearRampToValueAtTime\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._linearInterpolate = function (t0, v0, t1, v1, t) {\n\t        return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n\t    };\n\t    /**\n\t\t *  Calculates the the value along the curve produced by exponentialRampToValueAtTime\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._exponentialInterpolate = function (t0, v0, t1, v1, t) {\n\t        v0 = Math.max(this._minOutput, v0);\n\t        return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n\t    };\n\t    /**\n\t\t *  Calculates the the value along the curve produced by setValueCurveAtTime\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._curveInterpolate = function (start, curve, duration, time) {\n\t        var len = curve.length;\n\t        // If time is after duration, return the last curve value\n\t        if (time >= start + duration) {\n\t            return curve[len - 1];\n\t        } else if (time <= start) {\n\t            return curve[0];\n\t        } else {\n\t            var progress = (time - start) / duration;\n\t            var lowerIndex = Math.floor((len - 1) * progress);\n\t            var upperIndex = Math.ceil((len - 1) * progress);\n\t            var lowerVal = curve[lowerIndex];\n\t            var upperVal = curve[upperIndex];\n\t            if (upperIndex === lowerIndex) {\n\t                return lowerVal;\n\t            } else {\n\t                return this._linearInterpolate(lowerIndex, lowerVal, upperIndex, upperVal, progress * (len - 1));\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.dispose = function () {\n\t        Tone.Signal.prototype.dispose.call(this);\n\t        Tone.Param.prototype.dispose.call(this);\n\t        this._events.dispose();\n\t        this._events = null;\n\t    };\n\t    return Tone.TimelineSignal;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Pow applies an exponent to the incoming signal. The incoming signal\n\t\t *         must be AudioRange.\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {Positive} exp The exponent to apply to the incoming signal, must be at least 2. \n\t\t *  @example\n\t\t * var pow = new Tone.Pow(2);\n\t\t * var sig = new Tone.Signal(0.5).connect(pow);\n\t\t * //output of pow is 0.25. \n\t\t */\n\t    Tone.Pow = function (exp) {\n\t        /**\n\t\t\t * the exponent\n\t\t\t * @private\n\t\t\t * @type {number}\n\t\t\t */\n\t        this._exp = this.defaultArg(exp, 1);\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._expScaler = this.input = this.output = new Tone.WaveShaper(this._expFunc(this._exp), 8192);\n\t    };\n\t    Tone.extend(Tone.Pow, Tone.SignalBase);\n\t    /**\n\t\t * The value of the exponent.\n\t\t * @memberOf Tone.Pow#\n\t\t * @type {number}\n\t\t * @name value\n\t\t */\n\t    Object.defineProperty(Tone.Pow.prototype, 'value', {\n\t        get: function () {\n\t            return this._exp;\n\t        },\n\t        set: function (exp) {\n\t            this._exp = exp;\n\t            this._expScaler.setMap(this._expFunc(this._exp));\n\t        }\n\t    });\n\t    /**\n\t\t *  the function which maps the waveshaper\n\t\t *  @param   {number} exp\n\t\t *  @return {function}\n\t\t *  @private\n\t\t */\n\t    Tone.Pow.prototype._expFunc = function (exp) {\n\t        return function (val) {\n\t            return Math.pow(Math.abs(val), exp);\n\t        };\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Pow} this\n\t\t */\n\t    Tone.Pow.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._expScaler.dispose();\n\t        this._expScaler = null;\n\t        return this;\n\t    };\n\t    return Tone.Pow;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n\t\t *          envelope generator. Tone.Envelope outputs a signal which \n\t\t *          can be connected to an AudioParam or Tone.Signal. \n\t\t *          <img src=\"https://upload.wikimedia.org/wikipedia/commons/e/ea/ADSR_parameter.svg\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {Time} [attack] The amount of time it takes for the envelope to go from \n\t\t *                         0 to it's maximum value. \n\t\t *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n\t\t *                       \tto fall to the sustain value. \n\t\t *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n\t\t *                                \tthe release is triggered. \n\t\t *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0. \n\t\t *  @example\n\t\t * //an amplitude envelope\n\t\t * var gainNode = Tone.context.createGain();\n\t\t * var env = new Tone.Envelope({\n\t\t * \t\"attack\" : 0.1,\n\t\t * \t\"decay\" : 0.2,\n\t\t * \t\"sustain\" : 1,\n\t\t * \t\"release\" : 0.8,\n\t\t * });\n\t\t * env.connect(gainNode.gain);\n\t\t */\n\t    Tone.Envelope = function () {\n\t        //get all of the defaults\n\t        var options = this.optionsObject(arguments, [\n\t            'attack',\n\t            'decay',\n\t            'sustain',\n\t            'release'\n\t        ], Tone.Envelope.defaults);\n\t        /** \n\t\t\t *  When triggerAttack is called, the attack time is the amount of\n\t\t\t *  time it takes for the envelope to reach it's maximum value. \n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.attack = options.attack;\n\t        /**\n\t\t\t *  After the attack portion of the envelope, the value will fall\n\t\t\t *  over the duration of the decay time to it's sustain value. \n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.decay = options.decay;\n\t        /**\n\t\t\t * \tThe sustain value is the value \n\t\t\t * \twhich the envelope rests at after triggerAttack is\n\t\t\t * \tcalled, but before triggerRelease is invoked. \n\t\t\t *  @type {NormalRange}\n\t\t\t */\n\t        this.sustain = options.sustain;\n\t        /**\n\t\t\t *  After triggerRelease is called, the envelope's\n\t\t\t *  value will fall to it's miminum value over the\n\t\t\t *  duration of the release time. \n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.release = options.release;\n\t        /**\n\t\t\t *  the next time the envelope is at standby\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._attackCurve = 'linear';\n\t        /**\n\t\t\t *  the next time the envelope is at standby\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._releaseCurve = 'exponential';\n\t        /**\n\t\t\t *  the signal\n\t\t\t *  @type {Tone.TimelineSignal}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sig = this.output = new Tone.TimelineSignal();\n\t        this._sig.setValueAtTime(0, 0);\n\t        //set the attackCurve initially\n\t        this.attackCurve = options.attackCurve;\n\t        this.releaseCurve = options.releaseCurve;\n\t    };\n\t    Tone.extend(Tone.Envelope);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.Envelope.defaults = {\n\t        'attack': 0.01,\n\t        'decay': 0.1,\n\t        'sustain': 0.5,\n\t        'release': 1,\n\t        'attackCurve': 'linear',\n\t        'releaseCurve': 'exponential'\n\t    };\n\t    /**\n\t\t * Read the current value of the envelope. Useful for \n\t\t * syncronizing visual output to the envelope. \n\t\t * @memberOf Tone.Envelope#\n\t\t * @type {Number}\n\t\t * @name value\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Envelope.prototype, 'value', {\n\t        get: function () {\n\t            return this.getValueAtTime(this.now());\n\t        }\n\t    });\n\t    /**\n\t\t * The shape of the attack. \n\t\t * Can be any of these strings:\n\t\t * <ul>\n\t\t *   <li>linear</li>\n\t\t *   <li>exponential</li>\n\t\t *   <li>sine</li>\n\t\t *   <li>ease</li>\n\t\t *   <li>bounce</li>\n\t\t *   <li>ripple</li>\n\t\t *   <li>step</li>\n\t\t * </ul>\n\t\t * Can also be an array which describes the curve. Values\n\t\t * in the array are evenly subdivided and linearly\n\t\t * interpolated over the duration of the attack. \n\t\t * @memberOf Tone.Envelope#\n\t\t * @type {String|Array}\n\t\t * @name attackCurve\n\t\t * @example\n\t\t * env.attackCurve = \"linear\";\n\t\t * @example\n\t\t * //can also be an array\n\t\t * env.attackCurve = [0, 0.2, 0.3, 0.4, 1]\n\t\t */\n\t    Object.defineProperty(Tone.Envelope.prototype, 'attackCurve', {\n\t        get: function () {\n\t            if (this.isString(this._attackCurve)) {\n\t                return this._attackCurve;\n\t            } else if (this.isArray(this._attackCurve)) {\n\t                //look up the name in the curves array\n\t                for (var type in Tone.Envelope.Type) {\n\t                    if (Tone.Envelope.Type[type].In === this._attackCurve) {\n\t                        return type;\n\t                    }\n\t                }\n\t                //otherwise just return the array\n\t                return this._attackCurve;\n\t            }\n\t        },\n\t        set: function (curve) {\n\t            //check if it's a valid type\n\t            if (Tone.Envelope.Type.hasOwnProperty(curve)) {\n\t                var curveDef = Tone.Envelope.Type[curve];\n\t                if (this.isObject(curveDef)) {\n\t                    this._attackCurve = curveDef.In;\n\t                } else {\n\t                    this._attackCurve = curveDef;\n\t                }\n\t            } else if (this.isArray(curve)) {\n\t                this._attackCurve = curve;\n\t            } else {\n\t                throw new Error('Tone.Envelope: invalid curve: ' + curve);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The shape of the release. See the attack curve types. \n\t\t * @memberOf Tone.Envelope#\n\t\t * @type {String|Array}\n\t\t * @name releaseCurve\n\t\t * @example\n\t\t * env.releaseCurve = \"linear\";\n\t\t */\n\t    Object.defineProperty(Tone.Envelope.prototype, 'releaseCurve', {\n\t        get: function () {\n\t            if (this.isString(this._releaseCurve)) {\n\t                return this._releaseCurve;\n\t            } else if (this.isArray(this._releaseCurve)) {\n\t                //look up the name in the curves array\n\t                for (var type in Tone.Envelope.Type) {\n\t                    if (Tone.Envelope.Type[type].Out === this._releaseCurve) {\n\t                        return type;\n\t                    }\n\t                }\n\t                //otherwise just return the array\n\t                return this._releaseCurve;\n\t            }\n\t        },\n\t        set: function (curve) {\n\t            //check if it's a valid type\n\t            if (Tone.Envelope.Type.hasOwnProperty(curve)) {\n\t                var curveDef = Tone.Envelope.Type[curve];\n\t                if (this.isObject(curveDef)) {\n\t                    this._releaseCurve = curveDef.Out;\n\t                } else {\n\t                    this._releaseCurve = curveDef;\n\t                }\n\t            } else if (this.isArray(curve)) {\n\t                this._releaseCurve = curve;\n\t            } else {\n\t                throw new Error('Tone.Envelope: invalid curve: ' + curve);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Trigger the attack/decay portion of the ADSR envelope. \n\t\t *  @param  {Time} [time=now] When the attack should start.\n\t\t *  @param {NormalRange} [velocity=1] The velocity of the envelope scales the vales.\n\t\t *                               number between 0-1\n\t\t *  @returns {Tone.Envelope} this\n\t\t *  @example\n\t\t *  //trigger the attack 0.5 seconds from now with a velocity of 0.2\n\t\t *  env.triggerAttack(\"+0.5\", 0.2);\n\t\t */\n\t    Tone.Envelope.prototype.triggerAttack = function (time, velocity) {\n\t        time = this.toSeconds(time);\n\t        var originalAttack = this.toSeconds(this.attack);\n\t        var attack = originalAttack;\n\t        var decay = this.toSeconds(this.decay);\n\t        velocity = this.defaultArg(velocity, 1);\n\t        //check if it's not a complete attack\n\t        var currentValue = this.getValueAtTime(time);\n\t        if (currentValue > 0) {\n\t            //subtract the current value from the attack time\n\t            var attackRate = 1 / attack;\n\t            var remainingDistance = 1 - currentValue;\n\t            //the attack is now the remaining time\n\t            attack = remainingDistance / attackRate;\n\t        }\n\t        //attack\n\t        if (this._attackCurve === 'linear') {\n\t            this._sig.linearRampToValue(velocity, attack, time);\n\t        } else if (this._attackCurve === 'exponential') {\n\t            this._sig.exponentialRampToValue(velocity, attack, time);\n\t        } else if (attack > 0) {\n\t            this._sig.setRampPoint(time);\n\t            var curve = this._attackCurve;\n\t            //take only a portion of the curve\n\t            if (attack < originalAttack) {\n\t                var percentComplete = 1 - attack / originalAttack;\n\t                var sliceIndex = Math.floor(percentComplete * this._attackCurve.length);\n\t                curve = this._attackCurve.slice(sliceIndex);\n\t                //the first index is the current value\n\t                curve[0] = currentValue;\n\t            }\n\t            this._sig.setValueCurveAtTime(curve, time, attack, velocity);\n\t        }\n\t        //decay\n\t        this._sig.exponentialRampToValue(velocity * this.sustain, decay, attack + time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Triggers the release of the envelope.\n\t\t *  @param  {Time} [time=now] When the release portion of the envelope should start. \n\t\t *  @returns {Tone.Envelope} this\n\t\t *  @example\n\t\t *  //trigger release immediately\n\t\t *  env.triggerRelease();\n\t\t */\n\t    Tone.Envelope.prototype.triggerRelease = function (time) {\n\t        time = this.toSeconds(time);\n\t        var currentValue = this.getValueAtTime(time);\n\t        if (currentValue > 0) {\n\t            var release = this.toSeconds(this.release);\n\t            if (this._releaseCurve === 'linear') {\n\t                this._sig.linearRampToValue(0, release, time);\n\t            } else if (this._releaseCurve === 'exponential') {\n\t                this._sig.exponentialRampToValue(0, release, time);\n\t            } else {\n\t                var curve = this._releaseCurve;\n\t                if (this.isArray(curve)) {\n\t                    this._sig.setRampPoint(time);\n\t                    this._sig.setValueCurveAtTime(curve, time, release, currentValue);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the scheduled value at the given time. This will\n\t\t *  return the unconverted (raw) value.\n\t\t *  @param  {Number}  time  The time in seconds.\n\t\t *  @return  {Number}  The scheduled value at the given time.\n\t\t */\n\t    Tone.Envelope.prototype.getValueAtTime = function (time) {\n\t        return this._sig.getValueAtTime(time);\n\t    };\n\t    /**\n\t\t *  triggerAttackRelease is shorthand for triggerAttack, then waiting\n\t\t *  some duration, then triggerRelease. \n\t\t *  @param {Time} duration The duration of the sustain.\n\t\t *  @param {Time} [time=now] When the attack should be triggered.\n\t\t *  @param {number} [velocity=1] The velocity of the envelope. \n\t\t *  @returns {Tone.Envelope} this\n\t\t *  @example\n\t\t * //trigger the attack and then the release after 0.6 seconds.\n\t\t * env.triggerAttackRelease(0.6);\n\t\t */\n\t    Tone.Envelope.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        this.triggerAttack(time, velocity);\n\t        this.triggerRelease(time + this.toSeconds(duration));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancels all scheduled envelope changes after the given time.\n\t\t *  @param  {Time} after\n\t\t *  @returns {Tone.Envelope} this\n\t\t */\n\t    Tone.Envelope.prototype.cancel = function (after) {\n\t        this._sig.cancelScheduledValues(after);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Borrows the connect method from Tone.Signal. \n\t\t *  @function\n\t\t *  @private\n\t\t */\n\t    Tone.Envelope.prototype.connect = Tone.Signal.prototype.connect;\n\t    /**\n\t \t *  Generate some complex envelope curves. \n\t \t */\n\t    (function _createCurves() {\n\t        var curveLen = 128;\n\t        var i, k;\n\t        //cosine curve\n\t        var cosineCurve = [];\n\t        for (i = 0; i < curveLen; i++) {\n\t            cosineCurve[i] = Math.sin(i / (curveLen - 1) * (Math.PI / 2));\n\t        }\n\t        //ripple curve\n\t        var rippleCurve = [];\n\t        var rippleCurveFreq = 6.4;\n\t        for (i = 0; i < curveLen - 1; i++) {\n\t            k = i / (curveLen - 1);\n\t            var sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n\t            rippleCurve[i] = sineWave / 10 + k * 0.83;\n\t        }\n\t        rippleCurve[curveLen - 1] = 1;\n\t        //stairs curve\n\t        var stairsCurve = [];\n\t        var steps = 5;\n\t        for (i = 0; i < curveLen; i++) {\n\t            stairsCurve[i] = Math.ceil(i / (curveLen - 1) * steps) / steps;\n\t        }\n\t        //in-out easing curve\n\t        var sineCurve = [];\n\t        for (i = 0; i < curveLen; i++) {\n\t            k = i / (curveLen - 1);\n\t            sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n\t        }\n\t        //a bounce curve\n\t        var bounceCurve = [];\n\t        for (i = 0; i < curveLen; i++) {\n\t            k = i / (curveLen - 1);\n\t            var freq = Math.pow(k, 3) * 4 + 0.2;\n\t            var val = Math.cos(freq * Math.PI * 2 * k);\n\t            bounceCurve[i] = Math.abs(val * (1 - k));\n\t        }\n\t        /**\n\t\t\t *  Invert a value curve to make it work for the release\n\t\t\t *  @private\n\t\t\t */\n\t        function invertCurve(curve) {\n\t            var out = new Array(curve.length);\n\t            for (var j = 0; j < curve.length; j++) {\n\t                out[j] = 1 - curve[j];\n\t            }\n\t            return out;\n\t        }\n\t        /**\n\t\t\t *  reverse the curve\n\t\t\t *  @private\n\t\t\t */\n\t        function reverseCurve(curve) {\n\t            return curve.slice(0).reverse();\n\t        }\n\t        /**\n\t\t\t *  attack and release curve arrays\n\t\t\t *  @type  {Object}\n\t\t\t *  @private\n\t\t\t */\n\t        Tone.Envelope.Type = {\n\t            'linear': 'linear',\n\t            'exponential': 'exponential',\n\t            'bounce': {\n\t                In: invertCurve(bounceCurve),\n\t                Out: bounceCurve\n\t            },\n\t            'cosine': {\n\t                In: cosineCurve,\n\t                Out: reverseCurve(cosineCurve)\n\t            },\n\t            'step': {\n\t                In: stairsCurve,\n\t                Out: invertCurve(stairsCurve)\n\t            },\n\t            'ripple': {\n\t                In: rippleCurve,\n\t                Out: invertCurve(rippleCurve)\n\t            },\n\t            'sine': {\n\t                In: sineCurve,\n\t                Out: invertCurve(sineCurve)\n\t            }\n\t        };\n\t    }());\n\t    /**\n\t\t *  Disconnect and dispose.\n\t\t *  @returns {Tone.Envelope} this\n\t\t */\n\t    Tone.Envelope.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._sig.dispose();\n\t        this._sig = null;\n\t        this._attackCurve = null;\n\t        this._releaseCurve = null;\n\t        return this;\n\t    };\n\t    return Tone.Envelope;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.AmplitudeEnvelope is a Tone.Envelope connected to a gain node. \n\t\t *          Unlike Tone.Envelope, which outputs the envelope's value, Tone.AmplitudeEnvelope accepts\n\t\t *          an audio signal as the input and will apply the envelope to the amplitude\n\t\t *          of the signal. Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Envelope}\n\t\t *  @param {Time|Object} [attack] The amount of time it takes for the envelope to go from \n\t\t *                               0 to it's maximum value. \n\t\t *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n\t\t *                       \tto fall to the sustain value. \n\t\t *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n\t\t *                                \tthe release is triggered. \n\t\t *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0. \n\t\t *  @example\n\t\t * var ampEnv = new Tone.AmplitudeEnvelope({\n\t\t * \t\"attack\": 0.1,\n\t\t * \t\"decay\": 0.2,\n\t\t * \t\"sustain\": 1.0,\n\t\t * \t\"release\": 0.8\n\t\t * }).toMaster();\n\t\t * //create an oscillator and connect it\n\t\t * var osc = new Tone.Oscillator().connect(ampEnv).start();\n\t\t * //trigger the envelopes attack and release \"8t\" apart\n\t\t * ampEnv.triggerAttackRelease(\"8t\");\n\t\t */\n\t    Tone.AmplitudeEnvelope = function () {\n\t        Tone.Envelope.apply(this, arguments);\n\t        /**\n\t\t\t *  the input node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.input = this.output = new Tone.Gain();\n\t        this._sig.connect(this.output.gain);\n\t    };\n\t    Tone.extend(Tone.AmplitudeEnvelope, Tone.Envelope);\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.AmplitudeEnvelope}  this\n\t\t */\n\t    Tone.AmplitudeEnvelope.prototype.dispose = function () {\n\t        this.input.dispose();\n\t        this.input = null;\n\t        Tone.Envelope.prototype.dispose.call(this);\n\t        return this;\n\t    };\n\t    return Tone.AmplitudeEnvelope;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Wrapper around the native Web Audio's \n\t\t *          [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).\n\t\t *          Extracts FFT or Waveform data from the incoming signal.\n\t\t *  @extends {Tone}\n\t\t *  @param {String=} type The return type of the analysis, either \"fft\", or \"waveform\". \n\t\t *  @param {Number=} size The size of the FFT. Value must be a power of \n\t\t *                       two in the range 32 to 32768.\n\t\t */\n\t    Tone.Analyser = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'type',\n\t            'size'\n\t        ], Tone.Analyser.defaults);\n\t        /**\n\t\t\t *  The analyser node.\n\t\t\t *  @private\n\t\t\t *  @type {AnalyserNode}\n\t\t\t */\n\t        this._analyser = this.input = this.output = this.context.createAnalyser();\n\t        /**\n\t\t\t *  The analysis type\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = options.type;\n\t        /**\n\t\t\t *  The return type of the analysis\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._returnType = options.returnType;\n\t        /**\n\t\t\t *  The buffer that the FFT data is written to\n\t\t\t *  @type {TypedArray}\n\t\t\t *  @private\n\t\t\t */\n\t        this._buffer = null;\n\t        //set the values initially\n\t        this.size = options.size;\n\t        this.type = options.type;\n\t        this.returnType = options.returnType;\n\t        this.minDecibels = options.minDecibels;\n\t        this.maxDecibels = options.maxDecibels;\n\t    };\n\t    Tone.extend(Tone.Analyser);\n\t    /**\n\t\t *  The default values.\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Analyser.defaults = {\n\t        'size': 1024,\n\t        'returnType': 'byte',\n\t        'type': 'fft',\n\t        'smoothing': 0.8,\n\t        'maxDecibels': -30,\n\t        'minDecibels': -100\n\t    };\n\t    /**\n\t\t *  Possible return types of Tone.Analyser.analyse()\n\t\t *  @enum {String}\n\t\t */\n\t    Tone.Analyser.Type = {\n\t        Waveform: 'waveform',\n\t        FFT: 'fft'\n\t    };\n\t    /**\n\t\t *  Possible return types of Tone.Analyser.analyse(). \n\t\t *  byte values are between [0,255]. float values are between \n\t\t *  [-1, 1] when the type is set to \"waveform\" and between \n\t\t *  [minDecibels,maxDecibels] when the type is \"fft\".\n\t\t *  @enum {String}\n\t\t */\n\t    Tone.Analyser.ReturnType = {\n\t        Byte: 'byte',\n\t        Float: 'float'\n\t    };\n\t    /**\n\t\t *  Run the analysis given the current settings and return the \n\t\t *  result as a TypedArray. \n\t\t *  @returns {TypedArray}\n\t\t */\n\t    Tone.Analyser.prototype.analyse = function () {\n\t        if (this._type === Tone.Analyser.Type.FFT) {\n\t            if (this._returnType === Tone.Analyser.ReturnType.Byte) {\n\t                this._analyser.getByteFrequencyData(this._buffer);\n\t            } else {\n\t                this._analyser.getFloatFrequencyData(this._buffer);\n\t            }\n\t        } else if (this._type === Tone.Analyser.Type.Waveform) {\n\t            if (this._returnType === Tone.Analyser.ReturnType.Byte) {\n\t                this._analyser.getByteTimeDomainData(this._buffer);\n\t            } else {\n\t                if (this.isFunction(AnalyserNode.prototype.getFloatTimeDomainData)) {\n\t                    this._analyser.getFloatTimeDomainData(this._buffer);\n\t                } else {\n\t                    var uint8 = new Uint8Array(this._buffer.length);\n\t                    this._analyser.getByteTimeDomainData(uint8);\n\t                    //referenced https://github.com/mohayonao/get-float-time-domain-data \n\t                    // POLYFILL\n\t                    for (var i = 0; i < uint8.length; i++) {\n\t                        this._buffer[i] = (uint8[i] - 128) * 0.0078125;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return this._buffer;\n\t    };\n\t    /**\n\t\t *  The size of analysis. This must be a power of two in the range 32 to 32768.\n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {Number}\n\t\t *  @name size\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'size', {\n\t        get: function () {\n\t            return this._analyser.frequencyBinCount;\n\t        },\n\t        set: function (size) {\n\t            this._analyser.fftSize = size * 2;\n\t            this.type = this._type;\n\t        }\n\t    });\n\t    /**\n\t\t *  The return type of Tone.Analyser.analyse(), either \"byte\" or \"float\". \n\t\t *  When the type is set to \"byte\" the range of values returned in the array\n\t\t *  are between 0-255. \"float\" values are between \n\t\t *  [-1, 1] when the type is set to \"waveform\" and between \n\t\t *  [minDecibels,maxDecibels] when the type is \"fft\".\n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {String}\n\t\t *  @name type\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'returnType', {\n\t        get: function () {\n\t            return this._returnType;\n\t        },\n\t        set: function (type) {\n\t            if (type === Tone.Analyser.ReturnType.Byte) {\n\t                this._buffer = new Uint8Array(this._analyser.frequencyBinCount);\n\t            } else if (type === Tone.Analyser.ReturnType.Float) {\n\t                this._buffer = new Float32Array(this._analyser.frequencyBinCount);\n\t            } else {\n\t                throw new TypeError('Tone.Analayser: invalid return type: ' + type);\n\t            }\n\t            this._returnType = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  The analysis function returned by Tone.Analyser.analyse(), either \"fft\" or \"waveform\". \n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {String}\n\t\t *  @name type\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            if (type !== Tone.Analyser.Type.Waveform && type !== Tone.Analyser.Type.FFT) {\n\t                throw new TypeError('Tone.Analyser: invalid type: ' + type);\n\t            }\n\t            this._type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  0 represents no time averaging with the last analysis frame.\n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {NormalRange}\n\t\t *  @name smoothing\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'smoothing', {\n\t        get: function () {\n\t            return this._analyser.smoothingTimeConstant;\n\t        },\n\t        set: function (val) {\n\t            this._analyser.smoothingTimeConstant = val;\n\t        }\n\t    });\n\t    /**\n\t\t *  The smallest decibel value which is analysed by the FFT. \n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {Decibels}\n\t\t *  @name minDecibels\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'minDecibels', {\n\t        get: function () {\n\t            return this._analyser.minDecibels;\n\t        },\n\t        set: function (val) {\n\t            this._analyser.minDecibels = val;\n\t        }\n\t    });\n\t    /**\n\t\t *  The largest decibel value which is analysed by the FFT. \n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {Decibels}\n\t\t *  @name maxDecibels\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'maxDecibels', {\n\t        get: function () {\n\t            return this._analyser.maxDecibels;\n\t        },\n\t        set: function (val) {\n\t            this._analyser.maxDecibels = val;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Analyser}  this\n\t\t */\n\t    Tone.Analyser.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._analyser.disconnect();\n\t        this._analyser = null;\n\t        this._buffer = null;\n\t    };\n\t    return Tone.Analyser;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Compressor is a thin wrapper around the Web Audio \n\t\t *         [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).\n\t\t *         Compression reduces the volume of loud sounds or amplifies quiet sounds \n\t\t *         by narrowing or \"compressing\" an audio signal's dynamic range. \n\t\t *         Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {Decibels|Object} [threshold] The value above which the compression starts to be applied.\n\t\t *  @param {Positive} [ratio] The gain reduction ratio.\n\t\t *  @example\n\t\t * var comp = new Tone.Compressor(-30, 3);\n\t\t */\n\t    Tone.Compressor = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'threshold',\n\t            'ratio'\n\t        ], Tone.Compressor.defaults);\n\t        /**\n\t\t\t *  the compressor node\n\t\t\t *  @type {DynamicsCompressorNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._compressor = this.input = this.output = this.context.createDynamicsCompressor();\n\t        /**\n\t\t\t *  the threshold vaue\n\t\t\t *  @type {Decibels}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.threshold = this._compressor.threshold;\n\t        /**\n\t\t\t *  The attack parameter\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.attack = new Tone.Param(this._compressor.attack, Tone.Type.Time);\n\t        /**\n\t\t\t *  The release parameter\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.release = new Tone.Param(this._compressor.release, Tone.Type.Time);\n\t        /**\n\t\t\t *  The knee parameter\n\t\t\t *  @type {Decibels}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.knee = this._compressor.knee;\n\t        /**\n\t\t\t *  The ratio value\n\t\t\t *  @type {Number}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.ratio = this._compressor.ratio;\n\t        //set the defaults\n\t        this._readOnly([\n\t            'knee',\n\t            'release',\n\t            'attack',\n\t            'ratio',\n\t            'threshold'\n\t        ]);\n\t        this.set(options);\n\t    };\n\t    Tone.extend(Tone.Compressor);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Compressor.defaults = {\n\t        'ratio': 12,\n\t        'threshold': -24,\n\t        'release': 0.25,\n\t        'attack': 0.003,\n\t        'knee': 30\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Compressor} this\n\t\t */\n\t    Tone.Compressor.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'knee',\n\t            'release',\n\t            'attack',\n\t            'ratio',\n\t            'threshold'\n\t        ]);\n\t        this._compressor.disconnect();\n\t        this._compressor = null;\n\t        this.attack.dispose();\n\t        this.attack = null;\n\t        this.release.dispose();\n\t        this.release = null;\n\t        this.threshold = null;\n\t        this.ratio = null;\n\t        this.knee = null;\n\t        return this;\n\t    };\n\t    return Tone.Compressor;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Add a signal and a number or two signals. When no value is\n\t\t *         passed into the constructor, Tone.Add will sum <code>input[0]</code>\n\t\t *         and <code>input[1]</code>. If a value is passed into the constructor, \n\t\t *         the it will be added to the input.\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {number=} value If no value is provided, Tone.Add will sum the first\n\t\t *                         and second inputs. \n\t\t *  @example\n\t\t * var signal = new Tone.Signal(2);\n\t\t * var add = new Tone.Add(2);\n\t\t * signal.connect(add);\n\t\t * //the output of add equals 4\n\t\t *  @example\n\t\t * //if constructed with no arguments\n\t\t * //it will add the first and second inputs\n\t\t * var add = new Tone.Add();\n\t\t * var sig0 = new Tone.Signal(3).connect(add, 0, 0);\n\t\t * var sig1 = new Tone.Signal(4).connect(add, 0, 1);\n\t\t * //the output of add equals 7. \n\t\t */\n\t    Tone.Add = function (value) {\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  the summing node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sum = this.input[0] = this.input[1] = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t        this._param = this.input[1] = new Tone.Signal(value);\n\t        this._param.connect(this._sum);\n\t    };\n\t    Tone.extend(Tone.Add, Tone.Signal);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Add} this\n\t\t */\n\t    Tone.Add.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._sum.dispose();\n\t        this._sum = null;\n\t        this._param.dispose();\n\t        this._param = null;\n\t        return this;\n\t    };\n\t    return Tone.Add;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Multiply two incoming signals. Or, if a number is given in the constructor, \n\t\t *          multiplies the incoming signal by that value. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {number=} value Constant value to multiple. If no value is provided,\n\t\t *                         it will return the product of the first and second inputs\n\t\t *  @example\n\t\t * var mult = new Tone.Multiply();\n\t\t * var sigA = new Tone.Signal(3);\n\t\t * var sigB = new Tone.Signal(4);\n\t\t * sigA.connect(mult, 0, 0);\n\t\t * sigB.connect(mult, 0, 1);\n\t\t * //output of mult is 12.\n\t\t *  @example\n\t\t * var mult = new Tone.Multiply(10);\n\t\t * var sig = new Tone.Signal(2).connect(mult);\n\t\t * //the output of mult is 20. \n\t\t */\n\t    Tone.Multiply = function (value) {\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  the input node is the same as the output node\n\t\t\t *  it is also the GainNode which handles the scaling of incoming signal\n\t\t\t *  \n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._mult = this.input[0] = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  the scaling parameter\n\t\t\t *  @type {AudioParam}\n\t\t\t *  @private\n\t\t\t */\n\t        this._param = this.input[1] = this.output.gain;\n\t        this._param.value = this.defaultArg(value, 0);\n\t    };\n\t    Tone.extend(Tone.Multiply, Tone.Signal);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Multiply} this\n\t\t */\n\t    Tone.Multiply.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._mult.dispose();\n\t        this._mult = null;\n\t        this._param = null;\n\t        return this;\n\t    };\n\t    return Tone.Multiply;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Negate the incoming signal. i.e. an input signal of 10 will output -10\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @example\n\t\t * var neg = new Tone.Negate();\n\t\t * var sig = new Tone.Signal(-2).connect(neg);\n\t\t * //output of neg is positive 2. \n\t\t */\n\t    Tone.Negate = function () {\n\t        /**\n\t\t\t *  negation is done by multiplying by -1\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._multiply = this.input = this.output = new Tone.Multiply(-1);\n\t    };\n\t    Tone.extend(Tone.Negate, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Negate} this\n\t\t */\n\t    Tone.Negate.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._multiply.dispose();\n\t        this._multiply = null;\n\t        return this;\n\t    };\n\t    return Tone.Negate;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Subtract the signal connected to <code>input[1]</code> from the signal connected \n\t\t *         to <code>input[0]</code>. If an argument is provided in the constructor, the \n\t\t *         signals <code>.value</code> will be subtracted from the incoming signal.\n\t\t *\n\t\t *  @extends {Tone.Signal}\n\t\t *  @constructor\n\t\t *  @param {number=} value The value to subtract from the incoming signal. If the value\n\t\t *                         is omitted, it will subtract the second signal from the first.\n\t\t *  @example\n\t\t * var sub = new Tone.Subtract(1);\n\t\t * var sig = new Tone.Signal(4).connect(sub);\n\t\t * //the output of sub is 3. \n\t\t *  @example\n\t\t * var sub = new Tone.Subtract();\n\t\t * var sigA = new Tone.Signal(10);\n\t\t * var sigB = new Tone.Signal(2.5);\n\t\t * sigA.connect(sub, 0, 0);\n\t\t * sigB.connect(sub, 0, 1);\n\t\t * //output of sub is 7.5\n\t\t */\n\t    Tone.Subtract = function (value) {\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  the summing node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sum = this.input[0] = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  negate the input of the second input before connecting it\n\t\t\t *  to the summing node.\n\t\t\t *  @type {Tone.Negate}\n\t\t\t *  @private\n\t\t\t */\n\t        this._neg = new Tone.Negate();\n\t        /**\n\t\t\t *  the node where the value is set\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t        this._param = this.input[1] = new Tone.Signal(value);\n\t        this._param.chain(this._neg, this._sum);\n\t    };\n\t    Tone.extend(Tone.Subtract, Tone.Signal);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.SignalBase} this\n\t\t */\n\t    Tone.Subtract.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._neg.dispose();\n\t        this._neg = null;\n\t        this._sum.disconnect();\n\t        this._sum = null;\n\t        this._param.dispose();\n\t        this._param = null;\n\t        return this;\n\t    };\n\t    return Tone.Subtract;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  GreaterThanZero outputs 1 when the input is strictly greater than zero\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @example\n\t\t * var gt0 = new Tone.GreaterThanZero();\n\t\t * var sig = new Tone.Signal(0.01).connect(gt0);\n\t\t * //the output of gt0 is 1. \n\t\t * sig.value = 0;\n\t\t * //the output of gt0 is 0. \n\t\t */\n\t    Tone.GreaterThanZero = function () {\n\t        /**\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t        this._thresh = this.output = new Tone.WaveShaper(function (val) {\n\t            if (val <= 0) {\n\t                return 0;\n\t            } else {\n\t                return 1;\n\t            }\n\t        }, 127);\n\t        /**\n\t\t\t *  scale the first thresholded signal by a large value.\n\t\t\t *  this will help with values which are very close to 0\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = this.input = new Tone.Multiply(10000);\n\t        //connections\n\t        this._scale.connect(this._thresh);\n\t    };\n\t    Tone.extend(Tone.GreaterThanZero, Tone.SignalBase);\n\t    /**\n\t\t *  dispose method\n\t\t *  @returns {Tone.GreaterThanZero} this\n\t\t */\n\t    Tone.GreaterThanZero.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        this._thresh.dispose();\n\t        this._thresh = null;\n\t        return this;\n\t    };\n\t    return Tone.GreaterThanZero;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Output 1 if the signal is greater than the value, otherwise outputs 0.\n\t\t *          can compare two signals or a signal and a number. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {number} [value=0] the value to compare to the incoming signal\n\t\t *  @example\n\t\t * var gt = new Tone.GreaterThan(2);\n\t\t * var sig = new Tone.Signal(4).connect(gt);\n\t\t * //output of gt is equal 1. \n\t\t */\n\t    Tone.GreaterThan = function (value) {\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  subtract the amount from the incoming signal\n\t\t\t *  @type {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t        this._param = this.input[0] = new Tone.Subtract(value);\n\t        this.input[1] = this._param.input[1];\n\t        /**\n\t\t\t *  compare that amount to zero\n\t\t\t *  @type {Tone.GreaterThanZero}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gtz = this.output = new Tone.GreaterThanZero();\n\t        //connect\n\t        this._param.connect(this._gtz);\n\t    };\n\t    Tone.extend(Tone.GreaterThan, Tone.Signal);\n\t    /**\n\t\t *  dispose method\n\t\t *  @returns {Tone.GreaterThan} this\n\t\t */\n\t    Tone.GreaterThan.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._param.dispose();\n\t        this._param = null;\n\t        this._gtz.dispose();\n\t        this._gtz = null;\n\t        return this;\n\t    };\n\t    return Tone.GreaterThan;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Return the absolute value of an incoming signal. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @example\n\t\t * var signal = new Tone.Signal(-1);\n\t\t * var abs = new Tone.Abs();\n\t\t * signal.connect(abs);\n\t\t * //the output of abs is 1. \n\t\t */\n\t    Tone.Abs = function () {\n\t        /**\n\t\t\t *  @type {Tone.LessThan}\n\t\t\t *  @private\n\t\t\t */\n\t        this._abs = this.input = this.output = new Tone.WaveShaper(function (val) {\n\t            if (val === 0) {\n\t                return 0;\n\t            } else {\n\t                return Math.abs(val);\n\t            }\n\t        }, 127);\n\t    };\n\t    Tone.extend(Tone.Abs, Tone.SignalBase);\n\t    /**\n\t\t *  dispose method\n\t\t *  @returns {Tone.Abs} this\n\t\t */\n\t    Tone.Abs.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._abs.dispose();\n\t        this._abs = null;\n\t        return this;\n\t    };\n\t    return Tone.Abs;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Signal-rate modulo operator. Only works in AudioRange [-1, 1] and for modulus\n\t\t *         values in the NormalRange. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {NormalRange} modulus The modulus to apply.\n\t\t *  @example\n\t\t * var mod = new Tone.Modulo(0.2)\n\t\t * var sig = new Tone.Signal(0.5).connect(mod);\n\t\t * //mod outputs 0.1\n\t\t */\n\t    Tone.Modulo = function (modulus) {\n\t        this.createInsOuts(1, 0);\n\t        /**\n\t\t\t *  A waveshaper gets the integer multiple of \n\t\t\t *  the input signal and the modulus.\n\t\t\t *  @private\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t */\n\t        this._shaper = new Tone.WaveShaper(Math.pow(2, 16));\n\t        /**\n\t\t\t *  the integer multiple is multiplied by the modulus\n\t\t\t *  @type  {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._multiply = new Tone.Multiply();\n\t        /**\n\t\t\t *  and subtracted from the input signal\n\t\t\t *  @type  {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t        this._subtract = this.output = new Tone.Subtract();\n\t        /**\n\t\t\t *  the modulus signal\n\t\t\t *  @type  {Tone.Signal}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modSignal = new Tone.Signal(modulus);\n\t        //connections\n\t        this.input.fan(this._shaper, this._subtract);\n\t        this._modSignal.connect(this._multiply, 0, 0);\n\t        this._shaper.connect(this._multiply, 0, 1);\n\t        this._multiply.connect(this._subtract, 0, 1);\n\t        this._setWaveShaper(modulus);\n\t    };\n\t    Tone.extend(Tone.Modulo, Tone.SignalBase);\n\t    /**\n\t\t *  @param  {number}  mod  the modulus to apply\n\t\t *  @private\n\t\t */\n\t    Tone.Modulo.prototype._setWaveShaper = function (mod) {\n\t        this._shaper.setMap(function (val) {\n\t            var multiple = Math.floor((val + 0.0001) / mod);\n\t            return multiple;\n\t        });\n\t    };\n\t    /**\n\t\t * The modulus value.\n\t\t * @memberOf Tone.Modulo#\n\t\t * @type {NormalRange}\n\t\t * @name value\n\t\t */\n\t    Object.defineProperty(Tone.Modulo.prototype, 'value', {\n\t        get: function () {\n\t            return this._modSignal.value;\n\t        },\n\t        set: function (mod) {\n\t            this._modSignal.value = mod;\n\t            this._setWaveShaper(mod);\n\t        }\n\t    });\n\t    /**\n\t\t * clean up\n\t\t *  @returns {Tone.Modulo} this\n\t\t */\n\t    Tone.Modulo.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._shaper.dispose();\n\t        this._shaper = null;\n\t        this._multiply.dispose();\n\t        this._multiply = null;\n\t        this._subtract.dispose();\n\t        this._subtract = null;\n\t        this._modSignal.dispose();\n\t        this._modSignal = null;\n\t        return this;\n\t    };\n\t    return Tone.Modulo;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1]. \n\t\t *         See Tone.GainToAudio.\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @example\n\t\t *  var a2g = new Tone.AudioToGain();\n\t\t */\n\t    Tone.AudioToGain = function () {\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._norm = this.input = this.output = new Tone.WaveShaper(function (x) {\n\t            return (x + 1) / 2;\n\t        });\n\t    };\n\t    Tone.extend(Tone.AudioToGain, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.AudioToGain} this\n\t\t */\n\t    Tone.AudioToGain.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._norm.dispose();\n\t        this._norm = null;\n\t        return this;\n\t    };\n\t    return Tone.AudioToGain;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Evaluate an expression at audio rate. <br><br>\n\t\t *         Parsing code modified from https://code.google.com/p/tapdigit/\n\t\t *         Copyright 2011 2012 Ariya Hidayat, New BSD License\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {string} expr the expression to generate\n\t\t *  @example\n\t\t * //adds the signals from input[0] and input[1].\n\t\t * var expr = new Tone.Expr(\"$0 + $1\");\n\t\t */\n\t    Tone.Expr = function () {\n\t        var expr = this._replacements(Array.prototype.slice.call(arguments));\n\t        var inputCount = this._parseInputs(expr);\n\t        /**\n\t\t\t *  hold onto all of the nodes for disposal\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._nodes = [];\n\t        /**\n\t\t\t *  The inputs. The length is determined by the expression. \n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this.input = new Array(inputCount);\n\t        //create a gain for each input\n\t        for (var i = 0; i < inputCount; i++) {\n\t            this.input[i] = this.context.createGain();\n\t        }\n\t        //parse the syntax tree\n\t        var tree = this._parseTree(expr);\n\t        //evaluate the results\n\t        var result;\n\t        try {\n\t            result = this._eval(tree);\n\t        } catch (e) {\n\t            this._disposeNodes();\n\t            throw new Error('Tone.Expr: Could evaluate expression: ' + expr);\n\t        }\n\t        /**\n\t\t\t *  The output node is the result of the expression\n\t\t\t *  @type {Tone}\n\t\t\t */\n\t        this.output = result;\n\t    };\n\t    Tone.extend(Tone.Expr, Tone.SignalBase);\n\t    //some helpers to cut down the amount of code\n\t    function applyBinary(Constructor, args, self) {\n\t        var op = new Constructor();\n\t        self._eval(args[0]).connect(op, 0, 0);\n\t        self._eval(args[1]).connect(op, 0, 1);\n\t        return op;\n\t    }\n\t    function applyUnary(Constructor, args, self) {\n\t        var op = new Constructor();\n\t        self._eval(args[0]).connect(op, 0, 0);\n\t        return op;\n\t    }\n\t    function getNumber(arg) {\n\t        return arg ? parseFloat(arg) : undefined;\n\t    }\n\t    function literalNumber(arg) {\n\t        return arg && arg.args ? parseFloat(arg.args) : undefined;\n\t    }\n\t    /*\n\t\t *  the Expressions that Tone.Expr can parse.\n\t\t *\n\t\t *  each expression belongs to a group and contains a regexp \n\t\t *  for selecting the operator as well as that operators method\n\t\t *  \n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Expr._Expressions = {\n\t        //values\n\t        'value': {\n\t            'signal': {\n\t                regexp: /^\\d+\\.\\d+|^\\d+/,\n\t                method: function (arg) {\n\t                    var sig = new Tone.Signal(getNumber(arg));\n\t                    return sig;\n\t                }\n\t            },\n\t            'input': {\n\t                regexp: /^\\$\\d/,\n\t                method: function (arg, self) {\n\t                    return self.input[getNumber(arg.substr(1))];\n\t                }\n\t            }\n\t        },\n\t        //syntactic glue\n\t        'glue': {\n\t            '(': { regexp: /^\\(/ },\n\t            ')': { regexp: /^\\)/ },\n\t            ',': { regexp: /^,/ }\n\t        },\n\t        //functions\n\t        'func': {\n\t            'abs': {\n\t                regexp: /^abs/,\n\t                method: applyUnary.bind(this, Tone.Abs)\n\t            },\n\t            'mod': {\n\t                regexp: /^mod/,\n\t                method: function (args, self) {\n\t                    var modulus = literalNumber(args[1]);\n\t                    var op = new Tone.Modulo(modulus);\n\t                    self._eval(args[0]).connect(op);\n\t                    return op;\n\t                }\n\t            },\n\t            'pow': {\n\t                regexp: /^pow/,\n\t                method: function (args, self) {\n\t                    var exp = literalNumber(args[1]);\n\t                    var op = new Tone.Pow(exp);\n\t                    self._eval(args[0]).connect(op);\n\t                    return op;\n\t                }\n\t            },\n\t            'a2g': {\n\t                regexp: /^a2g/,\n\t                method: function (args, self) {\n\t                    var op = new Tone.AudioToGain();\n\t                    self._eval(args[0]).connect(op);\n\t                    return op;\n\t                }\n\t            }\n\t        },\n\t        //binary expressions\n\t        'binary': {\n\t            '+': {\n\t                regexp: /^\\+/,\n\t                precedence: 1,\n\t                method: applyBinary.bind(this, Tone.Add)\n\t            },\n\t            '-': {\n\t                regexp: /^\\-/,\n\t                precedence: 1,\n\t                method: function (args, self) {\n\t                    //both unary and binary op\n\t                    if (args.length === 1) {\n\t                        return applyUnary(Tone.Negate, args, self);\n\t                    } else {\n\t                        return applyBinary(Tone.Subtract, args, self);\n\t                    }\n\t                }\n\t            },\n\t            '*': {\n\t                regexp: /^\\*/,\n\t                precedence: 0,\n\t                method: applyBinary.bind(this, Tone.Multiply)\n\t            }\n\t        },\n\t        //unary expressions\n\t        'unary': {\n\t            '-': {\n\t                regexp: /^\\-/,\n\t                method: applyUnary.bind(this, Tone.Negate)\n\t            },\n\t            '!': {\n\t                regexp: /^\\!/,\n\t                method: applyUnary.bind(this, Tone.NOT)\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  @param   {string} expr the expression string\n\t\t *  @return  {number}      the input count\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._parseInputs = function (expr) {\n\t        var inputArray = expr.match(/\\$\\d/g);\n\t        var inputMax = 0;\n\t        if (inputArray !== null) {\n\t            for (var i = 0; i < inputArray.length; i++) {\n\t                var inputNum = parseInt(inputArray[i].substr(1)) + 1;\n\t                inputMax = Math.max(inputMax, inputNum);\n\t            }\n\t        }\n\t        return inputMax;\n\t    };\n\t    /**\n\t\t *  @param   {Array} args \tan array of arguments\n\t\t *  @return  {string} the results of the replacements being replaced\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._replacements = function (args) {\n\t        var expr = args.shift();\n\t        for (var i = 0; i < args.length; i++) {\n\t            expr = expr.replace(/\\%/i, args[i]);\n\t        }\n\t        return expr;\n\t    };\n\t    /**\n\t\t *  tokenize the expression based on the Expressions object\n\t\t *  @param   {string} expr \n\t\t *  @return  {Object}      returns two methods on the tokenized list, next and peek\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._tokenize = function (expr) {\n\t        var position = -1;\n\t        var tokens = [];\n\t        while (expr.length > 0) {\n\t            expr = expr.trim();\n\t            var token = getNextToken(expr);\n\t            tokens.push(token);\n\t            expr = expr.substr(token.value.length);\n\t        }\n\t        function getNextToken(expr) {\n\t            for (var type in Tone.Expr._Expressions) {\n\t                var group = Tone.Expr._Expressions[type];\n\t                for (var opName in group) {\n\t                    var op = group[opName];\n\t                    var reg = op.regexp;\n\t                    var match = expr.match(reg);\n\t                    if (match !== null) {\n\t                        return {\n\t                            type: type,\n\t                            value: match[0],\n\t                            method: op.method\n\t                        };\n\t                    }\n\t                }\n\t            }\n\t            throw new SyntaxError('Tone.Expr: Unexpected token ' + expr);\n\t        }\n\t        return {\n\t            next: function () {\n\t                return tokens[++position];\n\t            },\n\t            peek: function () {\n\t                return tokens[position + 1];\n\t            }\n\t        };\n\t    };\n\t    /**\n\t\t *  recursively parse the string expression into a syntax tree\n\t\t *  \n\t\t *  @param   {string} expr \n\t\t *  @return  {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._parseTree = function (expr) {\n\t        var lexer = this._tokenize(expr);\n\t        var isUndef = this.isUndef.bind(this);\n\t        function matchSyntax(token, syn) {\n\t            return !isUndef(token) && token.type === 'glue' && token.value === syn;\n\t        }\n\t        function matchGroup(token, groupName, prec) {\n\t            var ret = false;\n\t            var group = Tone.Expr._Expressions[groupName];\n\t            if (!isUndef(token)) {\n\t                for (var opName in group) {\n\t                    var op = group[opName];\n\t                    if (op.regexp.test(token.value)) {\n\t                        if (!isUndef(prec)) {\n\t                            if (op.precedence === prec) {\n\t                                return true;\n\t                            }\n\t                        } else {\n\t                            return true;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            return ret;\n\t        }\n\t        function parseExpression(precedence) {\n\t            if (isUndef(precedence)) {\n\t                precedence = 5;\n\t            }\n\t            var expr;\n\t            if (precedence < 0) {\n\t                expr = parseUnary();\n\t            } else {\n\t                expr = parseExpression(precedence - 1);\n\t            }\n\t            var token = lexer.peek();\n\t            while (matchGroup(token, 'binary', precedence)) {\n\t                token = lexer.next();\n\t                expr = {\n\t                    operator: token.value,\n\t                    method: token.method,\n\t                    args: [\n\t                        expr,\n\t                        parseExpression(precedence - 1)\n\t                    ]\n\t                };\n\t                token = lexer.peek();\n\t            }\n\t            return expr;\n\t        }\n\t        function parseUnary() {\n\t            var token, expr;\n\t            token = lexer.peek();\n\t            if (matchGroup(token, 'unary')) {\n\t                token = lexer.next();\n\t                expr = parseUnary();\n\t                return {\n\t                    operator: token.value,\n\t                    method: token.method,\n\t                    args: [expr]\n\t                };\n\t            }\n\t            return parsePrimary();\n\t        }\n\t        function parsePrimary() {\n\t            var token, expr;\n\t            token = lexer.peek();\n\t            if (isUndef(token)) {\n\t                throw new SyntaxError('Tone.Expr: Unexpected termination of expression');\n\t            }\n\t            if (token.type === 'func') {\n\t                token = lexer.next();\n\t                return parseFunctionCall(token);\n\t            }\n\t            if (token.type === 'value') {\n\t                token = lexer.next();\n\t                return {\n\t                    method: token.method,\n\t                    args: token.value\n\t                };\n\t            }\n\t            if (matchSyntax(token, '(')) {\n\t                lexer.next();\n\t                expr = parseExpression();\n\t                token = lexer.next();\n\t                if (!matchSyntax(token, ')')) {\n\t                    throw new SyntaxError('Expected )');\n\t                }\n\t                return expr;\n\t            }\n\t            throw new SyntaxError('Tone.Expr: Parse error, cannot process token ' + token.value);\n\t        }\n\t        function parseFunctionCall(func) {\n\t            var token, args = [];\n\t            token = lexer.next();\n\t            if (!matchSyntax(token, '(')) {\n\t                throw new SyntaxError('Tone.Expr: Expected ( in a function call \"' + func.value + '\"');\n\t            }\n\t            token = lexer.peek();\n\t            if (!matchSyntax(token, ')')) {\n\t                args = parseArgumentList();\n\t            }\n\t            token = lexer.next();\n\t            if (!matchSyntax(token, ')')) {\n\t                throw new SyntaxError('Tone.Expr: Expected ) in a function call \"' + func.value + '\"');\n\t            }\n\t            return {\n\t                method: func.method,\n\t                args: args,\n\t                name: name\n\t            };\n\t        }\n\t        function parseArgumentList() {\n\t            var token, expr, args = [];\n\t            while (true) {\n\t                expr = parseExpression();\n\t                if (isUndef(expr)) {\n\t                    // TODO maybe throw exception?\n\t                    break;\n\t                }\n\t                args.push(expr);\n\t                token = lexer.peek();\n\t                if (!matchSyntax(token, ',')) {\n\t                    break;\n\t                }\n\t                lexer.next();\n\t            }\n\t            return args;\n\t        }\n\t        return parseExpression();\n\t    };\n\t    /**\n\t\t *  recursively evaluate the expression tree\n\t\t *  @param   {Object} tree \n\t\t *  @return  {AudioNode}      the resulting audio node from the expression\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._eval = function (tree) {\n\t        if (!this.isUndef(tree)) {\n\t            var node = tree.method(tree.args, this);\n\t            this._nodes.push(node);\n\t            return node;\n\t        }\n\t    };\n\t    /**\n\t\t *  dispose all the nodes\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._disposeNodes = function () {\n\t        for (var i = 0; i < this._nodes.length; i++) {\n\t            var node = this._nodes[i];\n\t            if (this.isFunction(node.dispose)) {\n\t                node.dispose();\n\t            } else if (this.isFunction(node.disconnect)) {\n\t                node.disconnect();\n\t            }\n\t            node = null;\n\t            this._nodes[i] = null;\n\t        }\n\t        this._nodes = null;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t */\n\t    Tone.Expr.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._disposeNodes();\n\t    };\n\t    return Tone.Expr;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Convert an incoming signal between 0, 1 to an equal power gain scale.\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @example\n\t\t * var eqPowGain = new Tone.EqualPowerGain();\n\t\t */\n\t    Tone.EqualPowerGain = function () {\n\t        /**\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t        this._eqPower = this.input = this.output = new Tone.WaveShaper(function (val) {\n\t            if (Math.abs(val) < 0.001) {\n\t                //should output 0 when input is 0\n\t                return 0;\n\t            } else {\n\t                return this.equalPowerScale(val);\n\t            }\n\t        }.bind(this), 4096);\n\t    };\n\t    Tone.extend(Tone.EqualPowerGain, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.EqualPowerGain} this\n\t\t */\n\t    Tone.EqualPowerGain.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._eqPower.dispose();\n\t        this._eqPower = null;\n\t        return this;\n\t    };\n\t    return Tone.EqualPowerGain;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t * @class  Tone.Crossfade provides equal power fading between two inputs. \n\t\t *         More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n\t\t *\n\t\t * @constructor\n\t\t * @extends {Tone}\n\t\t * @param {NormalRange} [initialFade=0.5]\n\t\t * @example\n\t\t * var crossFade = new Tone.CrossFade(0.5);\n\t\t * //connect effect A to crossfade from\n\t\t * //effect output 0 to crossfade input 0\n\t\t * effectA.connect(crossFade, 0, 0);\n\t\t * //connect effect B to crossfade from\n\t\t * //effect output 0 to crossfade input 1\n\t\t * effectB.connect(crossFade, 0, 1);\n\t\t * crossFade.fade.value = 0;\n\t\t * // ^ only effectA is output\n\t\t * crossFade.fade.value = 1;\n\t\t * // ^ only effectB is output\n\t\t * crossFade.fade.value = 0.5;\n\t\t * // ^ the two signals are mixed equally. \n\t\t */\n\t    Tone.CrossFade = function (initialFade) {\n\t        this.createInsOuts(2, 1);\n\t        /**\n\t\t\t *  Alias for <code>input[0]</code>. \n\t\t\t *  @type {Tone.Gain}\n\t\t\t */\n\t        this.a = this.input[0] = new Tone.Gain();\n\t        /**\n\t\t\t *  Alias for <code>input[1]</code>. \n\t\t\t *  @type {Tone.Gain}\n\t\t\t */\n\t        this.b = this.input[1] = new Tone.Gain();\n\t        /**\n\t\t\t * \tThe mix between the two inputs. A fade value of 0\n\t\t\t * \twill output 100% <code>input[0]</code> and \n\t\t\t * \ta value of 1 will output 100% <code>input[1]</code>. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.fade = new Tone.Signal(this.defaultArg(initialFade, 0.5), Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  equal power gain cross fade\n\t\t\t *  @private\n\t\t\t *  @type {Tone.EqualPowerGain}\n\t\t\t */\n\t        this._equalPowerA = new Tone.EqualPowerGain();\n\t        /**\n\t\t\t *  equal power gain cross fade\n\t\t\t *  @private\n\t\t\t *  @type {Tone.EqualPowerGain}\n\t\t\t */\n\t        this._equalPowerB = new Tone.EqualPowerGain();\n\t        /**\n\t\t\t *  invert the incoming signal\n\t\t\t *  @private\n\t\t\t *  @type {Tone}\n\t\t\t */\n\t        this._invert = new Tone.Expr('1 - $0');\n\t        //connections\n\t        this.a.connect(this.output);\n\t        this.b.connect(this.output);\n\t        this.fade.chain(this._equalPowerB, this.b.gain);\n\t        this.fade.chain(this._invert, this._equalPowerA, this.a.gain);\n\t        this._readOnly('fade');\n\t    };\n\t    Tone.extend(Tone.CrossFade);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.CrossFade} this\n\t\t */\n\t    Tone.CrossFade.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable('fade');\n\t        this._equalPowerA.dispose();\n\t        this._equalPowerA = null;\n\t        this._equalPowerB.dispose();\n\t        this._equalPowerB = null;\n\t        this.fade.dispose();\n\t        this.fade = null;\n\t        this._invert.dispose();\n\t        this._invert = null;\n\t        this.a.dispose();\n\t        this.a = null;\n\t        this.b.dispose();\n\t        this.b = null;\n\t        return this;\n\t    };\n\t    return Tone.CrossFade;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Filter is a filter which allows for all of the same native methods\n\t\t *          as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface). \n\t\t *          Tone.Filter has the added ability to set the filter rolloff at -12 \n\t\t *          (default), -24 and -48. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {Frequency|Object} [frequency] The cutoff frequency of the filter.\n\t\t *  @param {string=} type The type of filter.\n\t\t *  @param {number=} rolloff The drop in decibels per octave after the cutoff frequency.\n\t\t *                            3 choices: -12, -24, and -48\n\t\t *  @example\n\t\t *  var filter = new Tone.Filter(200, \"highpass\");\n\t\t */\n\t    Tone.Filter = function () {\n\t        this.createInsOuts(1, 1);\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'type',\n\t            'rolloff'\n\t        ], Tone.Filter.defaults);\n\t        /**\n\t\t\t *  the filter(s)\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filters = [];\n\t        /**\n\t\t\t *  The cutoff frequency of the filter. \n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune parameter\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(0, Tone.Type.Cents);\n\t        /**\n\t\t\t *  The gain of the filter, only used in certain filter types\n\t\t\t *  @type {Number}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.gain = new Tone.Signal({\n\t            'value': options.gain,\n\t            'convert': false\n\t        });\n\t        /**\n\t\t\t *  The Q or Quality of the filter\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.Q = new Tone.Signal(options.Q);\n\t        /**\n\t\t\t *  the type of the filter\n\t\t\t *  @type {string}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = options.type;\n\t        /**\n\t\t\t *  the rolloff value of the filter\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._rolloff = options.rolloff;\n\t        //set the rolloff;\n\t        this.rolloff = options.rolloff;\n\t        this._readOnly([\n\t            'detune',\n\t            'frequency',\n\t            'gain',\n\t            'Q'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Filter);\n\t    /**\n\t\t *  the default parameters\n\t\t *\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Filter.defaults = {\n\t        'type': 'lowpass',\n\t        'frequency': 350,\n\t        'rolloff': -12,\n\t        'Q': 1,\n\t        'gain': 0\n\t    };\n\t    /**\n\t\t * The type of the filter. Types: \"lowpass\", \"highpass\", \n\t\t * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\". \n\t\t * @memberOf Tone.Filter#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.Filter.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            var types = [\n\t                'lowpass',\n\t                'highpass',\n\t                'bandpass',\n\t                'lowshelf',\n\t                'highshelf',\n\t                'notch',\n\t                'allpass',\n\t                'peaking'\n\t            ];\n\t            if (types.indexOf(type) === -1) {\n\t                throw new TypeError('Tone.Filter: invalid type ' + type);\n\t            }\n\t            this._type = type;\n\t            for (var i = 0; i < this._filters.length; i++) {\n\t                this._filters[i].type = type;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The rolloff of the filter which is the drop in db\n\t\t * per octave. Implemented internally by cascading filters.\n\t\t * Only accepts the values -12, -24, -48 and -96.\n\t\t * @memberOf Tone.Filter#\n\t\t * @type {number}\n\t\t * @name rolloff\n\t\t */\n\t    Object.defineProperty(Tone.Filter.prototype, 'rolloff', {\n\t        get: function () {\n\t            return this._rolloff;\n\t        },\n\t        set: function (rolloff) {\n\t            rolloff = parseInt(rolloff, 10);\n\t            var possibilities = [\n\t                -12,\n\t                -24,\n\t                -48,\n\t                -96\n\t            ];\n\t            var cascadingCount = possibilities.indexOf(rolloff);\n\t            //check the rolloff is valid\n\t            if (cascadingCount === -1) {\n\t                throw new RangeError('Tone.Filter: rolloff can only be -12, -24, -48 or -96');\n\t            }\n\t            cascadingCount += 1;\n\t            this._rolloff = rolloff;\n\t            //first disconnect the filters and throw them away\n\t            this.input.disconnect();\n\t            for (var i = 0; i < this._filters.length; i++) {\n\t                this._filters[i].disconnect();\n\t                this._filters[i] = null;\n\t            }\n\t            this._filters = new Array(cascadingCount);\n\t            for (var count = 0; count < cascadingCount; count++) {\n\t                var filter = this.context.createBiquadFilter();\n\t                filter.type = this._type;\n\t                this.frequency.connect(filter.frequency);\n\t                this.detune.connect(filter.detune);\n\t                this.Q.connect(filter.Q);\n\t                this.gain.connect(filter.gain);\n\t                this._filters[count] = filter;\n\t            }\n\t            //connect them up\n\t            var connectionChain = [this.input].concat(this._filters).concat([this.output]);\n\t            this.connectSeries.apply(this, connectionChain);\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @return {Tone.Filter} this\n\t\t */\n\t    Tone.Filter.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        for (var i = 0; i < this._filters.length; i++) {\n\t            this._filters[i].disconnect();\n\t            this._filters[i] = null;\n\t        }\n\t        this._filters = null;\n\t        this._writable([\n\t            'detune',\n\t            'frequency',\n\t            'gain',\n\t            'Q'\n\t        ]);\n\t        this.frequency.dispose();\n\t        this.Q.dispose();\n\t        this.frequency = null;\n\t        this.Q = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.gain.dispose();\n\t        this.gain = null;\n\t        return this;\n\t    };\n\t    return Tone.Filter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Split the incoming signal into three bands (low, mid, high)\n\t\t *         with two crossover frequency controls. \n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {Frequency|Object} [lowFrequency] the low/mid crossover frequency\n\t\t *  @param {Frequency} [highFrequency] the mid/high crossover frequency\n\t\t */\n\t    Tone.MultibandSplit = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'lowFrequency',\n\t            'highFrequency'\n\t        ], Tone.MultibandSplit.defaults);\n\t        /**\n\t\t\t *  the input\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this.input = new Tone.Gain();\n\t        /**\n\t\t\t *  the outputs\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this.output = new Array(3);\n\t        /**\n\t\t\t *  The low band. Alias for <code>output[0]</code>\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.low = this.output[0] = new Tone.Filter(0, 'lowpass');\n\t        /**\n\t\t\t *  the lower filter of the mid band\n\t\t\t *  @type {Tone.Filter}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lowMidFilter = new Tone.Filter(0, 'highpass');\n\t        /**\n\t\t\t *  The mid band output. Alias for <code>output[1]</code>\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.mid = this.output[1] = new Tone.Filter(0, 'lowpass');\n\t        /**\n\t\t\t *  The high band output. Alias for <code>output[2]</code>\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.high = this.output[2] = new Tone.Filter(0, 'highpass');\n\t        /**\n\t\t\t *  The low/mid crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.lowFrequency = new Tone.Signal(options.lowFrequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The mid/high crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.highFrequency = new Tone.Signal(options.highFrequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The quality of all the filters\n\t\t\t *  @type {Number}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.Q = new Tone.Signal(options.Q);\n\t        this.input.fan(this.low, this.high);\n\t        this.input.chain(this._lowMidFilter, this.mid);\n\t        //the frequency control signal\n\t        this.lowFrequency.connect(this.low.frequency);\n\t        this.lowFrequency.connect(this._lowMidFilter.frequency);\n\t        this.highFrequency.connect(this.mid.frequency);\n\t        this.highFrequency.connect(this.high.frequency);\n\t        //the Q value\n\t        this.Q.connect(this.low.Q);\n\t        this.Q.connect(this._lowMidFilter.Q);\n\t        this.Q.connect(this.mid.Q);\n\t        this.Q.connect(this.high.Q);\n\t        this._readOnly([\n\t            'high',\n\t            'mid',\n\t            'low',\n\t            'highFrequency',\n\t            'lowFrequency'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MultibandSplit);\n\t    /**\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MultibandSplit.defaults = {\n\t        'lowFrequency': 400,\n\t        'highFrequency': 2500,\n\t        'Q': 1\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.MultibandSplit} this\n\t\t */\n\t    Tone.MultibandSplit.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'high',\n\t            'mid',\n\t            'low',\n\t            'highFrequency',\n\t            'lowFrequency'\n\t        ]);\n\t        this.low.dispose();\n\t        this.low = null;\n\t        this._lowMidFilter.dispose();\n\t        this._lowMidFilter = null;\n\t        this.mid.dispose();\n\t        this.mid = null;\n\t        this.high.dispose();\n\t        this.high = null;\n\t        this.lowFrequency.dispose();\n\t        this.lowFrequency = null;\n\t        this.highFrequency.dispose();\n\t        this.highFrequency = null;\n\t        this.Q.dispose();\n\t        this.Q = null;\n\t        return this;\n\t    };\n\t    return Tone.MultibandSplit;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.EQ3 is a three band EQ with control over low, mid, and high gain as\n\t\t *         well as the low and high crossover frequencies.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  \n\t\t *  @param {Decibels|Object} [lowLevel] The gain applied to the lows.\n\t\t *  @param {Decibels} [midLevel] The gain applied to the mid.\n\t\t *  @param {Decibels} [highLevel] The gain applied to the high.\n\t\t *  @example\n\t\t * var eq = new Tone.EQ3(-10, 3, -20);\n\t\t */\n\t    Tone.EQ3 = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'low',\n\t            'mid',\n\t            'high'\n\t        ], Tone.EQ3.defaults);\n\t        /**\n\t\t\t *  the output node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  the multiband split\n\t\t\t *  @type {Tone.MultibandSplit}\n\t\t\t *  @private\n\t\t\t */\n\t        this._multibandSplit = this.input = new Tone.MultibandSplit({\n\t            'lowFrequency': options.lowFrequency,\n\t            'highFrequency': options.highFrequency\n\t        });\n\t        /**\n\t\t\t *  The gain for the lower signals\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lowGain = new Tone.Gain(options.low, Tone.Type.Decibels);\n\t        /**\n\t\t\t *  The gain for the mid signals\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midGain = new Tone.Gain(options.mid, Tone.Type.Decibels);\n\t        /**\n\t\t\t * The gain in decibels of the high part\n\t\t\t * @type {Tone.Gain}\n\t\t\t * @private\n\t\t\t */\n\t        this._highGain = new Tone.Gain(options.high, Tone.Type.Decibels);\n\t        /**\n\t\t\t * The gain in decibels of the low part\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t */\n\t        this.low = this._lowGain.gain;\n\t        /**\n\t\t\t * The gain in decibels of the mid part\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t */\n\t        this.mid = this._midGain.gain;\n\t        /**\n\t\t\t * The gain in decibels of the high part\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t */\n\t        this.high = this._highGain.gain;\n\t        /**\n\t\t\t *  The Q value for all of the filters. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.Q = this._multibandSplit.Q;\n\t        /**\n\t\t\t *  The low/mid crossover frequency. \n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.lowFrequency = this._multibandSplit.lowFrequency;\n\t        /**\n\t\t\t *  The mid/high crossover frequency. \n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.highFrequency = this._multibandSplit.highFrequency;\n\t        //the frequency bands\n\t        this._multibandSplit.low.chain(this._lowGain, this.output);\n\t        this._multibandSplit.mid.chain(this._midGain, this.output);\n\t        this._multibandSplit.high.chain(this._highGain, this.output);\n\t        this._readOnly([\n\t            'low',\n\t            'mid',\n\t            'high',\n\t            'lowFrequency',\n\t            'highFrequency'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.EQ3);\n\t    /**\n\t\t *  the default values\n\t\t */\n\t    Tone.EQ3.defaults = {\n\t        'low': 0,\n\t        'mid': 0,\n\t        'high': 0,\n\t        'lowFrequency': 400,\n\t        'highFrequency': 2500\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.EQ3} this\n\t\t */\n\t    Tone.EQ3.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'low',\n\t            'mid',\n\t            'high',\n\t            'lowFrequency',\n\t            'highFrequency'\n\t        ]);\n\t        this._multibandSplit.dispose();\n\t        this._multibandSplit = null;\n\t        this.lowFrequency = null;\n\t        this.highFrequency = null;\n\t        this._lowGain.dispose();\n\t        this._lowGain = null;\n\t        this._midGain.dispose();\n\t        this._midGain = null;\n\t        this._highGain.dispose();\n\t        this._highGain = null;\n\t        this.low = null;\n\t        this.mid = null;\n\t        this.high = null;\n\t        this.Q = null;\n\t        return this;\n\t    };\n\t    return Tone.EQ3;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Performs a linear scaling on an input signal.\n\t\t *          Scales a NormalRange input to between\n\t\t *          outputMin and outputMax.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {number} [outputMin=0] The output value when the input is 0. \n\t\t *  @param {number} [outputMax=1]\tThe output value when the input is 1. \n\t\t *  @example\n\t\t * var scale = new Tone.Scale(50, 100);\n\t\t * var signal = new Tone.Signal(0.5).connect(scale);\n\t\t * //the output of scale equals 75\n\t\t */\n\t    Tone.Scale = function (outputMin, outputMax) {\n\t        /** \n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._outputMin = this.defaultArg(outputMin, 0);\n\t        /** \n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._outputMax = this.defaultArg(outputMax, 1);\n\t        /** \n\t\t\t *  @private\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = this.input = new Tone.Multiply(1);\n\t        /** \n\t\t\t *  @private\n\t\t\t *  @type {Tone.Add}\n\t\t\t *  @private\n\t\t\t */\n\t        this._add = this.output = new Tone.Add(0);\n\t        this._scale.connect(this._add);\n\t        this._setRange();\n\t    };\n\t    Tone.extend(Tone.Scale, Tone.SignalBase);\n\t    /**\n\t\t * The minimum output value. This number is output when \n\t\t * the value input value is 0. \n\t\t * @memberOf Tone.Scale#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.Scale.prototype, 'min', {\n\t        get: function () {\n\t            return this._outputMin;\n\t        },\n\t        set: function (min) {\n\t            this._outputMin = min;\n\t            this._setRange();\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum output value. This number is output when \n\t\t * the value input value is 1. \n\t\t * @memberOf Tone.Scale#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.Scale.prototype, 'max', {\n\t        get: function () {\n\t            return this._outputMax;\n\t        },\n\t        set: function (max) {\n\t            this._outputMax = max;\n\t            this._setRange();\n\t        }\n\t    });\n\t    /**\n\t\t *  set the values\n\t\t *  @private\n\t\t */\n\t    Tone.Scale.prototype._setRange = function () {\n\t        this._add.value = this._outputMin;\n\t        this._scale.value = this._outputMax - this._outputMin;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Scale} this\n\t\t */\n\t    Tone.Scale.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._add.dispose();\n\t        this._add = null;\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        return this;\n\t    };\n\t    return Tone.Scale;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class  Performs an exponential scaling on an input signal.\n\t\t *          Scales a NormalRange value [0,1] exponentially\n\t\t *          to the output range of outputMin to outputMax.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {number} [outputMin=0] The output value when the input is 0. \n\t\t *  @param {number} [outputMax=1]\tThe output value when the input is 1. \n\t\t *  @param {number} [exponent=2] The exponent which scales the incoming signal.\n\t\t *  @example\n\t\t * var scaleExp = new Tone.ScaleExp(0, 100, 2);\n\t\t * var signal = new Tone.Signal(0.5).connect(scaleExp);\n\t\t */\n\t    Tone.ScaleExp = function (outputMin, outputMax, exponent) {\n\t        /**\n\t\t\t *  scale the input to the output range\n\t\t\t *  @type {Tone.Scale}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = this.output = new Tone.Scale(outputMin, outputMax);\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Pow}\n\t\t\t *  @private\n\t\t\t */\n\t        this._exp = this.input = new Tone.Pow(this.defaultArg(exponent, 2));\n\t        this._exp.connect(this._scale);\n\t    };\n\t    Tone.extend(Tone.ScaleExp, Tone.SignalBase);\n\t    /**\n\t\t * Instead of interpolating linearly between the <code>min</code> and \n\t\t * <code>max</code> values, setting the exponent will interpolate between\n\t\t * the two values with an exponential curve. \n\t\t * @memberOf Tone.ScaleExp#\n\t\t * @type {number}\n\t\t * @name exponent\n\t\t */\n\t    Object.defineProperty(Tone.ScaleExp.prototype, 'exponent', {\n\t        get: function () {\n\t            return this._exp.value;\n\t        },\n\t        set: function (exp) {\n\t            this._exp.value = exp;\n\t        }\n\t    });\n\t    /**\n\t\t * The minimum output value. This number is output when \n\t\t * the value input value is 0. \n\t\t * @memberOf Tone.ScaleExp#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.ScaleExp.prototype, 'min', {\n\t        get: function () {\n\t            return this._scale.min;\n\t        },\n\t        set: function (min) {\n\t            this._scale.min = min;\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum output value. This number is output when \n\t\t * the value input value is 1. \n\t\t * @memberOf Tone.ScaleExp#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.ScaleExp.prototype, 'max', {\n\t        get: function () {\n\t            return this._scale.max;\n\t        },\n\t        set: function (max) {\n\t            this._scale.max = max;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.ScaleExp} this\n\t\t */\n\t    Tone.ScaleExp.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        this._exp.dispose();\n\t        this._exp = null;\n\t        return this;\n\t    };\n\t    return Tone.ScaleExp;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface). \n\t\t *  @extends {Tone}\n\t\t *  @param {Time=} delayTime The delay applied to the incoming signal.\n\t\t *  @param {Time=} maxDelay The maximum delay time. \n\t\t */\n\t    Tone.Delay = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'delayTime',\n\t            'maxDelay'\n\t        ], Tone.Delay.defaults);\n\t        /**\n\t\t\t *  The native delay node\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNode = this.input = this.output = this.context.createDelay(this.toSeconds(options.maxDelay));\n\t        /**\n\t\t\t *  The amount of time the incoming signal is\n\t\t\t *  delayed. \n\t\t\t *  @type {Tone.Param}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = new Tone.Param({\n\t            'param': this._delayNode.delayTime,\n\t            'units': Tone.Type.Time,\n\t            'value': options.delayTime\n\t        });\n\t        this._readOnly('delayTime');\n\t    };\n\t    Tone.extend(Tone.Delay);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Delay.defaults = {\n\t        'maxDelay': 1,\n\t        'delayTime': 0\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Delay}  this\n\t\t */\n\t    Tone.Delay.prototype.dispose = function () {\n\t        Tone.Param.prototype.dispose.call(this);\n\t        this._delayNode.disconnect();\n\t        this._delayNode = null;\n\t        this._writable('delayTime');\n\t        this.delayTime = null;\n\t        return this;\n\t    };\n\t    return Tone.Delay;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Comb filters are basic building blocks for physical modeling. Read more\n\t\t *         about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {Time|Object} [delayTime] The delay time of the filter. \n\t\t *  @param {NormalRange=} resonance The amount of feedback the filter has. \n\t\t */\n\t    Tone.FeedbackCombFilter = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'delayTime',\n\t            'resonance'\n\t        ], Tone.FeedbackCombFilter.defaults);\n\t        /**\n\t\t\t *  the delay node\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delay = this.input = this.output = new Tone.Delay(options.delayTime);\n\t        /**\n\t\t\t *  The amount of delay of the comb filter. \n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = this._delay.delayTime;\n\t        /**\n\t\t\t *  the feedback node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  The amount of feedback of the delayed signal. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.resonance = this._feedback.gain;\n\t        this._delay.chain(this._feedback, this._delay);\n\t        this._readOnly([\n\t            'resonance',\n\t            'delayTime'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.FeedbackCombFilter);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.FeedbackCombFilter.defaults = {\n\t        'delayTime': 0.1,\n\t        'resonance': 0.5\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.FeedbackCombFilter} this\n\t\t */\n\t    Tone.FeedbackCombFilter.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'resonance',\n\t            'delayTime'\n\t        ]);\n\t        this._delay.dispose();\n\t        this._delay = null;\n\t        this.delayTime = null;\n\t        this._feedback.dispose();\n\t        this._feedback = null;\n\t        this.resonance = null;\n\t        return this;\n\t    };\n\t    return Tone.FeedbackCombFilter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Follower is a  crude envelope follower which will follow \n\t\t *          the amplitude of an incoming signal. \n\t\t *          Take care with small (< 0.02) attack or decay values \n\t\t *          as follower has some ripple which is exaggerated\n\t\t *          at these values. Read more about envelope followers (also known \n\t\t *          as envelope detectors) on [Wikipedia](https://en.wikipedia.org/wiki/Envelope_detector).\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {Time|Object} [attack] The rate at which the follower rises.\n\t\t *  @param {Time=} release The rate at which the folower falls. \n\t\t *  @example\n\t\t * var follower = new Tone.Follower(0.2, 0.4);\n\t\t */\n\t    Tone.Follower = function () {\n\t        this.createInsOuts(1, 1);\n\t        var options = this.optionsObject(arguments, [\n\t            'attack',\n\t            'release'\n\t        ], Tone.Follower.defaults);\n\t        /**\n\t\t\t *  @type {Tone.Abs}\n\t\t\t *  @private\n\t\t\t */\n\t        this._abs = new Tone.Abs();\n\t        /**\n\t\t\t *  the lowpass filter which smooths the input\n\t\t\t *  @type {BiquadFilterNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filter = this.context.createBiquadFilter();\n\t        this._filter.type = 'lowpass';\n\t        this._filter.frequency.value = 0;\n\t        this._filter.Q.value = -100;\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._frequencyValues = new Tone.WaveShaper();\n\t        /**\n\t\t\t *  @type {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sub = new Tone.Subtract();\n\t        /**\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delay = new Tone.Delay(this.blockTime);\n\t        /**\n\t\t\t *  this keeps it far from 0, even for very small differences\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._mult = new Tone.Multiply(10000);\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._attack = options.attack;\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._release = options.release;\n\t        //the smoothed signal to get the values\n\t        this.input.chain(this._abs, this._filter, this.output);\n\t        //the difference path\n\t        this._abs.connect(this._sub, 0, 1);\n\t        this._filter.chain(this._delay, this._sub);\n\t        //threshold the difference and use the thresh to set the frequency\n\t        this._sub.chain(this._mult, this._frequencyValues, this._filter.frequency);\n\t        //set the attack and release values in the table\n\t        this._setAttackRelease(this._attack, this._release);\n\t    };\n\t    Tone.extend(Tone.Follower);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Follower.defaults = {\n\t        'attack': 0.05,\n\t        'release': 0.5\n\t    };\n\t    /**\n\t\t *  sets the attack and release times in the wave shaper\n\t\t *  @param   {Time} attack  \n\t\t *  @param   {Time} release \n\t\t *  @private\n\t\t */\n\t    Tone.Follower.prototype._setAttackRelease = function (attack, release) {\n\t        var minTime = this.blockTime;\n\t        attack = Tone.Time(attack).toFrequency();\n\t        release = Tone.Time(release).toFrequency();\n\t        attack = Math.max(attack, minTime);\n\t        release = Math.max(release, minTime);\n\t        this._frequencyValues.setMap(function (val) {\n\t            if (val <= 0) {\n\t                return attack;\n\t            } else {\n\t                return release;\n\t            }\n\t        });\n\t    };\n\t    /**\n\t\t * The attack time.\n\t\t * @memberOf Tone.Follower#\n\t\t * @type {Time}\n\t\t * @name attack\n\t\t */\n\t    Object.defineProperty(Tone.Follower.prototype, 'attack', {\n\t        get: function () {\n\t            return this._attack;\n\t        },\n\t        set: function (attack) {\n\t            this._attack = attack;\n\t            this._setAttackRelease(this._attack, this._release);\n\t        }\n\t    });\n\t    /**\n\t\t * The release time.\n\t\t * @memberOf Tone.Follower#\n\t\t * @type {Time}\n\t\t * @name release\n\t\t */\n\t    Object.defineProperty(Tone.Follower.prototype, 'release', {\n\t        get: function () {\n\t            return this._release;\n\t        },\n\t        set: function (release) {\n\t            this._release = release;\n\t            this._setAttackRelease(this._attack, this._release);\n\t        }\n\t    });\n\t    /**\n\t\t *  Borrows the connect method from Signal so that the output can be used\n\t\t *  as a Tone.Signal control signal.\n\t\t *  @function\n\t\t */\n\t    Tone.Follower.prototype.connect = Tone.Signal.prototype.connect;\n\t    /**\n\t\t *  dispose\n\t\t *  @returns {Tone.Follower} this\n\t\t */\n\t    Tone.Follower.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._filter.disconnect();\n\t        this._filter = null;\n\t        this._frequencyValues.disconnect();\n\t        this._frequencyValues = null;\n\t        this._delay.dispose();\n\t        this._delay = null;\n\t        this._sub.disconnect();\n\t        this._sub = null;\n\t        this._abs.dispose();\n\t        this._abs = null;\n\t        this._mult.dispose();\n\t        this._mult = null;\n\t        this._curve = null;\n\t        return this;\n\t    };\n\t    return Tone.Follower;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.ScaledEnvelop is an envelope which can be scaled \n\t\t *         to any range. It's useful for applying an envelope \n\t\t *         to a frequency or any other non-NormalRange signal \n\t\t *         parameter. \n\t\t *\n\t\t *  @extends {Tone.Envelope}\n\t\t *  @constructor\n\t\t *  @param {Time|Object} [attack]\tthe attack time in seconds\n\t\t *  @param {Time} [decay]\tthe decay time in seconds\n\t\t *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n\t\t *  @param {Time} [release]\tthe release time in seconds\n\t\t *  @example\n\t\t *  var scaledEnv = new Tone.ScaledEnvelope({\n\t\t *  \t\"attack\" : 0.2,\n\t\t *  \t\"min\" : 200,\n\t\t *  \t\"max\" : 2000\n\t\t *  });\n\t\t *  scaledEnv.connect(oscillator.frequency);\n\t\t */\n\t    Tone.ScaledEnvelope = function () {\n\t        //get all of the defaults\n\t        var options = this.optionsObject(arguments, [\n\t            'attack',\n\t            'decay',\n\t            'sustain',\n\t            'release'\n\t        ], Tone.Envelope.defaults);\n\t        Tone.Envelope.call(this, options);\n\t        options = this.defaultArg(options, Tone.ScaledEnvelope.defaults);\n\t        /** \n\t\t\t *  scale the incoming signal by an exponent\n\t\t\t *  @type {Tone.Pow}\n\t\t\t *  @private\n\t\t\t */\n\t        this._exp = this.output = new Tone.Pow(options.exponent);\n\t        /**\n\t\t\t *  scale the signal to the desired range\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = this.output = new Tone.Scale(options.min, options.max);\n\t        this._sig.chain(this._exp, this._scale);\n\t    };\n\t    Tone.extend(Tone.ScaledEnvelope, Tone.Envelope);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t */\n\t    Tone.ScaledEnvelope.defaults = {\n\t        'min': 0,\n\t        'max': 1,\n\t        'exponent': 1\n\t    };\n\t    /**\n\t\t * The envelope's min output value. This is the value which it\n\t\t * starts at. \n\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'min', {\n\t        get: function () {\n\t            return this._scale.min;\n\t        },\n\t        set: function (min) {\n\t            this._scale.min = min;\n\t        }\n\t    });\n\t    /**\n\t\t * The envelope's max output value. In other words, the value\n\t\t * at the peak of the attack portion of the envelope. \n\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'max', {\n\t        get: function () {\n\t            return this._scale.max;\n\t        },\n\t        set: function (max) {\n\t            this._scale.max = max;\n\t        }\n\t    });\n\t    /**\n\t\t * The envelope's exponent value. \n\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t * @type {number}\n\t\t * @name exponent\n\t\t */\n\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'exponent', {\n\t        get: function () {\n\t            return this._exp.value;\n\t        },\n\t        set: function (exp) {\n\t            this._exp.value = exp;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.ScaledEnvelope} this\n\t\t */\n\t    Tone.ScaledEnvelope.prototype.dispose = function () {\n\t        Tone.Envelope.prototype.dispose.call(this);\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        this._exp.dispose();\n\t        this._exp = null;\n\t        return this;\n\t    };\n\t    return Tone.ScaledEnvelope;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.FrequencyEnvelope is a Tone.ScaledEnvelope, but instead of `min` and `max`\n\t\t *         it's got a `baseFrequency` and `octaves` parameter. \n\t\t *\n\t\t *  @extends {Tone.Envelope}\n\t\t *  @constructor\n\t\t *  @param {Time|Object} [attack]\tthe attack time in seconds\n\t\t *  @param {Time} [decay]\tthe decay time in seconds\n\t\t *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n\t\t *  @param {Time} [release]\tthe release time in seconds\n\t\t *  @example\n\t\t *  var env = new Tone.FrequencyEnvelope({\n\t\t *  \t\"attack\" : 0.2,\n\t\t *  \t\"baseFrequency\" : \"C2\",\n\t\t *  \t\"octaves\" : 4\n\t\t *  });\n\t\t *  scaledEnv.connect(oscillator.frequency);\n\t\t */\n\t    Tone.FrequencyEnvelope = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'attack',\n\t            'decay',\n\t            'sustain',\n\t            'release'\n\t        ], Tone.Envelope.defaults);\n\t        Tone.ScaledEnvelope.call(this, options);\n\t        options = this.defaultArg(options, Tone.FrequencyEnvelope.defaults);\n\t        /**\n\t\t\t *  Stores the octave value\n\t\t\t *  @type {Positive}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = options.octaves;\n\t        //setup\n\t        this.baseFrequency = options.baseFrequency;\n\t        this.octaves = options.octaves;\n\t    };\n\t    Tone.extend(Tone.FrequencyEnvelope, Tone.Envelope);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t */\n\t    Tone.FrequencyEnvelope.defaults = {\n\t        'baseFrequency': 200,\n\t        'octaves': 4,\n\t        'exponent': 2\n\t    };\n\t    /**\n\t\t * The envelope's mininum output value. This is the value which it\n\t\t * starts at. \n\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t * @type {Frequency}\n\t\t * @name baseFrequency\n\t\t */\n\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'baseFrequency', {\n\t        get: function () {\n\t            return this._scale.min;\n\t        },\n\t        set: function (min) {\n\t            this._scale.min = this.toFrequency(min);\n\t            //also update the octaves\n\t            this.octaves = this._octaves;\n\t        }\n\t    });\n\t    /**\n\t\t * The number of octaves above the baseFrequency that the\n\t\t * envelope will scale to.\n\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t * @type {Positive}\n\t\t * @name octaves\n\t\t */\n\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (octaves) {\n\t            this._octaves = octaves;\n\t            this._scale.max = this.baseFrequency * Math.pow(2, octaves);\n\t        }\n\t    });\n\t    /**\n\t\t * The envelope's exponent value. \n\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t * @type {number}\n\t\t * @name exponent\n\t\t */\n\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'exponent', {\n\t        get: function () {\n\t            return this._exp.value;\n\t        },\n\t        set: function (exp) {\n\t            this._exp.value = exp;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.FrequencyEnvelope} this\n\t\t */\n\t    Tone.FrequencyEnvelope.prototype.dispose = function () {\n\t        Tone.ScaledEnvelope.prototype.dispose.call(this);\n\t        return this;\n\t    };\n\t    return Tone.FrequencyEnvelope;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Gate only passes a signal through when the incoming \n\t\t *          signal exceeds a specified threshold. To do this, Gate uses \n\t\t *          a Tone.Follower to follow the amplitude of the incoming signal. \n\t\t *          A common implementation of this class is a [Noise Gate](https://en.wikipedia.org/wiki/Noise_gate).\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {Decibels|Object} [threshold] The threshold above which the gate will open. \n\t\t *  @param {Time=} attack The follower's attack time\n\t\t *  @param {Time=} release The follower's release time\n\t\t *  @example\n\t\t * var gate = new Tone.Gate(-30, 0.2, 0.3).toMaster();\n\t\t * var mic = new Tone.Microphone().connect(gate);\n\t\t * //the gate will only pass through the incoming \n\t\t * //signal when it's louder than -30db\n\t\t */\n\t    Tone.Gate = function () {\n\t        this.createInsOuts(1, 1);\n\t        var options = this.optionsObject(arguments, [\n\t            'threshold',\n\t            'attack',\n\t            'release'\n\t        ], Tone.Gate.defaults);\n\t        /**\n\t\t\t *  @type {Tone.Follower}\n\t\t\t *  @private\n\t\t\t */\n\t        this._follower = new Tone.Follower(options.attack, options.release);\n\t        /**\n\t\t\t *  @type {Tone.GreaterThan}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gt = new Tone.GreaterThan(this.dbToGain(options.threshold));\n\t        //the connections\n\t        this.input.connect(this.output);\n\t        //the control signal\n\t        this.input.chain(this._gt, this._follower, this.output.gain);\n\t    };\n\t    Tone.extend(Tone.Gate);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Gate.defaults = {\n\t        'attack': 0.1,\n\t        'release': 0.1,\n\t        'threshold': -40\n\t    };\n\t    /**\n\t\t * The threshold of the gate in decibels\n\t\t * @memberOf Tone.Gate#\n\t\t * @type {Decibels}\n\t\t * @name threshold\n\t\t */\n\t    Object.defineProperty(Tone.Gate.prototype, 'threshold', {\n\t        get: function () {\n\t            return this.gainToDb(this._gt.value);\n\t        },\n\t        set: function (thresh) {\n\t            this._gt.value = this.dbToGain(thresh);\n\t        }\n\t    });\n\t    /**\n\t\t * The attack speed of the gate\n\t\t * @memberOf Tone.Gate#\n\t\t * @type {Time}\n\t\t * @name attack\n\t\t */\n\t    Object.defineProperty(Tone.Gate.prototype, 'attack', {\n\t        get: function () {\n\t            return this._follower.attack;\n\t        },\n\t        set: function (attackTime) {\n\t            this._follower.attack = attackTime;\n\t        }\n\t    });\n\t    /**\n\t\t * The release speed of the gate\n\t\t * @memberOf Tone.Gate#\n\t\t * @type {Time}\n\t\t * @name release\n\t\t */\n\t    Object.defineProperty(Tone.Gate.prototype, 'release', {\n\t        get: function () {\n\t            return this._follower.release;\n\t        },\n\t        set: function (releaseTime) {\n\t            this._follower.release = releaseTime;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Gate} this\n\t\t */\n\t    Tone.Gate.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._follower.dispose();\n\t        this._gt.dispose();\n\t        this._follower = null;\n\t        this._gt = null;\n\t        return this;\n\t    };\n\t    return Tone.Gate;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A Timeline State. Provides the methods: <code>setStateAtTime(\"state\", time)</code>\n\t\t *          and <code>getStateAtTime(time)</code>.\n\t\t *\n\t\t *  @extends {Tone.Timeline}\n\t\t *  @param {String} initial The initial state of the TimelineState. \n\t\t *                          Defaults to <code>undefined</code>\n\t\t */\n\t    Tone.TimelineState = function (initial) {\n\t        Tone.Timeline.call(this);\n\t        /**\n\t\t\t *  The initial state\n\t\t\t *  @private\n\t\t\t *  @type {String}\n\t\t\t */\n\t        this._initial = initial;\n\t    };\n\t    Tone.extend(Tone.TimelineState, Tone.Timeline);\n\t    /**\n\t\t *  Returns the scheduled state scheduled before or at\n\t\t *  the given time.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t\t */\n\t    Tone.TimelineState.prototype.getStateAtTime = function (time) {\n\t        var event = this.getEvent(time);\n\t        if (event !== null) {\n\t            return event.state;\n\t        } else {\n\t            return this._initial;\n\t        }\n\t    };\n\t    /**\n\t\t *  Returns the scheduled state scheduled before or at\n\t\t *  the given time.\n\t\t *  @param  {String}  state The name of the state to set.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t */\n\t    Tone.TimelineState.prototype.setStateAtTime = function (state, time) {\n\t        this.addEvent({\n\t            'state': state,\n\t            'time': time\n\t        });\n\t    };\n\t    return Tone.TimelineState;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Emitter gives classes which extend it\n\t\t *         the ability to listen for and emit events. \n\t\t *         Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n\t\t *         MIT (c) 2011 Jerome Etienne.\n\t\t *         \n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.Emitter = function () {\n\t        /**\n\t\t\t *  Contains all of the events.\n\t\t\t *  @private\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t        this._events = {};\n\t    };\n\t    Tone.extend(Tone.Emitter);\n\t    /**\n\t\t *  Bind a callback to a specific event.\n\t\t *  @param  {String}    event     The name of the event to listen for.\n\t\t *  @param  {Function}  callback  The callback to invoke when the\n\t\t *                                event is emitted\n\t\t *  @return  {Tone.Emitter}    this\n\t\t */\n\t    Tone.Emitter.prototype.on = function (event, callback) {\n\t        //split the event\n\t        var events = event.split(/\\W+/);\n\t        for (var i = 0; i < events.length; i++) {\n\t            var eventName = events[i];\n\t            if (!this._events.hasOwnProperty(eventName)) {\n\t                this._events[eventName] = [];\n\t            }\n\t            this._events[eventName].push(callback);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove the event listener.\n\t\t *  @param  {String}    event     The event to stop listening to.\n\t\t *  @param  {Function=}  callback  The callback which was bound to \n\t\t *                                the event with Tone.Emitter.on.\n\t\t *                                If no callback is given, all callbacks\n\t\t *                                events are removed.\n\t\t *  @return  {Tone.Emitter}    this\n\t\t */\n\t    Tone.Emitter.prototype.off = function (event, callback) {\n\t        var events = event.split(/\\W+/);\n\t        for (var ev = 0; ev < events.length; ev++) {\n\t            event = events[ev];\n\t            if (this._events.hasOwnProperty(event)) {\n\t                if (Tone.prototype.isUndef(callback)) {\n\t                    this._events[event] = [];\n\t                } else {\n\t                    var eventList = this._events[event];\n\t                    for (var i = 0; i < eventList.length; i++) {\n\t                        if (eventList[i] === callback) {\n\t                            eventList.splice(i, 1);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Invoke all of the callbacks bound to the event\n\t\t *  with any arguments passed in. \n\t\t *  @param  {String}  event  The name of the event.\n\t\t *  @param {*...} args The arguments to pass to the functions listening.\n\t\t *  @return  {Tone.Emitter}  this\n\t\t */\n\t    Tone.Emitter.prototype.emit = function (event) {\n\t        if (this._events) {\n\t            var args = Array.prototype.slice.call(arguments, 1);\n\t            if (this._events.hasOwnProperty(event)) {\n\t                var eventList = this._events[event];\n\t                for (var i = 0, len = eventList.length; i < len; i++) {\n\t                    eventList[i].apply(this, args);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Add Emitter functions (on/off/emit) to the object\n\t\t *  @param  {Object|Function}  object  The object or class to extend.\n\t\t */\n\t    Tone.Emitter.mixin = function (object) {\n\t        var functions = [\n\t            'on',\n\t            'off',\n\t            'emit'\n\t        ];\n\t        object._events = {};\n\t        for (var i = 0; i < functions.length; i++) {\n\t            var func = functions[i];\n\t            var emitterFunc = Tone.Emitter.prototype[func];\n\t            object[func] = emitterFunc;\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Emitter}  this\n\t\t */\n\t    Tone.Emitter.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._events = null;\n\t        return this;\n\t    };\n\t    return Tone.Emitter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A sample accurate clock which provides a callback at the given rate. \n\t\t *          While the callback is not sample-accurate (it is still susceptible to\n\t\t *          loose JS timing), the time passed in as the argument to the callback\n\t\t *          is precise. For most applications, it is better to use Tone.Transport\n\t\t *          instead of the Clock by itself since you can synchronize multiple callbacks.\n\t\t *\n\t\t * \t@constructor\n\t\t *  @extends {Tone.Emitter}\n\t\t * \t@param {function} callback The callback to be invoked with the time of the audio event\n\t\t * \t@param {Frequency} frequency The rate of the callback\n\t\t * \t@example\n\t\t * //the callback will be invoked approximately once a second\n\t\t * //and will print the time exactly once a second apart.\n\t\t * var clock = new Tone.Clock(function(time){\n\t\t * \tconsole.log(time);\n\t\t * }, 1);\n\t\t */\n\t    Tone.Clock = function () {\n\t        Tone.Emitter.call(this);\n\t        var options = this.optionsObject(arguments, [\n\t            'callback',\n\t            'frequency'\n\t        ], Tone.Clock.defaults);\n\t        /**\n\t\t\t *  The callback function to invoke at the scheduled tick.\n\t\t\t *  @type  {Function}\n\t\t\t */\n\t        this.callback = options.callback;\n\t        /**\n\t\t\t *  The internal lookahead value\n\t\t\t *  @type {Number|String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lookAhead = 'auto';\n\t        /**\n\t\t\t *  The lookahead value which was automatically\n\t\t\t *  computed using a time-based averaging.\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._computedLookAhead = UPDATE_RATE / 1000;\n\t        /**\n\t\t\t *  The next time the callback is scheduled.\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._nextTick = -1;\n\t        /**\n\t\t\t *  The last time the callback was invoked\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lastUpdate = -1;\n\t        /**\n\t\t\t *  The rate the callback function should be invoked. \n\t\t\t *  @type  {BPM}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.TimelineSignal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The number of times the callback was invoked. Starts counting at 0\n\t\t\t *  and increments after the callback was invoked. \n\t\t\t *  @type {Ticks}\n\t\t\t *  @readOnly\n\t\t\t */\n\t        this.ticks = 0;\n\t        /**\n\t\t\t *  The state timeline\n\t\t\t *  @type {Tone.TimelineState}\n\t\t\t *  @private\n\t\t\t */\n\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t        /**\n\t\t\t *  The loop function bound to its context. \n\t\t\t *  This is necessary to remove the event in the end.\n\t\t\t *  @type {Function}\n\t\t\t *  @private\n\t\t\t */\n\t        this._boundLoop = this._loop.bind(this);\n\t        //bind a callback to the worker thread\n\t        Tone.Clock._worker.addEventListener('message', this._boundLoop);\n\t        this._readOnly('frequency');\n\t    };\n\t    Tone.extend(Tone.Clock, Tone.Emitter);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Clock.defaults = {\n\t        'callback': Tone.noOp,\n\t        'frequency': 1,\n\t        'lookAhead': 'auto'\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Clock#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.Clock.prototype, 'state', {\n\t        get: function () {\n\t            return this._state.getStateAtTime(this.now());\n\t        }\n\t    });\n\t    /**\n\t\t *  The time which the clock will schedule events in advance\n\t\t *  of the current time. Scheduling notes in advance improves\n\t\t *  performance and decreases the chance for clicks caused\n\t\t *  by scheduling events in the past. If set to \"auto\",\n\t\t *  this value will be automatically computed based on the \n\t\t *  rate of the update (~0.02 seconds). Larger values\n\t\t *  will yeild better performance, but at the cost of latency. \n\t\t *  Values less than 0.016 are not recommended.\n\t\t *  @type {Number|String}\n\t\t *  @memberOf Tone.Clock#\n\t\t *  @name lookAhead\n\t\t */\n\t    Object.defineProperty(Tone.Clock.prototype, 'lookAhead', {\n\t        get: function () {\n\t            return this._lookAhead;\n\t        },\n\t        set: function (val) {\n\t            if (val === 'auto') {\n\t                this._lookAhead = 'auto';\n\t            } else {\n\t                this._lookAhead = this.toSeconds(val);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Start the clock at the given time. Optionally pass in an offset\n\t\t *  of where to start the tick counter from.\n\t\t *  @param  {Time}  time    The time the clock should start\n\t\t *  @param  {Ticks=}  offset  Where the tick counter starts counting from.\n\t\t *  @return  {Tone.Clock}  this\n\t\t */\n\t    Tone.Clock.prototype.start = function (time, offset) {\n\t        time = this.toSeconds(time);\n\t        if (this._state.getStateAtTime(time) !== Tone.State.Started) {\n\t            this._state.addEvent({\n\t                'state': Tone.State.Started,\n\t                'time': time,\n\t                'offset': offset\n\t            });\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the clock. Stopping the clock resets the tick counter to 0.\n\t\t *  @param {Time} [time=now] The time when the clock should stop.\n\t\t *  @returns {Tone.Clock} this\n\t\t *  @example\n\t\t * clock.stop();\n\t\t */\n\t    Tone.Clock.prototype.stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._state.cancel(time);\n\t        this._state.setStateAtTime(Tone.State.Stopped, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Pause the clock. Pausing does not reset the tick counter.\n\t\t *  @param {Time} [time=now] The time when the clock should stop.\n\t\t *  @returns {Tone.Clock} this\n\t\t */\n\t    Tone.Clock.prototype.pause = function (time) {\n\t        time = this.toSeconds(time);\n\t        if (this._state.getStateAtTime(time) === Tone.State.Started) {\n\t            this._state.setStateAtTime(Tone.State.Paused, time);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The scheduling loop.\n\t\t *  @param  {Number}  time  The current page time starting from 0\n\t\t *                          when the page was loaded.\n\t\t *  @private\n\t\t */\n\t    Tone.Clock.prototype._loop = function () {\n\t        //compute the look ahead\n\t        if (this._lookAhead === 'auto') {\n\t            var time = this.now();\n\t            if (this._lastUpdate !== -1) {\n\t                var diff = time - this._lastUpdate;\n\t                //max size on the diff\n\t                diff = Math.min(10 * UPDATE_RATE / 1000, diff);\n\t                //averaging\n\t                this._computedLookAhead = (9 * this._computedLookAhead + diff) / 10;\n\t            }\n\t            this._lastUpdate = time;\n\t        } else {\n\t            this._computedLookAhead = this._lookAhead;\n\t        }\n\t        //get the frequency value to compute the value of the next loop\n\t        var now = this.now();\n\t        //if it's started\n\t        var lookAhead = this._computedLookAhead * 2;\n\t        var event = this._state.getEvent(now + lookAhead);\n\t        var state = Tone.State.Stopped;\n\t        if (event) {\n\t            state = event.state;\n\t            //if it was stopped and now started\n\t            if (this._nextTick === -1 && state === Tone.State.Started) {\n\t                this._nextTick = event.time;\n\t                if (!this.isUndef(event.offset)) {\n\t                    this.ticks = event.offset;\n\t                }\n\t                this.emit('start', event.time, this.ticks);\n\t            }\n\t        }\n\t        if (state === Tone.State.Started) {\n\t            while (now + lookAhead > this._nextTick) {\n\t                var tickTime = this._nextTick;\n\t                this._nextTick += 1 / this.frequency.getValueAtTime(this._nextTick);\n\t                this.callback(tickTime);\n\t                this.ticks++;\n\t            }\n\t        } else if (state === Tone.State.Stopped) {\n\t            if (event && this.ticks !== 0) {\n\t                this.emit('stop', event.time);\n\t            }\n\t            this._nextTick = -1;\n\t            this.ticks = 0;\n\t        } else if (state === Tone.State.Paused) {\n\t            if (this._nextTick !== -1) {\n\t                this.emit('pause', event.time);\n\t            }\n\t            this._nextTick = -1;\n\t        }\n\t    };\n\t    /**\n\t\t *  Returns the scheduled state at the given time.\n\t\t *  @param  {Time}  time  The time to query.\n\t\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t\t *  @example\n\t\t * clock.start(\"+0.1\");\n\t\t * clock.getStateAtTime(\"+0.1\"); //returns \"started\"\n\t\t */\n\t    Tone.Clock.prototype.getStateAtTime = function (time) {\n\t        time = this.toSeconds(time);\n\t        return this._state.getStateAtTime(time);\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.Clock} this\n\t\t */\n\t    Tone.Clock.prototype.dispose = function () {\n\t        Tone.Emitter.prototype.dispose.call(this);\n\t        Tone.TimelineState.prototype.dispose.call(this);\n\t        Tone.Clock._worker.removeEventListener('message', this._boundLoop);\n\t        this._writable('frequency');\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this._boundLoop = null;\n\t        this._nextTick = Infinity;\n\t        this.callback = null;\n\t        this._state.dispose();\n\t        this._state = null;\n\t    };\n\t    //URL Shim\n\t    window.URL = window.URL || window.webkitURL;\n\t    /**\n\t\t *  The update rate in Milliseconds\n\t\t *  @const\n\t\t *  @type  {Number}\n\t\t *  @private\n\t\t */\n\t    var UPDATE_RATE = 20;\n\t    /**\n\t\t *  The script which runs in a web worker\n\t\t *  @type {Blob}\n\t\t *  @private\n\t\t */\n\t    var blob = new Blob(['setInterval(function(){self.postMessage(\\'tick\\')}, ' + UPDATE_RATE + ')']);\n\t    /**\n\t\t *  Create a blob url from the Blob\n\t\t *  @type  {URL}\n\t\t *  @private\n\t\t */\n\t    var blobUrl = URL.createObjectURL(blob);\n\t    /**\n\t\t *  The Worker which generates a regular callback\n\t\t *  @type {Worker}\n\t\t *  @private\n\t\t *  @static\n\t\t */\n\t    Tone.Clock._worker = new Worker(blobUrl);\n\t    return Tone.Clock;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Similar to Tone.Timeline, but all events represent\n\t\t *         intervals with both \"time\" and \"duration\" times. The \n\t\t *         events are placed in a tree structure optimized\n\t\t *         for querying an intersection point with the timeline\n\t\t *         events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n\t\t *         to represent the data.\n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.IntervalTimeline = function () {\n\t        /**\n\t\t\t *  The root node of the inteval tree\n\t\t\t *  @type  {IntervalNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._root = null;\n\t        /**\n\t\t\t *  Keep track of the length of the timeline.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._length = 0;\n\t    };\n\t    Tone.extend(Tone.IntervalTimeline);\n\t    /**\n\t\t *  The event to add to the timeline. All events must \n\t\t *  have a time and duration value\n\t\t *  @param  {Object}  event  The event to add to the timeline\n\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.addEvent = function (event) {\n\t        if (this.isUndef(event.time) || this.isUndef(event.duration)) {\n\t            throw new Error('Tone.IntervalTimeline: events must have time and duration parameters');\n\t        }\n\t        var node = new IntervalNode(event.time, event.time + event.duration, event);\n\t        if (this._root === null) {\n\t            this._root = node;\n\t        } else {\n\t            this._root.insert(node);\n\t        }\n\t        this._length++;\n\t        // Restructure tree to be balanced\n\t        while (node !== null) {\n\t            node.updateHeight();\n\t            node.updateMax();\n\t            this._rebalance(node);\n\t            node = node.parent;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove an event from the timeline.\n\t\t *  @param  {Object}  event  The event to remove from the timeline\n\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.removeEvent = function (event) {\n\t        if (this._root !== null) {\n\t            var results = [];\n\t            this._root.search(event.time, results);\n\t            for (var i = 0; i < results.length; i++) {\n\t                var node = results[i];\n\t                if (node.event === event) {\n\t                    this._removeNode(node);\n\t                    this._length--;\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The number of items in the timeline.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.IntervalTimeline#\n\t\t *  @name length\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.IntervalTimeline.prototype, 'length', {\n\t        get: function () {\n\t            return this._length;\n\t        }\n\t    });\n\t    /**\n\t\t *  Remove events whose time time is after the given time\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.cancel = function (after) {\n\t        this.forEachAfter(after, function (event) {\n\t            this.removeEvent(event);\n\t        }.bind(this));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set the root node as the given node\n\t\t *  @param {IntervalNode} node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._setRoot = function (node) {\n\t        this._root = node;\n\t        if (this._root !== null) {\n\t            this._root.parent = null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Replace the references to the node in the node's parent\n\t\t *  with the replacement node.\n\t\t *  @param  {IntervalNode}  node        \n\t\t *  @param  {IntervalNode}  replacement \n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._replaceNodeInParent = function (node, replacement) {\n\t        if (node.parent !== null) {\n\t            if (node.isLeftChild()) {\n\t                node.parent.left = replacement;\n\t            } else {\n\t                node.parent.right = replacement;\n\t            }\n\t            this._rebalance(node.parent);\n\t        } else {\n\t            this._setRoot(replacement);\n\t        }\n\t    };\n\t    /**\n\t\t *  Remove the node from the tree and replace it with \n\t\t *  a successor which follows the schema.\n\t\t *  @param  {IntervalNode}  node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._removeNode = function (node) {\n\t        if (node.left === null && node.right === null) {\n\t            this._replaceNodeInParent(node, null);\n\t        } else if (node.right === null) {\n\t            this._replaceNodeInParent(node, node.left);\n\t        } else if (node.left === null) {\n\t            this._replaceNodeInParent(node, node.right);\n\t        } else {\n\t            var balance = node.getBalance();\n\t            var replacement, temp;\n\t            if (balance > 0) {\n\t                if (node.left.right === null) {\n\t                    replacement = node.left;\n\t                    replacement.right = node.right;\n\t                    temp = replacement;\n\t                } else {\n\t                    replacement = node.left.right;\n\t                    while (replacement.right !== null) {\n\t                        replacement = replacement.right;\n\t                    }\n\t                    replacement.parent.right = replacement.left;\n\t                    temp = replacement.parent;\n\t                    replacement.left = node.left;\n\t                    replacement.right = node.right;\n\t                }\n\t            } else {\n\t                if (node.right.left === null) {\n\t                    replacement = node.right;\n\t                    replacement.left = node.left;\n\t                    temp = replacement;\n\t                } else {\n\t                    replacement = node.right.left;\n\t                    while (replacement.left !== null) {\n\t                        replacement = replacement.left;\n\t                    }\n\t                    replacement.parent = replacement.parent;\n\t                    replacement.parent.left = replacement.right;\n\t                    temp = replacement.parent;\n\t                    replacement.left = node.left;\n\t                    replacement.right = node.right;\n\t                }\n\t            }\n\t            if (node.parent !== null) {\n\t                if (node.isLeftChild()) {\n\t                    node.parent.left = replacement;\n\t                } else {\n\t                    node.parent.right = replacement;\n\t                }\n\t            } else {\n\t                this._setRoot(replacement);\n\t            }\n\t            // this._replaceNodeInParent(node, replacement);\n\t            this._rebalance(temp);\n\t        }\n\t        node.dispose();\n\t    };\n\t    /**\n\t\t *  Rotate the tree to the left\n\t\t *  @param  {IntervalNode}  node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._rotateLeft = function (node) {\n\t        var parent = node.parent;\n\t        var isLeftChild = node.isLeftChild();\n\t        // Make node.right the new root of this sub tree (instead of node)\n\t        var pivotNode = node.right;\n\t        node.right = pivotNode.left;\n\t        pivotNode.left = node;\n\t        if (parent !== null) {\n\t            if (isLeftChild) {\n\t                parent.left = pivotNode;\n\t            } else {\n\t                parent.right = pivotNode;\n\t            }\n\t        } else {\n\t            this._setRoot(pivotNode);\n\t        }\n\t    };\n\t    /**\n\t\t *  Rotate the tree to the right\n\t\t *  @param  {IntervalNode}  node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._rotateRight = function (node) {\n\t        var parent = node.parent;\n\t        var isLeftChild = node.isLeftChild();\n\t        // Make node.left the new root of this sub tree (instead of node)\n\t        var pivotNode = node.left;\n\t        node.left = pivotNode.right;\n\t        pivotNode.right = node;\n\t        if (parent !== null) {\n\t            if (isLeftChild) {\n\t                parent.left = pivotNode;\n\t            } else {\n\t                parent.right = pivotNode;\n\t            }\n\t        } else {\n\t            this._setRoot(pivotNode);\n\t        }\n\t    };\n\t    /**\n\t\t *  Balance the BST\n\t\t *  @param  {IntervalNode}  node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._rebalance = function (node) {\n\t        var balance = node.getBalance();\n\t        if (balance > 1) {\n\t            if (node.left.getBalance() < 0) {\n\t                this._rotateLeft(node.left);\n\t            } else {\n\t                this._rotateRight(node);\n\t            }\n\t        } else if (balance < -1) {\n\t            if (node.right.getBalance() > 0) {\n\t                this._rotateRight(node.right);\n\t            } else {\n\t                this._rotateLeft(node);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Get an event whose time and duration span the give time. Will\n\t\t *  return the match whose \"time\" value is closest to the given time.\n\t\t *  @param  {Object}  event  The event to add to the timeline\n\t\t *  @return  {Object}  The event which spans the desired time\n\t\t */\n\t    Tone.IntervalTimeline.prototype.getEvent = function (time) {\n\t        if (this._root !== null) {\n\t            var results = [];\n\t            this._root.search(time, results);\n\t            if (results.length > 0) {\n\t                var max = results[0];\n\t                for (var i = 1; i < results.length; i++) {\n\t                    if (results[i].low > max.low) {\n\t                        max = results[i];\n\t                    }\n\t                }\n\t                return max.event;\n\t            }\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the timeline.\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.forEach = function (callback) {\n\t        if (this._root !== null) {\n\t            var allNodes = [];\n\t            if (this._root !== null) {\n\t                this._root.traverse(function (node) {\n\t                    allNodes.push(node);\n\t                });\n\t            }\n\t            for (var i = 0; i < allNodes.length; i++) {\n\t                var ev = allNodes[i].event;\n\t                if (ev) {\n\t                    callback(ev);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array in which the given time\n\t\t *  overlaps with the time and duration time of the event.\n\t\t *  @param  {Number}  time The time to check if items are overlapping\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.forEachAtTime = function (time, callback) {\n\t        if (this._root !== null) {\n\t            var results = [];\n\t            this._root.search(time, results);\n\t            for (var i = results.length - 1; i >= 0; i--) {\n\t                var ev = results[i].event;\n\t                if (ev) {\n\t                    callback(ev);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array in which the time is greater\n\t\t *  than the given time.\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.forEachAfter = function (time, callback) {\n\t        if (this._root !== null) {\n\t            var results = [];\n\t            this._root.searchAfter(time, results);\n\t            for (var i = results.length - 1; i >= 0; i--) {\n\t                var ev = results[i].event;\n\t                if (ev) {\n\t                    callback(ev);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.dispose = function () {\n\t        var allNodes = [];\n\t        if (this._root !== null) {\n\t            this._root.traverse(function (node) {\n\t                allNodes.push(node);\n\t            });\n\t        }\n\t        for (var i = 0; i < allNodes.length; i++) {\n\t            allNodes[i].dispose();\n\t        }\n\t        allNodes = null;\n\t        this._root = null;\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tINTERVAL NODE HELPER\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Represents a node in the binary search tree, with the addition\n\t\t *  of a \"high\" value which keeps track of the highest value of\n\t\t *  its children. \n\t\t *  References: \n\t\t *  https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n\t\t *  http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n\t\t *  @param {Number} low\n\t\t *  @param {Number} high\n\t\t *  @private\n\t\t */\n\t    var IntervalNode = function (low, high, event) {\n\t        //the event container\n\t        this.event = event;\n\t        //the low value\n\t        this.low = low;\n\t        //the high value\n\t        this.high = high;\n\t        //the high value for this and all child nodes\n\t        this.max = this.high;\n\t        //the nodes to the left\n\t        this._left = null;\n\t        //the nodes to the right\n\t        this._right = null;\n\t        //the parent node\n\t        this.parent = null;\n\t        //the number of child nodes\n\t        this.height = 0;\n\t    };\n\t    /** \n\t\t *  Insert a node into the correct spot in the tree\n\t\t *  @param  {IntervalNode}  node\n\t\t */\n\t    IntervalNode.prototype.insert = function (node) {\n\t        if (node.low <= this.low) {\n\t            if (this.left === null) {\n\t                this.left = node;\n\t            } else {\n\t                this.left.insert(node);\n\t            }\n\t        } else {\n\t            if (this.right === null) {\n\t                this.right = node;\n\t            } else {\n\t                this.right.insert(node);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Search the tree for nodes which overlap \n\t\t *  with the given point\n\t\t *  @param  {Number}  point  The point to query\n\t\t *  @param  {Array}  results  The array to put the results\n\t\t */\n\t    IntervalNode.prototype.search = function (point, results) {\n\t        // If p is to the right of the rightmost point of any interval\n\t        // in this node and all children, there won't be any matches.\n\t        if (point > this.max) {\n\t            return;\n\t        }\n\t        // Search left children\n\t        if (this.left !== null) {\n\t            this.left.search(point, results);\n\t        }\n\t        // Check this node\n\t        if (this.low <= point && this.high > point) {\n\t            results.push(this);\n\t        }\n\t        // If p is to the left of the time of this interval,\n\t        // then it can't be in any child to the right.\n\t        if (this.low > point) {\n\t            return;\n\t        }\n\t        // Search right children\n\t        if (this.right !== null) {\n\t            this.right.search(point, results);\n\t        }\n\t    };\n\t    /**\n\t\t *  Search the tree for nodes which are less \n\t\t *  than the given point\n\t\t *  @param  {Number}  point  The point to query\n\t\t *  @param  {Array}  results  The array to put the results\n\t\t */\n\t    IntervalNode.prototype.searchAfter = function (point, results) {\n\t        // Check this node\n\t        if (this.low >= point) {\n\t            results.push(this);\n\t            if (this.left !== null) {\n\t                this.left.searchAfter(point, results);\n\t            }\n\t        }\n\t        // search the right side\n\t        if (this.right !== null) {\n\t            this.right.searchAfter(point, results);\n\t        }\n\t    };\n\t    /**\n\t\t *  Invoke the callback on this element and both it's branches\n\t\t *  @param  {Function}  callback\n\t\t */\n\t    IntervalNode.prototype.traverse = function (callback) {\n\t        callback(this);\n\t        if (this.left !== null) {\n\t            this.left.traverse(callback);\n\t        }\n\t        if (this.right !== null) {\n\t            this.right.traverse(callback);\n\t        }\n\t    };\n\t    /**\n\t\t *  Update the height of the node\n\t\t */\n\t    IntervalNode.prototype.updateHeight = function () {\n\t        if (this.left !== null && this.right !== null) {\n\t            this.height = Math.max(this.left.height, this.right.height) + 1;\n\t        } else if (this.right !== null) {\n\t            this.height = this.right.height + 1;\n\t        } else if (this.left !== null) {\n\t            this.height = this.left.height + 1;\n\t        } else {\n\t            this.height = 0;\n\t        }\n\t    };\n\t    /**\n\t\t *  Update the height of the node\n\t\t */\n\t    IntervalNode.prototype.updateMax = function () {\n\t        this.max = this.high;\n\t        if (this.left !== null) {\n\t            this.max = Math.max(this.max, this.left.max);\n\t        }\n\t        if (this.right !== null) {\n\t            this.max = Math.max(this.max, this.right.max);\n\t        }\n\t    };\n\t    /**\n\t\t *  The balance is how the leafs are distributed on the node\n\t\t *  @return  {Number}  Negative numbers are balanced to the right\n\t\t */\n\t    IntervalNode.prototype.getBalance = function () {\n\t        var balance = 0;\n\t        if (this.left !== null && this.right !== null) {\n\t            balance = this.left.height - this.right.height;\n\t        } else if (this.left !== null) {\n\t            balance = this.left.height + 1;\n\t        } else if (this.right !== null) {\n\t            balance = -(this.right.height + 1);\n\t        }\n\t        return balance;\n\t    };\n\t    /**\n\t\t *  @returns {Boolean} true if this node is the left child\n\t\t *  of its parent\n\t\t */\n\t    IntervalNode.prototype.isLeftChild = function () {\n\t        return this.parent !== null && this.parent.left === this;\n\t    };\n\t    /**\n\t\t *  get/set the left node\n\t\t *  @type {IntervalNode}\n\t\t */\n\t    Object.defineProperty(IntervalNode.prototype, 'left', {\n\t        get: function () {\n\t            return this._left;\n\t        },\n\t        set: function (node) {\n\t            this._left = node;\n\t            if (node !== null) {\n\t                node.parent = this;\n\t            }\n\t            this.updateHeight();\n\t            this.updateMax();\n\t        }\n\t    });\n\t    /**\n\t\t *  get/set the right node\n\t\t *  @type {IntervalNode}\n\t\t */\n\t    Object.defineProperty(IntervalNode.prototype, 'right', {\n\t        get: function () {\n\t            return this._right;\n\t        },\n\t        set: function (node) {\n\t            this._right = node;\n\t            if (node !== null) {\n\t                node.parent = this;\n\t            }\n\t            this.updateHeight();\n\t            this.updateMax();\n\t        }\n\t    });\n\t    /**\n\t\t *  null out references.\n\t\t */\n\t    IntervalNode.prototype.dispose = function () {\n\t        this.parent = null;\n\t        this._left = null;\n\t        this._right = null;\n\t        this.event = null;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tEND INTERVAL NODE HELPER\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    return Tone.IntervalTimeline;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Transport for timing musical events.\n\t\t *          Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n\t\t *          Tone.Transport timing events pass in the exact time of the scheduled event\n\t\t *          in the argument of the callback function. Pass that time value to the object\n\t\t *          you're scheduling. <br><br>\n\t\t *          A single transport is created for you when the library is initialized. \n\t\t *          <br><br>\n\t\t *          The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n\t\t *          called with the time of that event as the argument. \n\t\t *\n\t\t *  @extends {Tone.Emitter}\n\t\t *  @singleton\n\t\t *  @example\n\t\t * //repeated event every 8th note\n\t\t * Tone.Transport.scheduleRepeat(function(time){\n\t\t * \t//do something with the time\n\t\t * }, \"8n\");\n\t\t *  @example\n\t\t * //schedule an event on the 16th measure\n\t\t * Tone.Transport.schedule(function(time){\n\t\t * \t//do something with the time\n\t\t * }, \"16:0:0\");\n\t\t */\n\t    Tone.Transport = function () {\n\t        Tone.Emitter.call(this);\n\t        ///////////////////////////////////////////////////////////////////////\n\t        //\tLOOPING\n\t        //////////////////////////////////////////////////////////////////////\n\t        /** \n\t\t\t * \tIf the transport loops or not.\n\t\t\t *  @type {boolean}\n\t\t\t */\n\t        this.loop = false;\n\t        /** \n\t\t\t * \tThe loop start position in ticks\n\t\t\t *  @type {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopStart = 0;\n\t        /** \n\t\t\t * \tThe loop end position in ticks\n\t\t\t *  @type {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopEnd = 0;\n\t        ///////////////////////////////////////////////////////////////////////\n\t        //\tCLOCK/TEMPO\n\t        //////////////////////////////////////////////////////////////////////\n\t        /**\n\t\t\t *  Pulses per quarter is the number of ticks per quarter note.\n\t\t\t *  @private\n\t\t\t *  @type  {Number}\n\t\t\t */\n\t        this._ppq = TransportConstructor.defaults.PPQ;\n\t        /**\n\t\t\t *  watches the main oscillator for timing ticks\n\t\t\t *  initially starts at 120bpm\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Clock}\n\t\t\t */\n\t        this._clock = new Tone.Clock({\n\t            'callback': this._processTick.bind(this),\n\t            'frequency': 0\n\t        });\n\t        this._bindClockEvents();\n\t        /**\n\t\t\t *  The Beats Per Minute of the Transport. \n\t\t\t *  @type {BPM}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * Tone.Transport.bpm.value = 80;\n\t\t\t * //ramp the bpm to 120 over 10 seconds\n\t\t\t * Tone.Transport.bpm.rampTo(120, 10);\n\t\t\t */\n\t        this.bpm = this._clock.frequency;\n\t        this.bpm._toUnits = this._toUnits.bind(this);\n\t        this.bpm._fromUnits = this._fromUnits.bind(this);\n\t        this.bpm.units = Tone.Type.BPM;\n\t        this.bpm.value = TransportConstructor.defaults.bpm;\n\t        this._readOnly('bpm');\n\t        /**\n\t\t\t *  The time signature, or more accurately the numerator\n\t\t\t *  of the time signature over a denominator of 4. \n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._timeSignature = TransportConstructor.defaults.timeSignature;\n\t        ///////////////////////////////////////////////////////////////////////\n\t        //\tTIMELINE EVENTS\n\t        //////////////////////////////////////////////////////////////////////\n\t        /**\n\t\t\t *  All the events in an object to keep track by ID\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scheduledEvents = {};\n\t        /**\n\t\t\t *  The event ID counter\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._eventID = 0;\n\t        /**\n\t\t\t * \tThe scheduled events.\n\t\t\t *  @type {Tone.Timeline}\n\t\t\t *  @private\n\t\t\t */\n\t        this._timeline = new Tone.Timeline();\n\t        /**\n\t\t\t *  Repeated events\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._repeatedEvents = new Tone.IntervalTimeline();\n\t        /**\n\t\t\t *  Events that occur once\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._onceEvents = new Tone.Timeline();\n\t        /** \n\t\t\t *  All of the synced Signals\n\t\t\t *  @private \n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this._syncedSignals = [];\n\t        ///////////////////////////////////////////////////////////////////////\n\t        //\tSWING\n\t        //////////////////////////////////////////////////////////////////////\n\t        /**\n\t\t\t *  The subdivision of the swing\n\t\t\t *  @type  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._swingTicks = TransportConstructor.defaults.PPQ / 2;\n\t        //8n\n\t        /**\n\t\t\t *  The swing amount\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @private\n\t\t\t */\n\t        this._swingAmount = 0;\n\t    };\n\t    Tone.extend(Tone.Transport, Tone.Emitter);\n\t    /**\n\t\t *  the defaults\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t *  @static\n\t\t */\n\t    Tone.Transport.defaults = {\n\t        'bpm': 120,\n\t        'swing': 0,\n\t        'swingSubdivision': '8n',\n\t        'timeSignature': 4,\n\t        'loopStart': 0,\n\t        'loopEnd': '4m',\n\t        'PPQ': 192\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tTICKS\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  called on every tick\n\t\t *  @param   {number} tickTime clock relative tick time\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype._processTick = function (tickTime) {\n\t        var ticks = this._clock.ticks;\n\t        //handle swing\n\t        if (this._swingAmount > 0 && ticks % this._ppq !== 0 && //not on a downbeat\n\t            ticks % (this._swingTicks * 2) !== 0) {\n\t            //add some swing\n\t            var progress = ticks % (this._swingTicks * 2) / (this._swingTicks * 2);\n\t            var amount = Math.sin(progress * Math.PI) * this._swingAmount;\n\t            tickTime += Tone.Time(this._swingTicks * 2 / 3, 'i').eval() * amount;\n\t        }\n\t        //do the loop test\n\t        if (this.loop) {\n\t            if (ticks === this._loopEnd) {\n\t                this.emit('stop', tickTime);\n\t                this._clock.ticks = this._loopStart;\n\t                ticks = this._loopStart;\n\t                this.emit('start', tickTime, this.seconds);\n\t                this.emit('loop', tickTime);\n\t            }\n\t        }\n\t        //process the single occurrence events\n\t        this._onceEvents.forEachBefore(ticks, function (event) {\n\t            event.callback(tickTime);\n\t        });\n\t        //and clear the single occurrence timeline\n\t        this._onceEvents.cancelBefore(ticks);\n\t        //fire the next tick events if their time has come\n\t        this._timeline.forEachAtTime(ticks, function (event) {\n\t            event.callback(tickTime);\n\t        });\n\t        //process the repeated events\n\t        this._repeatedEvents.forEachAtTime(ticks, function (event) {\n\t            if ((ticks - event.time) % event.interval === 0) {\n\t                event.callback(tickTime);\n\t            }\n\t        });\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tSCHEDULABLE EVENTS\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Schedule an event along the timeline.\n\t\t *  @param {Function} callback The callback to be invoked at the time.\n\t\t *  @param {TransportTime}  time The time to invoke the callback at.\n\t\t *  @return {Number} The id of the event which can be used for canceling the event. \n\t\t *  @example\n\t\t * //trigger the callback when the Transport reaches the desired time\n\t\t * Tone.Transport.schedule(function(time){\n\t\t * \tenvelope.triggerAttack(time);\n\t\t * }, \"128i\");\n\t\t */\n\t    Tone.Transport.prototype.schedule = function (callback, time) {\n\t        var event = {\n\t            'time': this.toTicks(time),\n\t            'callback': callback\n\t        };\n\t        var id = this._eventID++;\n\t        this._scheduledEvents[id.toString()] = {\n\t            'event': event,\n\t            'timeline': this._timeline\n\t        };\n\t        this._timeline.addEvent(event);\n\t        return id;\n\t    };\n\t    /**\n\t\t *  Schedule a repeated event along the timeline. The event will fire\n\t\t *  at the `interval` starting at the `startTime` and for the specified\n\t\t *  `duration`. \n\t\t *  @param  {Function}  callback   The callback to invoke.\n\t\t *  @param  {Time}    interval   The duration between successive\n\t\t *                               callbacks.\n\t\t *  @param  {TimelinePosition=}    startTime  When along the timeline the events should\n\t\t *                               start being invoked.\n\t\t *  @param {Time} [duration=Infinity] How long the event should repeat. \n\t\t *  @return  {Number}    The ID of the scheduled event. Use this to cancel\n\t\t *                           the event. \n\t\t *  @example\n\t\t * //a callback invoked every eighth note after the first measure\n\t\t * Tone.Transport.scheduleRepeat(callback, \"8n\", \"1m\");\n\t\t */\n\t    Tone.Transport.prototype.scheduleRepeat = function (callback, interval, startTime, duration) {\n\t        if (interval <= 0) {\n\t            throw new Error('Tone.Transport: repeat events must have an interval larger than 0');\n\t        }\n\t        var event = {\n\t            'time': this.toTicks(startTime),\n\t            'duration': this.toTicks(this.defaultArg(duration, Infinity)),\n\t            'interval': this.toTicks(interval),\n\t            'callback': callback\n\t        };\n\t        var id = this._eventID++;\n\t        this._scheduledEvents[id.toString()] = {\n\t            'event': event,\n\t            'timeline': this._repeatedEvents\n\t        };\n\t        this._repeatedEvents.addEvent(event);\n\t        return id;\n\t    };\n\t    /**\n\t\t *  Schedule an event that will be removed after it is invoked. \n\t\t *  Note that if the given time is less than the current transport time, \n\t\t *  the event will be invoked immediately. \n\t\t *  @param {Function} callback The callback to invoke once.\n\t\t *  @param {TransportTime} time The time the callback should be invoked.\n\t\t *  @returns {Number} The ID of the scheduled event. \n\t\t */\n\t    Tone.Transport.prototype.scheduleOnce = function (callback, time) {\n\t        var event = {\n\t            'time': this.toTicks(time),\n\t            'callback': callback\n\t        };\n\t        var id = this._eventID++;\n\t        this._scheduledEvents[id.toString()] = {\n\t            'event': event,\n\t            'timeline': this._onceEvents\n\t        };\n\t        this._onceEvents.addEvent(event);\n\t        return id;\n\t    };\n\t    /**\n\t\t *  Clear the passed in event id from the timeline\n\t\t *  @param {Number} eventId The id of the event.\n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.clear = function (eventId) {\n\t        if (this._scheduledEvents.hasOwnProperty(eventId)) {\n\t            var item = this._scheduledEvents[eventId.toString()];\n\t            item.timeline.removeEvent(item.event);\n\t            delete this._scheduledEvents[eventId.toString()];\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove scheduled events from the timeline after\n\t\t *  the given time. Repeated events will be removed\n\t\t *  if their startTime is after the given time\n\t\t *  @param {TransportTime} [after=0] Clear all events after\n\t\t *                          this time. \n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.cancel = function (after) {\n\t        after = this.defaultArg(after, 0);\n\t        after = this.toTicks(after);\n\t        this._timeline.cancel(after);\n\t        this._onceEvents.cancel(after);\n\t        this._repeatedEvents.cancel(after);\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tSTART/STOP/PAUSE\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Bind start/stop/pause events from the clock and emit them.\n\t\t */\n\t    Tone.Transport.prototype._bindClockEvents = function () {\n\t        this._clock.on('start', function (time, offset) {\n\t            offset = Tone.Time(this._clock.ticks, 'i').toSeconds();\n\t            this.emit('start', time, offset);\n\t        }.bind(this));\n\t        this._clock.on('stop', function (time) {\n\t            this.emit('stop', time);\n\t        }.bind(this));\n\t        this._clock.on('pause', function (time) {\n\t            this.emit('pause', time);\n\t        }.bind(this));\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'state', {\n\t        get: function () {\n\t            return this._clock.getStateAtTime(this.now());\n\t        }\n\t    });\n\t    /**\n\t\t *  Start the transport and all sources synced to the transport.\n\t\t *  @param  {Time} [time=now] The time when the transport should start.\n\t\t *  @param  {TransportTime=} offset The timeline offset to start the transport.\n\t\t *  @returns {Tone.Transport} this\n\t\t *  @example\n\t\t * //start the transport in one second starting at beginning of the 5th measure. \n\t\t * Tone.Transport.start(\"+1\", \"4:0:0\");\n\t\t */\n\t    Tone.Transport.prototype.start = function (time, offset) {\n\t        //start the clock\n\t        if (!this.isUndef(offset)) {\n\t            offset = this.toTicks(offset);\n\t        }\n\t        this._clock.start(time, offset);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the transport and all sources synced to the transport.\n\t\t *  @param  {Time} [time=now] The time when the transport should stop. \n\t\t *  @returns {Tone.Transport} this\n\t\t *  @example\n\t\t * Tone.Transport.stop();\n\t\t */\n\t    Tone.Transport.prototype.stop = function (time) {\n\t        this._clock.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Pause the transport and all sources synced to the transport.\n\t\t *  @param  {Time} [time=now]\n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.pause = function (time) {\n\t        this._clock.pause(time);\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tSETTERS/GETTERS\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  The time signature as just the numerator over 4. \n\t\t *  For example 4/4 would be just 4 and 6/8 would be 3.\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Number|Array}\n\t\t *  @name timeSignature\n\t\t *  @example\n\t\t * //common time\n\t\t * Tone.Transport.timeSignature = 4;\n\t\t * // 7/8\n\t\t * Tone.Transport.timeSignature = [7, 8];\n\t\t * //this will be reduced to a single number\n\t\t * Tone.Transport.timeSignature; //returns 3.5\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'timeSignature', {\n\t        get: function () {\n\t            return this._timeSignature;\n\t        },\n\t        set: function (timeSig) {\n\t            if (this.isArray(timeSig)) {\n\t                timeSig = timeSig[0] / timeSig[1] * 4;\n\t            }\n\t            this._timeSignature = timeSig;\n\t        }\n\t    });\n\t    /**\n\t\t * When the Tone.Transport.loop = true, this is the starting position of the loop.\n\t\t * @memberOf Tone.Transport#\n\t\t * @type {TransportTime}\n\t\t * @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'loopStart', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopStart, 'i').toSeconds();\n\t        },\n\t        set: function (startPosition) {\n\t            this._loopStart = this.toTicks(startPosition);\n\t        }\n\t    });\n\t    /**\n\t\t * When the Tone.Transport.loop = true, this is the ending position of the loop.\n\t\t * @memberOf Tone.Transport#\n\t\t * @type {TransportTime}\n\t\t * @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopEnd, 'i').toSeconds();\n\t        },\n\t        set: function (endPosition) {\n\t            this._loopEnd = this.toTicks(endPosition);\n\t        }\n\t    });\n\t    /**\n\t\t *  Set the loop start and stop at the same time. \n\t\t *  @param {TransportTime} startPosition \n\t\t *  @param {TransportTime} endPosition   \n\t\t *  @returns {Tone.Transport} this\n\t\t *  @example\n\t\t * //loop over the first measure\n\t\t * Tone.Transport.setLoopPoints(0, \"1m\");\n\t\t * Tone.Transport.loop = true;\n\t\t */\n\t    Tone.Transport.prototype.setLoopPoints = function (startPosition, endPosition) {\n\t        this.loopStart = startPosition;\n\t        this.loopEnd = endPosition;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The swing value. Between 0-1 where 1 equal to \n\t\t *  the note + half the subdivision.\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {NormalRange}\n\t\t *  @name swing\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'swing', {\n\t        get: function () {\n\t            return this._swingAmount;\n\t        },\n\t        set: function (amount) {\n\t            //scale the values to a normal range\n\t            this._swingAmount = amount;\n\t        }\n\t    });\n\t    /**\n\t\t *  Set the subdivision which the swing will be applied to. \n\t\t *  The default values is a 16th note. Value must be less \n\t\t *  than a quarter note.\n\t\t *  \n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Time}\n\t\t *  @name swingSubdivision\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'swingSubdivision', {\n\t        get: function () {\n\t            return Tone.Time(this._swingTicks, 'i').toNotation();\n\t        },\n\t        set: function (subdivision) {\n\t            this._swingTicks = this.toTicks(subdivision);\n\t        }\n\t    });\n\t    /**\n\t\t *  The Transport's position in Bars:Beats:Sixteenths.\n\t\t *  Setting the value will jump to that position right away. \n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {BarsBeatsSixteenths}\n\t\t *  @name position\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'position', {\n\t        get: function () {\n\t            return Tone.TransportTime(this.ticks, 'i').toBarsBeatsSixteenths();\n\t        },\n\t        set: function (progress) {\n\t            var ticks = this.toTicks(progress);\n\t            this.ticks = ticks;\n\t        }\n\t    });\n\t    /**\n\t\t *  The Transport's position in seconds\n\t\t *  Setting the value will jump to that position right away. \n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Seconds}\n\t\t *  @name seconds\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'seconds', {\n\t        get: function () {\n\t            return Tone.TransportTime(this.ticks, 'i').toSeconds();\n\t        },\n\t        set: function (progress) {\n\t            var ticks = this.toTicks(progress);\n\t            this.ticks = ticks;\n\t        }\n\t    });\n\t    /**\n\t\t *  The Transport's loop position as a normalized value. Always\n\t\t *  returns 0 if the transport if loop is not true. \n\t\t *  @memberOf Tone.Transport#\n\t\t *  @name progress\n\t\t *  @type {NormalRange}\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'progress', {\n\t        get: function () {\n\t            if (this.loop) {\n\t                return (this.ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The transports current tick position.\n\t\t *  \n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Ticks}\n\t\t *  @name ticks\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'ticks', {\n\t        get: function () {\n\t            return this._clock.ticks;\n\t        },\n\t        set: function (t) {\n\t            var now = this.now();\n\t            //stop everything synced to the transport\n\t            if (this.state === Tone.State.Started) {\n\t                this.emit('stop', now);\n\t                this._clock.ticks = t;\n\t                //restart it with the new time\n\t                this.emit('start', now, this.seconds);\n\t            } else {\n\t                this._clock.ticks = t;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Pulses Per Quarter note. This is the smallest resolution\n\t\t *  the Transport timing supports. This should be set once\n\t\t *  on initialization and not set again. Changing this value \n\t\t *  after other objects have been created can cause problems. \n\t\t *  \n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Number}\n\t\t *  @name PPQ\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'PPQ', {\n\t        get: function () {\n\t            return this._ppq;\n\t        },\n\t        set: function (ppq) {\n\t            var bpm = this.bpm.value;\n\t            this._ppq = ppq;\n\t            this.bpm.value = bpm;\n\t        }\n\t    });\n\t    /**\n\t\t *  Convert from BPM to frequency (factoring in PPQ)\n\t\t *  @param  {BPM}  bpm The BPM value to convert to frequency\n\t\t *  @return  {Frequency}  The BPM as a frequency with PPQ factored in.\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype._fromUnits = function (bpm) {\n\t        return 1 / (60 / bpm / this.PPQ);\n\t    };\n\t    /**\n\t\t *  Convert from frequency (with PPQ) into BPM\n\t\t *  @param  {Frequency}  freq The clocks frequency to convert to BPM\n\t\t *  @return  {BPM}  The frequency value as BPM.\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype._toUnits = function (freq) {\n\t        return freq / this.PPQ * 60;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tSYNCING\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Returns the time aligned to the next subdivision\n\t\t *  of the Transport. If the Transport is not started,\n\t\t *  it will return 0.\n\t\t *  Note: this will not work precisely during tempo ramps.\n\t\t *  @param  {Time}  subdivision  The subdivision to quantize to\n\t\t *  @return  {Number}  The context time of the next subdivision.\n\t\t *  @example\n\t\t * Tone.Transport.start(); //the transport must be started\n\t\t * Tone.Transport.nextSubdivision(\"4n\");\n\t\t */\n\t    Tone.Transport.prototype.nextSubdivision = function (subdivision) {\n\t        subdivision = this.toSeconds(subdivision);\n\t        //if the transport's not started, return 0\n\t        var now;\n\t        if (this.state === Tone.State.Started) {\n\t            now = this._clock._nextTick;\n\t        } else {\n\t            return 0;\n\t        }\n\t        var transportPos = Tone.Time(this.ticks, 'i').eval();\n\t        var remainingTime = subdivision - transportPos % subdivision;\n\t        if (remainingTime === 0) {\n\t            remainingTime = subdivision;\n\t        }\n\t        return now + remainingTime;\n\t    };\n\t    /**\n\t\t *  Attaches the signal to the tempo control signal so that \n\t\t *  any changes in the tempo will change the signal in the same\n\t\t *  ratio. \n\t\t *  \n\t\t *  @param  {Tone.Signal} signal \n\t\t *  @param {number=} ratio Optionally pass in the ratio between\n\t\t *                         the two signals. Otherwise it will be computed\n\t\t *                         based on their current values. \n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.syncSignal = function (signal, ratio) {\n\t        if (!ratio) {\n\t            //get the sync ratio\n\t            if (signal._param.value !== 0) {\n\t                ratio = signal._param.value / this.bpm._param.value;\n\t            } else {\n\t                ratio = 0;\n\t            }\n\t        }\n\t        var ratioSignal = new Tone.Gain(ratio);\n\t        this.bpm.chain(ratioSignal, signal._param);\n\t        this._syncedSignals.push({\n\t            'ratio': ratioSignal,\n\t            'signal': signal,\n\t            'initial': signal._param.value\n\t        });\n\t        signal._param.value = 0;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Unsyncs a previously synced signal from the transport's control. \n\t\t *  See Tone.Transport.syncSignal.\n\t\t *  @param  {Tone.Signal} signal \n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.unsyncSignal = function (signal) {\n\t        for (var i = this._syncedSignals.length - 1; i >= 0; i--) {\n\t            var syncedSignal = this._syncedSignals[i];\n\t            if (syncedSignal.signal === signal) {\n\t                syncedSignal.ratio.dispose();\n\t                syncedSignal.signal._param.value = syncedSignal.initial;\n\t                this._syncedSignals.splice(i, 1);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Transport} this\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype.dispose = function () {\n\t        Tone.Emitter.prototype.dispose.call(this);\n\t        this._clock.dispose();\n\t        this._clock = null;\n\t        this._writable('bpm');\n\t        this.bpm = null;\n\t        this._timeline.dispose();\n\t        this._timeline = null;\n\t        this._onceEvents.dispose();\n\t        this._onceEvents = null;\n\t        this._repeatedEvents.dispose();\n\t        this._repeatedEvents = null;\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tINITIALIZATION\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    var TransportConstructor = Tone.Transport;\n\t    Tone._initAudioContext(function () {\n\t        if (typeof Tone.Transport === 'function') {\n\t            //a single transport object\n\t            Tone.Transport = new Tone.Transport();\n\t        } else {\n\t            //stop the clock\n\t            Tone.Transport.stop();\n\t            //get the previous values\n\t            var prevSettings = Tone.Transport.get();\n\t            //destory the old transport\n\t            Tone.Transport.dispose();\n\t            //make new Transport insides\n\t            TransportConstructor.call(Tone.Transport);\n\t            //set the previous config\n\t            Tone.Transport.set(prevSettings);\n\t        }\n\t    });\n\t    return Tone.Transport;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Volume is a simple volume node, useful for creating a volume fader. \n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {Decibels} [volume=0] the initial volume\n\t\t *  @example\n\t\t * var vol = new Tone.Volume(-12);\n\t\t * instrument.chain(vol, Tone.Master);\n\t\t */\n\t    Tone.Volume = function () {\n\t        var options = this.optionsObject(arguments, ['volume'], Tone.Volume.defaults);\n\t        /**\n\t\t\t * the output node\n\t\t\t * @type {GainNode}\n\t\t\t * @private\n\t\t\t */\n\t        this.output = this.input = new Tone.Gain(options.volume, Tone.Type.Decibels);\n\t        /**\n\t\t\t * The unmuted volume\n\t\t\t * @type {Decibels}\n\t\t\t * @private\n\t\t\t */\n\t        this._unmutedVolume = 0;\n\t        /**\n\t\t\t *  if the volume is muted\n\t\t\t *  @type {Boolean}\n\t\t\t *  @private\n\t\t\t */\n\t        this._muted = false;\n\t        /**\n\t\t\t *  The volume control in decibels. \n\t\t\t *  @type {Decibels}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.volume = this.output.gain;\n\t        this._readOnly('volume');\n\t        //set the mute initially\n\t        this.mute = options.mute;\n\t    };\n\t    Tone.extend(Tone.Volume);\n\t    /**\n\t\t *  Defaults\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t *  @static\n\t\t */\n\t    Tone.Volume.defaults = {\n\t        'volume': 0,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t * Mute the output. \n\t\t * @memberOf Tone.Volume#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * volume.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.Volume.prototype, 'mute', {\n\t        get: function () {\n\t            return this._muted;\n\t        },\n\t        set: function (mute) {\n\t            if (!this._muted && mute) {\n\t                this._unmutedVolume = this.volume.value;\n\t                //maybe it should ramp here?\n\t                this.volume.value = -Infinity;\n\t            } else if (this._muted && !mute) {\n\t                this.volume.value = this._unmutedVolume;\n\t            }\n\t            this._muted = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Volume} this\n\t\t */\n\t    Tone.Volume.prototype.dispose = function () {\n\t        this.input.dispose();\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable('volume');\n\t        this.volume.dispose();\n\t        this.volume = null;\n\t        return this;\n\t    };\n\t    return Tone.Volume;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A single master output which is connected to the\n\t\t *          AudioDestinationNode (aka your speakers). \n\t\t *          It provides useful conveniences such as the ability \n\t\t *          to set the volume and mute the entire application. \n\t\t *          It also gives you the ability to apply master effects to your application. \n\t\t *          <br><br>\n\t\t *          Like Tone.Transport, A single Tone.Master is created\n\t\t *          on initialization and you do not need to explicitly construct one.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @singleton\n\t\t *  @example\n\t\t * //the audio will go from the oscillator to the speakers\n\t\t * oscillator.connect(Tone.Master);\n\t\t * //a convenience for connecting to the master output is also provided:\n\t\t * oscillator.toMaster();\n\t\t * //the above two examples are equivalent.\n\t\t */\n\t    Tone.Master = function () {\n\t        this.createInsOuts(1, 1);\n\t        /**\n\t\t\t *  The private volume node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume();\n\t        /**\n\t\t\t * The volume of the master output.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        this._readOnly('volume');\n\t        //connections\n\t        this.input.chain(this.output, this.context.destination);\n\t    };\n\t    Tone.extend(Tone.Master);\n\t    /**\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Master.defaults = {\n\t        'volume': 0,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t * Mute the output. \n\t\t * @memberOf Tone.Master#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * Tone.Master.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.Master.prototype, 'mute', {\n\t        get: function () {\n\t            return this._volume.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._volume.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  Add a master effects chain. NOTE: this will disconnect any nodes which were previously \n\t\t *  chained in the master effects chain. \n\t\t *  @param {AudioNode|Tone...} args All arguments will be connected in a row\n\t\t *                                  and the Master will be routed through it.\n\t\t *  @return  {Tone.Master}  this\n\t\t *  @example\n\t\t * //some overall compression to keep the levels in check\n\t\t * var masterCompressor = new Tone.Compressor({\n\t\t * \t\"threshold\" : -6,\n\t\t * \t\"ratio\" : 3,\n\t\t * \t\"attack\" : 0.5,\n\t\t * \t\"release\" : 0.1\n\t\t * });\n\t\t * //give a little boost to the lows\n\t\t * var lowBump = new Tone.Filter(200, \"lowshelf\");\n\t\t * //route everything through the filter \n\t\t * //and compressor before going to the speakers\n\t\t * Tone.Master.chain(lowBump, masterCompressor);\n\t\t */\n\t    Tone.Master.prototype.chain = function () {\n\t        this.input.disconnect();\n\t        this.input.chain.apply(this.input, arguments);\n\t        arguments[arguments.length - 1].connect(this.output);\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Master}  this\n\t\t */\n\t    Tone.Master.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable('volume');\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this.volume = null;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tAUGMENT TONE's PROTOTYPE\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Connect 'this' to the master output. Shorthand for this.connect(Tone.Master)\n\t\t *  @returns {Tone} this\n\t\t *  @example\n\t\t * //connect an oscillator to the master output\n\t\t * var osc = new Tone.Oscillator().toMaster();\n\t\t */\n\t    Tone.prototype.toMaster = function () {\n\t        this.connect(Tone.Master);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Also augment AudioNode's prototype to include toMaster\n\t\t *  as a convenience\n\t\t *  @returns {AudioNode} this\n\t\t */\n\t    AudioNode.prototype.toMaster = function () {\n\t        this.connect(Tone.Master);\n\t        return this;\n\t    };\n\t    var MasterConstructor = Tone.Master;\n\t    /**\n\t\t *  initialize the module and listen for new audio contexts\n\t\t */\n\t    Tone._initAudioContext(function () {\n\t        //a single master output\n\t        if (!Tone.prototype.isUndef(Tone.Master)) {\n\t            Tone.Master = new MasterConstructor();\n\t        } else {\n\t            MasterConstructor.prototype.dispose.call(Tone.Master);\n\t            MasterConstructor.call(Tone.Master);\n\t        }\n\t    });\n\t    return Tone.Master;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Base class for sources. Sources have start/stop methods\n\t\t *          and the ability to be synced to the \n\t\t *          start/stop of Tone.Transport. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * //Multiple state change events can be chained together,\n\t\t * //but must be set in the correct order and with ascending times\n\t\t * \n\t\t * // OK\n\t\t * state.start().stop(\"+0.2\");\n\t\t * // AND\n\t\t * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n\t\t *\n\t\t * // BAD\n\t\t * state.stop(\"+0.2\").start();\n\t\t * // OR\n\t\t * state.start(\"+0.3\").stop(\"+0.2\");\n\t\t * \n\t\t */\n\t    Tone.Source = function (options) {\n\t        // this.createInsOuts(0, 1);\n\t        options = this.defaultArg(options, Tone.Source.defaults);\n\t        /**\n\t\t\t *  The output volume node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t * The volume of the output in decibels.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t * @example\n\t\t\t * source.volume.value = -6;\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        this._readOnly('volume');\n\t        /**\n\t\t\t * \tKeep track of the scheduled state.\n\t\t\t *  @type {Tone.TimelineState}\n\t\t\t *  @private\n\t\t\t */\n\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t        this._state.memory = 10;\n\t        /**\n\t\t\t *  The synced `start` callback function from the transport\n\t\t\t *  @type {Function}\n\t\t\t *  @private\n\t\t\t */\n\t        this._synced = false;\n\t        /**\n\t\t\t *  Keep track of all of the scheduled event ids\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scheduled = [];\n\t        //make the output explicitly stereo\n\t        this._volume.output.output.channelCount = 2;\n\t        this._volume.output.output.channelCountMode = 'explicit';\n\t        //mute initially\n\t        this.mute = options.mute;\n\t    };\n\t    Tone.extend(Tone.Source);\n\t    /**\n\t\t *  The default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Source.defaults = {\n\t        'volume': 0,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Source#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.Source.prototype, 'state', {\n\t        get: function () {\n\t            if (this._synced) {\n\t                if (Tone.Transport.state === Tone.State.Started) {\n\t                    return this._state.getStateAtTime(Tone.Transport.seconds);\n\t                } else {\n\t                    return Tone.State.Stopped;\n\t                }\n\t            } else {\n\t                return this._state.getStateAtTime(this.now());\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * Mute the output. \n\t\t * @memberOf Tone.Source#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * source.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.Source.prototype, 'mute', {\n\t        get: function () {\n\t            return this._volume.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._volume.mute = mute;\n\t        }\n\t    });\n\t    //overwrite these functions\n\t    Tone.Source.prototype._start = Tone.noOp;\n\t    Tone.Source.prototype._stop = Tone.noOp;\n\t    /**\n\t\t *  Start the source at the specified time. If no time is given, \n\t\t *  start the source now.\n\t\t *  @param  {Time} [time=now] When the source should be started.\n\t\t *  @returns {Tone.Source} this\n\t\t *  @example\n\t\t * source.start(\"+0.5\"); //starts the source 0.5 seconds from now\n\t\t */\n\t    Tone.Source.prototype.start = function (time, offset, duration) {\n\t        if (this.isUndef(time) && this._synced) {\n\t            time = Tone.Transport.seconds;\n\t        } else {\n\t            time = this.toSeconds(time);\n\t        }\n\t        //if it's started, stop it and restart it\n\t        if (this._state.getStateAtTime(time) === Tone.State.Started) {\n\t            this.stop(time);\n\t        }\n\t        this._state.setStateAtTime(Tone.State.Started, time);\n\t        if (this._synced) {\n\t            // add the offset time to the event\n\t            var event = this._state.getEvent(time);\n\t            event.offset = this.defaultArg(offset, 0);\n\t            event.duration = duration;\n\t            var sched = Tone.Transport.schedule(function (t) {\n\t                this._start(t, offset, duration);\n\t            }.bind(this), time);\n\t            this._scheduled.push(sched);\n\t        } else {\n\t            this._start.apply(this, arguments);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the source at the specified time. If no time is given, \n\t\t *  stop the source now.\n\t\t *  @param  {Time} [time=now] When the source should be stopped. \n\t\t *  @returns {Tone.Source} this\n\t\t *  @example\n\t\t * source.stop(); // stops the source immediately\n\t\t */\n\t    Tone.Source.prototype.stop = function (time) {\n\t        if (this.isUndef(time) && this._synced) {\n\t            time = Tone.Transport.seconds;\n\t        } else {\n\t            time = this.toSeconds(time);\n\t        }\n\t        this._state.cancel(time);\n\t        this._state.setStateAtTime(Tone.State.Stopped, time);\n\t        if (!this._synced) {\n\t            this._stop.apply(this, arguments);\n\t        } else {\n\t            var sched = Tone.Transport.schedule(this._stop.bind(this), time);\n\t            this._scheduled.push(sched);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sync the source to the Transport so that all subsequent\n\t\t *  calls to `start` and `stop` are synced to the TransportTime\n\t\t *  instead of the AudioContext time. \n\t\t *\n\t\t *  @returns {Tone.Source} this\n\t\t *  @example\n\t\t * //sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n\t\t * source.sync().start(0).stop(0.3);\n\t\t * //start the transport.\n\t\t * Tone.Transport.start();\n\t\t *\n\t\t *  @example\n\t\t * //start the transport with an offset and the sync'ed sources\n\t\t * //will start in the correct position\n\t\t * source.sync().start(0.1);\n\t\t * //the source will be invoked with an offset of 0.4\n\t\t * Tone.Transport.start(\"+0.5\", 0.5);\n\t\t */\n\t    Tone.Source.prototype.sync = function () {\n\t        this._synced = true;\n\t        Tone.Transport.on('start', function (time, offset) {\n\t            if (offset > 0) {\n\t                // get the playback state at that time\n\t                var stateEvent = this._state.getEvent(offset);\n\t                // listen for start events which may occur in the middle of the sync'ed time\n\t                if (stateEvent && stateEvent.state === Tone.State.Started && stateEvent.time !== offset) {\n\t                    // get the offset\n\t                    var startOffset = offset - this.toSeconds(stateEvent.time);\n\t                    var duration;\n\t                    if (stateEvent.duration) {\n\t                        duration = this.toSeconds(stateEvent.duration) - startOffset;\n\t                    }\n\t                    this._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n\t                }\n\t            }\n\t        }.bind(this));\n\t        Tone.Transport.on('stop pause', function (time) {\n\t            if (this._state.getStateAtTime(Tone.Transport.seconds) === Tone.State.Started) {\n\t                this._stop(time);\n\t            }\n\t        }.bind(this));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Unsync the source to the Transport. See Tone.Source.sync\n\t\t *  @returns {Tone.Source} this\n\t\t */\n\t    Tone.Source.prototype.unsync = function () {\n\t        this._synced = false;\n\t        Tone.Transport.off('start stop pause');\n\t        // clear all of the scheduled ids\n\t        for (var i = 0; i < this._scheduled.length; i++) {\n\t            var id = this._scheduled[i];\n\t            Tone.Transport.clear(id);\n\t        }\n\t        this._scheduled = [];\n\t        this._state.cancel(0);\n\t        return this;\n\t    };\n\t    /**\n\t\t *\tClean up.\n\t\t *  @return {Tone.Source} this\n\t\t */\n\t    Tone.Source.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this.unsync();\n\t        this._scheduled = null;\n\t        this._writable('volume');\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this.volume = null;\n\t        this._state.dispose();\n\t        this._state = null;\n\t    };\n\t    return Tone.Source;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Oscillator supports a number of features including\n\t\t *         phase rotation, multiple oscillator types (see Tone.Oscillator.type), \n\t\t *         and Transport syncing (see Tone.Oscillator.syncFrequency).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Source}\n\t\t *  @param {Frequency} [frequency] Starting frequency\n\t\t *  @param {string} [type] The oscillator type. Read more about type below.\n\t\t *  @example\n\t\t * //make and start a 440hz sine tone\n\t\t * var osc = new Tone.Oscillator(440, \"sine\").toMaster().start();\n\t\t */\n\t    Tone.Oscillator = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'type'\n\t        ], Tone.Oscillator.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  the main oscillator\n\t\t\t *  @type {OscillatorNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillator = null;\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune control signal.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  the periodic wave\n\t\t\t *  @type {PeriodicWave}\n\t\t\t *  @private\n\t\t\t */\n\t        this._wave = null;\n\t        /**\n\t\t\t *  The partials of the oscillator\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._partials = this.defaultArg(options.partials, [1]);\n\t        /**\n\t\t\t *  the phase of the oscillator\n\t\t\t *  between 0 - 360\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._phase = options.phase;\n\t        /**\n\t\t\t *  the type of the oscillator\n\t\t\t *  @type {string}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = null;\n\t        //setup\n\t        this.type = options.type;\n\t        this.phase = this._phase;\n\t        this._readOnly([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Oscillator, Tone.Source);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Oscillator.defaults = {\n\t        'type': 'sine',\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'partials': []\n\t    };\n\t    /**\n\t\t *  The Oscillator types\n\t\t *  @enum {String}\n\t\t */\n\t    Tone.Oscillator.Type = {\n\t        Sine: 'sine',\n\t        Triangle: 'triangle',\n\t        Sawtooth: 'sawtooth',\n\t        Square: 'square',\n\t        Custom: 'custom'\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now] \n\t\t *  @private\n\t\t */\n\t    Tone.Oscillator.prototype._start = function (time) {\n\t        //new oscillator with previous values\n\t        this._oscillator = this.context.createOscillator();\n\t        this._oscillator.setPeriodicWave(this._wave);\n\t        //connect the control signal to the oscillator frequency & detune\n\t        this._oscillator.connect(this.output);\n\t        this.frequency.connect(this._oscillator.frequency);\n\t        this.detune.connect(this._oscillator.detune);\n\t        //start the oscillator\n\t        this._oscillator.start(this.toSeconds(time));\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @private\n\t\t *  @param  {Time} [time=now] (optional) timing parameter\n\t\t *  @returns {Tone.Oscillator} this\n\t\t */\n\t    Tone.Oscillator.prototype._stop = function (time) {\n\t        if (this._oscillator) {\n\t            this._oscillator.stop(this.toSeconds(time));\n\t            this._oscillator = null;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n\t\t *  will also affect the oscillators frequency. \n\t\t *  @returns {Tone.Oscillator} this\n\t\t *  @example\n\t\t * Tone.Transport.bpm.value = 120;\n\t\t * osc.frequency.value = 440;\n\t\t * //the ration between the bpm and the frequency will be maintained\n\t\t * osc.syncFrequency();\n\t\t * Tone.Transport.bpm.value = 240; \n\t\t * // the frequency of the oscillator is doubled to 880\n\t\t */\n\t    Tone.Oscillator.prototype.syncFrequency = function () {\n\t        Tone.Transport.syncSignal(this.frequency);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Unsync the oscillator's frequency from the Transport. \n\t\t *  See Tone.Oscillator.syncFrequency\n\t\t *  @returns {Tone.Oscillator} this\n\t\t */\n\t    Tone.Oscillator.prototype.unsyncFrequency = function () {\n\t        Tone.Transport.unsyncSignal(this.frequency);\n\t        return this;\n\t    };\n\t    /**\n\t\t * The type of the oscillator: either sine, square, triangle, or sawtooth. Also capable of\n\t\t * setting the first x number of partials of the oscillator. For example: \"sine4\" would\n\t\t * set be the first 4 partials of the sine wave and \"triangle8\" would set the first\n\t\t * 8 partials of the triangle wave.\n\t\t * <br><br> \n\t\t * Uses PeriodicWave internally even for native types so that it can set the phase. \n\t\t * PeriodicWave equations are from the \n\t\t * [Webkit Web Audio implementation](https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/modules/webaudio/PeriodicWave.cpp&sq=package:chromium).\n\t\t *  \n\t\t * @memberOf Tone.Oscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t * @example\n\t\t * //set it to a square wave\n\t\t * osc.type = \"square\";\n\t\t * @example\n\t\t * //set the first 6 partials of a sawtooth wave\n\t\t * osc.type = \"sawtooth6\";\n\t\t */\n\t    Object.defineProperty(Tone.Oscillator.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            var coefs = this._getRealImaginary(type, this._phase);\n\t            var periodicWave = this.context.createPeriodicWave(coefs[0], coefs[1]);\n\t            this._wave = periodicWave;\n\t            if (this._oscillator !== null) {\n\t                this._oscillator.setPeriodicWave(this._wave);\n\t            }\n\t            this._type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  Returns the real and imaginary components based \n\t\t *  on the oscillator type.\n\t\t *  @returns {Array} [real, imaginary]\n\t\t *  @private\n\t\t */\n\t    Tone.Oscillator.prototype._getRealImaginary = function (type, phase) {\n\t        var fftSize = 4096;\n\t        var periodicWaveSize = fftSize / 2;\n\t        var real = new Float32Array(periodicWaveSize);\n\t        var imag = new Float32Array(periodicWaveSize);\n\t        var partialCount = 1;\n\t        if (type === Tone.Oscillator.Type.Custom) {\n\t            partialCount = this._partials.length + 1;\n\t            periodicWaveSize = partialCount;\n\t        } else {\n\t            var partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n\t            if (partial) {\n\t                partialCount = parseInt(partial[2]) + 1;\n\t                type = partial[1];\n\t                partialCount = Math.max(partialCount, 2);\n\t                periodicWaveSize = partialCount;\n\t            }\n\t        }\n\t        for (var n = 1; n < periodicWaveSize; ++n) {\n\t            var piFactor = 2 / (n * Math.PI);\n\t            var b;\n\t            switch (type) {\n\t            case Tone.Oscillator.Type.Sine:\n\t                b = n <= partialCount ? 1 : 0;\n\t                break;\n\t            case Tone.Oscillator.Type.Square:\n\t                b = n & 1 ? 2 * piFactor : 0;\n\t                break;\n\t            case Tone.Oscillator.Type.Sawtooth:\n\t                b = piFactor * (n & 1 ? 1 : -1);\n\t                break;\n\t            case Tone.Oscillator.Type.Triangle:\n\t                if (n & 1) {\n\t                    b = 2 * (piFactor * piFactor) * (n - 1 >> 1 & 1 ? -1 : 1);\n\t                } else {\n\t                    b = 0;\n\t                }\n\t                break;\n\t            case Tone.Oscillator.Type.Custom:\n\t                b = this._partials[n - 1];\n\t                break;\n\t            default:\n\t                throw new TypeError('Tone.Oscillator: invalid type: ' + type);\n\t            }\n\t            if (b !== 0) {\n\t                real[n] = -b * Math.sin(phase * n);\n\t                imag[n] = b * Math.cos(phase * n);\n\t            } else {\n\t                real[n] = 0;\n\t                imag[n] = 0;\n\t            }\n\t        }\n\t        return [\n\t            real,\n\t            imag\n\t        ];\n\t    };\n\t    /**\n\t\t *  Compute the inverse FFT for a given phase.\t\n\t\t *  @param  {Float32Array}  real\n\t\t *  @param  {Float32Array}  imag \n\t\t *  @param  {NormalRange}  phase \n\t\t *  @return  {AudioRange}\n\t\t *  @private\n\t\t */\n\t    Tone.Oscillator.prototype._inverseFFT = function (real, imag, phase) {\n\t        var sum = 0;\n\t        var len = real.length;\n\t        for (var i = 0; i < len; i++) {\n\t            sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n\t        }\n\t        return sum;\n\t    };\n\t    /**\n\t\t *  Returns the initial value of the oscillator.\n\t\t *  @return  {AudioRange}\n\t\t *  @private\n\t\t */\n\t    Tone.Oscillator.prototype._getInitialValue = function () {\n\t        var coefs = this._getRealImaginary(this._type, 0);\n\t        var real = coefs[0];\n\t        var imag = coefs[1];\n\t        var maxValue = 0;\n\t        var twoPi = Math.PI * 2;\n\t        //check for peaks in 8 places\n\t        for (var i = 0; i < 8; i++) {\n\t            maxValue = Math.max(this._inverseFFT(real, imag, i / 8 * twoPi), maxValue);\n\t        }\n\t        return -this._inverseFFT(real, imag, this._phase) / maxValue;\n\t    };\n\t    /**\n\t\t * The partials of the waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * @memberOf Tone.Oscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.Oscillator.prototype, 'partials', {\n\t        get: function () {\n\t            if (this._type !== Tone.Oscillator.Type.Custom) {\n\t                return [];\n\t            } else {\n\t                return this._partials;\n\t            }\n\t        },\n\t        set: function (partials) {\n\t            this._partials = partials;\n\t            this.type = Tone.Oscillator.Type.Custom;\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees. \n\t\t * @memberOf Tone.Oscillator#\n\t\t * @type {Degrees}\n\t\t * @name phase\n\t\t * @example\n\t\t * osc.phase = 180; //flips the phase of the oscillator\n\t\t */\n\t    Object.defineProperty(Tone.Oscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._phase * (180 / Math.PI);\n\t        },\n\t        set: function (phase) {\n\t            this._phase = phase * Math.PI / 180;\n\t            //reset the type\n\t            this.type = this._type;\n\t        }\n\t    });\n\t    /**\n\t\t *  Dispose and disconnect.\n\t\t *  @return {Tone.Oscillator} this\n\t\t */\n\t    Tone.Oscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        if (this._oscillator !== null) {\n\t            this._oscillator.disconnect();\n\t            this._oscillator = null;\n\t        }\n\t        this._wave = null;\n\t        this._writable([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this._partials = null;\n\t        return this;\n\t    };\n\t    return Tone.Oscillator;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Zero outputs 0's at audio-rate. The reason this has to be\n\t\t *         it's own class is that many browsers optimize out Tone.Signal\n\t\t *         with a value of 0 and will not process nodes further down the graph. \n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.Zero = function () {\n\t        /**\n\t\t\t *  The gain node\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gain = this.input = this.output = new Tone.Gain();\n\t        Tone.Zero._zeros.connect(this._gain);\n\t    };\n\t    Tone.extend(Tone.Zero);\n\t    /**\n\t\t *  clean up\n\t\t *  @return  {Tone.Zero}  this\n\t\t */\n\t    Tone.Zero.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._gain.dispose();\n\t        this._gain = null;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Generates a constant output of 0. This is so \n\t\t *  the processing graph doesn't optimize out this\n\t\t *  segment of the graph. \n\t\t *  @static\n\t\t *  @private\n\t\t *  @const\n\t\t *  @type {AudioBufferSourceNode}\n\t\t */\n\t    Tone.Zero._zeros = null;\n\t    /**\n\t\t *  initializer function\n\t\t */\n\t    Tone._initAudioContext(function (audioContext) {\n\t        var buffer = audioContext.createBuffer(1, 128, audioContext.sampleRate);\n\t        var arr = buffer.getChannelData(0);\n\t        for (var i = 0; i < arr.length; i++) {\n\t            arr[i] = 0;\n\t        }\n\t        Tone.Zero._zeros = audioContext.createBufferSource();\n\t        Tone.Zero._zeros.channelCount = 1;\n\t        Tone.Zero._zeros.channelCountMode = 'explicit';\n\t        Tone.Zero._zeros.buffer = buffer;\n\t        Tone.Zero._zeros.loop = true;\n\t        Tone.Zero._zeros.start(0);\n\t        Tone.Zero._zeros.noGC();\n\t    });\n\t    return Tone.Zero;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  LFO stands for low frequency oscillator. Tone.LFO produces an output signal \n\t\t *          which can be attached to an AudioParam or Tone.Signal \n\t\t *          in order to modulate that parameter with an oscillator. The LFO can \n\t\t *          also be synced to the transport to start/stop and change when the tempo changes.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @param {Frequency|Object} [frequency] The frequency of the oscillation. Typically, LFOs will be\n\t\t *                               in the frequency range of 0.1 to 10 hertz. \n\t\t *  @param {number=} min The minimum output value of the LFO. \n\t\t *  @param {number=} max The maximum value of the LFO. \n\t\t *  @example\n\t\t * var lfo = new Tone.LFO(\"4n\", 400, 4000);\n\t\t * lfo.connect(filter.frequency);\n\t\t */\n\t    Tone.LFO = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'min',\n\t            'max'\n\t        ], Tone.LFO.defaults);\n\t        /** \n\t\t\t *  The oscillator. \n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillator = new Tone.Oscillator({\n\t            'frequency': options.frequency,\n\t            'type': options.type\n\t        });\n\t        /**\n\t\t\t *  the lfo's frequency\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._oscillator.frequency;\n\t        /**\n\t\t\t * The amplitude of the LFO, which controls the output range between\n\t\t\t * the min and max output. For example if the min is -10 and the max \n\t\t\t * is 10, setting the amplitude to 0.5 would make the LFO modulate\n\t\t\t * between -5 and 5. \n\t\t\t * @type {Number}\n\t\t\t * @signal\n\t\t\t */\n\t        this.amplitude = this._oscillator.volume;\n\t        this.amplitude.units = Tone.Type.NormalRange;\n\t        this.amplitude.value = options.amplitude;\n\t        /**\n\t\t\t *  The signal which is output when the LFO is stopped\n\t\t\t *  @type  {Tone.Signal}\n\t\t\t *  @private\n\t\t\t */\n\t        this._stoppedSignal = new Tone.Signal(0, Tone.Type.AudioRange);\n\t        /**\n\t\t\t *  Just outputs zeros.\n\t\t\t *  @type {Tone.Zero}\n\t\t\t *  @private\n\t\t\t */\n\t        this._zeros = new Tone.Zero();\n\t        /**\n\t\t\t *  The value that the LFO outputs when it's stopped\n\t\t\t *  @type {AudioRange}\n\t\t\t *  @private\n\t\t\t */\n\t        this._stoppedValue = 0;\n\t        /**\n\t\t\t *  @type {Tone.AudioToGain} \n\t\t\t *  @private\n\t\t\t */\n\t        this._a2g = new Tone.AudioToGain();\n\t        /**\n\t\t\t *  @type {Tone.Scale} \n\t\t\t *  @private\n\t\t\t */\n\t        this._scaler = this.output = new Tone.Scale(options.min, options.max);\n\t        /**\n\t\t\t *  the units of the LFO (used for converting)\n\t\t\t *  @type {Tone.Type} \n\t\t\t *  @private\n\t\t\t */\n\t        this._units = Tone.Type.Default;\n\t        this.units = options.units;\n\t        //connect it up\n\t        this._oscillator.chain(this._a2g, this._scaler);\n\t        this._zeros.connect(this._a2g);\n\t        this._stoppedSignal.connect(this._a2g);\n\t        this._readOnly([\n\t            'amplitude',\n\t            'frequency'\n\t        ]);\n\t        this.phase = options.phase;\n\t    };\n\t    Tone.extend(Tone.LFO, Tone.Oscillator);\n\t    /**\n\t\t *  the default parameters\n\t\t *\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.LFO.defaults = {\n\t        'type': 'sine',\n\t        'min': 0,\n\t        'max': 1,\n\t        'phase': 0,\n\t        'frequency': '4n',\n\t        'amplitude': 1,\n\t        'units': Tone.Type.Default\n\t    };\n\t    /**\n\t\t *  Start the LFO. \n\t\t *  @param  {Time} [time=now] the time the LFO will start\n\t\t *  @returns {Tone.LFO} this\n\t\t */\n\t    Tone.LFO.prototype.start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._stoppedSignal.setValueAtTime(0, time);\n\t        this._oscillator.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the LFO. \n\t\t *  @param  {Time} [time=now] the time the LFO will stop\n\t\t *  @returns {Tone.LFO} this\n\t\t */\n\t    Tone.LFO.prototype.stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n\t        this._oscillator.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sync the start/stop/pause to the transport \n\t\t *  and the frequency to the bpm of the transport\n\t\t *  @returns {Tone.LFO} this\n\t\t *  @example\n\t\t *  lfo.frequency.value = \"8n\";\n\t\t *  lfo.sync().start(0)\n\t\t *  //the rate of the LFO will always be an eighth note, \n\t\t *  //even as the tempo changes\n\t\t */\n\t    Tone.LFO.prototype.sync = function () {\n\t        this._oscillator.sync();\n\t        this._oscillator.syncFrequency();\n\t        return this;\n\t    };\n\t    /**\n\t\t *  unsync the LFO from transport control\n\t\t *  @returns {Tone.LFO} this\n\t\t */\n\t    Tone.LFO.prototype.unsync = function () {\n\t        this._oscillator.unsync();\n\t        this._oscillator.unsyncFrequency();\n\t        return this;\n\t    };\n\t    /**\n\t\t * The miniumum output of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'min', {\n\t        get: function () {\n\t            return this._toUnits(this._scaler.min);\n\t        },\n\t        set: function (min) {\n\t            min = this._fromUnits(min);\n\t            this._scaler.min = min;\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum output of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'max', {\n\t        get: function () {\n\t            return this._toUnits(this._scaler.max);\n\t        },\n\t        set: function (max) {\n\t            max = this._fromUnits(max);\n\t            this._scaler.max = max;\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the oscillator: sine, square, sawtooth, triangle. \n\t\t * @memberOf Tone.LFO#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'type', {\n\t        get: function () {\n\t            return this._oscillator.type;\n\t        },\n\t        set: function (type) {\n\t            this._oscillator.type = type;\n\t            this._stoppedValue = this._oscillator._getInitialValue();\n\t            this._stoppedSignal.value = this._stoppedValue;\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'phase', {\n\t        get: function () {\n\t            return this._oscillator.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._oscillator.phase = phase;\n\t            this._stoppedValue = this._oscillator._getInitialValue();\n\t            this._stoppedSignal.value = this._stoppedValue;\n\t        }\n\t    });\n\t    /**\n\t\t * The output units of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {Tone.Type}\n\t\t * @name units\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'units', {\n\t        get: function () {\n\t            return this._units;\n\t        },\n\t        set: function (val) {\n\t            var currentMin = this.min;\n\t            var currentMax = this.max;\n\t            //convert the min and the max\n\t            this._units = val;\n\t            this.min = currentMin;\n\t            this.max = currentMax;\n\t        }\n\t    });\n\t    /**\n\t\t * Mute the output. \n\t\t * @memberOf Tone.LFO#\n\t\t * @type {Boolean}\n\t\t * @name mute\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'mute', {\n\t        get: function () {\n\t            return this._oscillator.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._oscillator.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.LFO#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'state', {\n\t        get: function () {\n\t            return this._oscillator.state;\n\t        }\n\t    });\n\t    /**\n\t\t *  Connect the output of the LFO to an AudioParam, AudioNode, or Tone Node. \n\t\t *  Tone.LFO will automatically convert to the destination units of the \n\t\t *  will get the units from the connected node.\n\t\t *  @param  {Tone | AudioParam | AudioNode} node \n\t\t *  @param {number} [outputNum=0] optionally which output to connect from\n\t\t *  @param {number} [inputNum=0] optionally which input to connect to\n\t\t *  @returns {Tone.LFO} this\n\t\t *  @private\n\t\t */\n\t    Tone.LFO.prototype.connect = function (node) {\n\t        if (node.constructor === Tone.Signal || node.constructor === Tone.Param || node.constructor === Tone.TimelineSignal) {\n\t            this.convert = node.convert;\n\t            this.units = node.units;\n\t        }\n\t        Tone.Signal.prototype.connect.apply(this, arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  private method borrowed from Param converts \n\t\t *  units from their destination value\n\t\t *  @function\n\t\t *  @private\n\t\t */\n\t    Tone.LFO.prototype._fromUnits = Tone.Param.prototype._fromUnits;\n\t    /**\n\t\t *  private method borrowed from Param converts \n\t\t *  units to their destination value\n\t\t *  @function\n\t\t *  @private\n\t\t */\n\t    Tone.LFO.prototype._toUnits = Tone.Param.prototype._toUnits;\n\t    /**\n\t\t *  disconnect and dispose\n\t\t *  @returns {Tone.LFO} this\n\t\t */\n\t    Tone.LFO.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'amplitude',\n\t            'frequency'\n\t        ]);\n\t        this._oscillator.dispose();\n\t        this._oscillator = null;\n\t        this._stoppedSignal.dispose();\n\t        this._stoppedSignal = null;\n\t        this._zeros.dispose();\n\t        this._zeros = null;\n\t        this._scaler.dispose();\n\t        this._scaler = null;\n\t        this._a2g.dispose();\n\t        this._a2g = null;\n\t        this.frequency = null;\n\t        this.amplitude = null;\n\t        return this;\n\t    };\n\t    return Tone.LFO;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Limiter will limit the loudness of an incoming signal. \n\t\t *         It is composed of a Tone.Compressor with a fast attack \n\t\t *         and release. Limiters are commonly used to safeguard against \n\t\t *         signal clipping. Unlike a compressor, limiters do not provide \n\t\t *         smooth gain reduction and almost completely prevent \n\t\t *         additional gain above the threshold.\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {number} threshold The theshold above which the limiting is applied. \n\t\t *  @example\n\t\t *  var limiter = new Tone.Limiter(-6);\n\t\t */\n\t    Tone.Limiter = function () {\n\t        var options = this.optionsObject(arguments, ['threshold'], Tone.Limiter.defaults);\n\t        /**\n\t\t\t *  the compressor\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t        this._compressor = this.input = this.output = new Tone.Compressor({\n\t            'attack': 0.001,\n\t            'decay': 0.001,\n\t            'threshold': options.threshold\n\t        });\n\t        /**\n\t\t\t * The threshold of of the limiter\n\t\t\t * @type {Decibel}\n\t\t\t * @signal\n\t\t\t */\n\t        this.threshold = this._compressor.threshold;\n\t        this._readOnly('threshold');\n\t    };\n\t    Tone.extend(Tone.Limiter);\n\t    /**\n\t\t *  The default value\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t *  @static\n\t\t */\n\t    Tone.Limiter.defaults = { 'threshold': -12 };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Limiter} this\n\t\t */\n\t    Tone.Limiter.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._compressor.dispose();\n\t        this._compressor = null;\n\t        this._writable('threshold');\n\t        this.threshold = null;\n\t        return this;\n\t    };\n\t    return Tone.Limiter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Lowpass is a lowpass feedback comb filter. It is similar to \n\t\t *         Tone.FeedbackCombFilter, but includes a lowpass filter.\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {Time|Object} [delayTime] The delay time of the comb filter\n\t\t *  @param {NormalRange=} resonance The resonance (feedback) of the comb filter\n\t\t *  @param {Frequency=} dampening The cutoff of the lowpass filter dampens the\n\t\t *                                signal as it is fedback. \n\t\t */\n\t    Tone.LowpassCombFilter = function () {\n\t        this.createInsOuts(1, 1);\n\t        var options = this.optionsObject(arguments, [\n\t            'delayTime',\n\t            'resonance',\n\t            'dampening'\n\t        ], Tone.LowpassCombFilter.defaults);\n\t        /**\n\t\t\t *  the delay node\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delay = this.input = new Tone.Delay(options.delayTime);\n\t        /**\n\t\t\t *  The delayTime of the comb filter. \n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = this._delay.delayTime;\n\t        /**\n\t\t\t *  the lowpass filter\n\t\t\t *  @type  {BiquadFilterNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lowpass = this.output = this.context.createBiquadFilter();\n\t        this._lowpass.Q.value = -3.0102999566398125;\n\t        this._lowpass.type = 'lowpass';\n\t        /**\n\t\t\t *  The dampening control of the feedback\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.dampening = new Tone.Param({\n\t            'param': this._lowpass.frequency,\n\t            'units': Tone.Type.Frequency,\n\t            'value': options.dampening\n\t        });\n\t        /**\n\t\t\t *  the feedback gain\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  The amount of feedback of the delayed signal. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.resonance = this._feedback.gain;\n\t        //connections\n\t        this._delay.chain(this._lowpass, this._feedback, this._delay);\n\t        this._readOnly([\n\t            'dampening',\n\t            'resonance',\n\t            'delayTime'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.LowpassCombFilter);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.LowpassCombFilter.defaults = {\n\t        'delayTime': 0.1,\n\t        'resonance': 0.5,\n\t        'dampening': 3000\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.LowpassCombFilter} this\n\t\t */\n\t    Tone.LowpassCombFilter.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'dampening',\n\t            'resonance',\n\t            'delayTime'\n\t        ]);\n\t        this.dampening.dispose();\n\t        this.dampening = null;\n\t        this.resonance.dispose();\n\t        this.resonance = null;\n\t        this._delay.dispose();\n\t        this._delay = null;\n\t        this.delayTime = null;\n\t        this._lowpass.disconnect();\n\t        this._lowpass = null;\n\t        this._feedback.disconnect();\n\t        this._feedback = null;\n\t        return this;\n\t    };\n\t    return Tone.LowpassCombFilter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Merge brings two signals into the left and right \n\t\t *          channels of a single stereo channel.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * var merge = new Tone.Merge().toMaster();\n\t\t * //routing a sine tone in the left channel\n\t\t * //and noise in the right channel\n\t\t * var osc = new Tone.Oscillator().connect(merge.left);\n\t\t * var noise = new Tone.Noise().connect(merge.right);\n\t\t * //starting our oscillators\n\t\t * noise.start();\n\t\t * osc.start();\n\t\t */\n\t    Tone.Merge = function () {\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  The left input channel.\n\t\t\t *  Alias for <code>input[0]</code>\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t        this.left = this.input[0] = new Tone.Gain();\n\t        /**\n\t\t\t *  The right input channel.\n\t\t\t *  Alias for <code>input[1]</code>.\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t        this.right = this.input[1] = new Tone.Gain();\n\t        /**\n\t\t\t *  the merger node for the two channels\n\t\t\t *  @type {ChannelMergerNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._merger = this.output = this.context.createChannelMerger(2);\n\t        //connections\n\t        this.left.connect(this._merger, 0, 0);\n\t        this.right.connect(this._merger, 0, 1);\n\t        this.left.channelCount = 1;\n\t        this.right.channelCount = 1;\n\t        this.left.channelCountMode = 'explicit';\n\t        this.right.channelCountMode = 'explicit';\n\t    };\n\t    Tone.extend(Tone.Merge);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Merge} this\n\t\t */\n\t    Tone.Merge.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this.left.dispose();\n\t        this.left = null;\n\t        this.right.dispose();\n\t        this.right = null;\n\t        this._merger.disconnect();\n\t        this._merger = null;\n\t        return this;\n\t    };\n\t    return Tone.Merge;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)\n\t\t *          of an input signal with some averaging applied. It can also get the raw \n\t\t *          value of the input signal.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {String} type Either \"level\" or \"signal\". \n\t\t *  @param {Number} smoothing The amount of smoothing applied between frames.\n\t\t *  @example\n\t\t * var meter = new Tone.Meter();\n\t\t * var mic = new Tone.Microphone().start();\n\t\t * //connect mic to the meter\n\t\t * mic.connect(meter);\n\t\t * //the current level of the mic input\n\t\t * var level = meter.value;\n\t\t */\n\t    Tone.Meter = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'type',\n\t            'smoothing'\n\t        ], Tone.Meter.defaults);\n\t        /**\n\t\t\t *  The type of the meter, either \"level\" or \"signal\". \n\t\t\t *  A \"level\" meter will return the volume level (rms) of the \n\t\t\t *  input signal and a \"signal\" meter will return\n\t\t\t *  the signal value of the input. \n\t\t\t *  @type  {String}\n\t\t\t */\n\t        this.type = options.type;\n\t        /**\n\t\t\t *  The analyser node which computes the levels.\n\t\t\t *  @private\n\t\t\t *  @type  {Tone.Analyser}\n\t\t\t */\n\t        this.input = this.output = this._analyser = new Tone.Analyser('waveform', 512);\n\t        this._analyser.returnType = 'float';\n\t        /**\n\t\t\t *  The amount of carryover between the current and last frame. \n\t\t\t *  Only applied meter for \"level\" type.\n\t\t\t *  @type  {Number}\n\t\t\t */\n\t        this.smoothing = options.smoothing;\n\t        /**\n\t\t\t *  The last computed value\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lastValue = 0;\n\t    };\n\t    Tone.extend(Tone.Meter);\n\t    /**\n\t\t *  @private\n\t\t *  @enum {String}\n\t\t */\n\t    Tone.Meter.Type = {\n\t        Level: 'level',\n\t        Signal: 'signal'\n\t    };\n\t    /**\n\t\t *  The defaults\n\t\t *  @type {Object}\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.Meter.defaults = {\n\t        'smoothing': 0.8,\n\t        'type': Tone.Meter.Type.Level\n\t    };\n\t    /**\n\t\t * The current value of the meter. A value of 1 is\n\t\t * \"unity\".\n\t\t * @memberOf Tone.Meter#\n\t\t * @type {Number}\n\t\t * @name value\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Meter.prototype, 'value', {\n\t        get: function () {\n\t            var signal = this._analyser.analyse();\n\t            if (this.type === Tone.Meter.Type.Level) {\n\t                //rms\n\t                var sum = 0;\n\t                for (var i = 0; i < signal.length; i++) {\n\t                    sum += Math.pow(signal[i], 2);\n\t                }\n\t                var rms = Math.sqrt(sum / signal.length);\n\t                //smooth it\n\t                rms = Math.max(rms, this._lastValue * this.smoothing);\n\t                this._lastValue = rms;\n\t                //scale it\n\t                var unity = 0.35;\n\t                var val = rms / unity;\n\t                //scale the output curve\n\t                return Math.sqrt(val);\n\t            } else {\n\t                return signal[0];\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Meter} this\n\t\t */\n\t    Tone.Meter.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._analyser.dispose();\n\t        this._analyser = null;\n\t        return this;\n\t    };\n\t    return Tone.Meter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *\t@class  Tone.Split splits an incoming signal into left and right channels.\n\t\t *\t\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * var split = new Tone.Split();\n\t\t * stereoSignal.connect(split);\n\t\t */\n\t    Tone.Split = function () {\n\t        this.createInsOuts(0, 2);\n\t        /** \n\t\t\t *  @type {ChannelSplitterNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._splitter = this.input = this.context.createChannelSplitter(2);\n\t        /** \n\t\t\t *  Left channel output. \n\t\t\t *  Alias for <code>output[0]</code>\n\t\t\t *  @type {Tone.Gain}\n\t\t\t */\n\t        this.left = this.output[0] = new Tone.Gain();\n\t        /**\n\t\t\t *  Right channel output.\n\t\t\t *  Alias for <code>output[1]</code>\n\t\t\t *  @type {Tone.Gain}\n\t\t\t */\n\t        this.right = this.output[1] = new Tone.Gain();\n\t        //connections\n\t        this._splitter.connect(this.left, 0, 0);\n\t        this._splitter.connect(this.right, 1, 0);\n\t    };\n\t    Tone.extend(Tone.Split);\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Split} this\n\t\t */\n\t    Tone.Split.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._splitter.disconnect();\n\t        this.left.dispose();\n\t        this.left = null;\n\t        this.right.dispose();\n\t        this.right = null;\n\t        this._splitter = null;\n\t        return this;\n\t    };\n\t    return Tone.Split;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Mid/Side processing separates the the 'mid' signal \n\t\t *         (which comes out of both the left and the right channel) \n\t\t *         and the 'side' (which only comes out of the the side channels). <br><br>\n\t\t *         <code>\n\t\t *         Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right<br>\n\t\t *         Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and righ<br>\n\t\t *         </code>\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t */\n\t    Tone.MidSideSplit = function () {\n\t        this.createInsOuts(0, 2);\n\t        /**\n\t\t\t *  split the incoming signal into left and right channels\n\t\t\t *  @type  {Tone.Split}\n\t\t\t *  @private\n\t\t\t */\n\t        this._split = this.input = new Tone.Split();\n\t        /**\n\t\t\t *  The mid send. Connect to mid processing. Alias for\n\t\t\t *  <code>output[0]</code>\n\t\t\t *  @type {Tone.Expr}\n\t\t\t */\n\t        this.mid = this.output[0] = new Tone.Expr('($0 + $1) * $2');\n\t        /**\n\t\t\t *  The side output. Connect to side processing. Alias for\n\t\t\t *  <code>output[1]</code>\n\t\t\t *  @type {Tone.Expr}\n\t\t\t */\n\t        this.side = this.output[1] = new Tone.Expr('($0 - $1) * $2');\n\t        this._split.connect(this.mid, 0, 0);\n\t        this._split.connect(this.mid, 1, 1);\n\t        this._split.connect(this.side, 0, 0);\n\t        this._split.connect(this.side, 1, 1);\n\t        sqrtTwo.connect(this.mid, 0, 2);\n\t        sqrtTwo.connect(this.side, 0, 2);\n\t    };\n\t    Tone.extend(Tone.MidSideSplit);\n\t    /**\n\t\t *  a constant signal equal to 1 / sqrt(2)\n\t\t *  @type {Number}\n\t\t *  @signal\n\t\t *  @private\n\t\t *  @static\n\t\t */\n\t    var sqrtTwo = null;\n\t    Tone._initAudioContext(function () {\n\t        sqrtTwo = new Tone.Signal(1 / Math.sqrt(2));\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.MidSideSplit} this\n\t\t */\n\t    Tone.MidSideSplit.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this.mid.dispose();\n\t        this.mid = null;\n\t        this.side.dispose();\n\t        this.side = null;\n\t        this._split.dispose();\n\t        this._split = null;\n\t        return this;\n\t    };\n\t    return Tone.MidSideSplit;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Mid/Side processing separates the the 'mid' signal \n\t\t *         (which comes out of both the left and the right channel) \n\t\t *         and the 'side' (which only comes out of the the side channels). \n\t\t *         MidSideMerge merges the mid and side signal after they've been seperated\n\t\t *         by Tone.MidSideSplit.<br><br>\n\t\t *         <code>\n\t\t *         Left = (Mid+Side)/sqrt(2);   // obtain left signal from mid and side<br>\n\t\t *         Right = (Mid-Side)/sqrt(2);   // obtain right signal from mid and side<br>\n\t\t *         </code>\n\t\t *\n\t\t *  @extends {Tone.StereoEffect}\n\t\t *  @constructor\n\t\t */\n\t    Tone.MidSideMerge = function () {\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  The mid signal input. Alias for\n\t\t\t *  <code>input[0]</code>\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t */\n\t        this.mid = this.input[0] = new Tone.Gain();\n\t        /**\n\t\t\t *  recombine the mid/side into Left\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this._left = new Tone.Expr('($0 + $1) * $2');\n\t        /**\n\t\t\t *  The side signal input. Alias for\n\t\t\t *  <code>input[1]</code>\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t */\n\t        this.side = this.input[1] = new Tone.Gain();\n\t        /**\n\t\t\t *  recombine the mid/side into Right\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this._right = new Tone.Expr('($0 - $1) * $2');\n\t        /**\n\t\t\t *  Merge the left/right signal back into a stereo signal.\n\t\t\t *  @type {Tone.Merge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._merge = this.output = new Tone.Merge();\n\t        this.mid.connect(this._left, 0, 0);\n\t        this.side.connect(this._left, 0, 1);\n\t        this.mid.connect(this._right, 0, 0);\n\t        this.side.connect(this._right, 0, 1);\n\t        this._left.connect(this._merge, 0, 0);\n\t        this._right.connect(this._merge, 0, 1);\n\t        sqrtTwo.connect(this._left, 0, 2);\n\t        sqrtTwo.connect(this._right, 0, 2);\n\t    };\n\t    Tone.extend(Tone.MidSideMerge);\n\t    /**\n\t\t *  A constant signal equal to 1 / sqrt(2).\n\t\t *  @type {Number}\n\t\t *  @signal\n\t\t *  @private\n\t\t *  @static\n\t\t */\n\t    var sqrtTwo = null;\n\t    Tone._initAudioContext(function () {\n\t        sqrtTwo = new Tone.Signal(1 / Math.sqrt(2));\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.MidSideMerge} this\n\t\t */\n\t    Tone.MidSideMerge.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this.mid.dispose();\n\t        this.mid = null;\n\t        this.side.dispose();\n\t        this.side = null;\n\t        this._left.dispose();\n\t        this._left = null;\n\t        this._right.dispose();\n\t        this._right = null;\n\t        this._merge.dispose();\n\t        this._merge = null;\n\t        return this;\n\t    };\n\t    return Tone.MidSideMerge;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.MidSideCompressor applies two different compressors to the mid\n\t\t *         and side signal components. See Tone.MidSideSplit. \n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @param {Object} options The options that are passed to the mid and side\n\t\t *                          compressors. \n\t\t *  @constructor\n\t\t */\n\t    Tone.MidSideCompressor = function (options) {\n\t        options = this.defaultArg(options, Tone.MidSideCompressor.defaults);\n\t        /**\n\t\t\t *  the mid/side split\n\t\t\t *  @type  {Tone.MidSideSplit}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midSideSplit = this.input = new Tone.MidSideSplit();\n\t        /**\n\t\t\t *  the mid/side recombination\n\t\t\t *  @type  {Tone.MidSideMerge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midSideMerge = this.output = new Tone.MidSideMerge();\n\t        /**\n\t\t\t *  The compressor applied to the mid signal\n\t\t\t *  @type  {Tone.Compressor}\n\t\t\t */\n\t        this.mid = new Tone.Compressor(options.mid);\n\t        /**\n\t\t\t *  The compressor applied to the side signal\n\t\t\t *  @type  {Tone.Compressor}\n\t\t\t */\n\t        this.side = new Tone.Compressor(options.side);\n\t        this._midSideSplit.mid.chain(this.mid, this._midSideMerge.mid);\n\t        this._midSideSplit.side.chain(this.side, this._midSideMerge.side);\n\t        this._readOnly([\n\t            'mid',\n\t            'side'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MidSideCompressor);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MidSideCompressor.defaults = {\n\t        'mid': {\n\t            'ratio': 3,\n\t            'threshold': -24,\n\t            'release': 0.03,\n\t            'attack': 0.02,\n\t            'knee': 16\n\t        },\n\t        'side': {\n\t            'ratio': 6,\n\t            'threshold': -30,\n\t            'release': 0.25,\n\t            'attack': 0.03,\n\t            'knee': 10\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.MidSideCompressor} this\n\t\t */\n\t    Tone.MidSideCompressor.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'mid',\n\t            'side'\n\t        ]);\n\t        this.mid.dispose();\n\t        this.mid = null;\n\t        this.side.dispose();\n\t        this.side = null;\n\t        this._midSideSplit.dispose();\n\t        this._midSideSplit = null;\n\t        this._midSideMerge.dispose();\n\t        this._midSideMerge = null;\n\t        return this;\n\t    };\n\t    return Tone.MidSideCompressor;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Mono coerces the incoming mono or stereo signal into a mono signal\n\t\t *         where both left and right channels have the same value. This can be useful \n\t\t *         for [stereo imaging](https://en.wikipedia.org/wiki/Stereo_imaging).\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t */\n\t    Tone.Mono = function () {\n\t        this.createInsOuts(1, 0);\n\t        /**\n\t\t\t *  merge the signal\n\t\t\t *  @type {Tone.Merge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._merge = this.output = new Tone.Merge();\n\t        this.input.connect(this._merge, 0, 0);\n\t        this.input.connect(this._merge, 0, 1);\n\t        this.input.gain.value = this.dbToGain(-10);\n\t    };\n\t    Tone.extend(Tone.Mono);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Mono} this\n\t\t */\n\t    Tone.Mono.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._merge.dispose();\n\t        this._merge = null;\n\t        return this;\n\t    };\n\t    return Tone.Mono;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A compressor with seperate controls over low/mid/high dynamics\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {Object} options The low/mid/high compressor settings.\n\t\t *  @example\n\t\t *  var multiband = new Tone.MultibandCompressor({\n\t\t *  \t\"lowFrequency\" : 200,\n\t\t *  \t\"highFrequency\" : 1300\n\t\t *  \t\"low\" : {\n\t\t *  \t\t\"threshold\" : -12\n\t\t *  \t}\n\t\t *  })\n\t\t */\n\t    Tone.MultibandCompressor = function (options) {\n\t        options = this.defaultArg(arguments, Tone.MultibandCompressor.defaults);\n\t        /**\n\t\t\t *  split the incoming signal into high/mid/low\n\t\t\t *  @type {Tone.MultibandSplit}\n\t\t\t *  @private\n\t\t\t */\n\t        this._splitter = this.input = new Tone.MultibandSplit({\n\t            'lowFrequency': options.lowFrequency,\n\t            'highFrequency': options.highFrequency\n\t        });\n\t        /**\n\t\t\t *  low/mid crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.lowFrequency = this._splitter.lowFrequency;\n\t        /**\n\t\t\t *  mid/high crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.highFrequency = this._splitter.highFrequency;\n\t        /**\n\t\t\t *  the output\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  The compressor applied to the low frequencies.\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t        this.low = new Tone.Compressor(options.low);\n\t        /**\n\t\t\t *  The compressor applied to the mid frequencies.\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t        this.mid = new Tone.Compressor(options.mid);\n\t        /**\n\t\t\t *  The compressor applied to the high frequencies.\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t        this.high = new Tone.Compressor(options.high);\n\t        //connect the compressor\n\t        this._splitter.low.chain(this.low, this.output);\n\t        this._splitter.mid.chain(this.mid, this.output);\n\t        this._splitter.high.chain(this.high, this.output);\n\t        this._readOnly([\n\t            'high',\n\t            'mid',\n\t            'low',\n\t            'highFrequency',\n\t            'lowFrequency'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MultibandCompressor);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MultibandCompressor.defaults = {\n\t        'low': Tone.Compressor.defaults,\n\t        'mid': Tone.Compressor.defaults,\n\t        'high': Tone.Compressor.defaults,\n\t        'lowFrequency': 250,\n\t        'highFrequency': 2000\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.MultibandCompressor} this\n\t\t */\n\t    Tone.MultibandCompressor.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._splitter.dispose();\n\t        this._writable([\n\t            'high',\n\t            'mid',\n\t            'low',\n\t            'highFrequency',\n\t            'lowFrequency'\n\t        ]);\n\t        this.low.dispose();\n\t        this.mid.dispose();\n\t        this.high.dispose();\n\t        this._splitter = null;\n\t        this.low = null;\n\t        this.mid = null;\n\t        this.high = null;\n\t        this.lowFrequency = null;\n\t        this.highFrequency = null;\n\t        return this;\n\t    };\n\t    return Tone.MultibandCompressor;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Panner is an equal power Left/Right Panner and does not\n\t\t *          support 3D. Panner uses the StereoPannerNode when available. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {NormalRange} [initialPan=0] The initail panner value (defaults to 0 = center)\n\t\t *  @example\n\t\t *  //pan the input signal hard right. \n\t\t *  var panner = new Tone.Panner(1);\n\t\t */\n\t    Tone.Panner = function (initialPan) {\n\t        if (this._hasStereoPanner) {\n\t            /**\n\t\t\t\t *  the panner node\n\t\t\t\t *  @type {StereoPannerNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._panner = this.input = this.output = this.context.createStereoPanner();\n\t            /**\n\t\t\t\t *  The pan control. -1 = hard left, 1 = hard right. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t            this.pan = this._panner.pan;\n\t        } else {\n\t            /**\n\t\t\t\t *  the dry/wet knob\n\t\t\t\t *  @type {Tone.CrossFade}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._crossFade = new Tone.CrossFade();\n\t            /**\n\t\t\t\t *  @type {Tone.Merge}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._merger = this.output = new Tone.Merge();\n\t            /**\n\t\t\t\t *  @type {Tone.Split}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._splitter = this.input = new Tone.Split();\n\t            /**\n\t\t\t\t *  The pan control. -1 = hard left, 1 = hard right. \n\t\t\t\t *  @type {AudioRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t            this.pan = new Tone.Signal(0, Tone.Type.AudioRange);\n\t            /**\n\t\t\t\t *  always sends 0\n\t\t\t\t *  @type {Tone.Zero}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._zero = new Tone.Zero();\n\t            /**\n\t\t\t\t *  The analog to gain conversion\n\t\t\t\t *  @type  {Tone.AudioToGain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._a2g = new Tone.AudioToGain();\n\t            //CONNECTIONS:\n\t            this._zero.connect(this._a2g);\n\t            this.pan.chain(this._a2g, this._crossFade.fade);\n\t            //left channel is a, right channel is b\n\t            this._splitter.connect(this._crossFade, 0, 0);\n\t            this._splitter.connect(this._crossFade, 1, 1);\n\t            //merge it back together\n\t            this._crossFade.a.connect(this._merger, 0, 0);\n\t            this._crossFade.b.connect(this._merger, 0, 1);\n\t        }\n\t        //initial value\n\t        this.pan.value = this.defaultArg(initialPan, 0);\n\t        this._readOnly('pan');\n\t    };\n\t    Tone.extend(Tone.Panner);\n\t    /**\n\t\t *  indicates if the panner is using the new StereoPannerNode internally\n\t\t *  @type  {boolean}\n\t\t *  @private\n\t\t */\n\t    Tone.Panner.prototype._hasStereoPanner = Tone.prototype.isFunction(Tone.context.createStereoPanner);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Panner} this\n\t\t */\n\t    Tone.Panner.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable('pan');\n\t        if (this._hasStereoPanner) {\n\t            this._panner.disconnect();\n\t            this._panner = null;\n\t            this.pan = null;\n\t        } else {\n\t            this._zero.dispose();\n\t            this._zero = null;\n\t            this._crossFade.dispose();\n\t            this._crossFade = null;\n\t            this._splitter.dispose();\n\t            this._splitter = null;\n\t            this._merger.dispose();\n\t            this._merger = null;\n\t            this.pan.dispose();\n\t            this.pan = null;\n\t            this._a2g.dispose();\n\t            this._a2g = null;\n\t        }\n\t        return this;\n\t    };\n\t    return Tone.Panner;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A spatialized panner node which supports equalpower or HRTF panning.\n\t\t *          Tries to normalize the API across various browsers. See Tone.Listener\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {Number} positionX The initial x position.\n\t\t *  @param {Number} positionY The initial y position.\n\t\t *  @param {Number} positionZ The initial z position.\n\t\t */\n\t    Tone.Panner3D = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'positionX',\n\t            'positionY',\n\t            'positionZ'\n\t        ], Tone.Panner3D.defaults);\n\t        /**\n\t\t\t *  The panner node\n\t\t\t *  @type {PannerNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._panner = this.input = this.output = this.context.createPanner();\n\t        //set some values\n\t        this._panner.panningModel = options.panningModel;\n\t        this._panner.maxDistance = options.maxDistance;\n\t        this._panner.distanceModel = options.distanceModel;\n\t        this._panner.coneOuterGain = options.coneOuterGain;\n\t        this._panner.coneOuterAngle = options.coneOuterAngle;\n\t        this._panner.coneInnerAngle = options.coneInnerAngle;\n\t        this._panner.refDistance = options.refDistance;\n\t        this._panner.rolloffFactor = options.rolloffFactor;\n\t        /**\n\t\t\t *  Holds the current orientation\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._orientation = [\n\t            options.orientationX,\n\t            options.orientationY,\n\t            options.orientationZ\n\t        ];\n\t        /**\n\t\t\t *  Holds the current position\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._position = [\n\t            options.positionX,\n\t            options.positionY,\n\t            options.positionZ\n\t        ];\n\t        // set the default position/orientation\n\t        this.orientationX = options.orientationX;\n\t        this.orientationY = options.orientationY;\n\t        this.orientationZ = options.orientationZ;\n\t        this.positionX = options.positionX;\n\t        this.positionY = options.positionY;\n\t        this.positionZ = options.positionZ;\n\t    };\n\t    Tone.extend(Tone.Panner3D);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t *  Defaults according to the specification\n\t\t */\n\t    Tone.Panner3D.defaults = {\n\t        'positionX': 0,\n\t        'positionY': 0,\n\t        'positionZ': 0,\n\t        'orientationX': 0,\n\t        'orientationY': 0,\n\t        'orientationZ': 0,\n\t        'panningModel': 'equalpower',\n\t        'maxDistance': 10000,\n\t        'distanceModel': 'inverse',\n\t        'coneOuterGain': 0,\n\t        'coneOuterAngle': 360,\n\t        'coneInnerAngle': 360,\n\t        'refDistance': 1,\n\t        'rolloffFactor': 1\n\t    };\n\t    Tone.Panner3D.prototype._rampTimeConstant = 0.3;\n\t    /**\n\t\t *  Sets the position of the source in 3d space.\t\n\t\t *  @param  {Number}  x\n\t\t *  @param  {Number}  y\n\t\t *  @param  {Number}  z\n\t\t *  @return {Tone.Panner3D} this\n\t\t */\n\t    Tone.Panner3D.prototype.setPosition = function (x, y, z) {\n\t        if (this._panner.positionX) {\n\t            var now = this.now();\n\t            this._panner.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t            this._panner.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t            this._panner.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t        } else {\n\t            this._panner.setPosition(x, y, z);\n\t        }\n\t        this._position = Array.prototype.slice.call(arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sets the orientation of the source in 3d space.\t\n\t\t *  @param  {Number}  x\n\t\t *  @param  {Number}  y\n\t\t *  @param  {Number}  z\n\t\t *  @return {Tone.Panner3D} this\n\t\t */\n\t    Tone.Panner3D.prototype.setOrientation = function (x, y, z) {\n\t        if (this._panner.orientationX) {\n\t            var now = this.now();\n\t            this._panner.orientationX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t            this._panner.orientationY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t            this._panner.orientationZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t        } else {\n\t            this._panner.setOrientation(x, y, z);\n\t        }\n\t        this._orientation = Array.prototype.slice.call(arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The x position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name positionX\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionX', {\n\t        set: function (pos) {\n\t            this._position[0] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[0];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name positionY\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionY', {\n\t        set: function (pos) {\n\t            this._position[1] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[1];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name positionZ\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionZ', {\n\t        set: function (pos) {\n\t            this._position[2] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[2];\n\t        }\n\t    });\n\t    /**\n\t\t *  The x orientation of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name orientationX\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationX', {\n\t        set: function (pos) {\n\t            this._orientation[0] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[0];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y orientation of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name orientationY\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationY', {\n\t        set: function (pos) {\n\t            this._orientation[1] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[1];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z orientation of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name orientationZ\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationZ', {\n\t        set: function (pos) {\n\t            this._orientation[2] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[2];\n\t        }\n\t    });\n\t    /**\n\t\t *  Proxy a property on the panner to an exposed public propery\n\t\t *  @param  {String}  prop\n\t\t *  @private\n\t\t */\n\t    Tone.Panner3D._aliasProperty = function (prop) {\n\t        Object.defineProperty(Tone.Panner3D.prototype, prop, {\n\t            set: function (val) {\n\t                this._panner[prop] = val;\n\t            },\n\t            get: function () {\n\t                return this._panner[prop];\n\t            }\n\t        });\n\t    };\n\t    /**\n\t\t *  The panning model. Either \"equalpower\" or \"HRTF\".\n\t\t *  @type {String}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name panningModel\n\t\t */\n\t    Tone.Panner3D._aliasProperty('panningModel');\n\t    /**\n\t\t *  A reference distance for reducing volume as source move further from the listener\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name refDistance\n\t\t */\n\t    Tone.Panner3D._aliasProperty('refDistance');\n\t    /**\n\t\t *  Describes how quickly the volume is reduced as source moves away from listener.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name rolloffFactor\n\t\t */\n\t    Tone.Panner3D._aliasProperty('rolloffFactor');\n\t    /**\n\t\t *  The distance model used by,  \"linear\", \"inverse\", or \"exponential\".\n\t\t *  @type {String}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name distanceModel\n\t\t */\n\t    Tone.Panner3D._aliasProperty('distanceModel');\n\t    /**\n\t\t *  The angle, in degrees, inside of which there will be no volume reduction\n\t\t *  @type {Degrees}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name coneInnerAngle\n\t\t */\n\t    Tone.Panner3D._aliasProperty('coneInnerAngle');\n\t    /**\n\t\t *  The angle, in degrees, outside of which the volume will be reduced \n\t\t *  to a constant value of coneOuterGain\n\t\t *  @type {Degrees}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name coneOuterAngle\n\t\t */\n\t    Tone.Panner3D._aliasProperty('coneOuterAngle');\n\t    /**\n\t\t *  The gain outside of the coneOuterAngle\n\t\t *  @type {Gain}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name coneOuterGain\n\t\t */\n\t    Tone.Panner3D._aliasProperty('coneOuterGain');\n\t    /**\n\t\t *  The maximum distance between source and listener, \n\t\t *  after which the volume will not be reduced any further.\n\t\t *  @type {Positive}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name maxDistance\n\t\t */\n\t    Tone.Panner3D._aliasProperty('maxDistance');\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Panner3D} this\n\t\t */\n\t    Tone.Panner3D.prototype.dispose = function () {\n\t        this._panner.disconnect();\n\t        this._panner = null;\n\t        this._orientation = null;\n\t        this._position = null;\n\t        return this;\n\t    };\n\t    return Tone.Panner3D;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.PanVol is a Tone.Panner and Tone.Volume in one.\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {AudioRange} pan the initial pan\n\t\t *  @param {number} volume The output volume. \n\t\t *  @example\n\t\t * //pan the incoming signal left and drop the volume\n\t\t * var panVol = new Tone.PanVol(0.25, -12);\n\t\t */\n\t    Tone.PanVol = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'pan',\n\t            'volume'\n\t        ], Tone.PanVol.defaults);\n\t        /**\n\t\t\t *  The panning node\n\t\t\t *  @type {Tone.Panner}\n\t\t\t *  @private\n\t\t\t */\n\t        this._panner = this.input = new Tone.Panner(options.pan);\n\t        /**\n\t\t\t *  The L/R panning control.\n\t\t\t *  @type {AudioRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.pan = this._panner.pan;\n\t        /**\n\t\t\t *  The volume node\n\t\t\t *  @type {Tone.Volume}\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t *  The volume control in decibels. \n\t\t\t *  @type {Decibels}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        //connections\n\t        this._panner.connect(this._volume);\n\t        this._readOnly([\n\t            'pan',\n\t            'volume'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.PanVol);\n\t    /**\n\t\t *  The defaults\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t *  @static\n\t\t */\n\t    Tone.PanVol.defaults = {\n\t        'pan': 0.5,\n\t        'volume': 0\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.PanVol} this\n\t\t */\n\t    Tone.PanVol.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'pan',\n\t            'volume'\n\t        ]);\n\t        this._panner.dispose();\n\t        this._panner = null;\n\t        this.pan = null;\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this.volume = null;\n\t        return this;\n\t    };\n\t    return Tone.PanVol;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.CtrlInterpolate will interpolate between given values based\n\t\t *         on the \"index\" property. Passing in an array or object literal\n\t\t *         will interpolate each of the parameters. Note (i.e. \"C3\")\n\t\t *         and Time (i.e. \"4n + 2\") can be interpolated. All other values are\n\t\t *         assumed to be numbers. \n\t\t *  @example\n\t\t * var interp = new Tone.CtrlInterpolate([0, 2, 9, 4]);\n\t\t * interp.index = 0.75;\n\t\t * interp.value; //returns 1.5\n\t\t *\n\t\t *  @example\n\t\t * var interp = new Tone.CtrlInterpolate([\n\t\t * \t[2, 4, 5],\n\t\t * \t[9, 3, 2],\n\t\t * ]);\n\t\t * @param {Array} values The array of values to interpolate over\n\t\t * @param {Positive} index The initial interpolation index.\n\t\t * @extends {Tone}\n\t\t */\n\t    Tone.CtrlInterpolate = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'values',\n\t            'index'\n\t        ], Tone.CtrlInterpolate.defaults);\n\t        /**\n\t\t\t *  The values to interpolate between\n\t\t\t *  @type  {Array}\n\t\t\t */\n\t        this.values = options.values;\n\t        /**\n\t\t\t *  The interpolated index between values. For example: a value of 1.5\n\t\t\t *  would interpolate equally between the value at index 1\n\t\t\t *  and the value at index 2. \n\t\t\t *  @example\n\t\t\t * interp.index = 0; \n\t\t\t * interp.value; //returns the value at 0\n\t\t\t * interp.index = 0.5;\n\t\t\t * interp.value; //returns the value between indices 0 and 1. \n\t\t\t *  @type  {Positive}\n\t\t\t */\n\t        this.index = options.index;\n\t    };\n\t    Tone.extend(Tone.CtrlInterpolate);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.CtrlInterpolate.defaults = {\n\t        'index': 0,\n\t        'values': []\n\t    };\n\t    /**\n\t\t *  The current interpolated value based on the index\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.CtrlInterpolate#\n\t\t *  @type {*}\n\t\t *  @name value\n\t\t */\n\t    Object.defineProperty(Tone.CtrlInterpolate.prototype, 'value', {\n\t        get: function () {\n\t            var index = this.index;\n\t            index = Math.min(index, this.values.length - 1);\n\t            var lowerPosition = Math.floor(index);\n\t            var lower = this.values[lowerPosition];\n\t            var upper = this.values[Math.ceil(index)];\n\t            return this._interpolate(index - lowerPosition, lower, upper);\n\t        }\n\t    });\n\t    /**\n\t\t *  Internal interpolation routine\n\t\t *  @param  {NormalRange}  index  The index between the lower and upper\n\t\t *  @param  {*}  lower \n\t\t *  @param  {*}  upper \n\t\t *  @return  {*}  The interpolated value\n\t\t *  @private\n\t\t */\n\t    Tone.CtrlInterpolate.prototype._interpolate = function (index, lower, upper) {\n\t        if (this.isArray(lower)) {\n\t            var retArray = [];\n\t            for (var i = 0; i < lower.length; i++) {\n\t                retArray[i] = this._interpolate(index, lower[i], upper[i]);\n\t            }\n\t            return retArray;\n\t        } else if (this.isObject(lower)) {\n\t            var retObj = {};\n\t            for (var attr in lower) {\n\t                retObj[attr] = this._interpolate(index, lower[attr], upper[attr]);\n\t            }\n\t            return retObj;\n\t        } else {\n\t            lower = this._toNumber(lower);\n\t            upper = this._toNumber(upper);\n\t            return (1 - index) * lower + index * upper;\n\t        }\n\t    };\n\t    /**\n\t\t *  Convert from the given type into a number\n\t\t *  @param  {Number|String}  value\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.CtrlInterpolate.prototype._toNumber = function (val) {\n\t        if (this.isNumber(val)) {\n\t            return val;\n\t        } else {\n\t            //otherwise assume that it's Time...\n\t            return this.toSeconds(val);\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.CtrlInterpolate}  this\n\t\t */\n\t    Tone.CtrlInterpolate.prototype.dispose = function () {\n\t        this.values = null;\n\t    };\n\t    return Tone.CtrlInterpolate;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.CtrlMarkov represents a Markov Chain where each call\n\t\t *         to Tone.CtrlMarkov.next will move to the next state. If the next\n\t\t *         state choice is an array, the next state is chosen randomly with\n\t\t *         even probability for all of the choices. For a weighted probability\n\t\t *         of the next choices, pass in an object with \"state\" and \"probability\" attributes. \n\t\t *         The probabilities will be normalized and then chosen. If no next options\n\t\t *         are given for the current state, the state will stay there. \n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * var chain = new Tone.CtrlMarkov({\n\t\t * \t\"beginning\" : [\"end\", \"middle\"],\n\t\t * \t\"middle\" : \"end\"\n\t\t * });\n\t\t * chain.value = \"beginning\";\n\t\t * chain.next(); //returns \"end\" or \"middle\" with 50% probability\n\t\t *\n\t\t *  @example\n\t\t * var chain = new Tone.CtrlMarkov({\n\t\t * \t\"beginning\" : [{\"value\" : \"end\", \"probability\" : 0.8}, \n\t\t * \t\t\t\t\t{\"value\" : \"middle\", \"probability\" : 0.2}],\n\t\t * \t\"middle\" : \"end\"\n\t\t * });\n\t\t * chain.value = \"beginning\";\n\t\t * chain.next(); //returns \"end\" with 80% probability or \"middle\" with 20%.\n\t\t *  @param {Object} values An object with the state names as the keys\n\t\t *                         and the next state(s) as the values. \n\t\t */\n\t    Tone.CtrlMarkov = function (values, initial) {\n\t        /**\n\t\t\t *  The Markov values with states as the keys\n\t\t\t *  and next state(s) as the values. \n\t\t\t *  @type {Object}\n\t\t\t */\n\t        this.values = this.defaultArg(values, {});\n\t        /**\n\t\t\t *  The current state of the Markov values. The next\n\t\t\t *  state will be evaluated and returned when Tone.CtrlMarkov.next\n\t\t\t *  is invoked.\n\t\t\t *  @type {String}\n\t\t\t */\n\t        this.value = this.defaultArg(initial, Object.keys(this.values)[0]);\n\t    };\n\t    Tone.extend(Tone.CtrlMarkov);\n\t    /**\n\t\t *  Returns the next state of the Markov values. \n\t\t *  @return  {String}\n\t\t */\n\t    Tone.CtrlMarkov.prototype.next = function () {\n\t        if (this.values.hasOwnProperty(this.value)) {\n\t            var next = this.values[this.value];\n\t            if (this.isArray(next)) {\n\t                var distribution = this._getProbDistribution(next);\n\t                var rand = Math.random();\n\t                var total = 0;\n\t                for (var i = 0; i < distribution.length; i++) {\n\t                    var dist = distribution[i];\n\t                    if (rand > total && rand < total + dist) {\n\t                        var chosen = next[i];\n\t                        if (this.isObject(chosen)) {\n\t                            this.value = chosen.value;\n\t                        } else {\n\t                            this.value = chosen;\n\t                        }\n\t                    }\n\t                    total += dist;\n\t                }\n\t            } else {\n\t                this.value = next;\n\t            }\n\t        }\n\t        return this.value;\n\t    };\n\t    /**\n\t\t *  Choose randomly from an array weighted options in the form \n\t\t *  {\"state\" : string, \"probability\" : number} or an array of values\n\t\t *  @param  {Array}  options \n\t\t *  @return  {Array}  The randomly selected choice\n\t\t *  @private\n\t\t */\n\t    Tone.CtrlMarkov.prototype._getProbDistribution = function (options) {\n\t        var distribution = [];\n\t        var total = 0;\n\t        var needsNormalizing = false;\n\t        for (var i = 0; i < options.length; i++) {\n\t            var option = options[i];\n\t            if (this.isObject(option)) {\n\t                needsNormalizing = true;\n\t                distribution[i] = option.probability;\n\t            } else {\n\t                distribution[i] = 1 / options.length;\n\t            }\n\t            total += distribution[i];\n\t        }\n\t        if (needsNormalizing) {\n\t            //normalize the values\n\t            for (var j = 0; j < distribution.length; j++) {\n\t                distribution[j] = distribution[j] / total;\n\t            }\n\t        }\n\t        return distribution;\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.CtrlMarkov}  this\n\t\t */\n\t    Tone.CtrlMarkov.prototype.dispose = function () {\n\t        this.values = null;\n\t    };\n\t    return Tone.CtrlMarkov;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Generate patterns from an array of values.\n\t\t *         Has a number of arpeggiation and randomized\n\t\t *         selection patterns. \n\t\t *           <ul>\n\t\t *  \t        <li>\"up\" - cycles upward</li>\n\t\t *  \t\t\t<li>\"down\" - cycles downward</li>\n\t\t *  \t\t\t<li>\"upDown\" - up then and down</li>\n\t\t *  \t\t\t<li>\"downUp\" - cycles down then and up</li>\n\t\t *  \t\t\t<li>\"alternateUp\" - jump up two and down one</li>\n\t\t *  \t\t\t<li>\"alternateDown\" - jump down two and up one</li>\n\t\t *  \t\t\t<li>\"random\" - randomly select an index</li>\n\t\t *  \t\t\t<li>\"randomWalk\" - randomly moves one index away from the current position</li>\n\t\t *  \t\t\t<li>\"randomOnce\" - randomly select an index without repeating until all values have been chosen.</li>\n\t\t *     \t\t</ul>\n\t\t *  @param  {Array}  values   An array of options to choose from.\n\t\t *  @param  {Tone.CtrlPattern.Type=}  type  The name of the pattern.\n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.CtrlPattern = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'values',\n\t            'type'\n\t        ], Tone.CtrlPattern.defaults);\n\t        /**\n\t\t\t *  The array of values to arpeggiate over\n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this.values = options.values;\n\t        /**\n\t\t\t *  The current position in the values array\n\t\t\t *  @type  {Number}\n\t\t\t */\n\t        this.index = 0;\n\t        /**\n\t\t\t *  The type placeholder\n\t\t\t *  @type {Tone.CtrlPattern.Type}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = null;\n\t        /**\n\t\t\t *  Shuffled values for the RandomOnce type\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._shuffled = null;\n\t        /**\n\t\t\t *  The direction of the movement\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._direction = null;\n\t        this.type = options.type;\n\t    };\n\t    Tone.extend(Tone.CtrlPattern);\n\t    /**\n\t\t *  The Control Patterns\n\t\t *  @type  {Object}\n\t\t *  @static\n\t\t */\n\t    Tone.CtrlPattern.Type = {\n\t        Up: 'up',\n\t        Down: 'down',\n\t        UpDown: 'upDown',\n\t        DownUp: 'downUp',\n\t        AlternateUp: 'alternateUp',\n\t        AlternateDown: 'alternateDown',\n\t        Random: 'random',\n\t        RandomWalk: 'randomWalk',\n\t        RandomOnce: 'randomOnce'\n\t    };\n\t    /**\n\t\t *  The default values. \n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.CtrlPattern.defaults = {\n\t        'type': Tone.CtrlPattern.Type.Up,\n\t        'values': []\n\t    };\n\t    /**\n\t\t *  The value at the current index of the pattern.\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.CtrlPattern#\n\t\t *  @type {*}\n\t\t *  @name value\n\t\t */\n\t    Object.defineProperty(Tone.CtrlPattern.prototype, 'value', {\n\t        get: function () {\n\t            //some safeguards\n\t            if (this.values.length === 0) {\n\t                return;\n\t            } else if (this.values.length === 1) {\n\t                return this.values[0];\n\t            }\n\t            this.index = Math.min(this.index, this.values.length - 1);\n\t            var val = this.values[this.index];\n\t            if (this.type === Tone.CtrlPattern.Type.RandomOnce) {\n\t                if (this.values.length !== this._shuffled.length) {\n\t                    this._shuffleValues();\n\t                }\n\t                val = this.values[this._shuffled[this.index]];\n\t            }\n\t            return val;\n\t        }\n\t    });\n\t    /**\n\t\t *  The pattern used to select the next\n\t\t *  item from the values array\n\t\t *  @memberOf Tone.CtrlPattern#\n\t\t *  @type {Tone.CtrlPattern.Type}\n\t\t *  @name type\n\t\t */\n\t    Object.defineProperty(Tone.CtrlPattern.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            this._type = type;\n\t            this._shuffled = null;\n\t            //the first index\n\t            if (this._type === Tone.CtrlPattern.Type.Up || this._type === Tone.CtrlPattern.Type.UpDown || this._type === Tone.CtrlPattern.Type.RandomOnce || this._type === Tone.CtrlPattern.Type.AlternateUp) {\n\t                this.index = 0;\n\t            } else if (this._type === Tone.CtrlPattern.Type.Down || this._type === Tone.CtrlPattern.Type.DownUp || this._type === Tone.CtrlPattern.Type.AlternateDown) {\n\t                this.index = this.values.length - 1;\n\t            }\n\t            //the direction\n\t            if (this._type === Tone.CtrlPattern.Type.UpDown || this._type === Tone.CtrlPattern.Type.AlternateUp) {\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            } else if (this._type === Tone.CtrlPattern.Type.DownUp || this._type === Tone.CtrlPattern.Type.AlternateDown) {\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            }\n\t            //randoms\n\t            if (this._type === Tone.CtrlPattern.Type.RandomOnce) {\n\t                this._shuffleValues();\n\t            } else if (this._type === Tone.CtrlPattern.Random) {\n\t                this.index = Math.floor(Math.random() * this.values.length);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Return the next value given the current position\n\t\t *  and pattern.\n\t\t *  @return {*} The next value\n\t\t */\n\t    Tone.CtrlPattern.prototype.next = function () {\n\t        var type = this.type;\n\t        //choose the next index\n\t        if (type === Tone.CtrlPattern.Type.Up) {\n\t            this.index++;\n\t            if (this.index >= this.values.length) {\n\t                this.index = 0;\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.Down) {\n\t            this.index--;\n\t            if (this.index < 0) {\n\t                this.index = this.values.length - 1;\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.UpDown || type === Tone.CtrlPattern.Type.DownUp) {\n\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t                this.index++;\n\t            } else {\n\t                this.index--;\n\t            }\n\t            if (this.index < 0) {\n\t                this.index = 1;\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            } else if (this.index >= this.values.length) {\n\t                this.index = this.values.length - 2;\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.Random) {\n\t            this.index = Math.floor(Math.random() * this.values.length);\n\t        } else if (type === Tone.CtrlPattern.Type.RandomWalk) {\n\t            if (Math.random() < 0.5) {\n\t                this.index--;\n\t                this.index = Math.max(this.index, 0);\n\t            } else {\n\t                this.index++;\n\t                this.index = Math.min(this.index, this.values.length - 1);\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.RandomOnce) {\n\t            this.index++;\n\t            if (this.index >= this.values.length) {\n\t                this.index = 0;\n\t                //reshuffle the values for next time\n\t                this._shuffleValues();\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.AlternateUp) {\n\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t                this.index += 2;\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            } else {\n\t                this.index -= 1;\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            }\n\t            if (this.index >= this.values.length) {\n\t                this.index = 0;\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.AlternateDown) {\n\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t                this.index += 1;\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            } else {\n\t                this.index -= 2;\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            }\n\t            if (this.index < 0) {\n\t                this.index = this.values.length - 1;\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            }\n\t        }\n\t        return this.value;\n\t    };\n\t    /**\n\t\t *  Shuffles the values and places the results into the _shuffled\n\t\t *  @private\n\t\t */\n\t    Tone.CtrlPattern.prototype._shuffleValues = function () {\n\t        var copy = [];\n\t        this._shuffled = [];\n\t        for (var i = 0; i < this.values.length; i++) {\n\t            copy[i] = i;\n\t        }\n\t        while (copy.length > 0) {\n\t            var randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);\n\t            this._shuffled.push(randVal[0]);\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.CtrlPattern} this\n\t\t */\n\t    Tone.CtrlPattern.prototype.dispose = function () {\n\t        this._shuffled = null;\n\t        this.values = null;\n\t    };\n\t    return Tone.CtrlPattern;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Choose a random value.\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * var randomWalk = new Tone.CtrlRandom({\n\t\t * \t\"min\" : 0,\n\t\t * \t\"max\" : 10,\n\t\t * \t\"integer\" : true\n\t\t * });\n\t\t * randomWalk.eval();\n\t\t *\n\t\t *  @param {Number|Time=} min The minimum return value.\n\t\t *  @param {Number|Time=} max The maximum return value.\n\t\t */\n\t    Tone.CtrlRandom = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'min',\n\t            'max'\n\t        ], Tone.CtrlRandom.defaults);\n\t        /**\n\t\t\t *  The minimum return value\n\t\t\t *  @type  {Number|Time}\n\t\t\t */\n\t        this.min = options.min;\n\t        /**\n\t\t\t *  The maximum return value\n\t\t\t *  @type  {Number|Time}\n\t\t\t */\n\t        this.max = options.max;\n\t        /**\n\t\t\t *  If the return value should be an integer\n\t\t\t *  @type  {Boolean}\n\t\t\t */\n\t        this.integer = options.integer;\n\t    };\n\t    Tone.extend(Tone.CtrlRandom);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.CtrlRandom.defaults = {\n\t        'min': 0,\n\t        'max': 1,\n\t        'integer': false\n\t    };\n\t    /**\n\t\t *  Return a random value between min and max. \n\t\t *  @readOnly\n\t\t *  @memberOf Tone.CtrlRandom#\n\t\t *  @type {*}\n\t\t *  @name value\n\t\t */\n\t    Object.defineProperty(Tone.CtrlRandom.prototype, 'value', {\n\t        get: function () {\n\t            var min = this.toSeconds(this.min);\n\t            var max = this.toSeconds(this.max);\n\t            var rand = Math.random();\n\t            var val = rand * min + (1 - rand) * max;\n\t            if (this.integer) {\n\t                val = Math.floor(val);\n\t            }\n\t            return val;\n\t        }\n\t    });\n\t    return Tone.CtrlRandom;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Buffer loading and storage. Tone.Buffer is used internally by all \n\t\t *          classes that make requests for audio files such as Tone.Player,\n\t\t *          Tone.Sampler and Tone.Convolver.\n\t\t *          <br><br>\n\t\t *          Aside from load callbacks from individual buffers, Tone.Buffer \n\t\t *  \t\tprovides static methods which keep track of the loading progress \n\t\t *  \t\tof all of the buffers. These methods are Tone.Buffer.on(\"load\" / \"progress\" / \"error\")\n\t\t *\n\t\t *  @constructor \n\t\t *  @extends {Tone}\n\t\t *  @param {AudioBuffer|string} url The url to load, or the audio buffer to set. \n\t\t *  @param {Function=} onload A callback which is invoked after the buffer is loaded. \n\t\t *                            It's recommended to use Tone.Buffer.onload instead \n\t\t *                            since it will give you a callback when ALL buffers are loaded.\n\t\t *  @param {Function=} onerror The callback to invoke if there is an error\n\t\t *  @example\n\t\t * var buffer = new Tone.Buffer(\"path/to/sound.mp3\", function(){\n\t\t * \t//the buffer is now available.\n\t\t * \tvar buff = buffer.get();\n\t\t * });\n\t\t */\n\t    Tone.Buffer = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'url',\n\t            'onload',\n\t            'onerror'\n\t        ], Tone.Buffer.defaults);\n\t        /**\n\t\t\t *  stores the loaded AudioBuffer\n\t\t\t *  @type {AudioBuffer}\n\t\t\t *  @private\n\t\t\t */\n\t        this._buffer = null;\n\t        /**\n\t\t\t *  indicates if the buffer should be reversed or not\n\t\t\t *  @type {Boolean}\n\t\t\t *  @private\n\t\t\t */\n\t        this._reversed = options.reverse;\n\t        /**\n\t\t\t *  The XHR\n\t\t\t *  @type  {XMLHttpRequest}\n\t\t\t *  @private\n\t\t\t */\n\t        this._xhr = null;\n\t        if (options.url instanceof AudioBuffer || options.url instanceof Tone.Buffer) {\n\t            this.set(options.url);\n\t            // invoke the onload callback\n\t            if (options.onload) {\n\t                options.onload(this);\n\t            }\n\t        } else if (this.isString(options.url)) {\n\t            this.load(options.url, options.onload, options.onerror);\n\t        }\n\t    };\n\t    Tone.extend(Tone.Buffer);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Buffer.defaults = {\n\t        'url': undefined,\n\t        'reverse': false\n\t    };\n\t    /**\n\t\t *  Pass in an AudioBuffer or Tone.Buffer to set the value\n\t\t *  of this buffer.\n\t\t *  @param {AudioBuffer|Tone.Buffer} buffer the buffer\n\t\t *  @returns {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype.set = function (buffer) {\n\t        if (buffer instanceof Tone.Buffer) {\n\t            this._buffer = buffer.get();\n\t        } else {\n\t            this._buffer = buffer;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  @return {AudioBuffer} The audio buffer stored in the object.\n\t\t */\n\t    Tone.Buffer.prototype.get = function () {\n\t        return this._buffer;\n\t    };\n\t    /**\n\t\t *  Makes an xhr reqest for the selected url then decodes\n\t\t *  the file as an audio buffer. Invokes\n\t\t *  the callback once the audio buffer loads.\n\t\t *  @param {String} url The url of the buffer to load.\n\t\t *                      filetype support depends on the\n\t\t *                      browser.\n\t\t *  @returns {Promise} returns a Promise which resolves with the Tone.Buffer\n\t\t */\n\t    Tone.Buffer.prototype.load = function (url, onload, onerror) {\n\t        var promise = new Promise(function (load, error) {\n\t            this._xhr = Tone.Buffer.load(url, //success\n\t            function (buff) {\n\t                this._xhr = null;\n\t                this.set(buff);\n\t                load(this);\n\t                if (onload) {\n\t                    onload(this);\n\t                }\n\t            }.bind(this), //error\n\t            function (err) {\n\t                this._xhr = null;\n\t                error(err);\n\t                if (onerror) {\n\t                    onerror(err);\n\t                }\n\t            }.bind(this));\n\t        }.bind(this));\n\t        return promise;\n\t    };\n\t    /**\n\t\t *  dispose and disconnect\n\t\t *  @returns {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype.dispose = function () {\n\t        Tone.Emitter.prototype.dispose.call(this);\n\t        this._buffer = null;\n\t        if (this._xhr) {\n\t            Tone.Buffer._currentDownloads--;\n\t            this._xhr.abort();\n\t            this._xhr = null;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * If the buffer is loaded or not\n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Boolean}\n\t\t * @name loaded\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'loaded', {\n\t        get: function () {\n\t            return this.length > 0;\n\t        }\n\t    });\n\t    /**\n\t\t * The duration of the buffer. \n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Number}\n\t\t * @name duration\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'duration', {\n\t        get: function () {\n\t            if (this._buffer) {\n\t                return this._buffer.duration;\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The length of the buffer in samples\n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Number}\n\t\t * @name length\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'length', {\n\t        get: function () {\n\t            if (this._buffer) {\n\t                return this._buffer.length;\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The number of discrete audio channels. Returns 0 if no buffer\n\t\t * is loaded.\n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Number}\n\t\t * @name numberOfChannels\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'numberOfChannels', {\n\t        get: function () {\n\t            if (this._buffer) {\n\t                return this._buffer.numberOfChannels;\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Set the audio buffer from the array\n\t\t *  @param {Float32Array} array The array to fill the audio buffer\n\t\t *  @param {Number} [channels=1] The number of channels contained in the array. \n\t\t *                               If the channel is more than 1, the input array\n\t\t *                               is expected to be a multidimensional array\n\t\t *                               with dimensions equal to the number of channels.\n\t\t *  @return {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype.fromArray = function (array) {\n\t        var isMultidimensional = array[0].length > 0;\n\t        var channels = isMultidimensional ? array.length : 1;\n\t        var len = isMultidimensional ? array[0].length : array.length;\n\t        var buffer = this.context.createBuffer(channels, len, this.context.sampleRate);\n\t        if (!isMultidimensional && channels === 1) {\n\t            array = [array];\n\t        }\n\t        for (var c = 0; c < channels; c++) {\n\t            if (this.isFunction(buffer.copyToChannel)) {\n\t                buffer.copyToChannel(array[c], c);\n\t            } else {\n\t                var channel = buffer.getChannelData(c);\n\t                var channelArray = array[c];\n\t                for (var i = 0; i < channelArray.length; i++) {\n\t                    channel[i] = channelArray[i];\n\t                }\n\t            }\n\t        }\n\t        this._buffer = buffer;\n\t        return this;\n\t    };\n\t    /**\n\t\t * \tGet the buffer as an array. Single channel buffers will return a 1-dimensional \n\t\t * \tFloat32Array, and multichannel buffers will return multidimensional arrays.\n\t\t *  @param {Number=} channel Optionally only copy a single channel from the array.\n\t\t *  @return {Array}\n\t\t */\n\t    Tone.Buffer.prototype.toArray = function (channel) {\n\t        if (this.isNumber(channel)) {\n\t            return this._buffer.getChannelData(channel);\n\t        } else {\n\t            var ret = [];\n\t            for (var c = 0; c < this.numberOfChannels; c++) {\n\t                ret[c] = new Float32Array(this.length);\n\t                if (this.isFunction(this._buffer.copyFromChannel)) {\n\t                    this._buffer.copyFromChannel(ret[c], c);\n\t                } else {\n\t                    var channelData = this._buffer.getChannelData(c);\n\t                    var retArray = ret[c];\n\t                    for (var i = 0; i < channelData.length; i++) {\n\t                        retArray[i] = channelData[i];\n\t                    }\n\t                }\n\t            }\n\t            if (ret.length === 1) {\n\t                return ret[0];\n\t            } else {\n\t                return ret;\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Cut a subsection of the array and return a buffer of the\n\t\t *  subsection. Does not modify the original buffer\n\t\t *  @param {Time} start The time to start the slice\n\t\t *  @param {Time=} end The end time to slice. If none is given\n\t\t *                     will default to the end of the buffer\n\t\t *  @return {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype.slice = function (start, end) {\n\t        end = this.defaultArg(end, this.duration);\n\t        var startSamples = Math.floor(this.context.sampleRate * this.toSeconds(start));\n\t        var endSamples = Math.floor(this.context.sampleRate * this.toSeconds(end));\n\t        var replacement = [];\n\t        for (var i = 0; i < this.numberOfChannels; i++) {\n\t            replacement[i] = this.toArray(i).slice(startSamples, endSamples);\n\t        }\n\t        var retBuffer = new Tone.Buffer().fromArray(replacement);\n\t        return retBuffer;\n\t    };\n\t    /**\n\t\t *  Reverse the buffer.\n\t\t *  @private\n\t\t *  @return {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype._reverse = function () {\n\t        if (this.loaded) {\n\t            for (var i = 0; i < this._buffer.numberOfChannels; i++) {\n\t                Array.prototype.reverse.call(this._buffer.getChannelData(i));\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * Reverse the buffer.\n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Boolean}\n\t\t * @name reverse\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'reverse', {\n\t        get: function () {\n\t            return this._reversed;\n\t        },\n\t        set: function (rev) {\n\t            if (this._reversed !== rev) {\n\t                this._reversed = rev;\n\t                this._reverse();\n\t            }\n\t        }\n\t    });\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // STATIC METHODS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //statically inherits Emitter methods\n\t    Tone.Emitter.mixin(Tone.Buffer);\n\t    /**\n\t\t *  the static queue for all of the xhr requests\n\t\t *  @type {Array}\n\t\t *  @private\n\t\t */\n\t    Tone.Buffer._downloadQueue = [];\n\t    /**\n\t\t *  the total number of downloads\n\t\t *  @type {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Buffer._currentDownloads = 0;\n\t    /**\n\t\t *  A path which is prefixed before every url.\n\t\t *  @type  {String}\n\t\t *  @static\n\t\t */\n\t    Tone.Buffer.baseUrl = '';\n\t    /**\n\t\t *  Loads a url using XMLHttpRequest.\n\t\t *  @param {String} url\n\t\t *  @param {Function} onload\n\t\t *  @param {Function} onerror\n\t\t *  @param {Function} onprogress\n\t\t *  @return {XMLHttpRequest}\n\t\t */\n\t    Tone.Buffer.load = function (url, onload, onerror) {\n\t        //default\n\t        onload = onload || Tone.noOp;\n\t        function onError(e) {\n\t            Tone.Buffer._currentDownloads--;\n\t            if (onerror) {\n\t                onerror(e);\n\t            } else {\n\t                throw new Error(e);\n\t            }\n\t        }\n\t        function onProgress() {\n\t            //calculate the progress\n\t            var totalProgress = 0;\n\t            for (var i = 0; i < Tone.Buffer._downloadQueue.length; i++) {\n\t                totalProgress += Tone.Buffer._downloadQueue[i].progress;\n\t            }\n\t            Tone.Buffer.emit('progress', totalProgress / Tone.Buffer._downloadQueue.length);\n\t        }\n\t        var request = new XMLHttpRequest();\n\t        request.open('GET', Tone.Buffer.baseUrl + url, true);\n\t        request.responseType = 'arraybuffer';\n\t        //start out as 0\n\t        request.progress = 0;\n\t        Tone.Buffer._currentDownloads++;\n\t        Tone.Buffer._downloadQueue.push(request);\n\t        request.addEventListener('load', function () {\n\t            if (request.status === 200) {\n\t                Tone.context.decodeAudioData(request.response, function (buff) {\n\t                    request.progress = 1;\n\t                    onProgress();\n\t                    onload(buff);\n\t                    Tone.Buffer._currentDownloads--;\n\t                    if (Tone.Buffer._currentDownloads === 0) {\n\t                        // clear the downloads\n\t                        Tone.Buffer._downloadQueue = [];\n\t                        //emit the event at the end\n\t                        Tone.Buffer.emit('load');\n\t                    }\n\t                }, function () {\n\t                    onError('Tone.Buffer: could not decode audio data: ' + url);\n\t                });\n\t            } else {\n\t                onError('Tone.Buffer: could not locate file: ' + url);\n\t            }\n\t        });\n\t        request.addEventListener('error', onError);\n\t        request.addEventListener('progress', function (event) {\n\t            if (event.lengthComputable) {\n\t                //only go to 95%, the last 5% is when the audio is decoded\n\t                request.progress = event.loaded / event.total * 0.95;\n\t                onProgress();\n\t            }\n\t        });\n\t        request.send();\n\t        return request;\n\t    };\n\t    /**\n\t\t *  Checks a url's extension to see if the current browser can play that file type.\n\t\t *  @param {String} url The url/extension to test\n\t\t *  @return {Boolean} If the file extension can be played\n\t\t *  @static\n\t\t *  @example\n\t\t * Tone.Buffer.supportsType(\"wav\"); //returns true\n\t\t * Tone.Buffer.supportsType(\"path/to/file.wav\"); //returns true\n\t\t */\n\t    Tone.Buffer.supportsType = function (url) {\n\t        var extension = url.split('.');\n\t        extension = extension[extension.length - 1];\n\t        var response = document.createElement('audio').canPlayType('audio/' + extension);\n\t        return response !== '';\n\t    };\n\t    return Tone.Buffer;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class A data structure for holding multiple buffers.\n\t\t *  \n\t\t *  @param  {Object|Array}    urls      An object literal or array\n\t\t *                                      of urls to load.\n\t\t *  @param  {Function=}  callback  The callback to invoke when\n\t\t *                                 the buffers are loaded. \n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * //load a whole bank of piano samples\n\t\t * var pianoSamples = new Tone.Buffers({\n\t\t * \t\"C4\" : \"path/to/C4.mp3\"\n\t\t * \t\"C#4\" : \"path/to/C#4.mp3\"\n\t\t * \t\"D4\" : \"path/to/D4.mp3\"\n\t\t * \t\"D#4\" : \"path/to/D#4.mp3\"\n\t\t * \t...\n\t\t * }, function(){\n\t\t * \t//play one of the samples when they all load\n\t\t * \tplayer.buffer = pianoSamples.get(\"C4\");\n\t\t * \tplayer.start();\n\t\t * });\n\t\t * \n\t\t */\n\t    Tone.Buffers = function (urls, onload, baseUrl) {\n\t        /**\n\t\t\t *  All of the buffers\n\t\t\t *  @type  {Object}\n\t\t\t *  @private\n\t\t\t */\n\t        this._buffers = {};\n\t        /**\n\t\t\t *  A path which is prefixed before every url.\n\t\t\t *  @type  {String}\n\t\t\t */\n\t        this.baseUrl = this.defaultArg(baseUrl, '');\n\t        urls = this._flattenUrls(urls);\n\t        this._loadingCount = 0;\n\t        //add each one\n\t        for (var key in urls) {\n\t            this._loadingCount++;\n\t            this.add(key, urls[key], this._bufferLoaded.bind(this, onload));\n\t        }\n\t    };\n\t    Tone.extend(Tone.Buffers);\n\t    /**\n\t\t *  True if the buffers object has a buffer by that name.\n\t\t *  @param  {String|Number}  name  The key or index of the \n\t\t *                                 buffer.\n\t\t *  @return  {Boolean}\n\t\t */\n\t    Tone.Buffers.prototype.has = function (name) {\n\t        return this._buffers.hasOwnProperty(name);\n\t    };\n\t    /**\n\t\t *  Get a buffer by name. If an array was loaded, \n\t\t *  then use the array index.\n\t\t *  @param  {String|Number}  name  The key or index of the \n\t\t *                                 buffer.\n\t\t *  @return  {Tone.Buffer}\n\t\t */\n\t    Tone.Buffers.prototype.get = function (name) {\n\t        if (this.has(name)) {\n\t            return this._buffers[name];\n\t        } else {\n\t            throw new Error('Tone.Buffers: no buffer named ' + name);\n\t        }\n\t    };\n\t    /**\n\t\t *  A buffer was loaded. decrement the counter.\n\t\t *  @param  {Function}  callback \n\t\t *  @private\n\t\t */\n\t    Tone.Buffers.prototype._bufferLoaded = function (callback) {\n\t        this._loadingCount--;\n\t        if (this._loadingCount === 0 && callback) {\n\t            callback(this);\n\t        }\n\t    };\n\t    /**\n\t\t * If the buffers are loaded or not\n\t\t * @memberOf Tone.Buffers#\n\t\t * @type {Boolean}\n\t\t * @name loaded\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffers.prototype, 'loaded', {\n\t        get: function () {\n\t            var isLoaded = true;\n\t            for (var buffName in this._buffers) {\n\t                var buff = this.get(buffName);\n\t                isLoaded = isLoaded && buff.loaded;\n\t            }\n\t            return isLoaded;\n\t        }\n\t    });\n\t    /**\n\t\t *  Add a buffer by name and url to the Buffers\n\t\t *  @param  {String}    name      A unique name to give\n\t\t *                                the buffer\n\t\t *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer, \n\t\t *                                                 or a buffer which will be added\n\t\t *                                                 with the given name.\n\t\t *  @param  {Function=}  callback  The callback to invoke \n\t\t *                                 when the url is loaded.\n\t\t */\n\t    Tone.Buffers.prototype.add = function (name, url, callback) {\n\t        callback = this.defaultArg(callback, Tone.noOp);\n\t        if (url instanceof Tone.Buffer) {\n\t            this._buffers[name] = url;\n\t            callback(this);\n\t        } else if (url instanceof AudioBuffer) {\n\t            this._buffers[name] = new Tone.Buffer(url);\n\t            callback(this);\n\t        } else if (this.isString(url)) {\n\t            this._buffers[name] = new Tone.Buffer(this.baseUrl + url, callback);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Flatten an object into a single depth object. \n\t\t *  thanks to https://gist.github.com/penguinboy/762197\n\t\t *  @param   {Object} ob \t\n\t\t *  @return  {Object}    \n\t\t *  @private\n\t\t */\n\t    Tone.Buffers.prototype._flattenUrls = function (ob) {\n\t        var toReturn = {};\n\t        for (var i in ob) {\n\t            if (!ob.hasOwnProperty(i))\n\t                continue;\n\t            if (this.isObject(ob[i])) {\n\t                var flatObject = this._flattenUrls(ob[i]);\n\t                for (var x in flatObject) {\n\t                    if (!flatObject.hasOwnProperty(x))\n\t                        continue;\n\t                    toReturn[i + '.' + x] = flatObject[x];\n\t                }\n\t            } else {\n\t                toReturn[i] = ob[i];\n\t            }\n\t        }\n\t        return toReturn;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Buffers} this\n\t\t */\n\t    Tone.Buffers.prototype.dispose = function () {\n\t        for (var name in this._buffers) {\n\t            this._buffers[name].dispose();\n\t        }\n\t        this._buffers = null;\n\t        return this;\n\t    };\n\t    return Tone.Buffers;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  buses are another way of routing audio\n\t\t *\n\t\t *  augments Tone.prototype to include send and recieve\n\t\t */\n\t    /**\n\t\t  *  All of the routes\n\t\t  *  \n\t\t  *  @type {Object}\n\t\t  *  @static\n\t\t  *  @private\n\t\t  */\n\t    var Buses = {};\n\t    /**\n\t\t *  Send this signal to the channel name. \n\t\t *  @param  {string} channelName A named channel to send the signal to.\n\t\t *  @param  {Decibels} amount The amount of the source to send to the bus. \n\t\t *  @return {GainNode} The gain node which connects this node to the desired channel. \n\t\t *                     Can be used to adjust the levels of the send.\n\t\t *  @example\n\t\t * source.send(\"reverb\", -12);\n\t\t */\n\t    Tone.prototype.send = function (channelName, amount) {\n\t        if (!Buses.hasOwnProperty(channelName)) {\n\t            Buses[channelName] = this.context.createGain();\n\t        }\n\t        amount = this.defaultArg(amount, 0);\n\t        var sendKnob = new Tone.Gain(amount, Tone.Type.Decibels);\n\t        this.output.chain(sendKnob, Buses[channelName]);\n\t        return sendKnob;\n\t    };\n\t    /**\n\t\t *  Recieve the input from the desired channelName to the input\n\t\t *\n\t\t *  @param  {string} channelName A named channel to send the signal to.\n\t\t *  @param {AudioNode} [input] If no input is selected, the\n\t\t *                                         input of the current node is\n\t\t *                                         chosen. \n\t\t *  @returns {Tone} this\n\t\t *  @example\n\t\t * reverbEffect.receive(\"reverb\");\n\t\t */\n\t    Tone.prototype.receive = function (channelName, input) {\n\t        if (!Buses.hasOwnProperty(channelName)) {\n\t            Buses[channelName] = this.context.createGain();\n\t        }\n\t        if (this.isUndef(input)) {\n\t            input = this.input;\n\t        }\n\t        Buses[channelName].connect(input);\n\t        return this;\n\t    };\n\t    //remove all the send/receives when a new audio context is passed in\n\t    Tone._initAudioContext(function () {\n\t        Buses = {};\n\t    });\n\t    return Tone;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Both Tone.Panner3D and Tone.Listener have a position in 3D space \n\t\t *          using a right-handed cartesian coordinate system. \n\t\t *          The units used in the coordinate system are not defined; \n\t\t *          these coordinates are independent/invariant of any particular \n\t\t *          units such as meters or feet. Tone.Panner3D objects have an forward \n\t\t *          vector representing the direction the sound is projecting. Additionally, \n\t\t *          they have a sound cone representing how directional the sound is. \n\t\t *          For example, the sound could be omnidirectional, in which case it would \n\t\t *          be heard anywhere regardless of its forward, or it can be more directional \n\t\t *          and heard only if it is facing the listener. Tone.Listener objects \n\t\t *          (representing a person's ears) have an forward and up vector \n\t\t *          representing in which direction the person is facing. Because both the \n\t\t *          source stream and the listener can be moving, they both have a velocity \n\t\t *          vector representing both the speed and direction of movement. Taken together, \n\t\t *          these two velocities can be used to generate a doppler shift effect which changes the pitch.\n\t\t *          <br><br>\n\t\t *          Note: the position of the Listener will have no effect on nodes not connected to a Tone.Panner3D\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @singleton\n\t\t *  @param {Number} positionX The initial x position.\n\t\t *  @param {Number} positionY The initial y position.\n\t\t *  @param {Number} positionZ The initial z position.\n\t\t */\n\t    Tone.Listener = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'positionX',\n\t            'positionY',\n\t            'positionZ'\n\t        ], ListenerConstructor.defaults);\n\t        /**\n\t\t\t *  The listener node\n\t\t\t *  @type {AudioListener}\n\t\t\t *  @private\n\t\t\t */\n\t        this._listener = this.context.listener;\n\t        /**\n\t\t\t *  Holds the current forward orientation\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._orientation = [\n\t            options.forwardX,\n\t            options.forwardY,\n\t            options.forwardZ,\n\t            options.upX,\n\t            options.upY,\n\t            options.upZ\n\t        ];\n\t        /**\n\t\t\t *  Holds the current position\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._position = [\n\t            options.positionX,\n\t            options.positionY,\n\t            options.positionZ\n\t        ];\n\t        // set the default position/forward\n\t        this.forwardX = options.forwardX;\n\t        this.forwardY = options.forwardY;\n\t        this.forwardZ = options.forwardZ;\n\t        this.upX = options.upX;\n\t        this.upY = options.upY;\n\t        this.upZ = options.upZ;\n\t        this.positionX = options.positionX;\n\t        this.positionY = options.positionY;\n\t        this.positionZ = options.positionZ;\n\t    };\n\t    Tone.extend(Tone.Listener);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t *  Defaults according to the specification\n\t\t */\n\t    Tone.Listener.defaults = {\n\t        'positionX': 0,\n\t        'positionY': 0,\n\t        'positionZ': 0,\n\t        'forwardX': 0,\n\t        'forwardY': 0,\n\t        'forwardZ': 1,\n\t        'upX': 0,\n\t        'upY': 1,\n\t        'upZ': 0\n\t    };\n\t    Tone.Listener.prototype._rampTimeConstant = 0.3;\n\t    /**\n\t\t *  Sets the position of the listener in 3d space.\t\n\t\t *  @param  {Number}  x\n\t\t *  @param  {Number}  y\n\t\t *  @param  {Number}  z\n\t\t *  @return {Tone.Listener} this\n\t\t */\n\t    Tone.Listener.prototype.setPosition = function (x, y, z) {\n\t        if (this._listener.positionX) {\n\t            var now = this.now();\n\t            this._listener.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t            this._listener.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t            this._listener.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t        } else {\n\t            this._listener.setPosition(x, y, z);\n\t        }\n\t        this._position = Array.prototype.slice.call(arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sets the orientation of the listener using two vectors, the forward\n\t\t *  vector (which direction the listener is facing) and the up vector \n\t\t *  (which the up direction of the listener). An up vector\n\t\t *  of 0, 0, 1 is equivalent to the listener standing up in the Z direction. \n\t\t *  @param  {Number}  x\n\t\t *  @param  {Number}  y\n\t\t *  @param  {Number}  z\n\t\t *  @param  {Number}  upX\n\t\t *  @param  {Number}  upY\n\t\t *  @param  {Number}  upZ\n\t\t *  @return {Tone.Listener} this\n\t\t */\n\t    Tone.Listener.prototype.setOrientation = function (x, y, z, upX, upY, upZ) {\n\t        if (this._listener.forwardX) {\n\t            var now = this.now();\n\t            this._listener.forwardX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t            this._listener.forwardY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t            this._listener.forwardZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t            this._listener.upX.setTargetAtTime(upX, now, this._rampTimeConstant);\n\t            this._listener.upY.setTargetAtTime(upY, now, this._rampTimeConstant);\n\t            this._listener.upZ.setTargetAtTime(upZ, now, this._rampTimeConstant);\n\t        } else {\n\t            this._listener.setOrientation(x, y, z, upX, upY, upZ);\n\t        }\n\t        this._orientation = Array.prototype.slice.call(arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The x position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name positionX\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'positionX', {\n\t        set: function (pos) {\n\t            this._position[0] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[0];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name positionY\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'positionY', {\n\t        set: function (pos) {\n\t            this._position[1] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[1];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name positionZ\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'positionZ', {\n\t        set: function (pos) {\n\t            this._position[2] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[2];\n\t        }\n\t    });\n\t    /**\n\t\t *  The x coordinate of the listeners front direction. i.e. \n\t\t *  which way they are facing.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name forwardX\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'forwardX', {\n\t        set: function (pos) {\n\t            this._orientation[0] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[0];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y coordinate of the listeners front direction. i.e. \n\t\t *  which way they are facing.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name forwardY\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'forwardY', {\n\t        set: function (pos) {\n\t            this._orientation[1] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[1];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z coordinate of the listeners front direction. i.e. \n\t\t *  which way they are facing.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name forwardZ\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'forwardZ', {\n\t        set: function (pos) {\n\t            this._orientation[2] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[2];\n\t        }\n\t    });\n\t    /**\n\t\t *  The x coordinate of the listener's up direction. i.e.\n\t\t *  the direction the listener is standing in.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name upX\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'upX', {\n\t        set: function (pos) {\n\t            this._orientation[3] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[3];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y coordinate of the listener's up direction. i.e.\n\t\t *  the direction the listener is standing in.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name upY\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'upY', {\n\t        set: function (pos) {\n\t            this._orientation[4] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[4];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z coordinate of the listener's up direction. i.e.\n\t\t *  the direction the listener is standing in.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name upZ\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'upZ', {\n\t        set: function (pos) {\n\t            this._orientation[5] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[5];\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Listener} this\n\t\t */\n\t    Tone.Listener.prototype.dispose = function () {\n\t        this._listener.disconnect();\n\t        this._listener = null;\n\t        this._orientation = null;\n\t        this._position = null;\n\t        return this;\n\t    };\n\t    //SINGLETON SETUP\n\t    var ListenerConstructor = Tone.Listener;\n\t    Tone._initAudioContext(function () {\n\t        if (typeof Tone.Listener === 'function') {\n\t            //a single listener object\n\t            Tone.Listener = new Tone.Listener();\n\t        } else {\n\t            //make new Listener insides\n\t            ListenerConstructor.call(Tone.Listener);\n\t        }\n\t    });\n\t    //END SINGLETON SETUP\n\t    return Tone.Listener;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t * \t@class  Tone.Effect is the base class for effects. Connect the effect between\n\t\t * \t        the effectSend and effectReturn GainNodes, then control the amount of\n\t\t * \t        effect which goes to the output using the wet control.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {NormalRange|Object} [wet] The starting wet value. \n\t\t */\n\t    Tone.Effect = function () {\n\t        this.createInsOuts(1, 1);\n\t        //get all of the defaults\n\t        var options = this.optionsObject(arguments, ['wet'], Tone.Effect.defaults);\n\t        /**\n\t\t\t *  the drywet knob to control the amount of effect\n\t\t\t *  @type {Tone.CrossFade}\n\t\t\t *  @private\n\t\t\t */\n\t        this._dryWet = new Tone.CrossFade(options.wet);\n\t        /**\n\t\t\t *  The wet control is how much of the effected\n\t\t\t *  will pass through to the output. 1 = 100% effected\n\t\t\t *  signal, 0 = 100% dry signal. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.wet = this._dryWet.fade;\n\t        /**\n\t\t\t *  connect the effectSend to the input of hte effect\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectSend = new Tone.Gain();\n\t        /**\n\t\t\t *  connect the output of the effect to the effectReturn\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectReturn = new Tone.Gain();\n\t        //connections\n\t        this.input.connect(this._dryWet.a);\n\t        this.input.connect(this.effectSend);\n\t        this.effectReturn.connect(this._dryWet.b);\n\t        this._dryWet.connect(this.output);\n\t        this._readOnly(['wet']);\n\t    };\n\t    Tone.extend(Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Effect.defaults = { 'wet': 1 };\n\t    /**\n\t\t *  chains the effect in between the effectSend and effectReturn\n\t\t *  @param  {Tone} effect\n\t\t *  @private\n\t\t *  @returns {Tone.Effect} this\n\t\t */\n\t    Tone.Effect.prototype.connectEffect = function (effect) {\n\t        this.effectSend.chain(effect, this.effectReturn);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Effect} this\n\t\t */\n\t    Tone.Effect.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._dryWet.dispose();\n\t        this._dryWet = null;\n\t        this.effectSend.dispose();\n\t        this.effectSend = null;\n\t        this.effectReturn.dispose();\n\t        this.effectReturn = null;\n\t        this._writable(['wet']);\n\t        this.wet = null;\n\t        return this;\n\t    };\n\t    return Tone.Effect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.\n\t\t *         Setting the LFO rate and depth allows for control over the filter modulation rate \n\t\t *         and depth.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Time|Object} [frequency] The rate of the LFO.\n\t\t *  @param {Frequency=} baseFrequency The lower value of the LFOs oscillation\n\t \t *  @param {Frequency=} octaves The number of octaves above the baseFrequency\n\t\t *  @example\n\t\t * //create an autofilter and start it's LFO\n\t\t * var autoFilter = new Tone.AutoFilter(\"4n\").toMaster().start();\n\t\t * //route an oscillator through the filter and start it\n\t\t * var oscillator = new Tone.Oscillator().connect(autoFilter).start();\n\t\t */\n\t    Tone.AutoFilter = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'baseFrequency',\n\t            'octaves'\n\t        ], Tone.AutoFilter.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  the lfo which drives the filter cutoff\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfo = new Tone.LFO({\n\t            'frequency': options.frequency,\n\t            'amplitude': options.depth\n\t        });\n\t        /**\n\t\t\t * The range of the filter modulating between the min and max frequency. \n\t\t\t * 0 = no modulation. 1 = full modulation.\n\t\t\t * @type {NormalRange}\n\t\t\t * @signal\n\t\t\t */\n\t        this.depth = this._lfo.amplitude;\n\t        /**\n\t\t\t * How fast the filter modulates between min and max. \n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t */\n\t        this.frequency = this._lfo.frequency;\n\t        /**\n\t\t\t *  The filter node\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.filter = new Tone.Filter(options.filter);\n\t        /**\n\t\t\t *  The octaves placeholder\n\t\t\t *  @type {Positive}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = 0;\n\t        //connections\n\t        this.connectEffect(this.filter);\n\t        this._lfo.connect(this.filter.frequency);\n\t        this.type = options.type;\n\t        this._readOnly([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.octaves = options.octaves;\n\t        this.baseFrequency = options.baseFrequency;\n\t    };\n\t    //extend Effect\n\t    Tone.extend(Tone.AutoFilter, Tone.Effect);\n\t    /**\n\t\t *  defaults\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.AutoFilter.defaults = {\n\t        'frequency': 1,\n\t        'type': 'sine',\n\t        'depth': 1,\n\t        'baseFrequency': 200,\n\t        'octaves': 2.6,\n\t        'filter': {\n\t            'type': 'lowpass',\n\t            'rolloff': -12,\n\t            'Q': 1\n\t        }\n\t    };\n\t    /**\n\t\t * Start the effect.\n\t\t * @param {Time} [time=now] When the LFO will start. \n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.start = function (time) {\n\t        this._lfo.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Stop the effect.\n\t\t * @param {Time} [time=now] When the LFO will stop. \n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.stop = function (time) {\n\t        this._lfo.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Sync the filter to the transport.\n\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t *                               Transport has started. \n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.sync = function (delay) {\n\t        this._lfo.sync(delay);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Unsync the filter from the transport.\n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.unsync = function () {\n\t        this._lfo.unsync();\n\t        return this;\n\t    };\n\t    /**\n\t\t * Type of oscillator attached to the AutoFilter. \n\t\t * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n\t\t * @memberOf Tone.AutoFilter#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.AutoFilter.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfo.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfo.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The minimum value of the filter's cutoff frequency.\n\t\t * @memberOf Tone.AutoFilter#\n\t\t * @type {Frequency}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.AutoFilter.prototype, 'baseFrequency', {\n\t        get: function () {\n\t            return this._lfo.min;\n\t        },\n\t        set: function (freq) {\n\t            this._lfo.min = this.toFrequency(freq);\n\t            //and set the max\n\t            this.octaves = this._octaves;\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum value of the filter's cutoff frequency. \n\t\t * @memberOf Tone.AutoFilter#\n\t\t * @type {Positive}\n\t\t * @name octaves\n\t\t */\n\t    Object.defineProperty(Tone.AutoFilter.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (oct) {\n\t            this._octaves = oct;\n\t            this._lfo.max = this.baseFrequency * Math.pow(2, oct);\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._lfo.dispose();\n\t        this._lfo = null;\n\t        this.filter.dispose();\n\t        this.filter = null;\n\t        this._writable([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.frequency = null;\n\t        this.depth = null;\n\t        return this;\n\t    };\n\t    return Tone.AutoFilter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.AutoPanner is a Tone.Panner with an LFO connected to the pan amount. \n\t\t *         More on using autopanners [here](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Frequency|Object} [frequency] Rate of left-right oscillation. \n\t\t *  @example\n\t\t * //create an autopanner and start it's LFO\n\t\t * var autoPanner = new Tone.AutoPanner(\"4n\").toMaster().start();\n\t\t * //route an oscillator through the panner and start it\n\t\t * var oscillator = new Tone.Oscillator().connect(autoPanner).start();\n\t\t */\n\t    Tone.AutoPanner = function () {\n\t        var options = this.optionsObject(arguments, ['frequency'], Tone.AutoPanner.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  the lfo which drives the panning\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfo = new Tone.LFO({\n\t            'frequency': options.frequency,\n\t            'amplitude': options.depth,\n\t            'min': -1,\n\t            'max': 1\n\t        });\n\t        /**\n\t\t\t * The amount of panning between left and right. \n\t\t\t * 0 = always center. 1 = full range between left and right. \n\t\t\t * @type {NormalRange}\n\t\t\t * @signal\n\t\t\t */\n\t        this.depth = this._lfo.amplitude;\n\t        /**\n\t\t\t *  the panner node which does the panning\n\t\t\t *  @type {Tone.Panner}\n\t\t\t *  @private\n\t\t\t */\n\t        this._panner = new Tone.Panner();\n\t        /**\n\t\t\t * How fast the panner modulates between left and right. \n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t */\n\t        this.frequency = this._lfo.frequency;\n\t        //connections\n\t        this.connectEffect(this._panner);\n\t        this._lfo.connect(this._panner.pan);\n\t        this.type = options.type;\n\t        this._readOnly([\n\t            'depth',\n\t            'frequency'\n\t        ]);\n\t    };\n\t    //extend Effect\n\t    Tone.extend(Tone.AutoPanner, Tone.Effect);\n\t    /**\n\t\t *  defaults\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.AutoPanner.defaults = {\n\t        'frequency': 1,\n\t        'type': 'sine',\n\t        'depth': 1\n\t    };\n\t    /**\n\t\t * Start the effect.\n\t\t * @param {Time} [time=now] When the LFO will start. \n\t\t * @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.start = function (time) {\n\t        this._lfo.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Stop the effect.\n\t\t * @param {Time} [time=now] When the LFO will stop. \n\t\t * @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.stop = function (time) {\n\t        this._lfo.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Sync the panner to the transport.\n\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t *                               Transport has started. \n\t\t * @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.sync = function (delay) {\n\t        this._lfo.sync(delay);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Unsync the panner from the transport\n\t\t * @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.unsync = function () {\n\t        this._lfo.unsync();\n\t        return this;\n\t    };\n\t    /**\n\t\t * Type of oscillator attached to the AutoFilter. \n\t\t * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n\t\t * @memberOf Tone.AutoFilter#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.AutoPanner.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfo.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfo.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._lfo.dispose();\n\t        this._lfo = null;\n\t        this._panner.dispose();\n\t        this._panner = null;\n\t        this._writable([\n\t            'depth',\n\t            'frequency'\n\t        ]);\n\t        this.frequency = null;\n\t        this.depth = null;\n\t        return this;\n\t    };\n\t    return Tone.AutoPanner;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.AutoWah connects a Tone.Follower to a bandpass filter (Tone.Filter).\n\t\t *          The frequency of the filter is adjusted proportionally to the \n\t\t *          incoming signal's amplitude. Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Frequency|Object} [baseFrequency] The frequency the filter is set \n\t\t *                                            to at the low point of the wah\n\t\t *  @param {Positive} [octaves] The number of octaves above the baseFrequency\n\t\t *                                the filter will sweep to when fully open\n\t\t *  @param {Decibels} [sensitivity] The decibel threshold sensitivity for \n\t\t *                                   the incoming signal. Normal range of -40 to 0. \n\t\t *  @example\n\t\t * var autoWah = new Tone.AutoWah(50, 6, -30).toMaster();\n\t\t * //initialize the synth and connect to autowah\n\t\t * var synth = new Synth.connect(autoWah);\n\t\t * //Q value influences the effect of the wah - default is 2\n\t\t * autoWah.Q.value = 6;\n\t\t * //more audible on higher notes\n\t\t * synth.triggerAttackRelease(\"C4\", \"8n\")\n\t\t */\n\t    Tone.AutoWah = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'baseFrequency',\n\t            'octaves',\n\t            'sensitivity'\n\t        ], Tone.AutoWah.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  The envelope follower. Set the attack/release\n\t\t\t *  timing to adjust how the envelope is followed. \n\t\t\t *  @type {Tone.Follower}\n\t\t\t *  @private\n\t\t\t */\n\t        this.follower = new Tone.Follower(options.follower);\n\t        /**\n\t\t\t *  scales the follower value to the frequency domain\n\t\t\t *  @type {Tone}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sweepRange = new Tone.ScaleExp(0, 1, 0.5);\n\t        /**\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._baseFrequency = options.baseFrequency;\n\t        /**\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = options.octaves;\n\t        /**\n\t\t\t *  the input gain to adjust the sensitivity\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._inputBoost = new Tone.Gain();\n\t        /**\n\t\t\t *  @type {BiquadFilterNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._bandpass = new Tone.Filter({\n\t            'rolloff': -48,\n\t            'frequency': 0,\n\t            'Q': options.Q\n\t        });\n\t        /**\n\t\t\t *  @type {Tone.Filter}\n\t\t\t *  @private\n\t\t\t */\n\t        this._peaking = new Tone.Filter(0, 'peaking');\n\t        this._peaking.gain.value = options.gain;\n\t        /**\n\t\t\t * The gain of the filter.\n\t\t\t * @type {Number}\n\t\t\t * @signal\n\t\t\t */\n\t        this.gain = this._peaking.gain;\n\t        /**\n\t\t\t * The quality of the filter.\n\t\t\t * @type {Positive}\n\t\t\t * @signal\n\t\t\t */\n\t        this.Q = this._bandpass.Q;\n\t        //the control signal path\n\t        this.effectSend.chain(this._inputBoost, this.follower, this._sweepRange);\n\t        this._sweepRange.connect(this._bandpass.frequency);\n\t        this._sweepRange.connect(this._peaking.frequency);\n\t        //the filtered path\n\t        this.effectSend.chain(this._bandpass, this._peaking, this.effectReturn);\n\t        //set the initial value\n\t        this._setSweepRange();\n\t        this.sensitivity = options.sensitivity;\n\t        this._readOnly([\n\t            'gain',\n\t            'Q'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.AutoWah, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.AutoWah.defaults = {\n\t        'baseFrequency': 100,\n\t        'octaves': 6,\n\t        'sensitivity': 0,\n\t        'Q': 2,\n\t        'gain': 2,\n\t        'follower': {\n\t            'attack': 0.3,\n\t            'release': 0.5\n\t        }\n\t    };\n\t    /**\n\t\t * The number of octaves that the filter will sweep above the \n\t\t * baseFrequency. \n\t\t * @memberOf Tone.AutoWah#\n\t\t * @type {Number}\n\t\t * @name octaves\n\t\t */\n\t    Object.defineProperty(Tone.AutoWah.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (octaves) {\n\t            this._octaves = octaves;\n\t            this._setSweepRange();\n\t        }\n\t    });\n\t    /**\n\t\t * The base frequency from which the sweep will start from.\n\t\t * @memberOf Tone.AutoWah#\n\t\t * @type {Frequency}\n\t\t * @name baseFrequency\n\t\t */\n\t    Object.defineProperty(Tone.AutoWah.prototype, 'baseFrequency', {\n\t        get: function () {\n\t            return this._baseFrequency;\n\t        },\n\t        set: function (baseFreq) {\n\t            this._baseFrequency = baseFreq;\n\t            this._setSweepRange();\n\t        }\n\t    });\n\t    /**\n\t\t * The sensitivity to control how responsive to the input signal the filter is. \n\t\t * @memberOf Tone.AutoWah#\n\t\t * @type {Decibels}\n\t\t * @name sensitivity\n\t\t */\n\t    Object.defineProperty(Tone.AutoWah.prototype, 'sensitivity', {\n\t        get: function () {\n\t            return this.gainToDb(1 / this._inputBoost.gain.value);\n\t        },\n\t        set: function (sensitivy) {\n\t            this._inputBoost.gain.value = 1 / this.dbToGain(sensitivy);\n\t        }\n\t    });\n\t    /**\n\t\t *  sets the sweep range of the scaler\n\t\t *  @private\n\t\t */\n\t    Tone.AutoWah.prototype._setSweepRange = function () {\n\t        this._sweepRange.min = this._baseFrequency;\n\t        this._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.AutoWah} this\n\t\t */\n\t    Tone.AutoWah.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this.follower.dispose();\n\t        this.follower = null;\n\t        this._sweepRange.dispose();\n\t        this._sweepRange = null;\n\t        this._bandpass.dispose();\n\t        this._bandpass = null;\n\t        this._peaking.dispose();\n\t        this._peaking = null;\n\t        this._inputBoost.dispose();\n\t        this._inputBoost = null;\n\t        this._writable([\n\t            'gain',\n\t            'Q'\n\t        ]);\n\t        this.gain = null;\n\t        this.Q = null;\n\t        return this;\n\t    };\n\t    return Tone.AutoWah;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Bitcrusher downsamples the incoming signal to a different bitdepth. \n\t\t *         Lowering the bitdepth of the signal creates distortion. Read more about Bitcrushing\n\t\t *         on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Number} bits The number of bits to downsample the signal. Nominal range\n\t\t *                       of 1 to 8. \n\t\t *  @example\n\t\t * //initialize crusher and route a synth through it\n\t\t * var crusher = new Tone.BitCrusher(4).toMaster();\n\t\t * var synth = new Tone.MonoSynth().connect(crusher);\n\t\t */\n\t    Tone.BitCrusher = function () {\n\t        var options = this.optionsObject(arguments, ['bits'], Tone.BitCrusher.defaults);\n\t        Tone.Effect.call(this, options);\n\t        var invStepSize = 1 / Math.pow(2, options.bits - 1);\n\t        /**\n\t\t\t *  Subtract the input signal and the modulus of the input signal\n\t\t\t *  @type {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t        this._subtract = new Tone.Subtract();\n\t        /**\n\t\t\t *  The mod function\n\t\t\t *  @type  {Tone.Modulo}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulo = new Tone.Modulo(invStepSize);\n\t        /**\n\t\t\t *  keeps track of the bits\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._bits = options.bits;\n\t        //connect it up\n\t        this.effectSend.fan(this._subtract, this._modulo);\n\t        this._modulo.connect(this._subtract, 0, 1);\n\t        this._subtract.connect(this.effectReturn);\n\t    };\n\t    Tone.extend(Tone.BitCrusher, Tone.Effect);\n\t    /**\n\t\t *  the default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.BitCrusher.defaults = { 'bits': 4 };\n\t    /**\n\t\t * The bit depth of the effect. Nominal range of 1-8. \n\t\t * @memberOf Tone.BitCrusher#\n\t\t * @type {number}\n\t\t * @name bits\n\t\t */\n\t    Object.defineProperty(Tone.BitCrusher.prototype, 'bits', {\n\t        get: function () {\n\t            return this._bits;\n\t        },\n\t        set: function (bits) {\n\t            this._bits = bits;\n\t            var invStepSize = 1 / Math.pow(2, bits - 1);\n\t            this._modulo.value = invStepSize;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.BitCrusher} this\n\t\t */\n\t    Tone.BitCrusher.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._subtract.dispose();\n\t        this._subtract = null;\n\t        this._modulo.dispose();\n\t        this._modulo = null;\n\t        return this;\n\t    };\n\t    return Tone.BitCrusher;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.ChebyShev is a Chebyshev waveshaper, an effect which is good \n\t\t *         for making different types of distortion sounds.\n\t\t *         Note that odd orders sound very different from even ones, \n\t\t *         and order = 1 is no change. \n\t\t *         Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).\n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {Positive|Object} [order] The order of the chebyshev polynomial. Normal range between 1-100. \n\t\t *  @example\n\t\t * //create a new cheby\n\t\t * var cheby = new Tone.Chebyshev(50);\n\t\t * //create a monosynth connected to our cheby\n\t\t * synth = new Tone.MonoSynth().connect(cheby);\n\t\t */\n\t    Tone.Chebyshev = function () {\n\t        var options = this.optionsObject(arguments, ['order'], Tone.Chebyshev.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._shaper = new Tone.WaveShaper(4096);\n\t        /**\n\t\t\t * holds onto the order of the filter\n\t\t\t * @type {number}\n\t\t\t * @private\n\t\t\t */\n\t        this._order = options.order;\n\t        this.connectEffect(this._shaper);\n\t        this.order = options.order;\n\t        this.oversample = options.oversample;\n\t    };\n\t    Tone.extend(Tone.Chebyshev, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Chebyshev.defaults = {\n\t        'order': 1,\n\t        'oversample': 'none'\n\t    };\n\t    /**\n\t\t *  get the coefficient for that degree\n\t\t *  @param {number} x the x value\n\t\t *  @param   {number} degree \n\t\t *  @param {Object} memo memoize the computed value. \n\t\t *                       this speeds up computation greatly. \n\t\t *  @return  {number}       the coefficient \n\t\t *  @private\n\t\t */\n\t    Tone.Chebyshev.prototype._getCoefficient = function (x, degree, memo) {\n\t        if (memo.hasOwnProperty(degree)) {\n\t            return memo[degree];\n\t        } else if (degree === 0) {\n\t            memo[degree] = 0;\n\t        } else if (degree === 1) {\n\t            memo[degree] = x;\n\t        } else {\n\t            memo[degree] = 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo);\n\t        }\n\t        return memo[degree];\n\t    };\n\t    /**\n\t\t * The order of the Chebyshev polynomial which creates\n\t\t * the equation which is applied to the incoming \n\t\t * signal through a Tone.WaveShaper. The equations\n\t\t * are in the form:<br>\n\t\t * order 2: 2x^2 + 1<br>\n\t\t * order 3: 4x^3 + 3x <br>\n\t\t * @memberOf Tone.Chebyshev#\n\t\t * @type {Positive}\n\t\t * @name order\n\t\t */\n\t    Object.defineProperty(Tone.Chebyshev.prototype, 'order', {\n\t        get: function () {\n\t            return this._order;\n\t        },\n\t        set: function (order) {\n\t            this._order = order;\n\t            var curve = new Array(4096);\n\t            var len = curve.length;\n\t            for (var i = 0; i < len; ++i) {\n\t                var x = i * 2 / len - 1;\n\t                if (x === 0) {\n\t                    //should output 0 when input is 0\n\t                    curve[i] = 0;\n\t                } else {\n\t                    curve[i] = this._getCoefficient(x, order, {});\n\t                }\n\t            }\n\t            this._shaper.curve = curve;\n\t        }\n\t    });\n\t    /**\n\t\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t\t * @memberOf Tone.Chebyshev#\n\t\t * @type {string}\n\t\t * @name oversample\n\t\t */\n\t    Object.defineProperty(Tone.Chebyshev.prototype, 'oversample', {\n\t        get: function () {\n\t            return this._shaper.oversample;\n\t        },\n\t        set: function (oversampling) {\n\t            this._shaper.oversample = oversampling;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Chebyshev} this\n\t\t */\n\t    Tone.Chebyshev.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._shaper.dispose();\n\t        this._shaper = null;\n\t        return this;\n\t    };\n\t    return Tone.Chebyshev;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Base class for Stereo effects. Provides effectSendL/R and effectReturnL/R. \n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.Effect}\n\t\t */\n\t    Tone.StereoEffect = function () {\n\t        this.createInsOuts(1, 1);\n\t        //get the defaults\n\t        var options = this.optionsObject(arguments, ['wet'], Tone.Effect.defaults);\n\t        /**\n\t\t\t *  the drywet knob to control the amount of effect\n\t\t\t *  @type {Tone.CrossFade}\n\t\t\t *  @private\n\t\t\t */\n\t        this._dryWet = new Tone.CrossFade(options.wet);\n\t        /**\n\t\t\t *  The wet control, i.e. how much of the effected\n\t\t\t *  will pass through to the output. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.wet = this._dryWet.fade;\n\t        /**\n\t\t\t *  then split it\n\t\t\t *  @type {Tone.Split}\n\t\t\t *  @private\n\t\t\t */\n\t        this._split = new Tone.Split();\n\t        /**\n\t\t\t *  the effects send LEFT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectSendL = this._split.left;\n\t        /**\n\t\t\t *  the effects send RIGHT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectSendR = this._split.right;\n\t        /**\n\t\t\t *  the stereo effect merger\n\t\t\t *  @type {Tone.Merge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._merge = new Tone.Merge();\n\t        /**\n\t\t\t *  the effect return LEFT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectReturnL = this._merge.left;\n\t        /**\n\t\t\t *  the effect return RIGHT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectReturnR = this._merge.right;\n\t        //connections\n\t        this.input.connect(this._split);\n\t        //dry wet connections\n\t        this.input.connect(this._dryWet, 0, 0);\n\t        this._merge.connect(this._dryWet, 0, 1);\n\t        this._dryWet.connect(this.output);\n\t        this._readOnly(['wet']);\n\t    };\n\t    Tone.extend(Tone.StereoEffect, Tone.Effect);\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.StereoEffect} this\n\t\t */\n\t    Tone.StereoEffect.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._dryWet.dispose();\n\t        this._dryWet = null;\n\t        this._split.dispose();\n\t        this._split = null;\n\t        this._merge.dispose();\n\t        this._merge = null;\n\t        this.effectSendL = null;\n\t        this.effectSendR = null;\n\t        this.effectReturnL = null;\n\t        this.effectReturnR = null;\n\t        this._writable(['wet']);\n\t        this.wet = null;\n\t        return this;\n\t    };\n\t    return Tone.StereoEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t * \t@class  Tone.FeedbackEffect provides a loop between an \n\t\t * \t        audio source and its own output. This is a base-class\n\t\t * \t        for feedback effects. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {NormalRange|Object} [feedback] The initial feedback value.\n\t\t */\n\t    Tone.FeedbackEffect = function () {\n\t        var options = this.optionsObject(arguments, ['feedback']);\n\t        options = this.defaultArg(options, Tone.FeedbackEffect.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  the gain which controls the feedback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackGain = new Tone.Gain(options.feedback, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  The amount of signal which is fed back into the effect input. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.feedback = this._feedbackGain.gain;\n\t        //the feedback loop\n\t        this.effectReturn.chain(this._feedbackGain, this.effectSend);\n\t        this._readOnly(['feedback']);\n\t    };\n\t    Tone.extend(Tone.FeedbackEffect, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.FeedbackEffect.defaults = { 'feedback': 0.125 };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.FeedbackEffect} this\n\t\t */\n\t    Tone.FeedbackEffect.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._writable(['feedback']);\n\t        this._feedbackGain.dispose();\n\t        this._feedbackGain = null;\n\t        this.feedback = null;\n\t        return this;\n\t    };\n\t    return Tone.FeedbackEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Just like a stereo feedback effect, but the feedback is routed from left to right\n\t\t *         and right to left instead of on the same channel.\n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.FeedbackEffect}\n\t\t */\n\t    Tone.StereoXFeedbackEffect = function () {\n\t        var options = this.optionsObject(arguments, ['feedback'], Tone.FeedbackEffect.defaults);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  The amount of feedback from the output\n\t\t\t *  back into the input of the effect (routed\n\t\t\t *  across left and right channels).\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  the left side feeback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackLR = new Tone.Gain();\n\t        /**\n\t\t\t *  the right side feeback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackRL = new Tone.Gain();\n\t        //connect it up\n\t        this.effectReturnL.chain(this._feedbackLR, this.effectSendR);\n\t        this.effectReturnR.chain(this._feedbackRL, this.effectSendL);\n\t        this.feedback.fan(this._feedbackLR.gain, this._feedbackRL.gain);\n\t        this._readOnly(['feedback']);\n\t    };\n\t    Tone.extend(Tone.StereoXFeedbackEffect, Tone.FeedbackEffect);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.StereoXFeedbackEffect} this\n\t\t */\n\t    Tone.StereoXFeedbackEffect.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        this._writable(['feedback']);\n\t        this.feedback.dispose();\n\t        this.feedback = null;\n\t        this._feedbackLR.dispose();\n\t        this._feedbackLR = null;\n\t        this._feedbackRL.dispose();\n\t        this._feedbackRL = null;\n\t        return this;\n\t    };\n\t    return Tone.StereoXFeedbackEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Chorus is a stereo chorus effect with feedback composed of \n\t\t *         a left and right delay with a Tone.LFO applied to the delayTime of each channel. \n\t\t *         Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n\t\t *         Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.StereoXFeedbackEffect}\n\t\t *\t@param {Frequency|Object} [frequency] The frequency of the LFO.\n\t\t *\t@param {Milliseconds} [delayTime] The delay of the chorus effect in ms. \n\t\t *\t@param {NormalRange} [depth] The depth of the chorus.\n\t\t *\t@example\n\t\t * var chorus = new Tone.Chorus(4, 2.5, 0.5);\n\t\t * var synth = new Tone.PolySynth(4, Tone.MonoSynth).connect(chorus);\n\t\t * synth.triggerAttackRelease([\"C3\",\"E3\",\"G3\"], \"8n\");\n\t\t */\n\t    Tone.Chorus = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'delayTime',\n\t            'depth'\n\t        ], Tone.Chorus.defaults);\n\t        Tone.StereoXFeedbackEffect.call(this, options);\n\t        /**\n\t\t\t *  the depth of the chorus\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._depth = options.depth;\n\t        /**\n\t\t\t *  the delayTime\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayTime = options.delayTime / 1000;\n\t        /**\n\t\t\t *  the lfo which controls the delayTime\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoL = new Tone.LFO({\n\t            'frequency': options.frequency,\n\t            'min': 0,\n\t            'max': 1\n\t        });\n\t        /**\n\t\t\t *  another LFO for the right side with a 180 degree phase diff\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoR = new Tone.LFO({\n\t            'frequency': options.frequency,\n\t            'min': 0,\n\t            'max': 1,\n\t            'phase': 180\n\t        });\n\t        /**\n\t\t\t *  delay for left\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNodeL = new Tone.Delay();\n\t        /**\n\t\t\t *  delay for right\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNodeR = new Tone.Delay();\n\t        /**\n\t\t\t * The frequency of the LFO which modulates the delayTime. \n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t */\n\t        this.frequency = this._lfoL.frequency;\n\t        //connections\n\t        this.effectSendL.chain(this._delayNodeL, this.effectReturnL);\n\t        this.effectSendR.chain(this._delayNodeR, this.effectReturnR);\n\t        //and pass through to make the detune apparent\n\t        this.effectSendL.connect(this.effectReturnL);\n\t        this.effectSendR.connect(this.effectReturnR);\n\t        //lfo setup\n\t        this._lfoL.connect(this._delayNodeL.delayTime);\n\t        this._lfoR.connect(this._delayNodeR.delayTime);\n\t        //start the lfo\n\t        this._lfoL.start();\n\t        this._lfoR.start();\n\t        //have one LFO frequency control the other\n\t        this._lfoL.frequency.connect(this._lfoR.frequency);\n\t        //set the initial values\n\t        this.depth = this._depth;\n\t        this.frequency.value = options.frequency;\n\t        this.type = options.type;\n\t        this._readOnly(['frequency']);\n\t        this.spread = options.spread;\n\t    };\n\t    Tone.extend(Tone.Chorus, Tone.StereoXFeedbackEffect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Chorus.defaults = {\n\t        'frequency': 1.5,\n\t        'delayTime': 3.5,\n\t        'depth': 0.7,\n\t        'feedback': 0.1,\n\t        'type': 'sine',\n\t        'spread': 180\n\t    };\n\t    /**\n\t\t * The depth of the effect. A depth of 1 makes the delayTime\n\t\t * modulate between 0 and 2*delayTime (centered around the delayTime). \n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {NormalRange}\n\t\t * @name depth\n\t\t */\n\t    Object.defineProperty(Tone.Chorus.prototype, 'depth', {\n\t        get: function () {\n\t            return this._depth;\n\t        },\n\t        set: function (depth) {\n\t            this._depth = depth;\n\t            var deviation = this._delayTime * depth;\n\t            this._lfoL.min = Math.max(this._delayTime - deviation, 0);\n\t            this._lfoL.max = this._delayTime + deviation;\n\t            this._lfoR.min = Math.max(this._delayTime - deviation, 0);\n\t            this._lfoR.max = this._delayTime + deviation;\n\t        }\n\t    });\n\t    /**\n\t\t * The delayTime in milliseconds of the chorus. A larger delayTime\n\t\t * will give a more pronounced effect. Nominal range a delayTime\n\t\t * is between 2 and 20ms. \n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {Milliseconds}\n\t\t * @name delayTime\n\t\t */\n\t    Object.defineProperty(Tone.Chorus.prototype, 'delayTime', {\n\t        get: function () {\n\t            return this._delayTime * 1000;\n\t        },\n\t        set: function (delayTime) {\n\t            this._delayTime = delayTime / 1000;\n\t            this.depth = this._depth;\n\t        }\n\t    });\n\t    /**\n\t\t * The oscillator type of the LFO. \n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.Chorus.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfoL.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfoL.type = type;\n\t            this._lfoR.type = type;\n\t        }\n\t    });\n\t    /** \n\t\t * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n\t\t * When set to 180, LFO's will be panned hard left and right respectively.\n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {Degrees}\n\t\t * @name spread\n\t\t */\n\t    Object.defineProperty(Tone.Chorus.prototype, 'spread', {\n\t        get: function () {\n\t            return this._lfoR.phase - this._lfoL.phase;    //180\n\t        },\n\t        set: function (spread) {\n\t            this._lfoL.phase = 90 - spread / 2;\n\t            this._lfoR.phase = spread / 2 + 90;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Chorus} this\n\t\t */\n\t    Tone.Chorus.prototype.dispose = function () {\n\t        Tone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\t        this._lfoL.dispose();\n\t        this._lfoL = null;\n\t        this._lfoR.dispose();\n\t        this._lfoR = null;\n\t        this._delayNodeL.dispose();\n\t        this._delayNodeL = null;\n\t        this._delayNodeR.dispose();\n\t        this._delayNodeR = null;\n\t        this._writable('frequency');\n\t        this.frequency = null;\n\t        return this;\n\t    };\n\t    return Tone.Chorus;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Convolver is a wrapper around the Native Web Audio \n\t\t *          [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).\n\t\t *          Convolution is useful for reverb and filter emulation. Read more about convolution reverb on\n\t\t *          [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {string|Tone.Buffer|Object} [url] The URL of the impulse response or the Tone.Buffer\n\t\t *                                           contianing the impulse response. \n\t\t *  @param {Function} onload The callback to invoke when the url is loaded.\n\t\t *  @example\n\t\t * //initializing the convolver with an impulse response\n\t\t * var convolver = new Tone.Convolver(\"./path/to/ir.wav\").toMaster();\n\t\t */\n\t    Tone.Convolver = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'url',\n\t            'onload'\n\t        ], Tone.Convolver.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  convolver node\n\t\t\t *  @type {ConvolverNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._convolver = this.context.createConvolver();\n\t        /**\n\t\t\t *  the convolution buffer\n\t\t\t *  @type {Tone.Buffer}\n\t\t\t *  @private\n\t\t\t */\n\t        this._buffer = new Tone.Buffer();\n\t        if (this.isString(options.url)) {\n\t            this._buffer.load(options.url, function (buffer) {\n\t                this.buffer = buffer;\n\t                options.onload();\n\t            }.bind(this));\n\t        } else if (options.url) {\n\t            this.buffer = options.url;\n\t            options.onload();\n\t        }\n\t        this.connectEffect(this._convolver);\n\t    };\n\t    Tone.extend(Tone.Convolver, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Convolver.defaults = { 'onload': Tone.noOp };\n\t    /**\n\t\t *  The convolver's buffer\n\t\t *  @memberOf Tone.Convolver#\n\t\t *  @type {AudioBuffer}\n\t\t *  @name buffer\n\t\t */\n\t    Object.defineProperty(Tone.Convolver.prototype, 'buffer', {\n\t        get: function () {\n\t            return this._buffer.get();\n\t        },\n\t        set: function (buffer) {\n\t            this._buffer.set(buffer);\n\t            this._convolver.buffer = this._buffer.get();\n\t        }\n\t    });\n\t    /**\n\t\t *  Load an impulse response url as an audio buffer.\n\t\t *  Decodes the audio asynchronously and invokes\n\t\t *  the callback once the audio buffer loads.\n\t\t *  @param {string} url The url of the buffer to load.\n\t\t *                      filetype support depends on the\n\t\t *                      browser.\n\t\t *  @param  {function=} callback\n\t\t *  @returns {Tone.Convolver} this\n\t\t */\n\t    Tone.Convolver.prototype.load = function (url, callback) {\n\t        this._buffer.load(url, function (buff) {\n\t            this.buffer = buff;\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }.bind(this));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Convolver} this\n\t\t */\n\t    Tone.Convolver.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._convolver.disconnect();\n\t        this._convolver = null;\n\t        this._buffer.dispose();\n\t        this._buffer = null;\n\t        return this;\n\t    };\n\t    return Tone.Convolver;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Distortion is a simple distortion effect using Tone.WaveShaper.\n\t\t *         Algorithm from [a stackoverflow answer](http://stackoverflow.com/a/22313408).\n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {Number|Object} [distortion] The amount of distortion (nominal range of 0-1)\n\t\t *  @example\n\t\t * var dist = new Tone.Distortion(0.8).toMaster();\n\t\t * var fm = new Tone.SimpleFM().connect(dist);\n\t\t * //this sounds good on bass notes\n\t\t * fm.triggerAttackRelease(\"A1\", \"8n\");\n\t\t */\n\t    Tone.Distortion = function () {\n\t        var options = this.optionsObject(arguments, ['distortion'], Tone.Distortion.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t        this._shaper = new Tone.WaveShaper(4096);\n\t        /**\n\t\t\t * holds the distortion amount\n\t\t\t * @type {number}\n\t\t\t * @private\n\t\t\t */\n\t        this._distortion = options.distortion;\n\t        this.connectEffect(this._shaper);\n\t        this.distortion = options.distortion;\n\t        this.oversample = options.oversample;\n\t    };\n\t    Tone.extend(Tone.Distortion, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Distortion.defaults = {\n\t        'distortion': 0.4,\n\t        'oversample': 'none'\n\t    };\n\t    /**\n\t\t * The amount of distortion.\n\t\t * @memberOf Tone.Distortion#\n\t\t * @type {NormalRange}\n\t\t * @name distortion\n\t\t */\n\t    Object.defineProperty(Tone.Distortion.prototype, 'distortion', {\n\t        get: function () {\n\t            return this._distortion;\n\t        },\n\t        set: function (amount) {\n\t            this._distortion = amount;\n\t            var k = amount * 100;\n\t            var deg = Math.PI / 180;\n\t            this._shaper.setMap(function (x) {\n\t                if (Math.abs(x) < 0.001) {\n\t                    //should output 0 when input is 0\n\t                    return 0;\n\t                } else {\n\t                    return (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n\t                }\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t\t * @memberOf Tone.Distortion#\n\t\t * @type {string}\n\t\t * @name oversample\n\t\t */\n\t    Object.defineProperty(Tone.Distortion.prototype, 'oversample', {\n\t        get: function () {\n\t            return this._shaper.oversample;\n\t        },\n\t        set: function (oversampling) {\n\t            this._shaper.oversample = oversampling;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Distortion} this\n\t\t */\n\t    Tone.Distortion.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._shaper.dispose();\n\t        this._shaper = null;\n\t        return this;\n\t    };\n\t    return Tone.Distortion;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.FeedbackDelay is a DelayNode in which part of output\n\t\t *          signal is fed back into the delay. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.FeedbackEffect}\n\t\t *  @param {Time|Object} [delayTime] The delay applied to the incoming signal. \n\t\t *  @param {NormalRange=} feedback The amount of the effected signal which \n\t\t *                            is fed back through the delay.\n\t\t *  @example\n\t\t * var feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toMaster();\n\t\t * var tom = new Tone.DrumSynth({\n\t\t * \t\"octaves\" : 4,\n\t\t * \t\"pitchDecay\" : 0.1\n\t\t * }).connect(feedbackDelay);\n\t\t * tom.triggerAttackRelease(\"A2\",\"32n\");\n\t\t */\n\t    Tone.FeedbackDelay = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'delayTime',\n\t            'feedback'\n\t        ], Tone.FeedbackDelay.defaults);\n\t        Tone.FeedbackEffect.call(this, options);\n\t        /**\n\t\t\t *  the delay node\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNode = new Tone.Delay(options.delayTime);\n\t        /**\n\t\t\t *  The delayTime of the DelayNode. \n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = this._delayNode.delayTime;\n\t        // connect it up\n\t        this.connectEffect(this._delayNode);\n\t        this._readOnly(['delayTime']);\n\t    };\n\t    Tone.extend(Tone.FeedbackDelay, Tone.FeedbackEffect);\n\t    /**\n\t\t *  The default values. \n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.FeedbackDelay.defaults = { 'delayTime': 0.25 };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.FeedbackDelay} this\n\t\t */\n\t    Tone.FeedbackDelay.prototype.dispose = function () {\n\t        Tone.FeedbackEffect.prototype.dispose.call(this);\n\t        this._delayNode.dispose();\n\t        this._delayNode = null;\n\t        this._writable(['delayTime']);\n\t        this.delayTime = null;\n\t        return this;\n\t    };\n\t    return Tone.FeedbackDelay;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  an array of comb filter delay values from Freeverb implementation\n\t\t *  @static\n\t\t *  @private\n\t\t *  @type {Array}\n\t\t */\n\t    var combFilterTunings = [\n\t        1557 / 44100,\n\t        1617 / 44100,\n\t        1491 / 44100,\n\t        1422 / 44100,\n\t        1277 / 44100,\n\t        1356 / 44100,\n\t        1188 / 44100,\n\t        1116 / 44100\n\t    ];\n\t    /**\n\t\t *  an array of allpass filter frequency values from Freeverb implementation\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var allpassFilterFrequencies = [\n\t        225,\n\t        556,\n\t        441,\n\t        341\n\t    ];\n\t    /**\n\t\t *  @class Tone.Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).\n\t\t *         Read more on reverb on [SoundOnSound](http://www.soundonsound.com/sos/may00/articles/reverb.htm).\n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {NormalRange|Object} [roomSize] Correlated to the decay time. \n\t\t *  @param {Frequency} [dampening] The cutoff frequency of a lowpass filter as part \n\t\t *                                 of the reverb. \n\t\t *  @example\n\t\t * var freeverb = new Tone.Freeverb().toMaster();\n\t\t * freeverb.dampening.value = 1000;\n\t\t * //routing synth through the reverb\n\t\t * var synth = new Tone.AMSynth().connect(freeverb);\n\t\t */\n\t    Tone.Freeverb = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'roomSize',\n\t            'dampening'\n\t        ], Tone.Freeverb.defaults);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  The roomSize value between. A larger roomSize\n\t\t\t *  will result in a longer decay. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  The amount of dampening of the reverberant signal. \n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.dampening = new Tone.Signal(options.dampening, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  the comb filters\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._combFilters = [];\n\t        /**\n\t\t\t *  the allpass filters on the left\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._allpassFiltersL = [];\n\t        /**\n\t\t\t *  the allpass filters on the right\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._allpassFiltersR = [];\n\t        //make the allpass filters on teh right\n\t        for (var l = 0; l < allpassFilterFrequencies.length; l++) {\n\t            var allpassL = this.context.createBiquadFilter();\n\t            allpassL.type = 'allpass';\n\t            allpassL.frequency.value = allpassFilterFrequencies[l];\n\t            this._allpassFiltersL.push(allpassL);\n\t        }\n\t        //make the allpass filters on the left\n\t        for (var r = 0; r < allpassFilterFrequencies.length; r++) {\n\t            var allpassR = this.context.createBiquadFilter();\n\t            allpassR.type = 'allpass';\n\t            allpassR.frequency.value = allpassFilterFrequencies[r];\n\t            this._allpassFiltersR.push(allpassR);\n\t        }\n\t        //make the comb filters\n\t        for (var c = 0; c < combFilterTunings.length; c++) {\n\t            var lfpf = new Tone.LowpassCombFilter(combFilterTunings[c]);\n\t            if (c < combFilterTunings.length / 2) {\n\t                this.effectSendL.chain(lfpf, this._allpassFiltersL[0]);\n\t            } else {\n\t                this.effectSendR.chain(lfpf, this._allpassFiltersR[0]);\n\t            }\n\t            this.roomSize.connect(lfpf.resonance);\n\t            this.dampening.connect(lfpf.dampening);\n\t            this._combFilters.push(lfpf);\n\t        }\n\t        //chain the allpass filters togetehr\n\t        this.connectSeries.apply(this, this._allpassFiltersL);\n\t        this.connectSeries.apply(this, this._allpassFiltersR);\n\t        this._allpassFiltersL[this._allpassFiltersL.length - 1].connect(this.effectReturnL);\n\t        this._allpassFiltersR[this._allpassFiltersR.length - 1].connect(this.effectReturnR);\n\t        this._readOnly([\n\t            'roomSize',\n\t            'dampening'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Freeverb, Tone.StereoEffect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Freeverb.defaults = {\n\t        'roomSize': 0.7,\n\t        'dampening': 3000\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Freeverb} this\n\t\t */\n\t    Tone.Freeverb.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        for (var al = 0; al < this._allpassFiltersL.length; al++) {\n\t            this._allpassFiltersL[al].disconnect();\n\t            this._allpassFiltersL[al] = null;\n\t        }\n\t        this._allpassFiltersL = null;\n\t        for (var ar = 0; ar < this._allpassFiltersR.length; ar++) {\n\t            this._allpassFiltersR[ar].disconnect();\n\t            this._allpassFiltersR[ar] = null;\n\t        }\n\t        this._allpassFiltersR = null;\n\t        for (var cf = 0; cf < this._combFilters.length; cf++) {\n\t            this._combFilters[cf].dispose();\n\t            this._combFilters[cf] = null;\n\t        }\n\t        this._combFilters = null;\n\t        this._writable([\n\t            'roomSize',\n\t            'dampening'\n\t        ]);\n\t        this.roomSize.dispose();\n\t        this.roomSize = null;\n\t        this.dampening.dispose();\n\t        this.dampening = null;\n\t        return this;\n\t    };\n\t    return Tone.Freeverb;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  an array of the comb filter delay time values\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var combFilterDelayTimes = [\n\t        1687 / 25000,\n\t        1601 / 25000,\n\t        2053 / 25000,\n\t        2251 / 25000\n\t    ];\n\t    /**\n\t\t *  the resonances of each of the comb filters\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var combFilterResonances = [\n\t        0.773,\n\t        0.802,\n\t        0.753,\n\t        0.733\n\t    ];\n\t    /**\n\t\t *  the allpass filter frequencies\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var allpassFilterFreqs = [\n\t        347,\n\t        113,\n\t        37\n\t    ];\n\t    /**\n\t\t *  @class Tone.JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)\n\t\t *         tuned by John Chowning in 1970.\n\t\t *         It is made up of three allpass filters and four Tone.FeedbackCombFilter. \n\t\t *         \n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {NormalRange|Object} [roomSize] Coorelates to the decay time.\n\t\t *  @example\n\t\t * var reverb = new Tone.JCReverb(0.4).connect(Tone.Master);\n\t\t * var delay = new Tone.FeedbackDelay(0.5); \n\t\t * //connecting the synth to reverb through delay\n\t\t * var synth = new Tone.DuoSynth().chain(delay, reverb);\n\t\t * synth.triggerAttackRelease(\"A4\",\"8n\");\n\t\t */\n\t    Tone.JCReverb = function () {\n\t        var options = this.optionsObject(arguments, ['roomSize'], Tone.JCReverb.defaults);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  room size control values between [0,1]\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  scale the room size\n\t\t\t *  @type {Tone.Scale}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scaleRoomSize = new Tone.Scale(-0.733, 0.197);\n\t        /**\n\t\t\t *  a series of allpass filters\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._allpassFilters = [];\n\t        /**\n\t\t\t *  parallel feedback comb filters\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackCombFilters = [];\n\t        //make the allpass filters\n\t        for (var af = 0; af < allpassFilterFreqs.length; af++) {\n\t            var allpass = this.context.createBiquadFilter();\n\t            allpass.type = 'allpass';\n\t            allpass.frequency.value = allpassFilterFreqs[af];\n\t            this._allpassFilters.push(allpass);\n\t        }\n\t        //and the comb filters\n\t        for (var cf = 0; cf < combFilterDelayTimes.length; cf++) {\n\t            var fbcf = new Tone.FeedbackCombFilter(combFilterDelayTimes[cf], 0.1);\n\t            this._scaleRoomSize.connect(fbcf.resonance);\n\t            fbcf.resonance.value = combFilterResonances[cf];\n\t            this._allpassFilters[this._allpassFilters.length - 1].connect(fbcf);\n\t            if (cf < combFilterDelayTimes.length / 2) {\n\t                fbcf.connect(this.effectReturnL);\n\t            } else {\n\t                fbcf.connect(this.effectReturnR);\n\t            }\n\t            this._feedbackCombFilters.push(fbcf);\n\t        }\n\t        //chain the allpass filters together\n\t        this.roomSize.connect(this._scaleRoomSize);\n\t        this.connectSeries.apply(this, this._allpassFilters);\n\t        this.effectSendL.connect(this._allpassFilters[0]);\n\t        this.effectSendR.connect(this._allpassFilters[0]);\n\t        this._readOnly(['roomSize']);\n\t    };\n\t    Tone.extend(Tone.JCReverb, Tone.StereoEffect);\n\t    /**\n\t\t *  the default values\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.JCReverb.defaults = { 'roomSize': 0.5 };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.JCReverb} this\n\t\t */\n\t    Tone.JCReverb.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        for (var apf = 0; apf < this._allpassFilters.length; apf++) {\n\t            this._allpassFilters[apf].disconnect();\n\t            this._allpassFilters[apf] = null;\n\t        }\n\t        this._allpassFilters = null;\n\t        for (var fbcf = 0; fbcf < this._feedbackCombFilters.length; fbcf++) {\n\t            this._feedbackCombFilters[fbcf].dispose();\n\t            this._feedbackCombFilters[fbcf] = null;\n\t        }\n\t        this._feedbackCombFilters = null;\n\t        this._writable(['roomSize']);\n\t        this.roomSize.dispose();\n\t        this.roomSize = null;\n\t        this._scaleRoomSize.dispose();\n\t        this._scaleRoomSize = null;\n\t        return this;\n\t    };\n\t    return Tone.JCReverb;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Mid/Side processing separates the the 'mid' signal \n\t\t *         (which comes out of both the left and the right channel) \n\t\t *         and the 'side' (which only comes out of the the side channels) \n\t\t *         and effects them separately before being recombined.\n\t\t *         Applies a Mid/Side seperation and recombination.\n\t\t *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n\t\t *         <br><br>\n\t\t *         This is a base-class for Mid/Side Effects. \n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t */\n\t    Tone.MidSideEffect = function () {\n\t        Tone.Effect.apply(this, arguments);\n\t        /**\n\t\t\t *  The mid/side split\n\t\t\t *  @type  {Tone.MidSideSplit}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midSideSplit = new Tone.MidSideSplit();\n\t        /**\n\t\t\t *  The mid/side merge\n\t\t\t *  @type  {Tone.MidSideMerge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midSideMerge = new Tone.MidSideMerge();\n\t        /**\n\t\t\t *  The mid send. Connect to mid processing\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this.midSend = this._midSideSplit.mid;\n\t        /**\n\t\t\t *  The side send. Connect to side processing\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this.sideSend = this._midSideSplit.side;\n\t        /**\n\t\t\t *  The mid return connection\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.midReturn = this._midSideMerge.mid;\n\t        /**\n\t\t\t *  The side return connection\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.sideReturn = this._midSideMerge.side;\n\t        //the connections\n\t        this.effectSend.connect(this._midSideSplit);\n\t        this._midSideMerge.connect(this.effectReturn);\n\t    };\n\t    Tone.extend(Tone.MidSideEffect, Tone.Effect);\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.MidSideEffect} this\n\t\t */\n\t    Tone.MidSideEffect.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._midSideSplit.dispose();\n\t        this._midSideSplit = null;\n\t        this._midSideMerge.dispose();\n\t        this._midSideMerge = null;\n\t        this.midSend = null;\n\t        this.sideSend = null;\n\t        this.midReturn = null;\n\t        this.sideReturn = null;\n\t        return this;\n\t    };\n\t    return Tone.MidSideEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Phaser is a phaser effect. Phasers work by changing the phase\n\t\t *         of different frequency components of an incoming signal. Read more on \n\t\t *         [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)). \n\t\t *         Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).\n\t\t *\n\t\t *\t@extends {Tone.StereoEffect}\n\t\t *\t@constructor\n\t\t *\t@param {Frequency|Object} [frequency] The speed of the phasing. \n\t\t *\t@param {number} [octaves] The octaves of the effect. \n\t\t *\t@param {Frequency} [baseFrequency] The base frequency of the filters. \n\t\t *\t@example\n\t\t * var phaser = new Tone.Phaser({\n\t\t * \t\"frequency\" : 15, \n\t\t * \t\"octaves\" : 5, \n\t\t * \t\"baseFrequency\" : 1000\n\t\t * }).toMaster();\n\t\t * var synth = new Tone.FMSynth().connect(phaser);\n\t\t * synth.triggerAttackRelease(\"E3\", \"2n\");\n\t\t */\n\t    Tone.Phaser = function () {\n\t        //set the defaults\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'octaves',\n\t            'baseFrequency'\n\t        ], Tone.Phaser.defaults);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  the lfo which controls the frequency on the left side\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoL = new Tone.LFO(options.frequency, 0, 1);\n\t        /**\n\t\t\t *  the lfo which controls the frequency on the right side\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoR = new Tone.LFO(options.frequency, 0, 1);\n\t        this._lfoR.phase = 180;\n\t        /**\n\t\t\t *  the base modulation frequency\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._baseFrequency = options.baseFrequency;\n\t        /**\n\t\t\t *  the octaves of the phasing\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = options.octaves;\n\t        /**\n\t\t\t *  The quality factor of the filters\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.Q = new Tone.Signal(options.Q, Tone.Type.Positive);\n\t        /**\n\t\t\t *  the array of filters for the left side\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filtersL = this._makeFilters(options.stages, this._lfoL, this.Q);\n\t        /**\n\t\t\t *  the array of filters for the left side\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filtersR = this._makeFilters(options.stages, this._lfoR, this.Q);\n\t        /**\n\t\t\t * the frequency of the effect\n\t\t\t * @type {Tone.Signal}\n\t\t\t */\n\t        this.frequency = this._lfoL.frequency;\n\t        this.frequency.value = options.frequency;\n\t        //connect them up\n\t        this.effectSendL.connect(this._filtersL[0]);\n\t        this.effectSendR.connect(this._filtersR[0]);\n\t        this._filtersL[options.stages - 1].connect(this.effectReturnL);\n\t        this._filtersR[options.stages - 1].connect(this.effectReturnR);\n\t        //control the frequency with one LFO\n\t        this._lfoL.frequency.connect(this._lfoR.frequency);\n\t        //set the options\n\t        this.baseFrequency = options.baseFrequency;\n\t        this.octaves = options.octaves;\n\t        //start the lfo\n\t        this._lfoL.start();\n\t        this._lfoR.start();\n\t        this._readOnly([\n\t            'frequency',\n\t            'Q'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Phaser, Tone.StereoEffect);\n\t    /**\n\t\t *  defaults\n\t\t *  @static\n\t\t *  @type {object}\n\t\t */\n\t    Tone.Phaser.defaults = {\n\t        'frequency': 0.5,\n\t        'octaves': 3,\n\t        'stages': 10,\n\t        'Q': 10,\n\t        'baseFrequency': 350\n\t    };\n\t    /**\n\t\t *  @param {number} stages\n\t\t *  @returns {Array} the number of filters all connected together\n\t\t *  @private\n\t\t */\n\t    Tone.Phaser.prototype._makeFilters = function (stages, connectToFreq, Q) {\n\t        var filters = new Array(stages);\n\t        //make all the filters\n\t        for (var i = 0; i < stages; i++) {\n\t            var filter = this.context.createBiquadFilter();\n\t            filter.type = 'allpass';\n\t            Q.connect(filter.Q);\n\t            connectToFreq.connect(filter.frequency);\n\t            filters[i] = filter;\n\t        }\n\t        this.connectSeries.apply(this, filters);\n\t        return filters;\n\t    };\n\t    /**\n\t\t * The number of octaves the phase goes above\n\t\t * the baseFrequency\n\t\t * @memberOf Tone.Phaser#\n\t\t * @type {Positive}\n\t\t * @name octaves\n\t\t */\n\t    Object.defineProperty(Tone.Phaser.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (octaves) {\n\t            this._octaves = octaves;\n\t            var max = this._baseFrequency * Math.pow(2, octaves);\n\t            this._lfoL.max = max;\n\t            this._lfoR.max = max;\n\t        }\n\t    });\n\t    /**\n\t\t * The the base frequency of the filters. \n\t\t * @memberOf Tone.Phaser#\n\t\t * @type {number}\n\t\t * @name baseFrequency\n\t\t */\n\t    Object.defineProperty(Tone.Phaser.prototype, 'baseFrequency', {\n\t        get: function () {\n\t            return this._baseFrequency;\n\t        },\n\t        set: function (freq) {\n\t            this._baseFrequency = freq;\n\t            this._lfoL.min = freq;\n\t            this._lfoR.min = freq;\n\t            this.octaves = this._octaves;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Phaser} this\n\t\t */\n\t    Tone.Phaser.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'Q'\n\t        ]);\n\t        this.Q.dispose();\n\t        this.Q = null;\n\t        this._lfoL.dispose();\n\t        this._lfoL = null;\n\t        this._lfoR.dispose();\n\t        this._lfoR = null;\n\t        for (var i = 0; i < this._filtersL.length; i++) {\n\t            this._filtersL[i].disconnect();\n\t            this._filtersL[i] = null;\n\t        }\n\t        this._filtersL = null;\n\t        for (var j = 0; j < this._filtersR.length; j++) {\n\t            this._filtersR[j].disconnect();\n\t            this._filtersR[j] = null;\n\t        }\n\t        this._filtersR = null;\n\t        this.frequency = null;\n\t        return this;\n\t    };\n\t    return Tone.Phaser;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.PingPongDelay is a feedback delay effect where the echo is heard\n\t\t *          first in one channel and next in the opposite channel. In a stereo\n\t\t *          system these are the right and left channels.\n\t\t *          PingPongDelay in more simplified terms is two Tone.FeedbackDelays \n\t\t *          with independent delay values. Each delay is routed to one channel\n\t\t *          (left or right), and the channel triggered second will always \n\t\t *          trigger at the same interval after the first.\n\t\t *\n\t\t * \t@constructor\n\t\t * \t@extends {Tone.StereoXFeedbackEffect}\n\t\t *  @param {Time|Object} [delayTime] The delayTime between consecutive echos.\n\t\t *  @param {NormalRange=} feedback The amount of the effected signal which \n\t\t *                                 is fed back through the delay.\n\t\t *  @example\n\t\t * var pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toMaster();\n\t\t * var drum = new Tone.DrumSynth().connect(pingPong);\n\t\t * drum.triggerAttackRelease(\"C4\", \"32n\");\n\t\t */\n\t    Tone.PingPongDelay = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'delayTime',\n\t            'feedback'\n\t        ], Tone.PingPongDelay.defaults);\n\t        Tone.StereoXFeedbackEffect.call(this, options);\n\t        /**\n\t\t\t *  the delay node on the left side\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._leftDelay = new Tone.Delay(0, options.maxDelayTime);\n\t        /**\n\t\t\t *  the delay node on the right side\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._rightDelay = new Tone.Delay(0, options.maxDelayTime);\n\t        /**\n\t\t\t *  the predelay on the right side\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._rightPreDelay = new Tone.Delay(0, options.maxDelayTime);\n\t        /**\n\t\t\t *  the delay time signal\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = new Tone.Signal(options.delayTime, Tone.Type.Time);\n\t        //connect it up\n\t        this.effectSendL.chain(this._leftDelay, this.effectReturnL);\n\t        this.effectSendR.chain(this._rightPreDelay, this._rightDelay, this.effectReturnR);\n\t        this.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);\n\t        //rearranged the feedback to be after the rightPreDelay\n\t        this._feedbackLR.disconnect();\n\t        this._feedbackLR.connect(this._rightDelay);\n\t        this._readOnly(['delayTime']);\n\t    };\n\t    Tone.extend(Tone.PingPongDelay, Tone.StereoXFeedbackEffect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.PingPongDelay.defaults = {\n\t        'delayTime': 0.25,\n\t        'maxDelayTime': 1\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.PingPongDelay} this\n\t\t */\n\t    Tone.PingPongDelay.prototype.dispose = function () {\n\t        Tone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\t        this._leftDelay.dispose();\n\t        this._leftDelay = null;\n\t        this._rightDelay.dispose();\n\t        this._rightDelay = null;\n\t        this._rightPreDelay.dispose();\n\t        this._rightPreDelay = null;\n\t        this._writable(['delayTime']);\n\t        this.delayTime.dispose();\n\t        this.delayTime = null;\n\t        return this;\n\t    };\n\t    return Tone.PingPongDelay;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.PitchShift does near-realtime pitch shifting to the incoming signal. \n\t\t *         The effect is achieved by speeding up or slowing down the delayTime\n\t\t *         of a DelayNode using a sawtooth wave. \n\t\t *         Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).\n\t\t *         Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).\n\t\t *         \n\t\t *  @extends {Tone.FeedbackEffect}\n\t\t *  @param {Interval=} pitch The interval to transpose the incoming signal by. \n\t\t */\n\t    Tone.PitchShift = function () {\n\t        var options = this.optionsObject(arguments, ['pitch'], Tone.PitchShift.defaults);\n\t        Tone.FeedbackEffect.call(this, options);\n\t        /**\n\t\t\t *  The pitch signal\n\t\t\t *  @type  {Tone.Signal}\n\t\t\t *  @private\n\t\t\t */\n\t        this._frequency = new Tone.Signal(0);\n\t        /**\n\t\t\t *  Uses two DelayNodes to cover up the jump in\n\t\t\t *  the sawtooth wave. \n\t\t\t *  @type  {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayA = new Tone.Delay(0, 1);\n\t        /**\n\t\t\t *  The first LFO.\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoA = new Tone.LFO({\n\t            'min': 0,\n\t            'max': 0.1,\n\t            'type': 'sawtooth'\n\t        }).connect(this._delayA.delayTime);\n\t        /**\n\t\t\t *  The second DelayNode\n\t\t\t *  @type  {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayB = new Tone.Delay(0, 1);\n\t        /**\n\t\t\t *  The first LFO.\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoB = new Tone.LFO({\n\t            'min': 0,\n\t            'max': 0.1,\n\t            'type': 'sawtooth',\n\t            'phase': 180\n\t        }).connect(this._delayB.delayTime);\n\t        /**\n\t\t\t *  Crossfade quickly between the two delay lines\n\t\t\t *  to cover up the jump in the sawtooth wave\n\t\t\t *  @type  {Tone.CrossFade}\n\t\t\t *  @private\n\t\t\t */\n\t        this._crossFade = new Tone.CrossFade();\n\t        /**\n\t\t\t *  LFO which alternates between the two\n\t\t\t *  delay lines to cover up the disparity in the\n\t\t\t *  sawtooth wave. \n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._crossFadeLFO = new Tone.LFO({\n\t            'min': 0,\n\t            'max': 1,\n\t            'type': 'triangle',\n\t            'phase': 90\n\t        }).connect(this._crossFade.fade);\n\t        /**\n\t\t\t *  The delay node\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackDelay = new Tone.Delay(options.delayTime);\n\t        /**\n\t\t\t *  The amount of delay on the input signal\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = this._feedbackDelay.delayTime;\n\t        this._readOnly('delayTime');\n\t        /**\n\t\t\t *  Hold the current pitch\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._pitch = options.pitch;\n\t        /**\n\t\t\t *  Hold the current windowSize\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._windowSize = options.windowSize;\n\t        //connect the two delay lines up\n\t        this._delayA.connect(this._crossFade.a);\n\t        this._delayB.connect(this._crossFade.b);\n\t        //connect the frequency\n\t        this._frequency.fan(this._lfoA.frequency, this._lfoB.frequency, this._crossFadeLFO.frequency);\n\t        //route the input\n\t        this.effectSend.fan(this._delayA, this._delayB);\n\t        this._crossFade.chain(this._feedbackDelay, this.effectReturn);\n\t        //start the LFOs at the same time\n\t        var now = this.now();\n\t        this._lfoA.start(now);\n\t        this._lfoB.start(now);\n\t        this._crossFadeLFO.start(now);\n\t        //set the initial value\n\t        this.windowSize = this._windowSize;\n\t    };\n\t    Tone.extend(Tone.PitchShift, Tone.FeedbackEffect);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.PitchShift.defaults = {\n\t        'pitch': 0,\n\t        'windowSize': 0.1,\n\t        'delayTime': 0,\n\t        'feedback': 0\n\t    };\n\t    /**\n\t\t * Repitch the incoming signal by some interval (measured\n\t\t * in semi-tones). \n\t\t * @memberOf Tone.PitchShift#\n\t\t * @type {Interval}\n\t\t * @name pitch\n\t\t * @example\n\t\t * pitchShift.pitch = -12; //down one octave\n\t\t * pitchShift.pitch = 7; //up a fifth\n\t\t */\n\t    Object.defineProperty(Tone.PitchShift.prototype, 'pitch', {\n\t        get: function () {\n\t            return this._pitch;\n\t        },\n\t        set: function (interval) {\n\t            this._pitch = interval;\n\t            var factor = 0;\n\t            if (interval < 0) {\n\t                this._lfoA.min = 0;\n\t                this._lfoA.max = this._windowSize;\n\t                this._lfoB.min = 0;\n\t                this._lfoB.max = this._windowSize;\n\t                factor = this.intervalToFrequencyRatio(interval - 1) + 1;\n\t            } else {\n\t                this._lfoA.min = this._windowSize;\n\t                this._lfoA.max = 0;\n\t                this._lfoB.min = this._windowSize;\n\t                this._lfoB.max = 0;\n\t                factor = this.intervalToFrequencyRatio(interval) - 1;\n\t            }\n\t            this._frequency.value = factor * (1.2 / this._windowSize);\n\t        }\n\t    });\n\t    /**\n\t\t * The window size corresponds roughly to the sample length in a looping sampler. \n\t\t * Smaller values are desirable for a less noticeable delay time of the pitch shifted\n\t\t * signal, but larger values will result in smoother pitch shifting for larger intervals. \n\t\t * A nominal range of 0.03 to 0.1 is recommended. \n\t\t * @memberOf Tone.PitchShift#\n\t\t * @type {Time}\n\t\t * @name windowSize\n\t\t * @example\n\t\t * pitchShift.windowSize = 0.1;\n\t\t */\n\t    Object.defineProperty(Tone.PitchShift.prototype, 'windowSize', {\n\t        get: function () {\n\t            return this._windowSize;\n\t        },\n\t        set: function (size) {\n\t            this._windowSize = this.toSeconds(size);\n\t            this.pitch = this._pitch;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.PitchShift}  this\n\t\t */\n\t    Tone.PitchShift.prototype.dispose = function () {\n\t        Tone.FeedbackEffect.prototype.dispose.call(this);\n\t        this._frequency.dispose();\n\t        this._frequency = null;\n\t        this._delayA.disconnect();\n\t        this._delayA = null;\n\t        this._delayB.disconnect();\n\t        this._delayB = null;\n\t        this._lfoA.dispose();\n\t        this._lfoA = null;\n\t        this._lfoB.dispose();\n\t        this._lfoB = null;\n\t        this._crossFade.dispose();\n\t        this._crossFade = null;\n\t        this._crossFadeLFO.dispose();\n\t        this._crossFadeLFO = null;\n\t        this._writable('delayTime');\n\t        this._feedbackDelay.dispose();\n\t        this._feedbackDelay = null;\n\t        this.delayTime = null;\n\t        return this;\n\t    };\n\t    return Tone.PitchShift;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Base class for stereo feedback effects where the effectReturn\n\t\t *         is fed back into the same channel. \n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.FeedbackEffect}\n\t\t */\n\t    Tone.StereoFeedbackEffect = function () {\n\t        var options = this.optionsObject(arguments, ['feedback'], Tone.FeedbackEffect.defaults);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  controls the amount of feedback\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  the left side feeback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackL = new Tone.Gain();\n\t        /**\n\t\t\t *  the right side feeback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackR = new Tone.Gain();\n\t        //connect it up\n\t        this.effectReturnL.chain(this._feedbackL, this.effectSendL);\n\t        this.effectReturnR.chain(this._feedbackR, this.effectSendR);\n\t        this.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);\n\t        this._readOnly(['feedback']);\n\t    };\n\t    Tone.extend(Tone.StereoFeedbackEffect, Tone.FeedbackEffect);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.StereoFeedbackEffect} this\n\t\t */\n\t    Tone.StereoFeedbackEffect.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        this._writable(['feedback']);\n\t        this.feedback.dispose();\n\t        this.feedback = null;\n\t        this._feedbackL.dispose();\n\t        this._feedbackL = null;\n\t        this._feedbackR.dispose();\n\t        this._feedbackR = null;\n\t        return this;\n\t    };\n\t    return Tone.StereoFeedbackEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Applies a width factor to the mid/side seperation. \n\t\t *         0 is all mid and 1 is all side.\n\t\t *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n\t\t *         <br><br>\n\t\t *         <code>\n\t\t *         Mid *= 2*(1-width)<br>\n\t\t *         Side *= 2*width\n\t\t *         </code>\n\t\t *\n\t\t *  @extends {Tone.MidSideEffect}\n\t\t *  @constructor\n\t\t *  @param {NormalRange|Object} [width] The stereo width. A width of 0 is mono and 1 is stereo. 0.5 is no change.\n\t\t */\n\t    Tone.StereoWidener = function () {\n\t        var options = this.optionsObject(arguments, ['width'], Tone.StereoWidener.defaults);\n\t        Tone.MidSideEffect.call(this, options);\n\t        /**\n\t\t\t *  The width control. 0 = 100% mid. 1 = 100% side. 0.5 = no change. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  Mid multiplier\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midMult = new Tone.Expr('$0 * ($1 * (1 - $2))');\n\t        /**\n\t\t\t *  Side multiplier\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sideMult = new Tone.Expr('$0 * ($1 * $2)');\n\t        /**\n\t\t\t *  constant output of 2\n\t\t\t *  @type {Tone}\n\t\t\t *  @private\n\t\t\t */\n\t        this._two = new Tone.Signal(2);\n\t        //the mid chain\n\t        this._two.connect(this._midMult, 0, 1);\n\t        this.width.connect(this._midMult, 0, 2);\n\t        //the side chain\n\t        this._two.connect(this._sideMult, 0, 1);\n\t        this.width.connect(this._sideMult, 0, 2);\n\t        //connect it to the effect send/return\n\t        this.midSend.chain(this._midMult, this.midReturn);\n\t        this.sideSend.chain(this._sideMult, this.sideReturn);\n\t        this._readOnly(['width']);\n\t    };\n\t    Tone.extend(Tone.StereoWidener, Tone.MidSideEffect);\n\t    /**\n\t\t *  the default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.StereoWidener.defaults = { 'width': 0.5 };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.StereoWidener} this\n\t\t */\n\t    Tone.StereoWidener.prototype.dispose = function () {\n\t        Tone.MidSideEffect.prototype.dispose.call(this);\n\t        this._writable(['width']);\n\t        this.width.dispose();\n\t        this.width = null;\n\t        this._midMult.dispose();\n\t        this._midMult = null;\n\t        this._sideMult.dispose();\n\t        this._sideMult = null;\n\t        this._two.dispose();\n\t        this._two = null;\n\t        return this;\n\t    };\n\t    return Tone.StereoWidener;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Tremolo modulates the amplitude of an incoming signal using a Tone.LFO.\n\t\t *         The type, frequency, and depth of the LFO is controllable.\n\t\t *\n\t\t *  @extends {Tone.StereoEffect}\n\t\t *  @constructor\n\t\t *  @param {Frequency} [frequency] The rate of the effect.\n\t\t *  @param {NormalRange} [depth] The depth of the effect.\n\t\t *  @example\n\t\t * //create a tremolo and start it's LFO\n\t\t * var tremolo = new Tone.Tremolo(9, 0.75).toMaster().start();\n\t\t * //route an oscillator through the tremolo and start it\n\t\t * var oscillator = new Tone.Oscillator().connect(tremolo).start();\n\t\t */\n\t    Tone.Tremolo = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'depth'\n\t        ], Tone.Tremolo.defaults);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  The tremelo LFO in the left channel\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoL = new Tone.LFO({\n\t            'phase': options.spread,\n\t            'min': 1,\n\t            'max': 0\n\t        });\n\t        /**\n\t\t\t *  The tremelo LFO in the left channel\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoR = new Tone.LFO({\n\t            'phase': options.spread,\n\t            'min': 1,\n\t            'max': 0\n\t        });\n\t        /**\n\t\t\t *  Where the gain is multiplied\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._amplitudeL = new Tone.Gain();\n\t        /**\n\t\t\t *  Where the gain is multiplied\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._amplitudeR = new Tone.Gain();\n\t        /**\n\t\t\t *  The frequency of the tremolo.\n\t\t\t *  @type  {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The depth of the effect. A depth of 0, has no effect\n\t\t\t *  on the amplitude, and a depth of 1 makes the amplitude\n\t\t\t *  modulate fully between 0 and 1.\n\t\t\t *  @type  {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.depth = new Tone.Signal(options.depth, Tone.Type.NormalRange);\n\t        this._readOnly([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.effectSendL.chain(this._amplitudeL, this.effectReturnL);\n\t        this.effectSendR.chain(this._amplitudeR, this.effectReturnR);\n\t        this._lfoL.connect(this._amplitudeL.gain);\n\t        this._lfoR.connect(this._amplitudeR.gain);\n\t        this.frequency.fan(this._lfoL.frequency, this._lfoR.frequency);\n\t        this.depth.fan(this._lfoR.amplitude, this._lfoL.amplitude);\n\t        this.type = options.type;\n\t        this.spread = options.spread;\n\t    };\n\t    Tone.extend(Tone.Tremolo, Tone.StereoEffect);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Tremolo.defaults = {\n\t        'frequency': 10,\n\t        'type': 'sine',\n\t        'depth': 0.5,\n\t        'spread': 180\n\t    };\n\t    /**\n\t\t * Start the tremolo.\n\t\t * @param {Time} [time=now] When the tremolo begins.\n\t\t * @returns {Tone.Tremolo} this\n\t\t */\n\t    Tone.Tremolo.prototype.start = function (time) {\n\t        this._lfoL.start(time);\n\t        this._lfoR.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Stop the tremolo.\n\t\t * @param {Time} [time=now] When the tremolo stops.\n\t\t * @returns {Tone.Tremolo} this\n\t\t */\n\t    Tone.Tremolo.prototype.stop = function (time) {\n\t        this._lfoL.stop(time);\n\t        this._lfoR.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Sync the effect to the transport.\n\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t *                              Transport has started.\n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.Tremolo.prototype.sync = function (delay) {\n\t        this._lfoL.sync(delay);\n\t        this._lfoR.sync(delay);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Unsync the filter from the transport\n\t\t * @returns {Tone.Tremolo} this\n\t\t */\n\t    Tone.Tremolo.prototype.unsync = function () {\n\t        this._lfoL.unsync();\n\t        this._lfoR.unsync();\n\t        return this;\n\t    };\n\t    /**\n\t\t * The Tremolo's oscillator type.\n\t\t * @memberOf Tone.Tremolo#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.Tremolo.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfoL.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfoL.type = type;\n\t            this._lfoR.type = type;\n\t        }\n\t    });\n\t    /** \n\t\t * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n\t\t * When set to 180, LFO's will be panned hard left and right respectively.\n\t\t * @memberOf Tone.Tremolo#\n\t\t * @type {Degrees}\n\t\t * @name spread\n\t\t */\n\t    Object.defineProperty(Tone.Tremolo.prototype, 'spread', {\n\t        get: function () {\n\t            return this._lfoR.phase - this._lfoL.phase;    //180\n\t        },\n\t        set: function (spread) {\n\t            this._lfoL.phase = 90 - spread / 2;\n\t            this._lfoR.phase = spread / 2 + 90;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Tremolo} this\n\t\t */\n\t    Tone.Tremolo.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this._lfoL.dispose();\n\t        this._lfoL = null;\n\t        this._lfoR.dispose();\n\t        this._lfoR = null;\n\t        this._amplitudeL.dispose();\n\t        this._amplitudeL = null;\n\t        this._amplitudeR.dispose();\n\t        this._amplitudeR = null;\n\t        this.frequency = null;\n\t        this.depth = null;\n\t        return this;\n\t    };\n\t    return Tone.Tremolo;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n\t\t *         modulates the delayTime of the delay, causing the pitch to rise\n\t\t *         and fall. \n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Frequency} frequency The frequency of the vibrato.\n\t\t *  @param {NormalRange} depth The amount the pitch is modulated.\n\t\t */\n\t    Tone.Vibrato = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'depth'\n\t        ], Tone.Vibrato.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  The delay node used for the vibrato effect\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNode = new Tone.Delay(0, options.maxDelay);\n\t        /**\n\t\t\t *  The LFO used to control the vibrato\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfo = new Tone.LFO({\n\t            'type': options.type,\n\t            'min': 0,\n\t            'max': options.maxDelay,\n\t            'frequency': options.frequency,\n\t            'phase': -90    //offse the phase so the resting position is in the center\n\t        }).start().connect(this._delayNode.delayTime);\n\t        /**\n\t\t\t *  The frequency of the vibrato\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._lfo.frequency;\n\t        /**\n\t\t\t *  The depth of the vibrato. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.depth = this._lfo.amplitude;\n\t        this.depth.value = options.depth;\n\t        this._readOnly([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.effectSend.chain(this._delayNode, this.effectReturn);\n\t    };\n\t    Tone.extend(Tone.Vibrato, Tone.Effect);\n\t    /**\n\t\t *  The defaults\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Vibrato.defaults = {\n\t        'maxDelay': 0.005,\n\t        'frequency': 5,\n\t        'depth': 0.1,\n\t        'type': 'sine'\n\t    };\n\t    /**\n\t\t * Type of oscillator attached to the Vibrato.\n\t\t * @memberOf Tone.Vibrato#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.Vibrato.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfo.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfo.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Vibrato} this\n\t\t */\n\t    Tone.Vibrato.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._delayNode.dispose();\n\t        this._delayNode = null;\n\t        this._lfo.dispose();\n\t        this._lfo = null;\n\t        this._writable([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.frequency = null;\n\t        this.depth = null;\n\t    };\n\t    return Tone.Vibrato;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Event abstracts away Tone.Transport.schedule and provides a schedulable\n\t\t *          callback for a single or repeatable events along the timeline. \n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @param {function} callback The callback to invoke at the time. \n\t\t *  @param {*} value The value or values which should be passed to\n\t\t *                      the callback function on invocation.  \n\t\t *  @example\n\t\t * var chord = new Tone.Event(function(time, chord){\n\t\t * \t//the chord as well as the exact time of the event\n\t\t * \t//are passed in as arguments to the callback function\n\t\t * }, [\"D4\", \"E4\", \"F4\"]);\n\t\t * //start the chord at the beginning of the transport timeline\n\t\t * chord.start();\n\t\t * //loop it every measure for 8 measures\n\t\t * chord.loop = 8;\n\t\t * chord.loopEnd = \"1m\";\n\t\t */\n\t    Tone.Event = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'callback',\n\t            'value'\n\t        ], Tone.Event.defaults);\n\t        /**\n\t\t\t *  Loop value\n\t\t\t *  @type  {Boolean|Positive}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loop = options.loop;\n\t        /**\n\t\t\t *  The callback to invoke. \n\t\t\t *  @type  {Function}\n\t\t\t */\n\t        this.callback = options.callback;\n\t        /**\n\t\t\t *  The value which is passed to the\n\t\t\t *  callback function.\n\t\t\t *  @type  {*}\n\t\t\t *  @private\n\t\t\t */\n\t        this.value = options.value;\n\t        /**\n\t\t\t *  When the note is scheduled to start.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopStart = this.toTicks(options.loopStart);\n\t        /**\n\t\t\t *  When the note is scheduled to start.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopEnd = this.toTicks(options.loopEnd);\n\t        /**\n\t\t\t *  Tracks the scheduled events\n\t\t\t *  @type {Tone.TimelineState}\n\t\t\t *  @private\n\t\t\t */\n\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t        /**\n\t\t\t *  The playback speed of the note. A speed of 1\n\t\t\t *  is no change. \n\t\t\t *  @private\n\t\t\t *  @type {Positive}\n\t\t\t */\n\t        this._playbackRate = 1;\n\t        /**\n\t\t\t *  A delay time from when the event is scheduled to start\n\t\t\t *  @type {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._startOffset = 0;\n\t        /**\n\t\t\t *  The probability that the callback will be invoked\n\t\t\t *  at the scheduled time. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @example\n\t\t\t * //the callback will be invoked 50% of the time\n\t\t\t * event.probability = 0.5;\n\t\t\t */\n\t        this.probability = options.probability;\n\t        /**\n\t\t\t *  If set to true, will apply small (+/-0.02 seconds) random variation\n\t\t\t *  to the callback time. If the value is given as a time, it will randomize\n\t\t\t *  by that amount.\n\t\t\t *  @example\n\t\t\t * event.humanize = true;\n\t\t\t *  @type {Boolean|Time}\n\t\t\t */\n\t        this.humanize = options.humanize;\n\t        /**\n\t\t\t *  If mute is true, the callback won't be\n\t\t\t *  invoked.\n\t\t\t *  @type {Boolean}\n\t\t\t */\n\t        this.mute = options.mute;\n\t        //set the initial values\n\t        this.playbackRate = options.playbackRate;\n\t    };\n\t    Tone.extend(Tone.Event);\n\t    /**\n\t\t *  The default values\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Event.defaults = {\n\t        'callback': Tone.noOp,\n\t        'loop': false,\n\t        'loopEnd': '1m',\n\t        'loopStart': 0,\n\t        'playbackRate': 1,\n\t        'value': null,\n\t        'probability': 1,\n\t        'mute': false,\n\t        'humanize': false\n\t    };\n\t    /**\n\t\t *  Reschedule all of the events along the timeline\n\t\t *  with the updated values.\n\t\t *  @param {Time} after Only reschedules events after the given time.\n\t\t *  @return  {Tone.Event}  this\n\t\t *  @private\n\t\t */\n\t    Tone.Event.prototype._rescheduleEvents = function (after) {\n\t        //if no argument is given, schedules all of the events\n\t        after = this.defaultArg(after, -1);\n\t        this._state.forEachFrom(after, function (event) {\n\t            var duration;\n\t            if (event.state === Tone.State.Started) {\n\t                if (!this.isUndef(event.id)) {\n\t                    Tone.Transport.clear(event.id);\n\t                }\n\t                var startTick = event.time + Math.round(this.startOffset / this._playbackRate);\n\t                if (this._loop) {\n\t                    duration = Infinity;\n\t                    if (this.isNumber(this._loop)) {\n\t                        duration = this._loop * this._getLoopDuration();\n\t                    }\n\t                    var nextEvent = this._state.getEventAfter(startTick);\n\t                    if (nextEvent !== null) {\n\t                        duration = Math.min(duration, nextEvent.time - startTick);\n\t                    }\n\t                    if (duration !== Infinity) {\n\t                        //schedule a stop since it's finite duration\n\t                        this._state.setStateAtTime(Tone.State.Stopped, startTick + duration + 1);\n\t                        duration = Tone.Time(duration, 'i');\n\t                    }\n\t                    var interval = Tone.Time(this._getLoopDuration(), 'i');\n\t                    event.id = Tone.Transport.scheduleRepeat(this._tick.bind(this), interval, Tone.TransportTime(startTick, 'i'), duration);\n\t                } else {\n\t                    event.id = Tone.Transport.schedule(this._tick.bind(this), startTick + 'i');\n\t                }\n\t            }\n\t        }.bind(this));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the note, either \"started\" or \"stopped\".\n\t\t *  @type {String}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Event#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'state', {\n\t        get: function () {\n\t            return this._state.getStateAtTime(Tone.Transport.ticks);\n\t        }\n\t    });\n\t    /**\n\t\t *  The start from the scheduled start time\n\t\t *  @type {Ticks}\n\t\t *  @memberOf Tone.Event#\n\t\t *  @name startOffset\n\t\t *  @private\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'startOffset', {\n\t        get: function () {\n\t            return this._startOffset;\n\t        },\n\t        set: function (offset) {\n\t            this._startOffset = offset;\n\t        }\n\t    });\n\t    /**\n\t\t *  Start the note at the given time. \n\t\t *  @param  {TimelinePosition}  time  When the note should start.\n\t\t *  @return  {Tone.Event}  this\n\t\t */\n\t    Tone.Event.prototype.start = function (time) {\n\t        time = this.toTicks(time);\n\t        if (this._state.getStateAtTime(time) === Tone.State.Stopped) {\n\t            this._state.addEvent({\n\t                'state': Tone.State.Started,\n\t                'time': time,\n\t                'id': undefined\n\t            });\n\t            this._rescheduleEvents(time);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the Event at the given time.\n\t\t *  @param  {TimelinePosition}  time  When the note should stop.\n\t\t *  @return  {Tone.Event}  this\n\t\t */\n\t    Tone.Event.prototype.stop = function (time) {\n\t        this.cancel(time);\n\t        time = this.toTicks(time);\n\t        if (this._state.getStateAtTime(time) === Tone.State.Started) {\n\t            this._state.setStateAtTime(Tone.State.Stopped, time);\n\t            var previousEvent = this._state.getEventBefore(time);\n\t            var reschedulTime = time;\n\t            if (previousEvent !== null) {\n\t                reschedulTime = previousEvent.time;\n\t            }\n\t            this._rescheduleEvents(reschedulTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel all scheduled events greater than or equal to the given time\n\t\t *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n\t\t *  @return  {Tone.Event}  this\n\t\t */\n\t    Tone.Event.prototype.cancel = function (time) {\n\t        time = this.defaultArg(time, -Infinity);\n\t        time = this.toTicks(time);\n\t        this._state.forEachFrom(time, function (event) {\n\t            Tone.Transport.clear(event.id);\n\t        });\n\t        this._state.cancel(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The callback function invoker. Also \n\t\t *  checks if the Event is done playing\n\t\t *  @param  {Number}  time  The time of the event in seconds\n\t\t *  @private\n\t\t */\n\t    Tone.Event.prototype._tick = function (time) {\n\t        if (!this.mute && this._state.getStateAtTime(Tone.Transport.ticks) === Tone.State.Started) {\n\t            if (this.probability < 1 && Math.random() > this.probability) {\n\t                return;\n\t            }\n\t            if (this.humanize) {\n\t                var variation = 0.02;\n\t                if (!this.isBoolean(this.humanize)) {\n\t                    variation = this.toSeconds(this.humanize);\n\t                }\n\t                time += (Math.random() * 2 - 1) * variation;\n\t            }\n\t            this.callback(time, this.value);\n\t        }\n\t    };\n\t    /**\n\t\t *  Get the duration of the loop.\n\t\t *  @return  {Ticks}\n\t\t *  @private\n\t\t */\n\t    Tone.Event.prototype._getLoopDuration = function () {\n\t        return Math.round((this._loopEnd - this._loopStart) / this._playbackRate);\n\t    };\n\t    /**\n\t\t *  If the note should loop or not\n\t\t *  between Tone.Event.loopStart and \n\t\t *  Tone.Event.loopEnd. An integer\n\t\t *  value corresponds to the number of\n\t\t *  loops the Event does after it starts.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {Boolean|Positive}\n\t\t *  @name loop\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'loop', {\n\t        get: function () {\n\t            return this._loop;\n\t        },\n\t        set: function (loop) {\n\t            this._loop = loop;\n\t            this._rescheduleEvents();\n\t        }\n\t    });\n\t    /**\n\t\t * \tThe playback rate of the note. Defaults to 1.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {Positive}\n\t\t *  @name playbackRate\n\t\t *  @example\n\t\t * note.loop = true;\n\t\t * //repeat the note twice as fast\n\t\t * note.playbackRate = 2;\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            this._rescheduleEvents();\n\t        }\n\t    });\n\t    /**\n\t\t *  The loopEnd point is the time the event will loop\n\t\t *  if Tone.Event.loop is true.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {TransportTime}\n\t\t *  @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopEnd, 'i').toNotation();\n\t        },\n\t        set: function (loopEnd) {\n\t            this._loopEnd = this.toTicks(loopEnd);\n\t            if (this._loop) {\n\t                this._rescheduleEvents();\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The time when the loop should start. \n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {TransportTime}\n\t\t *  @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'loopStart', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopStart, 'i').toNotation();\n\t        },\n\t        set: function (loopStart) {\n\t            this._loopStart = this.toTicks(loopStart);\n\t            if (this._loop) {\n\t                this._rescheduleEvents();\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The current progress of the loop interval.\n\t\t *  Returns 0 if the event is not started yet or\n\t\t *  it is not set to loop.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {NormalRange}\n\t\t *  @name progress\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'progress', {\n\t        get: function () {\n\t            if (this._loop) {\n\t                var ticks = Tone.Transport.ticks;\n\t                var lastEvent = this._state.getEvent(ticks);\n\t                if (lastEvent !== null && lastEvent.state === Tone.State.Started) {\n\t                    var loopDuration = this._getLoopDuration();\n\t                    var progress = (ticks - lastEvent.time) % loopDuration;\n\t                    return progress / loopDuration;\n\t                } else {\n\t                    return 0;\n\t                }\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Event}  this\n\t\t */\n\t    Tone.Event.prototype.dispose = function () {\n\t        this.cancel();\n\t        this._state.dispose();\n\t        this._state = null;\n\t        this.callback = null;\n\t        this.value = null;\n\t    };\n\t    return Tone.Event;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Loop creates a looped callback at the \n\t\t *         specified interval. The callback can be \n\t\t *         started, stopped and scheduled along\n\t\t *         the Transport's timeline. \n\t\t *  @example\n\t\t * var loop = new Tone.Loop(function(time){\n\t\t * \t//triggered every eighth note. \n\t\t * \tconsole.log(time);\n\t\t * }, \"8n\").start(0);\n\t\t * Tone.Transport.start();\n\t\t *  @extends {Tone}\n\t\t *  @param {Function} callback The callback to invoke with the event.\n\t\t *  @param {Time} interval The time between successive callback calls. \n\t\t */\n\t    Tone.Loop = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'callback',\n\t            'interval'\n\t        ], Tone.Loop.defaults);\n\t        /**\n\t\t\t *  The event which produces the callbacks\n\t\t\t */\n\t        this._event = new Tone.Event({\n\t            'callback': this._tick.bind(this),\n\t            'loop': true,\n\t            'loopEnd': options.interval,\n\t            'playbackRate': options.playbackRate,\n\t            'probability': options.probability\n\t        });\n\t        /**\n\t\t\t *  The callback to invoke with the next event in the pattern\n\t\t\t *  @type {Function}\n\t\t\t */\n\t        this.callback = options.callback;\n\t        //set the iterations\n\t        this.iterations = options.iterations;\n\t    };\n\t    Tone.extend(Tone.Loop);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Loop.defaults = {\n\t        'interval': '4n',\n\t        'callback': Tone.noOp,\n\t        'playbackRate': 1,\n\t        'iterations': Infinity,\n\t        'probability': true,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t *  Start the loop at the specified time along the Transport's\n\t\t *  timeline.\n\t\t *  @param  {TimelinePosition=}  time  When to start the Loop.\n\t\t *  @return  {Tone.Loop}  this\n\t\t */\n\t    Tone.Loop.prototype.start = function (time) {\n\t        this._event.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the loop at the given time.\n\t\t *  @param  {TimelinePosition=}  time  When to stop the Arpeggio\n\t\t *  @return  {Tone.Loop}  this\n\t\t */\n\t    Tone.Loop.prototype.stop = function (time) {\n\t        this._event.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel all scheduled events greater than or equal to the given time\n\t\t *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n\t\t *  @return  {Tone.Loop}  this\n\t\t */\n\t    Tone.Loop.prototype.cancel = function (time) {\n\t        this._event.cancel(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Internal function called when the notes should be called\n\t\t *  @param  {Number}  time  The time the event occurs\n\t\t *  @private\n\t\t */\n\t    Tone.Loop.prototype._tick = function (time) {\n\t        this.callback(time);\n\t    };\n\t    /**\n\t\t *  The state of the Loop, either started or stopped.\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {String}\n\t\t *  @name state\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'state', {\n\t        get: function () {\n\t            return this._event.state;\n\t        }\n\t    });\n\t    /**\n\t\t *  The progress of the loop as a value between 0-1. 0, when\n\t\t *  the loop is stopped or done iterating. \n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {NormalRange}\n\t\t *  @name progress\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'progress', {\n\t        get: function () {\n\t            return this._event.progress;\n\t        }\n\t    });\n\t    /**\n\t\t *  The time between successive callbacks. \n\t\t *  @example\n\t\t * loop.interval = \"8n\"; //loop every 8n\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {Time}\n\t\t *  @name interval\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'interval', {\n\t        get: function () {\n\t            return this._event.loopEnd;\n\t        },\n\t        set: function (interval) {\n\t            this._event.loopEnd = interval;\n\t        }\n\t    });\n\t    /**\n\t\t *  The playback rate of the loop. The normal playback rate is 1 (no change). \n\t\t *  A `playbackRate` of 2 would be twice as fast. \n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {Time}\n\t\t *  @name playbackRate\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._event.playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._event.playbackRate = rate;\n\t        }\n\t    });\n\t    /**\n\t\t *  Random variation +/-0.01s to the scheduled time. \n\t\t *  Or give it a time value which it will randomize by.\n\t\t *  @type {Boolean|Time}\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @name humanize\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'humanize', {\n\t        get: function () {\n\t            return this._event.humanize;\n\t        },\n\t        set: function (variation) {\n\t            this._event.humanize = variation;\n\t        }\n\t    });\n\t    /**\n\t\t *  The probably of the callback being invoked.\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {NormalRange}\n\t\t *  @name probability\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'probability', {\n\t        get: function () {\n\t            return this._event.probability;\n\t        },\n\t        set: function (prob) {\n\t            this._event.probability = prob;\n\t        }\n\t    });\n\t    /**\n\t\t *  Muting the Loop means that no callbacks are invoked.\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {Boolean}\n\t\t *  @name mute\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'mute', {\n\t        get: function () {\n\t            return this._event.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._event.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  The number of iterations of the loop. The default\n\t\t *  value is Infinity (loop forever).\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {Positive}\n\t\t *  @name iterations\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'iterations', {\n\t        get: function () {\n\t            if (this._event.loop === true) {\n\t                return Infinity;\n\t            } else {\n\t                return this._event.loop;\n\t            }\n\t            return this._pattern.index;\n\t        },\n\t        set: function (iters) {\n\t            if (iters === Infinity) {\n\t                this._event.loop = true;\n\t            } else {\n\t                this._event.loop = iters;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Loop}  this\n\t\t */\n\t    Tone.Loop.prototype.dispose = function () {\n\t        this._event.dispose();\n\t        this._event = null;\n\t        this.callback = null;\n\t    };\n\t    return Tone.Loop;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Part is a collection Tone.Events which can be\n\t\t *         started/stoped and looped as a single unit.\n\t\t *\n\t\t *  @extends {Tone.Event}\n\t\t *  @param {Function} callback The callback to invoke on each event\n\t\t *  @param {Array} events the array of events\n\t\t *  @example\n\t\t * var part = new Tone.Part(function(time, note){\n\t\t * \t//the notes given as the second element in the array\n\t\t * \t//will be passed in as the second argument\n\t\t * \tsynth.triggerAttackRelease(note, \"8n\", time);\n\t\t * }, [[0, \"C2\"], [\"0:2\", \"C3\"], [\"0:3:2\", \"G2\"]]);\n\t\t *  @example\n\t\t * //use an array of objects as long as the object has a \"time\" attribute\n\t\t * var part = new Tone.Part(function(time, value){\n\t\t * \t//the value is an object which contains both the note and the velocity\n\t\t * \tsynth.triggerAttackRelease(value.note, \"8n\", time, value.velocity);\n\t\t * }, [{\"time\" : 0, \"note\" : \"C3\", \"velocity\": 0.9}, \n\t\t * \t   {\"time\" : \"0:2\", \"note\" : \"C4\", \"velocity\": 0.5}\n\t\t * ]).start(0);\n\t\t */\n\t    Tone.Part = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'callback',\n\t            'events'\n\t        ], Tone.Part.defaults);\n\t        /**\n\t\t\t *  If the part is looping or not\n\t\t\t *  @type  {Boolean|Positive}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loop = options.loop;\n\t        /**\n\t\t\t *  When the note is scheduled to start.\n\t\t\t *  @type  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopStart = this.toTicks(options.loopStart);\n\t        /**\n\t\t\t *  When the note is scheduled to start.\n\t\t\t *  @type  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopEnd = this.toTicks(options.loopEnd);\n\t        /**\n\t\t\t *  The playback rate of the part\n\t\t\t *  @type  {Positive}\n\t\t\t *  @private\n\t\t\t */\n\t        this._playbackRate = options.playbackRate;\n\t        /**\n\t\t\t *  private holder of probability value\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @private\n\t\t\t */\n\t        this._probability = options.probability;\n\t        /**\n\t\t\t *  the amount of variation from the\n\t\t\t *  given time. \n\t\t\t *  @type {Boolean|Time}\n\t\t\t *  @private\n\t\t\t */\n\t        this._humanize = options.humanize;\n\t        /**\n\t\t\t *  The start offset\n\t\t\t *  @type {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._startOffset = 0;\n\t        /**\n\t\t\t *  Keeps track of the current state\n\t\t\t *  @type {Tone.TimelineState}\n\t\t\t *  @private\n\t\t\t */\n\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t        /**\n\t\t\t *  An array of Objects. \n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._events = [];\n\t        /**\n\t\t\t *  The callback to invoke at all the scheduled events.\n\t\t\t *  @type {Function}\n\t\t\t */\n\t        this.callback = options.callback;\n\t        /**\n\t\t\t *  If mute is true, the callback won't be\n\t\t\t *  invoked.\n\t\t\t *  @type {Boolean}\n\t\t\t */\n\t        this.mute = options.mute;\n\t        //add the events\n\t        var events = this.defaultArg(options.events, []);\n\t        if (!this.isUndef(options.events)) {\n\t            for (var i = 0; i < events.length; i++) {\n\t                if (Array.isArray(events[i])) {\n\t                    this.add(events[i][0], events[i][1]);\n\t                } else {\n\t                    this.add(events[i]);\n\t                }\n\t            }\n\t        }\n\t    };\n\t    Tone.extend(Tone.Part, Tone.Event);\n\t    /**\n\t\t *  The default values\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Part.defaults = {\n\t        'callback': Tone.noOp,\n\t        'loop': false,\n\t        'loopEnd': '1m',\n\t        'loopStart': 0,\n\t        'playbackRate': 1,\n\t        'probability': 1,\n\t        'humanize': false,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t *  Start the part at the given time. \n\t\t *  @param  {TransportTime}  time    When to start the part.\n\t\t *  @param  {Time=}  offset  The offset from the start of the part\n\t\t *                           to begin playing at.\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.start = function (time, offset) {\n\t        var ticks = this.toTicks(time);\n\t        if (this._state.getStateAtTime(ticks) !== Tone.State.Started) {\n\t            if (this._loop) {\n\t                offset = this.defaultArg(offset, this._loopStart);\n\t            } else {\n\t                offset = this.defaultArg(offset, 0);\n\t            }\n\t            offset = this.toTicks(offset);\n\t            this._state.addEvent({\n\t                'state': Tone.State.Started,\n\t                'time': ticks,\n\t                'offset': offset\n\t            });\n\t            this._forEach(function (event) {\n\t                this._startNote(event, ticks, offset);\n\t            });\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start the event in the given event at the correct time given\n\t\t *  the ticks and offset and looping.\n\t\t *  @param  {Tone.Event}  event \n\t\t *  @param  {Ticks}  ticks\n\t\t *  @param  {Ticks}  offset\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._startNote = function (event, ticks, offset) {\n\t        ticks -= offset;\n\t        if (this._loop) {\n\t            if (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {\n\t                if (event.startOffset < offset) {\n\t                    //start it on the next loop\n\t                    ticks += this._getLoopDuration();\n\t                }\n\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t            } else if (event.startOffset < this._loopStart && event.startOffset >= offset) {\n\t                event.loop = false;\n\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t            }\n\t        } else {\n\t            if (event.startOffset >= offset) {\n\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  The start from the scheduled start time\n\t\t *  @type {Ticks}\n\t\t *  @memberOf Tone.Part#\n\t\t *  @name startOffset\n\t\t *  @private\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'startOffset', {\n\t        get: function () {\n\t            return this._startOffset;\n\t        },\n\t        set: function (offset) {\n\t            this._startOffset = offset;\n\t            this._forEach(function (event) {\n\t                event.startOffset += this._startOffset;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t *  Stop the part at the given time.\n\t\t *  @param  {TimelinePosition}  time  When to stop the part.\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.stop = function (time) {\n\t        var ticks = this.toTicks(time);\n\t        this._state.cancel(ticks);\n\t        this._state.setStateAtTime(Tone.State.Stopped, ticks);\n\t        this._forEach(function (event) {\n\t            event.stop(time);\n\t        });\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get/Set an Event's value at the given time. \n\t\t *  If a value is passed in and no event exists at\n\t\t *  the given time, one will be created with that value. \n\t\t *  If two events are at the same time, the first one will\n\t\t *  be returned.\n\t\t *  @example\n\t\t * part.at(\"1m\"); //returns the part at the first measure\n\t\t *\n\t\t * part.at(\"2m\", \"C2\"); //set the value at \"2m\" to C2. \n\t\t * //if an event didn't exist at that time, it will be created.\n\t\t *  @param {TransportTime} time The time of the event to get or set.\n\t\t *  @param {*=} value If a value is passed in, the value of the\n\t\t *                    event at the given time will be set to it.\n\t\t *  @return {Tone.Event} the event at the time\n\t\t */\n\t    Tone.Part.prototype.at = function (time, value) {\n\t        time = Tone.TransportTime(time);\n\t        var tickTime = Tone.Time(1, 'i').toSeconds();\n\t        for (var i = 0; i < this._events.length; i++) {\n\t            var event = this._events[i];\n\t            if (Math.abs(time.toTicks() - event.startOffset) < tickTime) {\n\t                if (!this.isUndef(value)) {\n\t                    event.value = value;\n\t                }\n\t                return event;\n\t            }\n\t        }\n\t        //if there was no event at that time, create one\n\t        if (!this.isUndef(value)) {\n\t            this.add(time, value);\n\t            //return the new event\n\t            return this._events[this._events.length - 1];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Add a an event to the part. \n\t\t *  @param {Time} time The time the note should start.\n\t\t *                            If an object is passed in, it should\n\t\t *                            have a 'time' attribute and the rest\n\t\t *                            of the object will be used as the 'value'.\n\t\t *  @param  {Tone.Event|*}  value \n\t\t *  @returns {Tone.Part} this\n\t\t *  @example\n\t\t * part.add(\"1m\", \"C#+11\");\n\t\t */\n\t    Tone.Part.prototype.add = function (time, value) {\n\t        //extract the parameters\n\t        if (time.hasOwnProperty('time')) {\n\t            value = time;\n\t            time = value.time;\n\t        }\n\t        time = this.toTicks(time);\n\t        var event;\n\t        if (value instanceof Tone.Event) {\n\t            event = value;\n\t            event.callback = this._tick.bind(this);\n\t        } else {\n\t            event = new Tone.Event({\n\t                'callback': this._tick.bind(this),\n\t                'value': value\n\t            });\n\t        }\n\t        //the start offset\n\t        event.startOffset = time;\n\t        //initialize the values\n\t        event.set({\n\t            'loopEnd': this.loopEnd,\n\t            'loopStart': this.loopStart,\n\t            'loop': this.loop,\n\t            'humanize': this.humanize,\n\t            'playbackRate': this.playbackRate,\n\t            'probability': this.probability\n\t        });\n\t        this._events.push(event);\n\t        //start the note if it should be played right now\n\t        this._restartEvent(event);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Restart the given event\n\t\t *  @param  {Tone.Event}  event \n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._restartEvent = function (event) {\n\t        var stateEvent = this._state.getEvent(Tone.Transport.ticks);\n\t        if (stateEvent && stateEvent.state === Tone.State.Started) {\n\t            this._startNote(event, stateEvent.time, stateEvent.offset);\n\t        }\n\t    };\n\t    /**\n\t\t *  Remove an event from the part. Will recursively iterate\n\t\t *  into nested parts to find the event.\n\t\t *  @param {Time} time The time of the event\n\t\t *  @param {*} value Optionally select only a specific event value\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.remove = function (time, value) {\n\t        //extract the parameters\n\t        if (time.hasOwnProperty('time')) {\n\t            value = time;\n\t            time = value.time;\n\t        }\n\t        time = this.toTicks(time);\n\t        for (var i = this._events.length - 1; i >= 0; i--) {\n\t            var event = this._events[i];\n\t            if (event instanceof Tone.Part) {\n\t                event.remove(time, value);\n\t            } else {\n\t                if (event.startOffset === time) {\n\t                    if (this.isUndef(value) || !this.isUndef(value) && event.value === value) {\n\t                        this._events.splice(i, 1);\n\t                        event.dispose();\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove all of the notes from the group. \n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.removeAll = function () {\n\t        this._forEach(function (event) {\n\t            event.dispose();\n\t        });\n\t        this._events = [];\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel scheduled state change events: i.e. \"start\" and \"stop\".\n\t\t *  @param {TimelinePosition} after The time after which to cancel the scheduled events.\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.cancel = function (after) {\n\t        after = this.toTicks(after);\n\t        this._forEach(function (event) {\n\t            event.cancel(after);\n\t        });\n\t        this._state.cancel(after);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over all of the events\n\t\t *  @param {Function} callback\n\t\t *  @param {Object} ctx The context\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._forEach = function (callback, ctx) {\n\t        ctx = this.defaultArg(ctx, this);\n\t        for (var i = this._events.length - 1; i >= 0; i--) {\n\t            var e = this._events[i];\n\t            if (e instanceof Tone.Part) {\n\t                e._forEach(callback, ctx);\n\t            } else {\n\t                callback.call(ctx, e);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set the attribute of all of the events\n\t\t *  @param  {String}  attr  the attribute to set\n\t\t *  @param  {*}  value      The value to set it to\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._setAll = function (attr, value) {\n\t        this._forEach(function (event) {\n\t            event[attr] = value;\n\t        });\n\t    };\n\t    /**\n\t\t *  Internal tick method\n\t\t *  @param  {Number}  time  The time of the event in seconds\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._tick = function (time, value) {\n\t        if (!this.mute) {\n\t            this.callback(time, value);\n\t        }\n\t    };\n\t    /**\n\t\t *  Determine if the event should be currently looping\n\t\t *  given the loop boundries of this Part.\n\t\t *  @param  {Tone.Event}  event  The event to test\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._testLoopBoundries = function (event) {\n\t        if (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd) {\n\t            event.cancel();\n\t        } else {\n\t            //reschedule it if it's stopped\n\t            if (event.state === Tone.State.Stopped) {\n\t                this._restartEvent(event);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  The probability of the notes being triggered.\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {NormalRange}\n\t\t *  @name probability\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'probability', {\n\t        get: function () {\n\t            return this._probability;\n\t        },\n\t        set: function (prob) {\n\t            this._probability = prob;\n\t            this._setAll('probability', prob);\n\t        }\n\t    });\n\t    /**\n\t\t *  If set to true, will apply small random variation\n\t\t *  to the callback time. If the value is given as a time, it will randomize\n\t\t *  by that amount.\n\t\t *  @example\n\t\t * event.humanize = true;\n\t\t *  @type {Boolean|Time}\n\t\t *  @name humanize\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'humanize', {\n\t        get: function () {\n\t            return this._humanize;\n\t        },\n\t        set: function (variation) {\n\t            this._humanize = variation;\n\t            this._setAll('humanize', variation);\n\t        }\n\t    });\n\t    /**\n\t\t *  If the part should loop or not\n\t\t *  between Tone.Part.loopStart and \n\t\t *  Tone.Part.loopEnd. An integer\n\t\t *  value corresponds to the number of\n\t\t *  loops the Part does after it starts.\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {Boolean|Positive}\n\t\t *  @name loop\n\t\t *  @example\n\t\t * //loop the part 8 times\n\t\t * part.loop = 8;\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'loop', {\n\t        get: function () {\n\t            return this._loop;\n\t        },\n\t        set: function (loop) {\n\t            this._loop = loop;\n\t            this._forEach(function (event) {\n\t                event._loopStart = this._loopStart;\n\t                event._loopEnd = this._loopEnd;\n\t                event.loop = loop;\n\t                this._testLoopBoundries(event);\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t *  The loopEnd point determines when it will \n\t\t *  loop if Tone.Part.loop is true.\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {TransportTime}\n\t\t *  @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopEnd, 'i').toNotation();\n\t        },\n\t        set: function (loopEnd) {\n\t            this._loopEnd = this.toTicks(loopEnd);\n\t            if (this._loop) {\n\t                this._forEach(function (event) {\n\t                    event.loopEnd = this.loopEnd;\n\t                    this._testLoopBoundries(event);\n\t                });\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The loopStart point determines when it will \n\t\t *  loop if Tone.Part.loop is true.\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {TransportTime}\n\t\t *  @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'loopStart', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopStart, 'i').toNotation();\n\t        },\n\t        set: function (loopStart) {\n\t            this._loopStart = this.toTicks(loopStart);\n\t            if (this._loop) {\n\t                this._forEach(function (event) {\n\t                    event.loopStart = this.loopStart;\n\t                    this._testLoopBoundries(event);\n\t                });\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * \tThe playback rate of the part\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {Positive}\n\t\t *  @name playbackRate\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            this._setAll('playbackRate', rate);\n\t        }\n\t    });\n\t    /**\n\t\t * \tThe number of scheduled notes in the part. \n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {Positive}\n\t\t *  @name length\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'length', {\n\t        get: function () {\n\t            return this._events.length;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.dispose = function () {\n\t        this.removeAll();\n\t        this._state.dispose();\n\t        this._state = null;\n\t        this.callback = null;\n\t        this._events = null;\n\t        return this;\n\t    };\n\t    return Tone.Part;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Pattern arpeggiates between the given notes\n\t\t *         in a number of patterns. See Tone.CtrlPattern for\n\t\t *         a full list of patterns.\n\t\t *  @example\n\t\t * var pattern = new Tone.Pattern(function(time, note){\n\t\t *   //the order of the notes passed in depends on the pattern\n\t\t * }, [\"C2\", \"D4\", \"E5\", \"A6\"], \"upDown\");\n\t\t *  @extends {Tone.Loop}\n\t\t *  @param {Function} callback The callback to invoke with the\n\t\t *                             event.\n\t\t *  @param {Array} values The values to arpeggiate over.\n\t\t */\n\t    Tone.Pattern = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'callback',\n\t            'values',\n\t            'pattern'\n\t        ], Tone.Pattern.defaults);\n\t        Tone.Loop.call(this, options);\n\t        /**\n\t\t\t *  The pattern manager\n\t\t\t *  @type {Tone.CtrlPattern}\n\t\t\t *  @private\n\t\t\t */\n\t        this._pattern = new Tone.CtrlPattern({\n\t            'values': options.values,\n\t            'type': options.pattern,\n\t            'index': options.index\n\t        });\n\t    };\n\t    Tone.extend(Tone.Pattern, Tone.Loop);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Pattern.defaults = {\n\t        'pattern': Tone.CtrlPattern.Type.Up,\n\t        'values': []\n\t    };\n\t    /**\n\t\t *  Internal function called when the notes should be called\n\t\t *  @param  {Number}  time  The time the event occurs\n\t\t *  @private\n\t\t */\n\t    Tone.Pattern.prototype._tick = function (time) {\n\t        this.callback(time, this._pattern.value);\n\t        this._pattern.next();\n\t    };\n\t    /**\n\t\t *  The current index in the values array.\n\t\t *  @memberOf Tone.Pattern#\n\t\t *  @type {Positive}\n\t\t *  @name index\n\t\t */\n\t    Object.defineProperty(Tone.Pattern.prototype, 'index', {\n\t        get: function () {\n\t            return this._pattern.index;\n\t        },\n\t        set: function (i) {\n\t            this._pattern.index = i;\n\t        }\n\t    });\n\t    /**\n\t\t *  The array of events.\n\t\t *  @memberOf Tone.Pattern#\n\t\t *  @type {Array}\n\t\t *  @name values\n\t\t */\n\t    Object.defineProperty(Tone.Pattern.prototype, 'values', {\n\t        get: function () {\n\t            return this._pattern.values;\n\t        },\n\t        set: function (vals) {\n\t            this._pattern.values = vals;\n\t        }\n\t    });\n\t    /**\n\t\t *  The current value of the pattern.\n\t\t *  @memberOf Tone.Pattern#\n\t\t *  @type {*}\n\t\t *  @name value\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Pattern.prototype, 'value', {\n\t        get: function () {\n\t            return this._pattern.value;\n\t        }\n\t    });\n\t    /**\n\t\t *  The pattern type. See Tone.CtrlPattern for the full list of patterns.\n\t\t *  @memberOf Tone.Pattern#\n\t\t *  @type {String}\n\t\t *  @name pattern\n\t\t */\n\t    Object.defineProperty(Tone.Pattern.prototype, 'pattern', {\n\t        get: function () {\n\t            return this._pattern.type;\n\t        },\n\t        set: function (pattern) {\n\t            this._pattern.type = pattern;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Pattern}  this\n\t\t */\n\t    Tone.Pattern.prototype.dispose = function () {\n\t        Tone.Loop.prototype.dispose.call(this);\n\t        this._pattern.dispose();\n\t        this._pattern = null;\n\t    };\n\t    return Tone.Pattern;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A sequence is an alternate notation of a part. Instead\n\t\t *         of passing in an array of [time, event] pairs, pass\n\t\t *         in an array of events which will be spaced at the\n\t\t *         given subdivision. Sub-arrays will subdivide that beat\n\t\t *         by the number of items are in the array. \n\t\t *         Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)\n\t\t *  @param  {Function}  callback  The callback to invoke with every note\n\t\t *  @param  {Array}    events  The sequence\n\t\t *  @param  {Time} subdivision  The subdivision between which events are placed. \n\t\t *  @extends {Tone.Part}\n\t\t *  @example\n\t\t * var seq = new Tone.Sequence(function(time, note){\n\t\t * \tconsole.log(note);\n\t\t * //straight quater notes\n\t\t * }, [\"C4\", \"E4\", \"G4\", \"A4\"], \"4n\");\n\t\t *  @example\n\t\t * var seq = new Tone.Sequence(function(time, note){\n\t\t * \tconsole.log(note);\n\t\t * //subdivisions are given as subarrays\n\t\t * }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]]);\n\t\t */\n\t    Tone.Sequence = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'callback',\n\t            'events',\n\t            'subdivision'\n\t        ], Tone.Sequence.defaults);\n\t        //remove the events\n\t        var events = options.events;\n\t        delete options.events;\n\t        Tone.Part.call(this, options);\n\t        /**\n\t\t\t *  The subdivison of each note\n\t\t\t *  @type  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._subdivision = this.toTicks(options.subdivision);\n\t        //if no time was passed in, the loop end is the end of the cycle\n\t        if (this.isUndef(options.loopEnd) && !this.isUndef(events)) {\n\t            this._loopEnd = events.length * this._subdivision;\n\t        }\n\t        //defaults to looping\n\t        this._loop = true;\n\t        //add all of the events\n\t        if (!this.isUndef(events)) {\n\t            for (var i = 0; i < events.length; i++) {\n\t                this.add(i, events[i]);\n\t            }\n\t        }\n\t    };\n\t    Tone.extend(Tone.Sequence, Tone.Part);\n\t    /**\n\t\t *  The default values.\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Sequence.defaults = { 'subdivision': '4n' };\n\t    /**\n\t\t *  The subdivision of the sequence. This can only be \n\t\t *  set in the constructor. The subdivision is the \n\t\t *  interval between successive steps. \n\t\t *  @type {Time}\n\t\t *  @memberOf Tone.Sequence#\n\t\t *  @name subdivision\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Sequence.prototype, 'subdivision', {\n\t        get: function () {\n\t            return Tone.Time(this._subdivision, 'i').toNotation();\n\t        }\n\t    });\n\t    /**\n\t\t *  Get/Set an index of the sequence. If the index contains a subarray, \n\t\t *  a Tone.Sequence representing that sub-array will be returned. \n\t\t *  @example\n\t\t * var sequence = new Tone.Sequence(playNote, [\"E4\", \"C4\", \"F#4\", [\"A4\", \"Bb3\"]])\n\t\t * sequence.at(0)// => returns \"E4\"\n\t\t * //set a value\n\t\t * sequence.at(0, \"G3\");\n\t\t * //get a nested sequence\n\t\t * sequence.at(3).at(1)// => returns \"Bb3\"\n\t\t * @param {Positive} index The index to get or set\n\t\t * @param {*} value Optionally pass in the value to set at the given index.\n\t\t */\n\t    Tone.Sequence.prototype.at = function (index, value) {\n\t        //if the value is an array, \n\t        if (this.isArray(value)) {\n\t            //remove the current event at that index\n\t            this.remove(index);\n\t        }\n\t        //call the parent's method\n\t        return Tone.Part.prototype.at.call(this, this._indexTime(index), value);\n\t    };\n\t    /**\n\t\t *  Add an event at an index, if there's already something\n\t\t *  at that index, overwrite it. If `value` is an array, \n\t\t *  it will be parsed as a subsequence.\n\t\t *  @param {Number} index The index to add the event to\n\t\t *  @param {*} value The value to add at that index\n\t\t *  @returns {Tone.Sequence} this\n\t\t */\n\t    Tone.Sequence.prototype.add = function (index, value) {\n\t        if (value === null) {\n\t            return this;\n\t        }\n\t        if (this.isArray(value)) {\n\t            //make a subsequence and add that to the sequence\n\t            var subSubdivision = Math.round(this._subdivision / value.length);\n\t            value = new Tone.Sequence(this._tick.bind(this), value, Tone.Time(subSubdivision, 'i'));\n\t        }\n\t        Tone.Part.prototype.add.call(this, this._indexTime(index), value);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove a value from the sequence by index\n\t\t *  @param {Number} index The index of the event to remove\n\t\t *  @returns {Tone.Sequence} this\n\t\t */\n\t    Tone.Sequence.prototype.remove = function (index, value) {\n\t        Tone.Part.prototype.remove.call(this, this._indexTime(index), value);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the time of the index given the Sequence's subdivision\n\t\t *  @param  {Number}  index \n\t\t *  @return  {Time}  The time of that index\n\t\t *  @private\n\t\t */\n\t    Tone.Sequence.prototype._indexTime = function (index) {\n\t        if (index instanceof Tone.TransportTime) {\n\t            return index;\n\t        } else {\n\t            return Tone.TransportTime(index * this._subdivision + this.startOffset, 'i');\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.Sequence} this\n\t\t */\n\t    Tone.Sequence.prototype.dispose = function () {\n\t        Tone.Part.prototype.dispose.call(this);\n\t        return this;\n\t    };\n\t    return Tone.Sequence;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.PulseOscillator is a pulse oscillator with control over pulse width,\n\t\t *         also known as the duty cycle. At 50% duty cycle (width = 0.5) the wave is \n\t\t *         a square and only odd-numbered harmonics are present. At all other widths \n\t\t *         even-numbered harmonics are present. Read more \n\t\t *         [here](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @param {Frequency} [frequency] The frequency of the oscillator\n\t\t *  @param {NormalRange} [width] The width of the pulse\n\t\t *  @example\n\t\t * var pulse = new Tone.PulseOscillator(\"E5\", 0.4).toMaster().start();\n\t\t */\n\t    Tone.PulseOscillator = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'width'\n\t        ], Tone.Oscillator.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The width of the pulse. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  gate the width amount\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._widthGate = new Tone.Gain();\n\t        /**\n\t\t\t *  the sawtooth oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sawtooth = new Tone.Oscillator({\n\t            frequency: options.frequency,\n\t            detune: options.detune,\n\t            type: 'sawtooth',\n\t            phase: options.phase\n\t        });\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._sawtooth.frequency;\n\t        /**\n\t\t\t *  The detune in cents. \n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this._sawtooth.detune;\n\t        /**\n\t\t\t *  Threshold the signal to turn it into a square\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t        this._thresh = new Tone.WaveShaper(function (val) {\n\t            if (val < 0) {\n\t                return -1;\n\t            } else {\n\t                return 1;\n\t            }\n\t        });\n\t        //connections\n\t        this._sawtooth.chain(this._thresh, this.output);\n\t        this.width.chain(this._widthGate, this._thresh);\n\t        this._readOnly([\n\t            'width',\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.PulseOscillator, Tone.Oscillator);\n\t    /**\n\t\t *  The default parameters.\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.PulseOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'width': 0.2\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} time \n\t\t *  @private\n\t\t */\n\t    Tone.PulseOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._sawtooth.start(time);\n\t        this._widthGate.gain.setValueAtTime(1, time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time \n\t\t *  @private\n\t\t */\n\t    Tone.PulseOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._sawtooth.stop(time);\n\t        //the width is still connected to the output. \n\t        //that needs to be stopped also\n\t        this._widthGate.gain.setValueAtTime(0, time);\n\t    };\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.PulseOscillator#\n\t\t * @type {Degrees}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._sawtooth.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._sawtooth.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the oscillator. Always returns \"pulse\".\n\t\t * @readOnly\n\t\t * @memberOf Tone.PulseOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return 'pulse';\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the waveform. Cannot set partials for this waveform type\n\t\t * @memberOf Tone.PulseOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @private\n\t\t */\n\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return [];\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up method.\n\t\t *  @return {Tone.PulseOscillator} this\n\t\t */\n\t    Tone.PulseOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._sawtooth.dispose();\n\t        this._sawtooth = null;\n\t        this._writable([\n\t            'width',\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.width.dispose();\n\t        this.width = null;\n\t        this._widthGate.dispose();\n\t        this._widthGate = null;\n\t        this._thresh.dispose();\n\t        this._thresh = null;\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        return this;\n\t    };\n\t    return Tone.PulseOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.PWMOscillator modulates the width of a Tone.PulseOscillator \n\t\t *         at the modulationFrequency. This has the effect of continuously\n\t\t *         changing the timbre of the oscillator by altering the harmonics \n\t\t *         generated.\n\t\t *\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t *  @param {Frequency} modulationFrequency The modulation frequency of the width of the pulse. \n\t\t *  @example\n\t\t *  var pwm = new Tone.PWMOscillator(\"Ab3\", 0.3).toMaster().start();\n\t\t */\n\t    Tone.PWMOscillator = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'modulationFrequency'\n\t        ], Tone.PWMOscillator.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  the pulse oscillator\n\t\t\t *  @type {Tone.PulseOscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._pulse = new Tone.PulseOscillator(options.modulationFrequency);\n\t        //change the pulse oscillator type\n\t        this._pulse._sawtooth.type = 'sine';\n\t        /**\n\t\t\t *  the modulator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Oscillator({\n\t            'frequency': options.frequency,\n\t            'detune': options.detune,\n\t            'phase': options.phase\n\t        });\n\t        /**\n\t\t\t *  Scale the oscillator so it doesn't go silent \n\t\t\t *  at the extreme values.\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = new Tone.Multiply(2);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._modulator.frequency;\n\t        /**\n\t\t\t *  The detune of the oscillator.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this._modulator.detune;\n\t        /**\n\t\t\t *  The modulation rate of the oscillator. \n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.modulationFrequency = this._pulse.frequency;\n\t        //connections\n\t        this._modulator.chain(this._scale, this._pulse.width);\n\t        this._pulse.connect(this.output);\n\t        this._readOnly([\n\t            'modulationFrequency',\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.PWMOscillator, Tone.Oscillator);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.PWMOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'modulationFrequency': 0.4\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.PWMOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.start(time);\n\t        this._pulse.start(time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time (optional) timing parameter\n\t\t *  @private\n\t\t */\n\t    Tone.PWMOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.stop(time);\n\t        this._pulse.stop(time);\n\t    };\n\t    /**\n\t\t * The type of the oscillator. Always returns \"pwm\".\n\t\t * @readOnly\n\t\t * @memberOf Tone.PWMOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return 'pwm';\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the waveform. Cannot set partials for this waveform type\n\t\t * @memberOf Tone.PWMOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @private\n\t\t */\n\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return [];\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.PWMOscillator#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._modulator.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._modulator.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.PWMOscillator} this\n\t\t */\n\t    Tone.PWMOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._pulse.dispose();\n\t        this._pulse = null;\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this._writable([\n\t            'modulationFrequency',\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        this.modulationFrequency = null;\n\t        return this;\n\t    };\n\t    return Tone.PWMOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.FMOscillator \n\t\t *\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t *  @example\n\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t * var fmOsc = new Tone.FMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t */\n\t    Tone.FMOscillator = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'type',\n\t            'modulationType'\n\t        ], Tone.FMOscillator.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The carrier oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._carrier = new Tone.Oscillator(options.frequency, options.type);\n\t        /**\n\t\t\t *  The oscillator's frequency\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune control signal.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this._carrier.detune;\n\t        this.detune.value = options.detune;\n\t        /**\n\t\t\t *  The modulation index which is in essence the depth or amount of the modulation. In other terms it is the \n\t\t\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t\t *  modulating signal (ma) -- as in ma/mf. \n\t\t\t *\t@type {Positive}\n\t\t\t *\t@signal\n\t\t\t */\n\t        this.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\t        this.modulationIndex.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  The modulating oscillator\n\t\t\t *  @type  {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\t        /**\n\t\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t\t *  Harmonicity = 2 means a change of an octave. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch the modulator an octave below carrier\n\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationNode = new Tone.Gain(0);\n\t        //connections\n\t        this.frequency.connect(this._carrier.frequency);\n\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t        this.frequency.chain(this.modulationIndex, this._modulationNode);\n\t        this._modulator.connect(this._modulationNode.gain);\n\t        this._modulationNode.connect(this._carrier.frequency);\n\t        this._carrier.connect(this.output);\n\t        this.detune.connect(this._modulator.detune);\n\t        this.phase = options.phase;\n\t        this._readOnly([\n\t            'modulationIndex',\n\t            'frequency',\n\t            'detune',\n\t            'harmonicity'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.FMOscillator, Tone.Oscillator);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.FMOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'modulationIndex': 2,\n\t        'modulationType': 'square',\n\t        'harmonicity': 1\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.FMOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.start(time);\n\t        this._carrier.start(time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time (optional) timing parameter\n\t\t *  @private\n\t\t */\n\t    Tone.FMOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.stop(time);\n\t        this._carrier.stop(time);\n\t    };\n\t    /**\n\t\t * The type of the carrier oscillator\n\t\t * @memberOf Tone.FMOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.FMOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return this._carrier.type;\n\t        },\n\t        set: function (type) {\n\t            this._carrier.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the modulator oscillator\n\t\t * @memberOf Tone.FMOscillator#\n\t\t * @type {String}\n\t\t * @name modulationType\n\t\t */\n\t    Object.defineProperty(Tone.FMOscillator.prototype, 'modulationType', {\n\t        get: function () {\n\t            return this._modulator.type;\n\t        },\n\t        set: function (type) {\n\t            this._modulator.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.FMOscillator#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.FMOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._carrier.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._carrier.phase = phase;\n\t            this._modulator.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the carrier waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * @memberOf Tone.FMOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.FMOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return this._carrier.partials;\n\t        },\n\t        set: function (partials) {\n\t            this._carrier.partials = partials;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.FMOscillator} this\n\t\t */\n\t    Tone.FMOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._writable([\n\t            'modulationIndex',\n\t            'frequency',\n\t            'detune',\n\t            'harmonicity'\n\t        ]);\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this._carrier.dispose();\n\t        this._carrier = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this._modulationNode.dispose();\n\t        this._modulationNode = null;\n\t        this.modulationIndex.dispose();\n\t        this.modulationIndex = null;\n\t        return this;\n\t    };\n\t    return Tone.FMOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.AMOscillator \n\t\t *\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t *  @example\n\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t * var fmOsc = new Tone.AMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t */\n\t    Tone.AMOscillator = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'type',\n\t            'modulationType'\n\t        ], Tone.AMOscillator.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The carrier oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._carrier = new Tone.Oscillator(options.frequency, options.type);\n\t        /**\n\t\t\t *  The oscillator's frequency\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._carrier.frequency;\n\t        /**\n\t\t\t *  The detune control signal.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this._carrier.detune;\n\t        this.detune.value = options.detune;\n\t        /**\n\t\t\t *  The modulating oscillator\n\t\t\t *  @type  {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\t        /**\n\t\t\t *  convert the -1,1 output to 0,1\n\t\t\t *  @type {Tone.AudioToGain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationScale = new Tone.AudioToGain();\n\t        /**\n\t\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t\t *  Harmonicity = 2 means a change of an octave. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch the modulator an octave below carrier\n\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationNode = new Tone.Gain(0);\n\t        //connections\n\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t        this.detune.connect(this._modulator.detune);\n\t        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t        this._carrier.chain(this._modulationNode, this.output);\n\t        this.phase = options.phase;\n\t        this._readOnly([\n\t            'frequency',\n\t            'detune',\n\t            'harmonicity'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.AMOscillator, Tone.Oscillator);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.AMOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'modulationType': 'square',\n\t        'harmonicity': 1\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.AMOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.start(time);\n\t        this._carrier.start(time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time (optional) timing parameter\n\t\t *  @private\n\t\t */\n\t    Tone.AMOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.stop(time);\n\t        this._carrier.stop(time);\n\t    };\n\t    /**\n\t\t * The type of the carrier oscillator\n\t\t * @memberOf Tone.AMOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.AMOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return this._carrier.type;\n\t        },\n\t        set: function (type) {\n\t            this._carrier.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the modulator oscillator\n\t\t * @memberOf Tone.AMOscillator#\n\t\t * @type {string}\n\t\t * @name modulationType\n\t\t */\n\t    Object.defineProperty(Tone.AMOscillator.prototype, 'modulationType', {\n\t        get: function () {\n\t            return this._modulator.type;\n\t        },\n\t        set: function (type) {\n\t            this._modulator.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.AMOscillator#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.AMOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._carrier.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._carrier.phase = phase;\n\t            this._modulator.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the carrier waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * @memberOf Tone.AMOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.AMOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return this._carrier.partials;\n\t        },\n\t        set: function (partials) {\n\t            this._carrier.partials = partials;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.AMOscillator} this\n\t\t */\n\t    Tone.AMOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'detune',\n\t            'harmonicity'\n\t        ]);\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this._carrier.dispose();\n\t        this._carrier = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this._modulationNode.dispose();\n\t        this._modulationNode = null;\n\t        this._modulationScale.dispose();\n\t        this._modulationScale = null;\n\t        return this;\n\t    };\n\t    return Tone.AMOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.FatOscillator \n\t\t *\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t *  @example\n\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t * var fmOsc = new Tone.FatOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t */\n\t    Tone.FatOscillator = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'type',\n\t            'spread'\n\t        ], Tone.FatOscillator.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The oscillator's frequency\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune control signal.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  The array of oscillators\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillators = [];\n\t        /**\n\t\t\t *  The total spread of the oscillators\n\t\t\t *  @type  {Cents}\n\t\t\t *  @private\n\t\t\t */\n\t        this._spread = options.spread;\n\t        /**\n\t\t\t *  The type of the oscillator\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = options.type;\n\t        /**\n\t\t\t *  The phase of the oscillators\n\t\t\t *  @type {Degrees}\n\t\t\t *  @private\n\t\t\t */\n\t        this._phase = options.phase;\n\t        /**\n\t\t\t *  The partials array\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._partials = this.defaultArg(options.partials, []);\n\t        //set the count initially\n\t        this.count = options.count;\n\t        this._readOnly([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.FatOscillator, Tone.Oscillator);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.FatOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'spread': 20,\n\t        'count': 3,\n\t        'type': 'sawtooth'\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.FatOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._forEach(function (osc) {\n\t            osc.start(time);\n\t        });\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time (optional) timing parameter\n\t\t *  @private\n\t\t */\n\t    Tone.FatOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._forEach(function (osc) {\n\t            osc.stop(time);\n\t        });\n\t    };\n\t    /**\n\t\t *  Iterate over all of the oscillators\n\t\t *  @param  {Function}  iterator  The iterator function\n\t\t *  @private\n\t\t */\n\t    Tone.FatOscillator.prototype._forEach = function (iterator) {\n\t        for (var i = 0; i < this._oscillators.length; i++) {\n\t            iterator.call(this, this._oscillators[i], i);\n\t        }\n\t    };\n\t    /**\n\t\t * The type of the carrier oscillator\n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            this._type = type;\n\t            this._forEach(function (osc) {\n\t                osc.type = type;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t * The detune spread between the oscillators. If \"count\" is\n\t\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t\t * for a total detune spread of 40 cents.\n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {Cents}\n\t\t * @name spread\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'spread', {\n\t        get: function () {\n\t            return this._spread;\n\t        },\n\t        set: function (spread) {\n\t            this._spread = spread;\n\t            if (this._oscillators.length > 1) {\n\t                var start = -spread / 2;\n\t                var step = spread / (this._oscillators.length - 1);\n\t                this._forEach(function (osc, i) {\n\t                    osc.detune.value = start + step * i;\n\t                });\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The number of detuned oscillators\n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {Number}\n\t\t * @name count\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'count', {\n\t        get: function () {\n\t            return this._oscillators.length;\n\t        },\n\t        set: function (count) {\n\t            count = Math.max(count, 1);\n\t            if (this._oscillators.length !== count) {\n\t                // var partials = this.partials;\n\t                // var type = this.type;\n\t                //dispose the previous oscillators\n\t                this._forEach(function (osc) {\n\t                    osc.dispose();\n\t                });\n\t                this._oscillators = [];\n\t                for (var i = 0; i < count; i++) {\n\t                    var osc = new Tone.Oscillator();\n\t                    if (this.type === Tone.Oscillator.Type.Custom) {\n\t                        osc.partials = this._partials;\n\t                    } else {\n\t                        osc.type = this._type;\n\t                    }\n\t                    osc.phase = this._phase;\n\t                    osc.volume.value = -6 - count;\n\t                    this.frequency.connect(osc.frequency);\n\t                    this.detune.connect(osc.detune);\n\t                    osc.connect(this.output);\n\t                    this._oscillators[i] = osc;\n\t                }\n\t                //set the spread\n\t                this.spread = this._spread;\n\t                if (this.state === Tone.State.Started) {\n\t                    this._forEach(function (osc) {\n\t                        osc.start();\n\t                    });\n\t                }\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {Number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._phase;\n\t        },\n\t        set: function (phase) {\n\t            this._phase = phase;\n\t            this._forEach(function (osc) {\n\t                osc.phase = phase;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the carrier waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return this._partials;\n\t        },\n\t        set: function (partials) {\n\t            this._partials = partials;\n\t            this._type = Tone.Oscillator.Type.Custom;\n\t            this._forEach(function (osc) {\n\t                osc.partials = partials;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.FatOscillator} this\n\t\t */\n\t    Tone.FatOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this._forEach(function (osc) {\n\t            osc.dispose();\n\t        });\n\t        this._oscillators = null;\n\t        this._partials = null;\n\t        return this;\n\t    };\n\t    return Tone.FatOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.OmniOscillator aggregates Tone.Oscillator, Tone.PulseOscillator,\n\t\t *         Tone.PWMOscillator, Tone.FMOscillator, Tone.AMOscillator, and Tone.FatOscillator\n\t\t *         into one class. The oscillator class can be changed by setting the `type`. \n\t\t *         `omniOsc.type = \"pwm\"` will set it to the Tone.PWMOscillator. Prefixing\n\t\t *         any of the basic types (\"sine\", \"square4\", etc.) with \"fm\", \"am\", or \"fat\"\n\t\t *         will use the FMOscillator, AMOscillator or FatOscillator respectively. \n\t\t *         For example: `omniOsc.type = \"fatsawtooth\"` will create set the oscillator\n\t\t *         to a FatOscillator of type \"sawtooth\". \n\t\t *\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The initial frequency of the oscillator.\n\t\t *  @param {String} type The type of the oscillator.\n\t\t *  @example\n\t\t *  var omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\");\n\t\t */\n\t    Tone.OmniOscillator = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'type'\n\t        ], Tone.OmniOscillator.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune control\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  the type of the oscillator source\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sourceType = undefined;\n\t        /**\n\t\t\t *  the oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillator = null;\n\t        //set the oscillator\n\t        this.type = options.type;\n\t        this._readOnly([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        //set the options\n\t        this.set(options);\n\t    };\n\t    Tone.extend(Tone.OmniOscillator, Tone.Oscillator);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.OmniOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'type': 'sine',\n\t        'phase': 0\n\t    };\n\t    /**\n\t\t *  @enum {String}\n\t\t *  @private\n\t\t */\n\t    var OmniOscType = {\n\t        Pulse: 'PulseOscillator',\n\t        PWM: 'PWMOscillator',\n\t        Osc: 'Oscillator',\n\t        FM: 'FMOscillator',\n\t        AM: 'AMOscillator',\n\t        Fat: 'FatOscillator'\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param {Time} [time=now] the time to start the oscillator\n\t\t *  @private\n\t\t */\n\t    Tone.OmniOscillator.prototype._start = function (time) {\n\t        this._oscillator.start(time);\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param {Time} [time=now] the time to start the oscillator\n\t\t *  @private\n\t\t */\n\t    Tone.OmniOscillator.prototype._stop = function (time) {\n\t        this._oscillator.stop(time);\n\t    };\n\t    /**\n\t\t * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n\t\t * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n\t\t * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n\t\t * oscillator's class are accessible when the oscillator is set to that type, but throws an error \n\t\t * when it's not.\n\t\t * \n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {String}\n\t\t * @name type\n\t\t * @example\n\t\t * omniOsc.type = \"pwm\";\n\t\t * //modulationFrequency is parameter which is available\n\t\t * //only when the type is \"pwm\". \n\t\t * omniOsc.modulationFrequency.value = 0.5;\n\t\t * @example\n\t\t * //an square wave frequency modulated by a sawtooth\n\t\t * omniOsc.type = \"fmsquare\";\n\t\t * omniOsc.modulationType = \"sawtooth\";\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'type', {\n\t        get: function () {\n\t            var prefix = '';\n\t            if (this._sourceType === OmniOscType.FM) {\n\t                prefix = 'fm';\n\t            } else if (this._sourceType === OmniOscType.AM) {\n\t                prefix = 'am';\n\t            } else if (this._sourceType === OmniOscType.Fat) {\n\t                prefix = 'fat';\n\t            }\n\t            return prefix + this._oscillator.type;\n\t        },\n\t        set: function (type) {\n\t            if (type.substr(0, 2) === 'fm') {\n\t                this._createNewOscillator(OmniOscType.FM);\n\t                this._oscillator.type = type.substr(2);\n\t            } else if (type.substr(0, 2) === 'am') {\n\t                this._createNewOscillator(OmniOscType.AM);\n\t                this._oscillator.type = type.substr(2);\n\t            } else if (type.substr(0, 3) === 'fat') {\n\t                this._createNewOscillator(OmniOscType.Fat);\n\t                this._oscillator.type = type.substr(3);\n\t            } else if (type === 'pwm') {\n\t                this._createNewOscillator(OmniOscType.PWM);\n\t            } else if (type === 'pulse') {\n\t                this._createNewOscillator(OmniOscType.Pulse);\n\t            } else {\n\t                this._createNewOscillator(OmniOscType.Osc);\n\t                this._oscillator.type = type;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * This is not available on \"pwm\" and \"pulse\" oscillator types.\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return this._oscillator.partials;\n\t        },\n\t        set: function (partials) {\n\t            this._oscillator.partials = partials;\n\t        }\n\t    });\n\t    /**\n\t\t *  Set a member/attribute of the oscillator. \n\t\t *  @param {Object|String} params\n\t\t *  @param {number=} value\n\t\t *  @param {Time=} rampTime\n\t\t *  @returns {Tone.OmniOscillator} this\n\t\t */\n\t    Tone.OmniOscillator.prototype.set = function (params, value) {\n\t        //make sure the type is set first\n\t        if (params === 'type') {\n\t            this.type = value;\n\t        } else if (this.isObject(params) && params.hasOwnProperty('type')) {\n\t            this.type = params.type;\n\t        }\n\t        //then set the rest\n\t        Tone.prototype.set.apply(this, arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  connect the oscillator to the frequency and detune signals\n\t\t *  @private\n\t\t */\n\t    Tone.OmniOscillator.prototype._createNewOscillator = function (oscType) {\n\t        if (oscType !== this._sourceType) {\n\t            this._sourceType = oscType;\n\t            var OscillatorConstructor = Tone[oscType];\n\t            //short delay to avoid clicks on the change\n\t            var now = this.now() + this.blockTime;\n\t            if (this._oscillator !== null) {\n\t                var oldOsc = this._oscillator;\n\t                oldOsc.stop(now);\n\t                //dispose the old one\n\t                setTimeout(function () {\n\t                    oldOsc.dispose();\n\t                    oldOsc = null;\n\t                }, this.blockTime * 1000);\n\t            }\n\t            this._oscillator = new OscillatorConstructor();\n\t            this.frequency.connect(this._oscillator.frequency);\n\t            this.detune.connect(this._oscillator.detune);\n\t            this._oscillator.connect(this.output);\n\t            if (this.state === Tone.State.Started) {\n\t                this._oscillator.start(now);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t * The phase of the oscillator in degrees. \n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Degrees}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._oscillator.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._oscillator.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t * The width of the oscillator (only if the oscillator is set to \"pulse\")\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {NormalRange}\n\t\t * @signal\n\t\t * @name width\n\t\t * @example\n\t\t * var omniOsc = new Tone.OmniOscillator(440, \"pulse\");\n\t\t * //can access the width attribute only if type === \"pulse\"\n\t\t * omniOsc.width.value = 0.2; \n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'width', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.Pulse) {\n\t                return this._oscillator.width;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The number of detuned oscillators\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Number}\n\t\t * @name count\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'count', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.Fat) {\n\t                return this._oscillator.count;\n\t            }\n\t        },\n\t        set: function (count) {\n\t            if (this._sourceType === OmniOscType.Fat) {\n\t                this._oscillator.count = count;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The detune spread between the oscillators. If \"count\" is\n\t\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t\t * for a total detune spread of 40 cents. See Tone.FatOscillator\n\t\t * for more info.\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Cents}\n\t\t * @name spread\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'spread', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.Fat) {\n\t                return this._oscillator.spread;\n\t            }\n\t        },\n\t        set: function (spread) {\n\t            if (this._sourceType === OmniOscType.Fat) {\n\t                this._oscillator.spread = spread;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the modulator oscillator. Only if the oscillator\n\t\t * is set to \"am\" or \"fm\" types. see. Tone.AMOscillator or Tone.FMOscillator\n\t\t * for more info. \n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {String}\n\t\t * @name modulationType\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationType', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t                return this._oscillator.modulationType;\n\t            }\n\t        },\n\t        set: function (mType) {\n\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t                this._oscillator.modulationType = mType;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The modulation index which is in essence the depth or amount of the modulation. In other terms it is the \n\t\t * ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t * modulating signal (ma) -- as in ma/mf. \n\t\t * See Tone.FMOscillator for more info. \n\t\t * @type {Positive}\n\t\t * @signal\n\t\t * @name modulationIndex\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationIndex', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.FM) {\n\t                return this._oscillator.modulationIndex;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t *  Harmonicity = 2 means a change of an octave. See Tone.AMOscillator or Tone.FMOscillator\n\t\t *  for more info. \n\t\t *  @memberOf Tone.OmniOscillator#\n\t\t *  @signal\n\t\t *  @type {Positive}\n\t\t *  @name harmonicity\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'harmonicity', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t                return this._oscillator.harmonicity;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The modulationFrequency Signal of the oscillator \n\t\t * (only if the oscillator type is set to pwm). See \n\t\t * Tone.PWMOscillator for more info. \n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Frequency}\n\t\t * @signal\n\t\t * @name modulationFrequency\n\t\t * @example\n\t\t * var omniOsc = new Tone.OmniOscillator(440, \"pwm\");\n\t\t * //can access the modulationFrequency attribute only if type === \"pwm\"\n\t\t * omniOsc.modulationFrequency.value = 0.2; \n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationFrequency', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.PWM) {\n\t                return this._oscillator.modulationFrequency;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.OmniOscillator} this\n\t\t */\n\t    Tone.OmniOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this._oscillator.dispose();\n\t        this._oscillator = null;\n\t        this._sourceType = null;\n\t        return this;\n\t    };\n\t    return Tone.OmniOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Base-class for all instruments\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.Instrument = function (options) {\n\t        //get the defaults\n\t        options = this.defaultArg(options, Tone.Instrument.defaults);\n\t        /**\n\t\t\t *  The output and volume triming node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t * The volume of the output in decibels.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t * @example\n\t\t\t * source.volume.value = -6;\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        this._readOnly('volume');\n\t    };\n\t    Tone.extend(Tone.Instrument);\n\t    /**\n\t\t *  the default attributes\n\t\t *  @type {object}\n\t\t */\n\t    Tone.Instrument.defaults = {\n\t        /** the volume of the output in decibels */\n\t        'volume': 0\n\t    };\n\t    /**\n\t\t *  @abstract\n\t\t *  @param {string|number} note the note to trigger\n\t\t *  @param {Time} [time=now] the time to trigger the ntoe\n\t\t *  @param {number} [velocity=1] the velocity to trigger the note\n\t\t */\n\t    Tone.Instrument.prototype.triggerAttack = Tone.noOp;\n\t    /**\n\t\t *  @abstract\n\t\t *  @param {Time} [time=now] when to trigger the release\n\t\t */\n\t    Tone.Instrument.prototype.triggerRelease = Tone.noOp;\n\t    /**\n\t\t *  Trigger the attack and then the release after the duration. \n\t\t *  @param  {Frequency} note     The note to trigger.\n\t\t *  @param  {Time} duration How long the note should be held for before\n\t\t *                          triggering the release.\n\t\t *  @param {Time} [time=now]  When the note should be triggered.\n\t\t *  @param  {NormalRange} [velocity=1] The velocity the note should be triggered at.\n\t\t *  @returns {Tone.Instrument} this\n\t\t *  @example\n\t\t * //trigger \"C4\" for the duration of an 8th note\n\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t */\n\t    Tone.Instrument.prototype.triggerAttackRelease = function (note, duration, time, velocity) {\n\t        if (this.isUndef(time)) {\n\t            time = this.now() + this.blockTime;\n\t        } else {\n\t            time = this.toSeconds(time);\n\t        }\n\t        duration = this.toSeconds(duration);\n\t        this.triggerAttack(note, time, velocity);\n\t        this.triggerRelease(time + duration);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Instrument} this\n\t\t */\n\t    Tone.Instrument.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this._writable(['volume']);\n\t        this.volume = null;\n\t        return this;\n\t    };\n\t    return Tone.Instrument;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  This is an abstract base class for other monophonic instruments to \n\t\t *          extend. IMPORTANT: It does not make any sound on its own and\n\t\t *          shouldn't be directly instantiated.\n\t\t *\n\t\t *  @constructor\n\t\t *  @abstract\n\t\t *  @extends {Tone.Instrument}\n\t\t */\n\t    Tone.Monophonic = function (options) {\n\t        //get the defaults\n\t        options = this.defaultArg(options, Tone.Monophonic.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The glide time between notes. \n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.portamento = options.portamento;\n\t    };\n\t    Tone.extend(Tone.Monophonic, Tone.Instrument);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Monophonic.defaults = { 'portamento': 0 };\n\t    /**\n\t\t *  Trigger the attack of the note optionally with a given velocity. \n\t\t *  \n\t\t *  \n\t\t *  @param  {Frequency} note     The note to trigger.\n\t\t *  @param  {Time} [time=now]     When the note should start.\n\t\t *  @param  {number} [velocity=1] velocity The velocity scaler \n\t\t *                                determines how \"loud\" the note \n\t\t *                                will be triggered.\n\t\t *  @returns {Tone.Monophonic} this\n\t\t *  @example\n\t\t * synth.triggerAttack(\"C4\");\n\t\t *  @example\n\t\t * //trigger the note a half second from now at half velocity\n\t\t * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n\t\t */\n\t    Tone.Monophonic.prototype.triggerAttack = function (note, time, velocity) {\n\t        if (this.isUndef(time)) {\n\t            time = this.now() + this.blockTime;\n\t        } else {\n\t            time = this.toSeconds(time);\n\t        }\n\t        this._triggerEnvelopeAttack(time, velocity);\n\t        this.setNote(note, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the release portion of the envelope\n\t\t *  @param  {Time} [time=now] If no time is given, the release happens immediatly\n\t\t *  @returns {Tone.Monophonic} this\n\t\t *  @example\n\t\t * synth.triggerRelease();\n\t\t */\n\t    Tone.Monophonic.prototype.triggerRelease = function (time) {\n\t        if (this.isUndef(time)) {\n\t            time = this.now() + this.blockTime;\n\t        } else {\n\t            time = this.toSeconds(time);\n\t        }\n\t        this._triggerEnvelopeRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  override this method with the actual method\n\t\t *  @abstract\n\t\t *  @private\n\t\t */\n\t    Tone.Monophonic.prototype._triggerEnvelopeAttack = function () {\n\t    };\n\t    /**\n\t\t *  override this method with the actual method\n\t\t *  @abstract\n\t\t *  @private\n\t\t */\n\t    Tone.Monophonic.prototype._triggerEnvelopeRelease = function () {\n\t    };\n\t    /**\n\t\t *  Set the note at the given time. If no time is given, the note\n\t\t *  will set immediately. \n\t\t *  @param {Frequency} note The note to change to.\n\t\t *  @param  {Time} [time=now] The time when the note should be set. \n\t\t *  @returns {Tone.Monophonic} this\n\t\t * @example\n\t\t * //change to F#6 in one quarter note from now.\n\t\t * synth.setNote(\"F#6\", \"+4n\");\n\t\t * @example\n\t\t * //change to Bb4 right now\n\t\t * synth.setNote(\"Bb4\");\n\t\t */\n\t    Tone.Monophonic.prototype.setNote = function (note, time) {\n\t        time = this.toSeconds(time);\n\t        if (this.portamento > 0) {\n\t            var currentNote = this.frequency.value;\n\t            this.frequency.setValueAtTime(currentNote, time);\n\t            var portTime = this.toSeconds(this.portamento);\n\t            this.frequency.exponentialRampToValueAtTime(note, time + portTime);\n\t        } else {\n\t            this.frequency.setValueAtTime(note, time);\n\t        }\n\t        return this;\n\t    };\n\t    return Tone.Monophonic;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Synth is composed simply of a Tone.OmniOscillator\n\t\t *          routed through a Tone.AmplitudeEnvelope. \n\t\t *          <img src=\"https://docs.google.com/drawings/d/1-1_0YW2Z1J2EPI36P8fNCMcZG7N1w1GZluPs4og4evo/pub?w=1163&h=231\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var synth = new Tone.Synth().toMaster();\n\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t */\n\t    Tone.Synth = function (options) {\n\t        //get the defaults\n\t        options = this.defaultArg(options, Tone.Synth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  The oscillator.\n\t\t\t *  @type {Tone.OmniOscillator}\n\t\t\t */\n\t        this.oscillator = new Tone.OmniOscillator(options.oscillator);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this.oscillator.frequency;\n\t        /**\n\t\t\t *  The detune control.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this.oscillator.detune;\n\t        /**\n\t\t\t *  The amplitude envelope.\n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        //connect the oscillators to the output\n\t        this.oscillator.chain(this.envelope, this.output);\n\t        //start the oscillators\n\t        this.oscillator.start();\n\t        this._readOnly([\n\t            'oscillator',\n\t            'frequency',\n\t            'detune',\n\t            'envelope'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Synth, Tone.Monophonic);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Synth.defaults = {\n\t        'oscillator': { 'type': 'triangle' },\n\t        'envelope': {\n\t            'attack': 0.005,\n\t            'decay': 0.1,\n\t            'sustain': 0.3,\n\t            'release': 1\n\t        }\n\t    };\n\t    /**\n\t\t *  start the attack portion of the envelope\n\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t *  @param {number} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.Synth} this\n\t\t *  @private\n\t\t */\n\t    Tone.Synth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  start the release portion of the envelope\n\t\t *  @param {Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.Synth} this\n\t\t *  @private\n\t\t */\n\t    Tone.Synth.prototype._triggerEnvelopeRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Synth} this\n\t\t */\n\t    Tone.Synth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'oscillator',\n\t            'frequency',\n\t            'detune',\n\t            'envelope'\n\t        ]);\n\t        this.oscillator.dispose();\n\t        this.oscillator = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        return this;\n\t    };\n\t    return Tone.Synth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  AMSynth uses the output of one Tone.Synth to modulate the\n\t\t *          amplitude of another Tone.Synth. The harmonicity (the ratio between\n\t\t *          the two signals) affects the timbre of the output signal greatly.\n\t\t *          Read more about Amplitude Modulation Synthesis on \n\t\t *          [SoundOnSound](http://www.soundonsound.com/sos/mar00/articles/synthsecrets.htm).\n\t\t *          <img src=\"https://docs.google.com/drawings/d/1TQu8Ed4iFr1YTLKpB3U1_hur-UwBrh5gdBXc8BxfGKw/pub?w=1009&h=457\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                            see defaults below\n\t\t *  @example\n\t\t * var synth = new Tone.AMSynth().toMaster();\n\t\t * synth.triggerAttackRelease(\"C4\", \"4n\");\n\t\t */\n\t    Tone.AMSynth = function (options) {\n\t        options = this.defaultArg(options, Tone.AMSynth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  The carrier voice. \n\t\t\t *  @type {Tone.Synth}\n\t\t\t *  @private\n\t\t\t */\n\t        this._carrier = new Tone.Synth();\n\t        this._carrier.volume.value = -10;\n\t        /**\n\t\t\t *  The carrier's oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.oscillator = this._carrier.oscillator;\n\t        /**\n\t\t\t *  The carrier's envelope\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.envelope = this._carrier.envelope.set(options.envelope);\n\t        /**\n\t\t\t *  The modulator voice. \n\t\t\t *  @type {Tone.Synth}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Synth();\n\t        this._modulator.volume.value = -10;\n\t        /**\n\t\t\t *  The modulator's oscillator which is applied\n\t\t\t *  to the amplitude of the oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.modulation = this._modulator.oscillator.set(options.modulation);\n\t        /**\n\t\t\t *  The modulator's envelope\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\t        /**\n\t\t\t *  The frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune in cents\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  convert the -1,1 output to 0,1\n\t\t\t *  @type {Tone.AudioToGain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationScale = new Tone.AudioToGain();\n\t        /**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationNode = new Tone.Gain();\n\t        //control the two voices frequency\n\t        this.frequency.connect(this._carrier.frequency);\n\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t        this.detune.fan(this._carrier.detune, this._modulator.detune);\n\t        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t        this._carrier.chain(this._modulationNode, this.output);\n\t        this._readOnly([\n\t            'frequency',\n\t            'harmonicity',\n\t            'oscillator',\n\t            'envelope',\n\t            'modulation',\n\t            'modulationEnvelope',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.AMSynth, Tone.Monophonic);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.AMSynth.defaults = {\n\t        'harmonicity': 3,\n\t        'detune': 0,\n\t        'oscillator': { 'type': 'sine' },\n\t        'envelope': {\n\t            'attack': 0.01,\n\t            'decay': 0.01,\n\t            'sustain': 1,\n\t            'release': 0.5\n\t        },\n\t        'moduation': { 'type': 'square' },\n\t        'modulationEnvelope': {\n\t            'attack': 0.5,\n\t            'decay': 0,\n\t            'sustain': 1,\n\t            'release': 0.5\n\t        }\n\t    };\n\t    /**\n\t\t *  trigger the attack portion of the note\n\t\t *  \n\t\t *  @param  {Time} [time=now] the time the note will occur\n\t\t *  @param {NormalRange} [velocity=1] the velocity of the note\n\t\t *  @private\n\t\t *  @returns {Tone.AMSynth} this\n\t\t */\n\t    Tone.AMSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        //the port glide\n\t        time = this.toSeconds(time);\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        this.modulationEnvelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  trigger the release portion of the note\n\t\t *  \n\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t *  @private\n\t\t *  @returns {Tone.AMSynth} this\n\t\t */\n\t    Tone.AMSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        this.modulationEnvelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.AMSynth} this\n\t\t */\n\t    Tone.AMSynth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'harmonicity',\n\t            'oscillator',\n\t            'envelope',\n\t            'modulation',\n\t            'modulationEnvelope',\n\t            'detune'\n\t        ]);\n\t        this._carrier.dispose();\n\t        this._carrier = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this._modulationScale.dispose();\n\t        this._modulationScale = null;\n\t        this._modulationNode.dispose();\n\t        this._modulationNode = null;\n\t        this.oscillator = null;\n\t        this.envelope = null;\n\t        this.modulationEnvelope = null;\n\t        this.modulation = null;\n\t        return this;\n\t    };\n\t    return Tone.AMSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.MonoSynth is composed of one oscillator, one filter, and two envelopes.\n\t\t *          The amplitude of the Tone.Oscillator and the cutoff frequency of the \n\t\t *          Tone.Filter are controlled by Tone.Envelopes. \n\t\t *          <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n\t\t *          \n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var synth = new Tone.MonoSynth({\n\t\t * \t\"oscillator\" : {\n\t\t * \t\t\"type\" : \"square\"\n\t\t *  },\n\t\t *  \"envelope\" : {\n\t\t *  \t\"attack\" : 0.1\n\t\t *  }\n\t\t * }).toMaster();\n\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t */\n\t    Tone.MonoSynth = function (options) {\n\t        //get the defaults\n\t        options = this.defaultArg(options, Tone.MonoSynth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  The oscillator.\n\t\t\t *  @type {Tone.OmniOscillator}\n\t\t\t */\n\t        this.oscillator = new Tone.OmniOscillator(options.oscillator);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this.oscillator.frequency;\n\t        /**\n\t\t\t *  The detune control.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this.oscillator.detune;\n\t        /**\n\t\t\t *  The filter.\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.filter = new Tone.Filter(options.filter);\n\t        /**\n\t\t\t *  The filter envelope.\n\t\t\t *  @type {Tone.FrequencyEnvelope}\n\t\t\t */\n\t        this.filterEnvelope = new Tone.FrequencyEnvelope(options.filterEnvelope);\n\t        /**\n\t\t\t *  The amplitude envelope.\n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        //connect the oscillators to the output\n\t        this.oscillator.chain(this.filter, this.envelope, this.output);\n\t        //start the oscillators\n\t        this.oscillator.start();\n\t        //connect the filter envelope\n\t        this.filterEnvelope.connect(this.filter.frequency);\n\t        this._readOnly([\n\t            'oscillator',\n\t            'frequency',\n\t            'detune',\n\t            'filter',\n\t            'filterEnvelope',\n\t            'envelope'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MonoSynth, Tone.Monophonic);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MonoSynth.defaults = {\n\t        'frequency': 'C4',\n\t        'detune': 0,\n\t        'oscillator': { 'type': 'square' },\n\t        'filter': {\n\t            'Q': 6,\n\t            'type': 'lowpass',\n\t            'rolloff': -24\n\t        },\n\t        'envelope': {\n\t            'attack': 0.005,\n\t            'decay': 0.1,\n\t            'sustain': 0.9,\n\t            'release': 1\n\t        },\n\t        'filterEnvelope': {\n\t            'attack': 0.06,\n\t            'decay': 0.2,\n\t            'sustain': 0.5,\n\t            'release': 2,\n\t            'baseFrequency': 200,\n\t            'octaves': 7,\n\t            'exponent': 2\n\t        }\n\t    };\n\t    /**\n\t\t *  start the attack portion of the envelope\n\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.MonoSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.MonoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        this.filterEnvelope.triggerAttack(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  start the release portion of the envelope\n\t\t *  @param {Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.MonoSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.MonoSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        this.filterEnvelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.MonoSynth} this\n\t\t */\n\t    Tone.MonoSynth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'oscillator',\n\t            'frequency',\n\t            'detune',\n\t            'filter',\n\t            'filterEnvelope',\n\t            'envelope'\n\t        ]);\n\t        this.oscillator.dispose();\n\t        this.oscillator = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        this.filterEnvelope.dispose();\n\t        this.filterEnvelope = null;\n\t        this.filter.dispose();\n\t        this.filter = null;\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        return this;\n\t    };\n\t    return Tone.MonoSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.DuoSynth is a monophonic synth composed of two \n\t\t *          MonoSynths run in parallel with control over the \n\t\t *          frequency ratio between the two voices and vibrato effect.\n\t\t *          <img src=\"https://docs.google.com/drawings/d/1bL4GXvfRMMlqS7XyBm9CjL9KJPSUKbcdBNpqOlkFLxk/pub?w=1012&h=448\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var duoSynth = new Tone.DuoSynth().toMaster();\n\t\t * duoSynth.triggerAttackRelease(\"C4\", \"2n\");\n\t\t */\n\t    Tone.DuoSynth = function (options) {\n\t        options = this.defaultArg(options, Tone.DuoSynth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  the first voice\n\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t */\n\t        this.voice0 = new Tone.MonoSynth(options.voice0);\n\t        this.voice0.volume.value = -10;\n\t        /**\n\t\t\t *  the second voice\n\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t */\n\t        this.voice1 = new Tone.MonoSynth(options.voice1);\n\t        this.voice1.volume.value = -10;\n\t        /**\n\t\t\t *  The vibrato LFO. \n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._vibrato = new Tone.LFO(options.vibratoRate, -50, 50);\n\t        this._vibrato.start();\n\t        /**\n\t\t\t * the vibrato frequency\n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t */\n\t        this.vibratoRate = this._vibrato.frequency;\n\t        /**\n\t\t\t *  the vibrato gain\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._vibratoGain = new Tone.Gain(options.vibratoAmount, Tone.Type.Positive);\n\t        /**\n\t\t\t * The amount of vibrato\n\t\t\t * @type {Positive}\n\t\t\t * @signal\n\t\t\t */\n\t        this.vibratoAmount = this._vibratoGain.gain;\n\t        /**\n\t\t\t *  the frequency control\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t * duoSynth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        //control the two voices frequency\n\t        this.frequency.connect(this.voice0.frequency);\n\t        this.frequency.chain(this.harmonicity, this.voice1.frequency);\n\t        this._vibrato.connect(this._vibratoGain);\n\t        this._vibratoGain.fan(this.voice0.detune, this.voice1.detune);\n\t        this.voice0.connect(this.output);\n\t        this.voice1.connect(this.output);\n\t        this._readOnly([\n\t            'voice0',\n\t            'voice1',\n\t            'frequency',\n\t            'vibratoAmount',\n\t            'vibratoRate'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.DuoSynth, Tone.Monophonic);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.DuoSynth.defaults = {\n\t        'vibratoAmount': 0.5,\n\t        'vibratoRate': 5,\n\t        'harmonicity': 1.5,\n\t        'voice0': {\n\t            'volume': -10,\n\t            'portamento': 0,\n\t            'oscillator': { 'type': 'sine' },\n\t            'filterEnvelope': {\n\t                'attack': 0.01,\n\t                'decay': 0,\n\t                'sustain': 1,\n\t                'release': 0.5\n\t            },\n\t            'envelope': {\n\t                'attack': 0.01,\n\t                'decay': 0,\n\t                'sustain': 1,\n\t                'release': 0.5\n\t            }\n\t        },\n\t        'voice1': {\n\t            'volume': -10,\n\t            'portamento': 0,\n\t            'oscillator': { 'type': 'sine' },\n\t            'filterEnvelope': {\n\t                'attack': 0.01,\n\t                'decay': 0,\n\t                'sustain': 1,\n\t                'release': 0.5\n\t            },\n\t            'envelope': {\n\t                'attack': 0.01,\n\t                'decay': 0,\n\t                'sustain': 1,\n\t                'release': 0.5\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  start the attack portion of the envelopes\n\t\t *  \n\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.DuoSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.DuoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        time = this.toSeconds(time);\n\t        this.voice0.envelope.triggerAttack(time, velocity);\n\t        this.voice1.envelope.triggerAttack(time, velocity);\n\t        this.voice0.filterEnvelope.triggerAttack(time);\n\t        this.voice1.filterEnvelope.triggerAttack(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  start the release portion of the envelopes\n\t\t *  \n\t\t *  @param {Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.DuoSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.DuoSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t        this.voice0.triggerRelease(time);\n\t        this.voice1.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.DuoSynth} this\n\t\t */\n\t    Tone.DuoSynth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'voice0',\n\t            'voice1',\n\t            'frequency',\n\t            'vibratoAmount',\n\t            'vibratoRate'\n\t        ]);\n\t        this.voice0.dispose();\n\t        this.voice0 = null;\n\t        this.voice1.dispose();\n\t        this.voice1 = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this._vibratoGain.dispose();\n\t        this._vibratoGain = null;\n\t        this._vibrato = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this.vibratoAmount.dispose();\n\t        this.vibratoAmount = null;\n\t        this.vibratoRate = null;\n\t        return this;\n\t    };\n\t    return Tone.DuoSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  FMSynth is composed of two Tone.Synths where one Tone.Synth modulates\n\t\t *          the frequency of a second Tone.Synth. A lot of spectral content \n\t\t *          can be explored using the modulationIndex parameter. Read more about\n\t\t *          frequency modulation synthesis on [SoundOnSound](http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm).\n\t\t *          <img src=\"https://docs.google.com/drawings/d/1h0PUDZXPgi4Ikx6bVT6oncrYPLluFKy7lj53puxj-DM/pub?w=902&h=462\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var fmSynth = new Tone.FMSynth().toMaster();\n\t\t * fmSynth.triggerAttackRelease(\"C5\", \"4n\");\n\t\t */\n\t    Tone.FMSynth = function (options) {\n\t        options = this.defaultArg(options, Tone.FMSynth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  The carrier voice.\n\t\t\t *  @type {Tone.Synth}\n\t\t\t *  @private\n\t\t\t */\n\t        this._carrier = new Tone.Synth(options.carrier);\n\t        this._carrier.volume.value = -10;\n\t        /**\n\t\t\t *  The carrier's oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.oscillator = this._carrier.oscillator;\n\t        /**\n\t\t\t *  The carrier's envelope\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.envelope = this._carrier.envelope.set(options.envelope);\n\t        /**\n\t\t\t *  The modulator voice.\n\t\t\t *  @type {Tone.Synth}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Synth(options.modulator);\n\t        this._modulator.volume.value = -10;\n\t        /**\n\t\t\t *  The modulator's oscillator which is applied\n\t\t\t *  to the amplitude of the oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.modulation = this._modulator.oscillator.set(options.modulation);\n\t        /**\n\t\t\t *  The modulator's envelope\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune in cents\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  The modulation index which essentially the depth or amount of the modulation. It is the \n\t\t\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t\t *  modulating signal (ma) -- as in ma/mf. \n\t\t\t *\t@type {Positive}\n\t\t\t *\t@signal\n\t\t\t */\n\t        this.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\t        this.modulationIndex.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationNode = new Tone.Gain(0);\n\t        //control the two voices frequency\n\t        this.frequency.connect(this._carrier.frequency);\n\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t        this.frequency.chain(this.modulationIndex, this._modulationNode);\n\t        this.detune.fan(this._carrier.detune, this._modulator.detune);\n\t        this._modulator.connect(this._modulationNode.gain);\n\t        this._modulationNode.connect(this._carrier.frequency);\n\t        this._carrier.connect(this.output);\n\t        this._readOnly([\n\t            'frequency',\n\t            'harmonicity',\n\t            'modulationIndex',\n\t            'oscillator',\n\t            'envelope',\n\t            'modulation',\n\t            'modulationEnvelope',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.FMSynth, Tone.Monophonic);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.FMSynth.defaults = {\n\t        'harmonicity': 3,\n\t        'modulationIndex': 10,\n\t        'detune': 0,\n\t        'oscillator': { 'type': 'sine' },\n\t        'envelope': {\n\t            'attack': 0.01,\n\t            'decay': 0.01,\n\t            'sustain': 1,\n\t            'release': 0.5\n\t        },\n\t        'moduation': { 'type': 'square' },\n\t        'modulationEnvelope': {\n\t            'attack': 0.5,\n\t            'decay': 0,\n\t            'sustain': 1,\n\t            'release': 0.5\n\t        }\n\t    };\n\t    /**\n\t\t * \ttrigger the attack portion of the note\n\t\t *  \n\t\t *  @param  {Time} [time=now] the time the note will occur\n\t\t *  @param {number} [velocity=1] the velocity of the note\n\t\t *  @returns {Tone.FMSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.FMSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        time = this.toSeconds(time);\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        this.modulationEnvelope.triggerAttack(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  trigger the release portion of the note\n\t\t *  \n\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t *  @returns {Tone.FMSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.FMSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t        time = this.toSeconds(time);\n\t        this.envelope.triggerRelease(time);\n\t        this.modulationEnvelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.FMSynth} this\n\t\t */\n\t    Tone.FMSynth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'harmonicity',\n\t            'modulationIndex',\n\t            'oscillator',\n\t            'envelope',\n\t            'modulation',\n\t            'modulationEnvelope',\n\t            'detune'\n\t        ]);\n\t        this._carrier.dispose();\n\t        this._carrier = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.modulationIndex.dispose();\n\t        this.modulationIndex = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this._modulationNode.dispose();\n\t        this._modulationNode = null;\n\t        this.oscillator = null;\n\t        this.envelope = null;\n\t        this.modulationEnvelope = null;\n\t        this.modulation = null;\n\t        return this;\n\t    };\n\t    return Tone.FMSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.MembraneSynth makes kick and tom sounds using a single oscillator\n\t\t *          with an amplitude envelope and frequency ramp. A Tone.Oscillator\n\t\t *          is routed through a Tone.AmplitudeEnvelope to the output. The drum\n\t\t *          quality of the sound comes from the frequency envelope applied\n\t\t *          during during Tone.MembraneSynth.triggerAttack(note). The frequency\n\t\t *          envelope starts at <code>note * .octaves</code> and ramps to \n\t\t *          <code>note</code> over the duration of <code>.pitchDecay</code>. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var synth = new Tone.MembraneSynth().toMaster();\n\t\t * synth.triggerAttackRelease(\"C2\", \"8n\");\n\t\t */\n\t    Tone.MembraneSynth = function (options) {\n\t        options = this.defaultArg(options, Tone.MembraneSynth.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The oscillator.\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.oscillator = new Tone.Oscillator(options.oscillator).start();\n\t        /**\n\t\t\t *  The amplitude envelope.\n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        /**\n\t\t\t *  The number of octaves the pitch envelope ramps.\n\t\t\t *  @type {Positive}\n\t\t\t */\n\t        this.octaves = options.octaves;\n\t        /**\n\t\t\t *  The amount of time the frequency envelope takes. \n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.pitchDecay = options.pitchDecay;\n\t        this.oscillator.chain(this.envelope, this.output);\n\t        this._readOnly([\n\t            'oscillator',\n\t            'envelope'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MembraneSynth, Tone.Instrument);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MembraneSynth.defaults = {\n\t        'pitchDecay': 0.05,\n\t        'octaves': 10,\n\t        'oscillator': { 'type': 'sine' },\n\t        'envelope': {\n\t            'attack': 0.001,\n\t            'decay': 0.4,\n\t            'sustain': 0.01,\n\t            'release': 1.4,\n\t            'attackCurve': 'exponential'\n\t        }\n\t    };\n\t    /**\n\t\t *  Trigger the note at the given time with the given velocity. \n\t\t *  \n\t\t *  @param  {Frequency} note     the note\n\t\t *  @param  {Time} [time=now]     the time, if not given is now\n\t\t *  @param  {number} [velocity=1] velocity defaults to 1\n\t\t *  @returns {Tone.MembraneSynth} this\n\t\t *  @example\n\t\t *  kick.triggerAttack(60);\n\t\t */\n\t    Tone.MembraneSynth.prototype.triggerAttack = function (note, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        note = this.toFrequency(note);\n\t        var maxNote = note * this.octaves;\n\t        this.oscillator.frequency.setValueAtTime(maxNote, time);\n\t        this.oscillator.frequency.exponentialRampToValueAtTime(note, time + this.toSeconds(this.pitchDecay));\n\t        this.envelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the release portion of the note.\n\t\t *  \n\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t *  @returns {Tone.MembraneSynth} this\n\t\t */\n\t    Tone.MembraneSynth.prototype.triggerRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.MembraneSynth} this\n\t\t */\n\t    Tone.MembraneSynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        this._writable([\n\t            'oscillator',\n\t            'envelope'\n\t        ]);\n\t        this.oscillator.dispose();\n\t        this.oscillator = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        return this;\n\t    };\n\t    return Tone.MembraneSynth;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  Inharmonic ratio of frequencies based on the Roland TR-808\n\t\t *  Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var inharmRatios = [\n\t        1,\n\t        1.483,\n\t        1.932,\n\t        2.546,\n\t        2.63,\n\t        3.897\n\t    ];\n\t    /**\n\t\t *  @class  A highly inharmonic and spectrally complex source with a highpass filter\n\t\t *          and amplitude envelope which is good for making metalophone sounds. Based\n\t\t *          on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).\n\t\t *          Inspiration from [Sound on Sound](http://www.soundonsound.com/sos/jul02/articles/synthsecrets0702.asp).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} [options] The options availble for the synth\n\t\t *                             see defaults below\n\t\t */\n\t    Tone.MetalSynth = function (options) {\n\t        options = this.defaultArg(options, Tone.MetalSynth.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The frequency of the cymbal\n\t\t\t *  @type  {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The array of FMOscillators\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillators = [];\n\t        /**\n\t\t\t *  The frequency multipliers\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._freqMultipliers = [];\n\t        /**\n\t\t\t *  The amplitude for the body\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._amplitue = new Tone.Gain(0).connect(this.output);\n\t        /**\n\t\t\t *  highpass the output\n\t\t\t *  @type {Tone.Filter}\n\t\t\t *  @private\n\t\t\t */\n\t        this._highpass = new Tone.Filter({\n\t            'type': 'highpass',\n\t            'Q': 0\n\t        }).connect(this._amplitue);\n\t        /**\n\t\t\t *  The number of octaves the highpass\n\t\t\t *  filter frequency ramps\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = options.octaves;\n\t        /**\n\t\t\t *  Scale the body envelope\n\t\t\t *  for the bandpass\n\t\t\t *  @type {Tone.Scale}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filterFreqScaler = new Tone.Scale(options.resonance, 7000);\n\t        /**\n\t\t\t *  The envelope which is connected both to the \n\t\t\t *  amplitude and highpass filter's cutoff frequency\n\t\t\t *  @type  {Tone.Envelope}\n\t\t\t */\n\t        this.envelope = new Tone.Envelope({\n\t            'attack': options.envelope.attack,\n\t            'attackCurve': 'exponential',\n\t            'decay': options.envelope.decay,\n\t            'sustain': 0,\n\t            'release': options.envelope.release\n\t        }).chain(this._filterFreqScaler, this._highpass.frequency);\n\t        this.envelope.connect(this._amplitue.gain);\n\t        for (var i = 0; i < inharmRatios.length; i++) {\n\t            var osc = new Tone.FMOscillator({\n\t                'type': 'square',\n\t                'modulationType': 'square',\n\t                'harmonicity': options.harmonicity,\n\t                'modulationIndex': options.modulationIndex\n\t            });\n\t            osc.connect(this._highpass).start(0);\n\t            this._oscillators[i] = osc;\n\t            var mult = new Tone.Multiply(inharmRatios[i]);\n\t            this._freqMultipliers[i] = mult;\n\t            this.frequency.chain(mult, osc.frequency);\n\t        }\n\t        //set the octaves\n\t        this.octaves = options.octaves;\n\t    };\n\t    Tone.extend(Tone.MetalSynth, Tone.Instrument);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MetalSynth.defaults = {\n\t        'frequency': 200,\n\t        'envelope': {\n\t            'attack': 0.0015,\n\t            'decay': 1.4,\n\t            'release': 0.2\n\t        },\n\t        'harmonicity': 5.1,\n\t        'modulationIndex': 32,\n\t        'resonance': 4000,\n\t        'octaves': 1.5\n\t    };\n\t    /**\n\t\t *  Trigger the attack.\n\t\t *  @param  {Time}  time      When the attack should be triggered.\n\t\t *  @param  {NormalRange=1}  velocity  The velocity that the envelope should be triggered at.\n\t\t *  @return  {Tone.MetalSynth}  this\n\t\t */\n\t    Tone.MetalSynth.prototype.triggerAttack = function (time, vel) {\n\t        time = this.toSeconds(time);\n\t        vel = this.defaultArg(vel, 1);\n\t        this.envelope.triggerAttack(time, vel);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the release of the envelope.\n\t\t *  @param  {Time}  time      When the release should be triggered.\n\t\t *  @return  {Tone.MetalSynth}  this\n\t\t */\n\t    Tone.MetalSynth.prototype.triggerRelease = function (time) {\n\t        time = this.toSeconds(time);\n\t        this.envelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the attack and release of the envelope after the given \n\t\t *  duration. \n\t\t *  @param  {Time}  duration  The duration before triggering the release\n\t\t *  @param  {Time}  time      When the attack should be triggered.\n\t\t *  @param  {NormalRange=1}  velocity  The velocity that the envelope should be triggered at.\n\t\t *  @return  {Tone.MetalSynth}  this\n\t\t */\n\t    Tone.MetalSynth.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        duration = this.toSeconds(duration);\n\t        this.triggerAttack(time, velocity);\n\t        this.triggerRelease(time + duration);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The modulationIndex of the oscillators which make up the source.\n\t\t *  see Tone.FMOscillator.modulationIndex\n\t\t *  @memberOf Tone.MetalSynth#\n\t\t *  @type {Positive}\n\t\t *  @name  modulationIndex\n\t\t */\n\t    Object.defineProperty(Tone.MetalSynth.prototype, 'modulationIndex', {\n\t        get: function () {\n\t            return this._oscillators[0].modulationIndex.value;\n\t        },\n\t        set: function (val) {\n\t            for (var i = 0; i < this._oscillators.length; i++) {\n\t                this._oscillators[i].modulationIndex.value = val;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The harmonicity of the oscillators which make up the source.\n\t\t *  see Tone.FMOscillator.harmonicity\n\t\t *  @memberOf Tone.MetalSynth#\n\t\t *  @type {Positive}\n\t\t *  @name  harmonicity\n\t\t */\n\t    Object.defineProperty(Tone.MetalSynth.prototype, 'harmonicity', {\n\t        get: function () {\n\t            return this._oscillators[0].harmonicity.value;\n\t        },\n\t        set: function (val) {\n\t            for (var i = 0; i < this._oscillators.length; i++) {\n\t                this._oscillators[i].harmonicity.value = val;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The frequency of the highpass filter attached to the envelope\n\t\t *  @memberOf Tone.MetalSynth#\n\t\t *  @type {Frequency}\n\t\t *  @name  resonance\n\t\t */\n\t    Object.defineProperty(Tone.MetalSynth.prototype, 'resonance', {\n\t        get: function () {\n\t            return this._filterFreqScaler.min;\n\t        },\n\t        set: function (val) {\n\t            this._filterFreqScaler.min = val;\n\t            this.octaves = this._octaves;\n\t        }\n\t    });\n\t    /**\n\t\t *  The number of octaves above the \"resonance\" frequency\n\t\t *  that the filter ramps during the attack/decay envelope\n\t\t *  @memberOf Tone.MetalSynth#\n\t\t *  @type {Number}\n\t\t *  @name  octaves\n\t\t */\n\t    Object.defineProperty(Tone.MetalSynth.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (octs) {\n\t            this._octaves = octs;\n\t            this._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, octs);\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.MetalSynth} this\n\t\t */\n\t    Tone.MetalSynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        for (var i = 0; i < this._oscillators.length; i++) {\n\t            this._oscillators[i].dispose();\n\t            this._freqMultipliers[i].dispose();\n\t        }\n\t        this._oscillators = null;\n\t        this._freqMultipliers = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this._filterFreqScaler.dispose();\n\t        this._filterFreqScaler = null;\n\t        this._amplitue.dispose();\n\t        this._amplitue = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        this._highpass.dispose();\n\t        this._highpass = null;\n\t    };\n\t    return Tone.MetalSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Noise is a noise generator. It uses looped noise buffers to save on performance.\n\t\t *          Tone.Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n\t\t *          colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Source}\n\t\t *  @param {string} type the noise type (white|pink|brown)\n\t\t *  @example\n\t\t * //initialize the noise and start\n\t\t * var noise = new Tone.Noise(\"pink\").start();\n\t\t * \n\t\t * //make an autofilter to shape the noise\n\t\t * var autoFilter = new Tone.AutoFilter({\n\t\t * \t\"frequency\" : \"8m\", \n\t\t * \t\"min\" : 800, \n\t\t * \t\"max\" : 15000\n\t\t * }).connect(Tone.Master);\n\t\t * \n\t\t * //connect the noise\n\t\t * noise.connect(autoFilter);\n\t\t * //start the autofilter LFO\n\t\t * autoFilter.start()\n\t\t */\n\t    Tone.Noise = function () {\n\t        var options = this.optionsObject(arguments, ['type'], Tone.Noise.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t */\n\t        this._source = null;\n\t        /**\n\t\t\t *  the buffer\n\t\t\t *  @private\n\t\t\t *  @type {AudioBuffer}\n\t\t\t */\n\t        this._buffer = null;\n\t        /**\n\t\t\t *  The playback rate of the noise. Affects\n\t\t\t *  the \"frequency\" of the noise.\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this._playbackRate = options.playbackRate;\n\t        this.type = options.type;\n\t    };\n\t    Tone.extend(Tone.Noise, Tone.Source);\n\t    /**\n\t\t *  the default parameters\n\t\t *\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Noise.defaults = {\n\t        'type': 'white',\n\t        'playbackRate': 1\n\t    };\n\t    /**\n\t\t * The type of the noise. Can be \"white\", \"brown\", or \"pink\". \n\t\t * @memberOf Tone.Noise#\n\t\t * @type {string}\n\t\t * @name type\n\t\t * @example\n\t\t * noise.type = \"white\";\n\t\t */\n\t    Object.defineProperty(Tone.Noise.prototype, 'type', {\n\t        get: function () {\n\t            if (this._buffer === _whiteNoise) {\n\t                return 'white';\n\t            } else if (this._buffer === _brownNoise) {\n\t                return 'brown';\n\t            } else if (this._buffer === _pinkNoise) {\n\t                return 'pink';\n\t            }\n\t        },\n\t        set: function (type) {\n\t            if (this.type !== type) {\n\t                switch (type) {\n\t                case 'white':\n\t                    this._buffer = _whiteNoise;\n\t                    break;\n\t                case 'pink':\n\t                    this._buffer = _pinkNoise;\n\t                    break;\n\t                case 'brown':\n\t                    this._buffer = _brownNoise;\n\t                    break;\n\t                default:\n\t                    throw new TypeError('Tone.Noise: invalid type: ' + type);\n\t                }\n\t                //if it's playing, stop and restart it\n\t                if (this.state === Tone.State.Started) {\n\t                    var now = this.now() + this.blockTime;\n\t                    //remove the listener\n\t                    this._stop(now);\n\t                    this._start(now);\n\t                }\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The playback rate of the noise. Affects\n\t\t *  the \"frequency\" of the noise.\n\t\t *  @type {Positive}\n\t\t *  @signal\n\t\t */\n\t    Object.defineProperty(Tone.Noise.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            if (this._source) {\n\t                this._source.playbackRate.value = rate;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  internal start method\n\t\t *\n\t\t *  @param {Time} time\n\t\t *  @private\n\t\t */\n\t    Tone.Noise.prototype._start = function (time) {\n\t        this._source = this.context.createBufferSource();\n\t        this._source.buffer = this._buffer;\n\t        this._source.loop = true;\n\t        this._source.playbackRate.value = this._playbackRate;\n\t        this._source.connect(this.output);\n\t        this._source.start(this.toSeconds(time), Math.random() * (this._buffer.duration - 0.001));\n\t    };\n\t    /**\n\t\t *  internal stop method\n\t\t *\n\t\t *  @param {Time} time\n\t\t *  @private\n\t\t */\n\t    Tone.Noise.prototype._stop = function (time) {\n\t        if (this._source) {\n\t            this._source.stop(this.toSeconds(time));\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Noise} this\n\t\t */\n\t    Tone.Noise.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        if (this._source !== null) {\n\t            this._source.disconnect();\n\t            this._source = null;\n\t        }\n\t        this._buffer = null;\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // THE BUFFERS\n\t    // borrowed heavily from http://noisehack.com/generate-noise-web-audio-api/\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *\tstatic noise buffers\n\t\t *\n\t\t *  @static\n\t\t *  @private\n\t\t *  @type {AudioBuffer}\n\t\t */\n\t    var _pinkNoise = null, _brownNoise = null, _whiteNoise = null;\n\t    Tone._initAudioContext(function (audioContext) {\n\t        var sampleRate = audioContext.sampleRate;\n\t        //four seconds per buffer\n\t        var bufferLength = sampleRate * 4;\n\t        //fill the buffers\n\t        _pinkNoise = function () {\n\t            var buffer = audioContext.createBuffer(2, bufferLength, sampleRate);\n\t            for (var channelNum = 0; channelNum < buffer.numberOfChannels; channelNum++) {\n\t                var channel = buffer.getChannelData(channelNum);\n\t                var b0, b1, b2, b3, b4, b5, b6;\n\t                b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0;\n\t                for (var i = 0; i < bufferLength; i++) {\n\t                    var white = Math.random() * 2 - 1;\n\t                    b0 = 0.99886 * b0 + white * 0.0555179;\n\t                    b1 = 0.99332 * b1 + white * 0.0750759;\n\t                    b2 = 0.969 * b2 + white * 0.153852;\n\t                    b3 = 0.8665 * b3 + white * 0.3104856;\n\t                    b4 = 0.55 * b4 + white * 0.5329522;\n\t                    b5 = -0.7616 * b5 - white * 0.016898;\n\t                    channel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t                    channel[i] *= 0.11;\n\t                    // (roughly) compensate for gain\n\t                    b6 = white * 0.115926;\n\t                }\n\t            }\n\t            return buffer;\n\t        }();\n\t        _brownNoise = function () {\n\t            var buffer = audioContext.createBuffer(2, bufferLength, sampleRate);\n\t            for (var channelNum = 0; channelNum < buffer.numberOfChannels; channelNum++) {\n\t                var channel = buffer.getChannelData(channelNum);\n\t                var lastOut = 0;\n\t                for (var i = 0; i < bufferLength; i++) {\n\t                    var white = Math.random() * 2 - 1;\n\t                    channel[i] = (lastOut + 0.02 * white) / 1.02;\n\t                    lastOut = channel[i];\n\t                    channel[i] *= 3.5;    // (roughly) compensate for gain\n\t                }\n\t            }\n\t            return buffer;\n\t        }();\n\t        _whiteNoise = function () {\n\t            var buffer = audioContext.createBuffer(2, bufferLength, sampleRate);\n\t            for (var channelNum = 0; channelNum < buffer.numberOfChannels; channelNum++) {\n\t                var channel = buffer.getChannelData(channelNum);\n\t                for (var i = 0; i < bufferLength; i++) {\n\t                    channel[i] = Math.random() * 2 - 1;\n\t                }\n\t            }\n\t            return buffer;\n\t        }();\n\t    });\n\t    return Tone.Noise;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.NoiseSynth is composed of a noise generator (Tone.Noise), one filter (Tone.Filter), \n\t\t *          and two envelopes (Tone.Envelop). One envelope controls the amplitude\n\t\t *          of the noise and the other is controls the cutoff frequency of the filter. \n\t\t *          <img src=\"https://docs.google.com/drawings/d/1rqzuX9rBlhT50MRvD2TKml9bnZhcZmzXF1rf_o7vdnE/pub?w=918&h=242\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t * @example\n\t\t * var noiseSynth = new Tone.NoiseSynth().toMaster();\n\t\t * noiseSynth.triggerAttackRelease(\"8n\");\n\t\t */\n\t    Tone.NoiseSynth = function (options) {\n\t        //get the defaults\n\t        options = this.defaultArg(options, Tone.NoiseSynth.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The noise source.\n\t\t\t *  @type {Tone.Noise}\n\t\t\t *  @example\n\t\t\t * noiseSynth.set(\"noise.type\", \"brown\");\n\t\t\t */\n\t        this.noise = new Tone.Noise();\n\t        /**\n\t\t\t *  The amplitude envelope. \n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        //connect the noise to the output\n\t        this.noise.chain(this.envelope, this.output);\n\t        //start the noise\n\t        this.noise.start();\n\t        this._readOnly([\n\t            'noise',\n\t            'envelope'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.NoiseSynth, Tone.Instrument);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.NoiseSynth.defaults = {\n\t        'noise': { 'type': 'white' },\n\t        'envelope': {\n\t            'attack': 0.005,\n\t            'decay': 0.1,\n\t            'sustain': 0\n\t        }\n\t    };\n\t    /**\n\t\t *  Start the attack portion of the envelopes. Unlike other \n\t\t *  instruments, Tone.NoiseSynth doesn't have a note. \n\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t *  @param {number} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.NoiseSynth} this\n\t\t *  @example\n\t\t * noiseSynth.triggerAttack();\n\t\t */\n\t    Tone.NoiseSynth.prototype.triggerAttack = function (time, velocity) {\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start the release portion of the envelopes.\n\t\t *  @param {Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.NoiseSynth} this\n\t\t */\n\t    Tone.NoiseSynth.prototype.triggerRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the attack and then the release. \n\t\t *  @param  {Time} duration the duration of the note\n\t\t *  @param  {Time} [time=now]     the time of the attack\n\t\t *  @param  {number} [velocity=1] the velocity\n\t\t *  @returns {Tone.NoiseSynth} this\n\t\t */\n\t    Tone.NoiseSynth.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        duration = this.toSeconds(duration);\n\t        this.triggerAttack(time, velocity);\n\t        this.triggerRelease(time + duration);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.NoiseSynth} this\n\t\t */\n\t    Tone.NoiseSynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        this._writable([\n\t            'noise',\n\t            'envelope'\n\t        ]);\n\t        this.noise.dispose();\n\t        this.noise = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        return this;\n\t    };\n\t    return Tone.NoiseSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Karplus-String string synthesis. Often out of tune. \n\t\t *         Will change when the AudioWorkerNode is available across\n\t\t *         browsers. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} [options] see the defaults\n\t\t *  @example\n\t\t * var plucky = new Tone.PluckSynth().toMaster();\n\t\t * plucky.triggerAttack(\"C4\");\n\t\t */\n\t    Tone.PluckSynth = function (options) {\n\t        options = this.defaultArg(options, Tone.PluckSynth.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  @type {Tone.Noise}\n\t\t\t *  @private\n\t\t\t */\n\t        this._noise = new Tone.Noise('pink');\n\t        /**\n\t\t\t *  The amount of noise at the attack. \n\t\t\t *  Nominal range of [0.1, 20]\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this.attackNoise = 1;\n\t        /**\n\t\t\t *  the LFCF\n\t\t\t *  @type {Tone.LowpassCombFilter}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfcf = new Tone.LowpassCombFilter({\n\t            'resonance': options.resonance,\n\t            'dampening': options.dampening\n\t        });\n\t        /**\n\t\t\t *  The resonance control. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.resonance = this._lfcf.resonance;\n\t        /**\n\t\t\t *  The dampening control. i.e. the lowpass filter frequency of the comb filter\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.dampening = this._lfcf.dampening;\n\t        //connections\n\t        this._noise.connect(this._lfcf);\n\t        this._lfcf.connect(this.output);\n\t        this._readOnly([\n\t            'resonance',\n\t            'dampening'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.PluckSynth, Tone.Instrument);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.PluckSynth.defaults = {\n\t        'attackNoise': 1,\n\t        'dampening': 4000,\n\t        'resonance': 0.9\n\t    };\n\t    /**\n\t\t *  Trigger the note. \n\t\t *  @param {Frequency} note The note to trigger.\n\t\t *  @param {Time} [time=now] When the note should be triggered.\n\t\t *  @returns {Tone.PluckSynth} this\n\t\t */\n\t    Tone.PluckSynth.prototype.triggerAttack = function (note, time) {\n\t        note = this.toFrequency(note);\n\t        time = this.toSeconds(time);\n\t        var delayAmount = 1 / note;\n\t        this._lfcf.delayTime.setValueAtTime(delayAmount, time);\n\t        this._noise.start(time);\n\t        this._noise.stop(time + delayAmount * this.attackNoise);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.PluckSynth} this\n\t\t */\n\t    Tone.PluckSynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        this._noise.dispose();\n\t        this._lfcf.dispose();\n\t        this._noise = null;\n\t        this._lfcf = null;\n\t        this._writable([\n\t            'resonance',\n\t            'dampening'\n\t        ]);\n\t        this.dampening = null;\n\t        this.resonance = null;\n\t        return this;\n\t    };\n\t    return Tone.PluckSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.PolySynth handles voice creation and allocation for any\n\t\t *          instruments passed in as the second paramter. PolySynth is \n\t\t *          not a synthesizer by itself, it merely manages voices of \n\t\t *          one of the other types of synths, allowing any of the \n\t\t *          monophonic synthesizers to be polyphonic. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {number|Object} [polyphony=4] The number of voices to create\n\t\t *  @param {function} [voice=Tone.Synth] The constructor of the voices\n\t\t *                                            uses Tone.Synth by default. \n\t\t *  @example\n\t\t * //a polysynth composed of 6 Voices of Synth\n\t\t * var synth = new Tone.PolySynth(6, Tone.Synth).toMaster();\n\t\t * //set the attributes using the set interface\n\t\t * synth.set(\"detune\", -1200);\n\t\t * //play a chord\n\t\t * synth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"], \"4n\");\n\t\t */\n\t    Tone.PolySynth = function () {\n\t        Tone.Instrument.call(this);\n\t        var options = this.optionsObject(arguments, [\n\t            'polyphony',\n\t            'voice'\n\t        ], Tone.PolySynth.defaults);\n\t        options = this.defaultArg(options, Tone.Instrument.defaults);\n\t        //max polyphony\n\t        options.polyphony = Math.min(Tone.PolySynth.MAX_POLYPHONY, options.polyphony);\n\t        /**\n\t\t\t *  the array of voices\n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this.voices = new Array(options.polyphony);\n\t        /**\n\t\t\t *  The queue of voices with data about last trigger\n\t\t\t *  and the triggered note\n\t\t\t *  @private\n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this._triggers = new Array(options.polyphony);\n\t        /**\n\t\t\t *  The detune in cents\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        this._readOnly('detune');\n\t        //create the voices\n\t        for (var i = 0; i < options.polyphony; i++) {\n\t            var v = new options.voice(arguments[2], arguments[3]);\n\t            this.voices[i] = v;\n\t            v.connect(this.output);\n\t            if (v.hasOwnProperty('detune')) {\n\t                this.detune.connect(v.detune);\n\t            }\n\t            this._triggers[i] = {\n\t                release: -1,\n\t                note: null,\n\t                voice: v\n\t            };\n\t        }\n\t        //set the volume initially\n\t        this.volume.value = options.volume;\n\t    };\n\t    Tone.extend(Tone.PolySynth, Tone.Instrument);\n\t    /**\n\t\t *  the defaults\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.PolySynth.defaults = {\n\t        'polyphony': 4,\n\t        'volume': 0,\n\t        'detune': 0,\n\t        'voice': Tone.Synth\n\t    };\n\t    /**\n\t\t *  Trigger the attack portion of the note\n\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t *                                  Frequency or an array of frequencies.\n\t\t *  @param  {Time} [time=now]  The start time of the note.\n\t\t *  @param {number} [velocity=1] The velocity of the note.\n\t\t *  @returns {Tone.PolySynth} this\n\t\t *  @example\n\t\t * //trigger a chord immediately with a velocity of 0.2\n\t\t * poly.triggerAttack([\"Ab3\", \"C4\", \"F5\"], undefined, 0.2);\n\t\t */\n\t    Tone.PolySynth.prototype.triggerAttack = function (notes, time, velocity) {\n\t        if (!Array.isArray(notes)) {\n\t            notes = [notes];\n\t        }\n\t        time = this.toSeconds(time);\n\t        for (var i = 0; i < notes.length; i++) {\n\t            var val = notes[i];\n\t            //trigger the oldest voice\n\t            var oldest = this._triggers[0];\n\t            var oldestIndex = 0;\n\t            for (var j = 1; j < this._triggers.length; j++) {\n\t                if (this._triggers[j].release < oldest.release) {\n\t                    oldest = this._triggers[j];\n\t                    oldestIndex = j;\n\t                }\n\t            }\n\t            oldest.release = Infinity;\n\t            oldest.note = JSON.stringify(val);\n\t            oldest.voice.triggerAttack(val, time, velocity);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the attack and release after the specified duration\n\t\t *  \n\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t *                                  Frequency or an array of frequencies.\n\t\t *  @param  {Time} duration the duration of the note\n\t\t *  @param  {Time} [time=now]     if no time is given, defaults to now\n\t\t *  @param  {number} [velocity=1] the velocity of the attack (0-1)\n\t\t *  @returns {Tone.PolySynth} this\n\t\t *  @example\n\t\t * //trigger a chord for a duration of a half note \n\t\t * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], \"2n\");\n\t\t *  @example\n\t\t * //can pass in an array of durations as well\n\t\t * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], [\"2n\", \"4n\", \"4n\"]);\n\t\t */\n\t    Tone.PolySynth.prototype.triggerAttackRelease = function (notes, duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        this.triggerAttack(notes, time, velocity);\n\t        if (this.isArray(duration) && this.isArray(notes)) {\n\t            for (var i = 0; i < notes.length; i++) {\n\t                var d = duration[Math.min(i, duration.length - 1)];\n\t                this.triggerRelease(notes[i], time + this.toSeconds(d));\n\t            }\n\t        } else {\n\t            this.triggerRelease(notes, time + this.toSeconds(duration));\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the release of the note. Unlike monophonic instruments, \n\t\t *  a note (or array of notes) needs to be passed in as the first argument.\n\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t *                                  Frequency or an array of frequencies.\n\t\t *  @param  {Time} [time=now]  When the release will be triggered. \n\t\t *  @returns {Tone.PolySynth} this\n\t\t *  @example\n\t\t * poly.triggerRelease([\"Ab3\", \"C4\", \"F5\"], \"+2n\");\n\t\t */\n\t    Tone.PolySynth.prototype.triggerRelease = function (notes, time) {\n\t        if (!Array.isArray(notes)) {\n\t            notes = [notes];\n\t        }\n\t        time = this.toSeconds(time);\n\t        for (var i = 0; i < notes.length; i++) {\n\t            //get the voice\n\t            var stringified = JSON.stringify(notes[i]);\n\t            for (var v = 0; v < this._triggers.length; v++) {\n\t                var desc = this._triggers[v];\n\t                if (desc.note === stringified && desc.release > time) {\n\t                    desc.voice.triggerRelease(time);\n\t                    desc.release = time;\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set a member/attribute of the voices. \n\t\t *  @param {Object|string} params\n\t\t *  @param {number=} value\n\t\t *  @param {Time=} rampTime\n\t\t *  @returns {Tone.PolySynth} this\n\t\t *  @example\n\t\t * poly.set({\n\t\t * \t\"filter\" : {\n\t\t * \t\t\"type\" : \"highpass\"\n\t\t * \t},\n\t\t * \t\"envelope\" : {\n\t\t * \t\t\"attack\" : 0.25\n\t\t * \t}\n\t\t * });\n\t\t */\n\t    Tone.PolySynth.prototype.set = function (params, value, rampTime) {\n\t        for (var i = 0; i < this.voices.length; i++) {\n\t            this.voices[i].set(params, value, rampTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the synth's attributes. Given no arguments get\n\t\t *  will return all available object properties and their corresponding\n\t\t *  values. Pass in a single attribute to retrieve or an array\n\t\t *  of attributes. The attribute strings can also include a \".\"\n\t\t *  to access deeper properties.\n\t\t *  @param {Array=} params the parameters to get, otherwise will return \n\t\t *  \t\t\t\t\t   all available.\n\t\t */\n\t    Tone.PolySynth.prototype.get = function (params) {\n\t        return this.voices[0].get(params);\n\t    };\n\t    /**\n\t\t *  Trigger the release portion of all the currently active voices.\n\t\t *  @param {Time} [time=now] When the notes should be released.\n\t\t *  @return {Tone.PolySynth} this\n\t\t */\n\t    Tone.PolySynth.prototype.releaseAll = function (time) {\n\t        time = this.toSeconds(time);\n\t        for (var i = 0; i < this._triggers.length; i++) {\n\t            var desc = this._triggers[i];\n\t            if (desc.release > time) {\n\t                desc.release = time;\n\t                desc.voice.triggerRelease(time);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.PolySynth} this\n\t\t */\n\t    Tone.PolySynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        for (var i = 0; i < this.voices.length; i++) {\n\t            this.voices[i].dispose();\n\t            this.voices[i] = null;\n\t        }\n\t        this._writable('detune');\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.voices = null;\n\t        this._triggers = null;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The maximum number of notes that can be allocated \n\t\t *  to a polysynth. \n\t\t *  @type  {Number}\n\t\t *  @static\n\t\t */\n\t    Tone.PolySynth.MAX_POLYPHONY = 20;\n\t    return Tone.PolySynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Player is an audio file player with start, loop, and stop functions.\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Source} \n\t\t *  @param {string|AudioBuffer} url Either the AudioBuffer or the url from\n\t\t *                                  which to load the AudioBuffer\n\t\t *  @param {function=} onload The function to invoke when the buffer is loaded. \n\t\t *                            Recommended to use Tone.Buffer.on('load') instead.\n\t\t *  @example\n\t\t * var player = new Tone.Player(\"./path/to/sample.mp3\").toMaster();\n\t\t * //play as soon as the buffer is loaded\n\t\t * player.autostart = true;\n\t\t */\n\t    Tone.Player = function (url) {\n\t        var options;\n\t        if (url instanceof Tone.Buffer) {\n\t            url = url.get();\n\t            options = Tone.Player.defaults;\n\t        } else {\n\t            options = this.optionsObject(arguments, [\n\t                'url',\n\t                'onload'\n\t            ], Tone.Player.defaults);\n\t        }\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t */\n\t        this._source = null;\n\t        /**\n\t\t\t *  If the file should play as soon\n\t\t\t *  as the buffer is loaded. \n\t\t\t *  @type {boolean}\n\t\t\t *  @example\n\t\t\t * //will play as soon as it's loaded\n\t\t\t * var player = new Tone.Player({\n\t\t\t * \t\"url\" : \"./path/to/sample.mp3\",\n\t\t\t * \t\"autostart\" : true,\n\t\t\t * }).toMaster();\n\t\t\t */\n\t        this.autostart = options.autostart;\n\t        /**\n\t\t\t *  the buffer\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Buffer}\n\t\t\t */\n\t        this._buffer = new Tone.Buffer({\n\t            'url': options.url,\n\t            'onload': this._onload.bind(this, options.onload),\n\t            'reverse': options.reverse\n\t        });\n\t        if (url instanceof AudioBuffer) {\n\t            this._buffer.set(url);\n\t        }\n\t        /**\n\t\t\t *  if the buffer should loop once it's over\n\t\t\t *  @type {boolean}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loop = options.loop;\n\t        /**\n\t\t\t *  if 'loop' is true, the loop will start at this position\n\t\t\t *  @type {Time}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopStart = options.loopStart;\n\t        /**\n\t\t\t *  if 'loop' is true, the loop will end at this position\n\t\t\t *  @type {Time}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopEnd = options.loopEnd;\n\t        /**\n\t\t\t *  the playback rate\n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._playbackRate = options.playbackRate;\n\t        /**\n\t\t\t *  Enabling retrigger will allow a player to be restarted\n\t\t\t *  before the the previous 'start' is done playing. Otherwise, \n\t\t\t *  successive calls to Tone.Player.start will only start\n\t\t\t *  the sample if it had played all the way through. \n\t\t\t *  @type {boolean}\n\t\t\t */\n\t        this.retrigger = options.retrigger;\n\t    };\n\t    Tone.extend(Tone.Player, Tone.Source);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Player.defaults = {\n\t        'onload': Tone.noOp,\n\t        'playbackRate': 1,\n\t        'loop': false,\n\t        'autostart': false,\n\t        'loopStart': 0,\n\t        'loopEnd': 0,\n\t        'retrigger': false,\n\t        'reverse': false\n\t    };\n\t    /**\n\t\t *  Load the audio file as an audio buffer.\n\t\t *  Decodes the audio asynchronously and invokes\n\t\t *  the callback once the audio buffer loads. \n\t\t *  Note: this does not need to be called if a url\n\t\t *  was passed in to the constructor. Only use this\n\t\t *  if you want to manually load a new url. \n\t\t * @param {string} url The url of the buffer to load.\n\t\t *                     Filetype support depends on the\n\t\t *                     browser.\n\t\t *  @param  {function=} callback The function to invoke once\n\t\t *                               the sample is loaded.\n\t\t *  @returns {Tone.Player} this\n\t\t */\n\t    Tone.Player.prototype.load = function (url, callback) {\n\t        this._buffer.load(url, this._onload.bind(this, callback));\n\t        return this;\n\t    };\n\t    /**\n\t\t * Internal callback when the buffer is loaded.\n\t\t * @private\n\t\t */\n\t    Tone.Player.prototype._onload = function (callback) {\n\t        callback(this);\n\t        if (this.autostart) {\n\t            this.start();\n\t        }\n\t    };\n\t    /**\n\t\t *  Play the buffer at the given startTime. Optionally add an offset\n\t\t *  and/or duration which will play the buffer from a position\n\t\t *  within the buffer for the given duration. \n\t\t *  \n\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t *                                 to start at. \n\t\t *  @param  {Time=} duration How long the sample should play. If no duration\n\t\t *                                is given, it will default to the full length \n\t\t *                                of the sample (minus any offset)\n\t\t *  @returns {Tone.Player} this\n\t\t *  @memberOf Tone.Player#\n\t\t *  @method start\n\t\t *  @name start\n\t\t */\n\t    /**\n\t\t *  Internal start method\n\t\t *  @private\n\t\t */\n\t    Tone.Player.prototype._start = function (startTime, offset, duration) {\n\t        if (this._buffer.loaded) {\n\t            //if it's a loop the default offset is the loopstart point\n\t            if (this._loop) {\n\t                offset = this.defaultArg(offset, this._loopStart);\n\t            } else {\n\t                //otherwise the default offset is 0\n\t                offset = this.defaultArg(offset, 0);\n\t            }\n\t            offset = this.toSeconds(offset);\n\t            //make sure it has a positive duration\n\t            duration = this.defaultArg(duration, Math.max(this._buffer.duration - offset, 0));\n\t            duration = this.toSeconds(duration);\n\t            //the values in seconds\n\t            startTime = this.toSeconds(startTime);\n\t            //make the source\n\t            this._source = this.context.createBufferSource();\n\t            this._source.buffer = this._buffer.get();\n\t            //set the looping properties\n\t            if (this._loop) {\n\t                this._source.loop = this._loop;\n\t                this._source.loopStart = this.toSeconds(this._loopStart);\n\t                this._source.loopEnd = this.toSeconds(this._loopEnd);\n\t            } else {\n\t                //if it's not looping, set the state change at the end of the sample\n\t                this._state.setStateAtTime(Tone.State.Stopped, startTime + duration);\n\t            }\n\t            //and other properties\n\t            this._source.playbackRate.value = this._playbackRate;\n\t            this._source.connect(this.output);\n\t            //start it\n\t            if (this._loop) {\n\t                //modify the offset if it's greater than the loop time\n\t                var loopEnd = this._source.loopEnd || this._buffer.duration;\n\t                var loopStart = this._source.loopStart;\n\t                var loopDuration = loopEnd - loopStart;\n\t                if (offset > loopDuration) {\n\t                    offset = loopStart + offset % loopDuration;\n\t                    if (offset > loopEnd) {\n\t                        offset -= loopDuration;\n\t                    }\n\t                }\n\t                this._source.start(startTime, offset);\n\t            } else {\n\t                this._source.start(startTime, offset, duration);\n\t            }\n\t        } else {\n\t            throw Error('Tone.Player: tried to start Player before the buffer was loaded');\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop playback.\n\t\t *  @private\n\t\t *  @param  {Time} [time=now]\n\t\t *  @returns {Tone.Player} this\n\t\t */\n\t    Tone.Player.prototype._stop = function (time) {\n\t        if (this._source) {\n\t            this._source.stop(this.toSeconds(time));\n\t            this._source = null;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Seek to a specific time in the player's buffer. If the \n\t\t *  source is no longer playing at that time, it will stop.\n\t\t *  If you seek to a time that \n\t\t *  @param {Time} offset The time to seek to.\n\t\t *  @param {Time=} time The time for the seek event to occur.\n\t\t *  @return {Tone.Player} this\n\t\t *  @example\n\t\t * source.start(0.2);\n\t\t * source.stop(0.4);\n\t\t */\n\t    Tone.Player.prototype.seek = function (offset, time) {\n\t        time = this.toSeconds(time);\n\t        if (this._state.getStateAtTime(time) === Tone.State.Started) {\n\t            offset = this.toSeconds(offset);\n\t            // if it's currently playing, stop it\n\t            this._stop(time);\n\t            //restart it at the given time\n\t            this._start(time, offset);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set the loop start and end. Will only loop if loop is \n\t\t *  set to true. \n\t\t *  @param {Time} loopStart The loop end time\n\t\t *  @param {Time} loopEnd The loop end time\n\t\t *  @returns {Tone.Player} this\n\t\t *  @example\n\t\t * //loop 0.1 seconds of the file. \n\t\t * player.setLoopPoints(0.2, 0.3);\n\t\t * player.loop = true;\n\t\t */\n\t    Tone.Player.prototype.setLoopPoints = function (loopStart, loopEnd) {\n\t        this.loopStart = loopStart;\n\t        this.loopEnd = loopEnd;\n\t        return this;\n\t    };\n\t    /**\n\t\t * If loop is true, the loop will start at this position. \n\t\t * @memberOf Tone.Player#\n\t\t * @type {Time}\n\t\t * @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'loopStart', {\n\t        get: function () {\n\t            return this._loopStart;\n\t        },\n\t        set: function (loopStart) {\n\t            this._loopStart = loopStart;\n\t            if (this._source) {\n\t                this._source.loopStart = this.toSeconds(loopStart);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * If loop is true, the loop will end at this position.\n\t\t * @memberOf Tone.Player#\n\t\t * @type {Time}\n\t\t * @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return this._loopEnd;\n\t        },\n\t        set: function (loopEnd) {\n\t            this._loopEnd = loopEnd;\n\t            if (this._source) {\n\t                this._source.loopEnd = this.toSeconds(loopEnd);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The audio buffer belonging to the player. \n\t\t * @memberOf Tone.Player#\n\t\t * @type {Tone.Buffer}\n\t\t * @name buffer\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'buffer', {\n\t        get: function () {\n\t            return this._buffer;\n\t        },\n\t        set: function (buffer) {\n\t            this._buffer.set(buffer);\n\t        }\n\t    });\n\t    /**\n\t\t * If the buffer should loop once it's over. \n\t\t * @memberOf Tone.Player#\n\t\t * @type {boolean}\n\t\t * @name loop\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'loop', {\n\t        get: function () {\n\t            return this._loop;\n\t        },\n\t        set: function (loop) {\n\t            this._loop = loop;\n\t            if (this._source) {\n\t                this._source.loop = loop;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The playback speed. 1 is normal speed. This is not a signal because\n\t\t * Safari and iOS currently don't support playbackRate as a signal.\n\t\t * @memberOf Tone.Player#\n\t\t * @type {number}\n\t\t * @name playbackRate\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            if (this._source) {\n\t                this._source.playbackRate.value = rate;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The direction the buffer should play in\n\t\t * @memberOf Tone.Player#\n\t\t * @type {boolean}\n\t\t * @name reverse\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'reverse', {\n\t        get: function () {\n\t            return this._buffer.reverse;\n\t        },\n\t        set: function (rev) {\n\t            this._buffer.reverse = rev;\n\t        }\n\t    });\n\t    /**\n\t\t *  Dispose and disconnect.\n\t\t *  @return {Tone.Player} this\n\t\t */\n\t    Tone.Player.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        if (this._source !== null) {\n\t            this._source.disconnect();\n\t            this._source = null;\n\t        }\n\t        this._buffer.dispose();\n\t        this._buffer = null;\n\t        return this;\n\t    };\n\t    return Tone.Player;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Sampler wraps Tone.Player in an AmplitudeEnvelope.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {String} url the url of the audio file\n\t\t *  @param {Function=} onload The callback to invoke when the sample is loaded.\n\t\t *  @example\n\t\t * var sampler = new Sampler(\"./audio/casio/A1.mp3\", function(){\n\t\t * \t//repitch the sample down a half step\n\t\t * \tsampler.triggerAttack(-1);\n\t\t * }).toMaster();\n\t\t */\n\t    Tone.Sampler = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'url',\n\t            'onload'\n\t        ], Tone.Sampler.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The sample player.\n\t\t\t *  @type {Tone.Player}\n\t\t\t */\n\t        this.player = new Tone.Player(options.url, options.onload);\n\t        this.player.retrigger = true;\n\t        /**\n\t\t\t *  The amplitude envelope. \n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        this.player.chain(this.envelope, this.output);\n\t        this._readOnly([\n\t            'player',\n\t            'envelope'\n\t        ]);\n\t        this.loop = options.loop;\n\t        this.reverse = options.reverse;\n\t    };\n\t    Tone.extend(Tone.Sampler, Tone.Instrument);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t */\n\t    Tone.Sampler.defaults = {\n\t        'onload': Tone.noOp,\n\t        'loop': false,\n\t        'reverse': false,\n\t        'envelope': {\n\t            'attack': 0.001,\n\t            'decay': 0,\n\t            'sustain': 1,\n\t            'release': 0.1\n\t        }\n\t    };\n\t    /**\n\t\t *  Trigger the start of the sample. \n\t\t *  @param {Interval} [pitch=0] The amount the sample should\n\t\t *                              be repitched. \n\t\t *  @param {Time} [time=now] The time when the sample should start\n\t\t *  @param {NormalRange} [velocity=1] The velocity of the note\n\t\t *  @returns {Tone.Sampler} this\n\t\t *  @example\n\t\t * sampler.triggerAttack(0, \"+0.1\", 0.5);\n\t\t */\n\t    Tone.Sampler.prototype.triggerAttack = function (pitch, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        pitch = this.defaultArg(pitch, 0);\n\t        this.player.playbackRate = this.intervalToFrequencyRatio(pitch);\n\t        this.player.start(time);\n\t        this.envelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start the release portion of the sample. Will stop the sample once the \n\t\t *  envelope has fully released. \n\t\t *  \n\t\t *  @param {Time} [time=now] The time when the note should release\n\t\t *  @returns {Tone.Sampler} this\n\t\t *  @example\n\t\t * sampler.triggerRelease();\n\t\t */\n\t    Tone.Sampler.prototype.triggerRelease = function (time) {\n\t        time = this.toSeconds(time);\n\t        this.envelope.triggerRelease(time);\n\t        this.player.stop(this.toSeconds(this.envelope.release) + time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * If the output sample should loop or not.\n\t\t * @memberOf Tone.Sampler#\n\t\t * @type {number|string}\n\t\t * @name loop\n\t\t */\n\t    Object.defineProperty(Tone.Sampler.prototype, 'loop', {\n\t        get: function () {\n\t            return this.player.loop;\n\t        },\n\t        set: function (loop) {\n\t            this.player.loop = loop;\n\t        }\n\t    });\n\t    /**\n\t\t * The direction the buffer should play in\n\t\t * @memberOf Tone.Sampler#\n\t\t * @type {boolean}\n\t\t * @name reverse\n\t\t */\n\t    Object.defineProperty(Tone.Sampler.prototype, 'reverse', {\n\t        get: function () {\n\t            return this.player.reverse;\n\t        },\n\t        set: function (rev) {\n\t            this.player.reverse = rev;\n\t        }\n\t    });\n\t    /**\n\t\t * The buffer to play.\n\t\t * @memberOf Tone.Sampler#\n\t\t * @type {Tone.Buffer}\n\t\t * @name buffer\n\t\t */\n\t    Object.defineProperty(Tone.Sampler.prototype, 'buffer', {\n\t        get: function () {\n\t            return this.player.buffer;\n\t        },\n\t        set: function (buff) {\n\t            this.player.buffer = buff;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Sampler} this\n\t\t */\n\t    Tone.Sampler.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        this._writable([\n\t            'player',\n\t            'envelope'\n\t        ]);\n\t        this.player.dispose();\n\t        this.player = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        return this;\n\t    };\n\t    return Tone.Sampler;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Now called Tone.Synth\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t */\n\t    Tone.SimpleSynth = function (options) {\n\t        console.warn('Tone.SimpleSynth is now called Tone.Synth');\n\t        Tone.Synth.call(this, options);\n\t    };\n\t    Tone.extend(Tone.SimpleSynth, Tone.Synth);\n\t    return Tone.SimpleSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Maps a NormalRange [0, 1] to an AudioRange [-1, 1]. \n\t\t *         See also Tone.AudioToGain. \n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @example\n\t\t * var g2a = new Tone.GainToAudio();\n\t\t */\n\t    Tone.GainToAudio = function () {\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._norm = this.input = this.output = new Tone.WaveShaper(function (x) {\n\t            return Math.abs(x) * 2 - 1;\n\t        });\n\t    };\n\t    Tone.extend(Tone.GainToAudio, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.GainToAudio} this\n\t\t */\n\t    Tone.GainToAudio.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._norm.dispose();\n\t        this._norm = null;\n\t        return this;\n\t    };\n\t    return Tone.GainToAudio;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Normalize takes an input min and max and maps it linearly to NormalRange [0,1]\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {number} inputMin the min input value\n\t\t *  @param {number} inputMax the max input value\n\t\t *  @example\n\t\t * var norm = new Tone.Normalize(2, 4);\n\t\t * var sig = new Tone.Signal(3).connect(norm);\n\t\t * //output of norm is 0.5. \n\t\t */\n\t    Tone.Normalize = function (inputMin, inputMax) {\n\t        /**\n\t\t\t *  the min input value\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._inputMin = this.defaultArg(inputMin, 0);\n\t        /**\n\t\t\t *  the max input value\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._inputMax = this.defaultArg(inputMax, 1);\n\t        /**\n\t\t\t *  subtract the min from the input\n\t\t\t *  @type {Tone.Add}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sub = this.input = new Tone.Add(0);\n\t        /**\n\t\t\t *  divide by the difference between the input and output\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._div = this.output = new Tone.Multiply(1);\n\t        this._sub.connect(this._div);\n\t        this._setRange();\n\t    };\n\t    Tone.extend(Tone.Normalize, Tone.SignalBase);\n\t    /**\n\t\t * The minimum value the input signal will reach.\n\t\t * @memberOf Tone.Normalize#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.Normalize.prototype, 'min', {\n\t        get: function () {\n\t            return this._inputMin;\n\t        },\n\t        set: function (min) {\n\t            this._inputMin = min;\n\t            this._setRange();\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum value the input signal will reach.\n\t\t * @memberOf Tone.Normalize#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.Normalize.prototype, 'max', {\n\t        get: function () {\n\t            return this._inputMax;\n\t        },\n\t        set: function (max) {\n\t            this._inputMax = max;\n\t            this._setRange();\n\t        }\n\t    });\n\t    /**\n\t\t *  set the values\n\t\t *  @private\n\t\t */\n\t    Tone.Normalize.prototype._setRange = function () {\n\t        this._sub.value = -this._inputMin;\n\t        this._div.value = 1 / (this._inputMax - this._inputMin);\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Normalize} this\n\t\t */\n\t    Tone.Normalize.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._sub.dispose();\n\t        this._sub = null;\n\t        this._div.dispose();\n\t        this._div = null;\n\t        return this;\n\t    };\n\t    return Tone.Normalize;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Wrapper around the native BufferSourceNode.\n\t\t *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play\n\t\t *  @param  {Function}  onended  The callback to invoke when the \n\t\t *                               buffer is done playing.\n\t\t */\n\t    Tone.BufferSource = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'buffer',\n\t            'onended'\n\t        ], Tone.BufferSource.defaults);\n\t        /**\n\t\t\t *  The callback to invoke after the \n\t\t\t *  buffer source is done playing. \n\t\t\t *  @type  {Function}\n\t\t\t */\n\t        this.onended = options.onended;\n\t        /**\n\t\t\t *  The time that the buffer was started.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._startTime = -1;\n\t        /**\n\t\t\t *  The gain node which envelopes the BufferSource\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gainNode = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  The buffer source\n\t\t\t *  @type  {AudioBufferSourceNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._source = this.context.createBufferSource();\n\t        this._source.connect(this._gainNode);\n\t        this._source.onended = this._onended.bind(this);\n\t        /**\n\t\t\t *  The playbackRate of the buffer\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.playbackRate = new Tone.Param(this._source.playbackRate, Tone.Type.Positive);\n\t        /**\n\t\t\t *  The fadeIn time of the amplitude envelope.\n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.fadeIn = options.fadeIn;\n\t        /**\n\t\t\t *  The fadeOut time of the amplitude envelope.\n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.fadeOut = options.fadeOut;\n\t        /**\n\t\t\t *  The value that the buffer ramps to\n\t\t\t *  @type {Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gain = 1;\n\t        //set the buffer initially\n\t        if (!this.isUndef(options.buffer)) {\n\t            this.buffer = options.buffer;\n\t        }\n\t        this.loop = options.loop;\n\t    };\n\t    Tone.extend(Tone.BufferSource);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.BufferSource.defaults = {\n\t        'onended': Tone.noOp,\n\t        'fadeIn': 0,\n\t        'fadeOut': 0\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.BufferSource#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'state', {\n\t        get: function () {\n\t            var now = this.now();\n\t            if (this._startTime !== -1 && now > this._startTime) {\n\t                return Tone.State.Started;\n\t            } else {\n\t                return Tone.State.Stopped;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Start the buffer\n\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t *                                 to start at. \n\t\t *  @param  {Time=} duration How long the sample should play. If no duration\n\t\t *                                is given, it will default to the full length \n\t\t *                                of the sample (minus any offset)\n\t\t *  @param  {Gain}  [gain=1]  The gain to play the buffer back at.\n\t\t *  @param  {Time=}  fadeInTime  The optional fadeIn ramp time.\n\t\t *  @return  {Tone.BufferSource}  this\n\t\t */\n\t    Tone.BufferSource.prototype.start = function (time, offset, duration, gain, fadeInTime) {\n\t        if (this._startTime !== -1) {\n\t            throw new Error('Tone.BufferSource: can only be started once.');\n\t        }\n\t        if (this.buffer) {\n\t            time = this.toSeconds(time);\n\t            //if it's a loop the default offset is the loopstart point\n\t            if (this.loop) {\n\t                offset = this.defaultArg(offset, this.loopStart);\n\t            } else {\n\t                //otherwise the default offset is 0\n\t                offset = this.defaultArg(offset, 0);\n\t            }\n\t            offset = this.toSeconds(offset);\n\t            //the values in seconds\n\t            time = this.toSeconds(time);\n\t            this._source.start(time, offset);\n\t            gain = this.defaultArg(gain, 1);\n\t            this._gain = gain;\n\t            //the fadeIn time\n\t            if (this.isUndef(fadeInTime)) {\n\t                fadeInTime = this.toSeconds(this.fadeIn);\n\t            } else {\n\t                fadeInTime = this.toSeconds(fadeInTime);\n\t            }\n\t            if (fadeInTime > 0) {\n\t                this._gainNode.gain.setValueAtTime(0, time);\n\t                this._gainNode.gain.linearRampToValueAtTime(this._gain, time + fadeInTime);\n\t            } else {\n\t                this._gainNode.gain.setValueAtTime(gain, time);\n\t            }\n\t            this._startTime = time + fadeInTime;\n\t            if (!this.isUndef(duration)) {\n\t                duration = this.defaultArg(duration, this.buffer.duration - offset);\n\t                duration = this.toSeconds(duration);\n\t                this.stop(time + duration + fadeInTime, fadeInTime);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the buffer. Optionally add a ramp time to fade the \n\t\t *  buffer out. \n\t\t *  @param  {Time=}  time         The time the buffer should stop.\n\t\t *  @param  {Time=}  fadeOutTime  How long the gain should fade out for\n\t\t *  @return  {Tone.BufferSource}  this\n\t\t */\n\t    Tone.BufferSource.prototype.stop = function (time, fadeOutTime) {\n\t        if (this.buffer) {\n\t            time = this.toSeconds(time);\n\t            //the fadeOut time\n\t            if (this.isUndef(fadeOutTime)) {\n\t                fadeOutTime = this.toSeconds(this.fadeOut);\n\t            } else {\n\t                fadeOutTime = this.toSeconds(fadeOutTime);\n\t            }\n\t            //cancel the end curve\n\t            this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);\n\t            //set a new one\n\t            if (fadeOutTime > 0) {\n\t                this._gainNode.gain.setValueAtTime(this._gain, time);\n\t                this._gainNode.gain.linearRampToValueAtTime(0, time + fadeOutTime);\n\t                time += fadeOutTime;\n\t            } else {\n\t                this._gainNode.gain.setValueAtTime(0, time);\n\t            }\n\t            // fix for safari bug and old FF\n\t            if (!this.isNumber(this._source.playbackState) || this._source.playbackState === 2) {\n\t                this._source.stop(time);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Internal callback when the buffer is ended. \n\t\t *  Invokes `onended` and disposes the node.\n\t\t *  @private\n\t\t */\n\t    Tone.BufferSource.prototype._onended = function () {\n\t        this.onended(this);\n\t        this.dispose();\n\t    };\n\t    /**\n\t\t * If loop is true, the loop will start at this position. \n\t\t * @memberOf Tone.BufferSource#\n\t\t * @type {Time}\n\t\t * @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'loopStart', {\n\t        get: function () {\n\t            return this._source.loopStart;\n\t        },\n\t        set: function (loopStart) {\n\t            this._source.loopStart = this.toSeconds(loopStart);\n\t        }\n\t    });\n\t    /**\n\t\t * If loop is true, the loop will end at this position.\n\t\t * @memberOf Tone.BufferSource#\n\t\t * @type {Time}\n\t\t * @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return this._source.loopEnd;\n\t        },\n\t        set: function (loopEnd) {\n\t            this._source.loopEnd = this.toSeconds(loopEnd);\n\t        }\n\t    });\n\t    /**\n\t\t * The audio buffer belonging to the player. \n\t\t * @memberOf Tone.BufferSource#\n\t\t * @type {AudioBuffer}\n\t\t * @name buffer\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'buffer', {\n\t        get: function () {\n\t            if (this._source) {\n\t                return this._source.buffer;\n\t            } else {\n\t                return null;\n\t            }\n\t        },\n\t        set: function (buffer) {\n\t            if (buffer instanceof Tone.Buffer) {\n\t                this._source.buffer = buffer.get();\n\t            } else {\n\t                this._source.buffer = buffer;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * If the buffer should loop once it's over. \n\t\t * @memberOf Tone.BufferSource#\n\t\t * @type {boolean}\n\t\t * @name loop\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'loop', {\n\t        get: function () {\n\t            return this._source.loop;\n\t        },\n\t        set: function (loop) {\n\t            this._source.loop = loop;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.BufferSource}  this\n\t\t */\n\t    Tone.BufferSource.prototype.dispose = function () {\n\t        this.onended = null;\n\t        if (this._source) {\n\t            this._source.onended = null;\n\t            this._source.disconnect();\n\t            this._source = null;\n\t        }\n\t        if (this._gainNode) {\n\t            this._gainNode.dispose();\n\t            this._gainNode = null;\n\t        }\n\t        this._startTime = -1;\n\t        this.playbackRate = null;\n\t        this.output = null;\n\t        return this;\n\t    };\n\t    return Tone.BufferSource;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    //polyfill for getUserMedia\n\t    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n\t    /**\n\t\t *  @class  Tone.ExternalInput is a WebRTC Audio Input. Check \n\t\t *          [Media Stream API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_API)\n\t\t *          to see which browsers are supported. As of\n\t\t *          writing this, Chrome, Firefox, and Opera \n\t\t *          support Media Stream. Chrome allows enumeration \n\t\t *          of the sources, and access to device name over a \n\t\t *          secure (HTTPS) connection. See [https://simpl.info](https://simpl.info/getusermedia/sources/index.html) \n\t\t *          vs [http://simple.info](https://simpl.info/getusermedia/sources/index.html) \n\t\t *          on a Chrome browser for the difference.\n\t\t *         \n\t\t *  @constructor\n\t\t *  @extends {Tone.Source}\n\t\t *  @param {number} [inputNum=0] If multiple inputs are present, select the input number. Chrome only.\n\t\t *  @example\n\t\t * //select the third input\n\t\t * var motu = new Tone.ExternalInput(3);\n\t\t * \n\t\t * //opening the input asks the user to activate their mic\n\t\t * motu.open(function(){\n\t\t * \t//opening is activates the microphone\n\t\t * \t//starting lets audio through\n\t\t * \tmotu.start(10);\n\t\t * });\n\t\t */\n\t    Tone.ExternalInput = function () {\n\t        var options = this.optionsObject(arguments, ['inputNum'], Tone.ExternalInput.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The MediaStreamNode \n\t\t\t *  @type {MediaStreamAudioSourceNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._mediaStream = null;\n\t        /**\n\t\t\t *  The media stream created by getUserMedia.\n\t\t\t *  @type {LocalMediaStream}\n\t\t\t *  @private\n\t\t\t */\n\t        this._stream = null;\n\t        /**\n\t\t\t *  The constraints argument for getUserMedia\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t        this._constraints = { 'audio': true };\n\t        /**\n\t\t\t *  The input source position in Tone.ExternalInput.sources. \n\t\t\t *  Set before ExternalInput.open().\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._inputNum = options.inputNum;\n\t        /**\n\t\t\t *  Gates the input signal for start/stop. \n\t\t\t *  Initially closed.\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gate = new Tone.Gain(0).connect(this.output);\n\t    };\n\t    Tone.extend(Tone.ExternalInput, Tone.Source);\n\t    /**\n\t\t * the default parameters\n\t\t * @type {Object}\n\t\t */\n\t    Tone.ExternalInput.defaults = { 'inputNum': 0 };\n\t    /**\n\t\t * wrapper for getUserMedia function\n\t\t * @param {function} callback\n\t\t * @param {function} error\n\t\t * @private\n\t\t */\n\t    Tone.ExternalInput.prototype._getUserMedia = function (callback, error) {\n\t        if (!Tone.ExternalInput.supported) {\n\t            error('browser does not support \\'getUserMedia\\'');\n\t        }\n\t        if (Tone.ExternalInput.sources[this._inputNum]) {\n\t            this._constraints = { audio: { optional: [{ sourceId: Tone.ExternalInput.sources[this._inputNum].id }] } };\n\t        }\n\t        navigator.getUserMedia(this._constraints, function (stream) {\n\t            this._onStream(stream);\n\t            callback();\n\t        }.bind(this), function (err) {\n\t            error(err);\n\t        });\n\t    };\n\t    /**\n\t\t * called when the stream is successfully setup\n\t\t * @param  {LocalMediaStream} stream\n\t\t * @private\n\t\t */\n\t    Tone.ExternalInput.prototype._onStream = function (stream) {\n\t        if (!this.isFunction(this.context.createMediaStreamSource)) {\n\t            throw new Error('Tone.ExternalInput: browser does not support the \\'MediaStreamSourceNode\\'');\n\t        }\n\t        //can only start a new source if the previous one is closed\n\t        if (!this._stream) {\n\t            this._stream = stream;\n\t            //Wrap a MediaStreamSourceNode around the live input stream.\n\t            this._mediaStream = this.context.createMediaStreamSource(stream);\n\t            //Connect the MediaStreamSourceNode to a gate gain node\n\t            this._mediaStream.connect(this._gate);\n\t        }\n\t    };\n\t    /**\n\t\t *  Open the media stream \n\t\t *  @param  {function=} callback The callback function to \n\t\t *                       execute when the stream is open\n\t\t *  @param  {function=} error The callback function to execute\n\t\t *                            when the media stream can't open. \n\t\t *                            This is fired either because the browser\n\t\t *                            doesn't support the media stream,\n\t\t *                            or the user blocked opening the microphone. \n\t\t *  @return {Tone.ExternalInput} this\n\t\t */\n\t    Tone.ExternalInput.prototype.open = function (callback, error) {\n\t        callback = this.defaultArg(callback, Tone.noOp);\n\t        error = this.defaultArg(error, Tone.noOp);\n\t        Tone.ExternalInput.getSources(function () {\n\t            this._getUserMedia(callback, error);\n\t        }.bind(this));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Close the media stream\n\t\t *  @return {Tone.ExternalInput} this\n\t\t */\n\t    Tone.ExternalInput.prototype.close = function () {\n\t        if (this._stream) {\n\t            var track = this._stream.getTracks()[this._inputNum];\n\t            if (!this.isUndef(track)) {\n\t                track.stop();\n\t            }\n\t            this._stream = null;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start the stream\n\t\t *  @private\n\t\t */\n\t    Tone.ExternalInput.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._gate.gain.setValueAtTime(1, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stops the stream.\n\t\t *  @private\n\t\t */\n\t    Tone.ExternalInput.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._gate.gain.setValueAtTime(0, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Clean up.\n\t\t * @return {Tone.ExternalInput} this\n\t\t */\n\t    Tone.ExternalInput.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this.close();\n\t        if (this._mediaStream) {\n\t            this._mediaStream.disconnect();\n\t            this._mediaStream = null;\n\t        }\n\t        this._constraints = null;\n\t        this._gate.dispose();\n\t        this._gate = null;\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // STATIC METHODS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t * The array of available sources, different depending on whether connection is secure\n\t\t * @type {Array}\n\t\t * @static\n\t\t */\n\t    Tone.ExternalInput.sources = [];\n\t    /**\n\t\t * indicates whether browser supports MediaStreamTrack.getSources (i.e. Chrome vs Firefox)\n\t\t * @type {Boolean}\n\t\t * @private\n\t\t */\n\t    Tone.ExternalInput._canGetSources = !Tone.prototype.isUndef(window.MediaStreamTrack) && Tone.prototype.isFunction(MediaStreamTrack.getSources);\n\t    /**\n\t\t *  If getUserMedia is supported by the browser.\n\t\t *  @type  {Boolean}\n\t\t *  @memberOf Tone.ExternalInput#\n\t\t *  @name supported\n\t\t *  @static\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.ExternalInput, 'supported', {\n\t        get: function () {\n\t            return Tone.prototype.isFunction(navigator.getUserMedia);\n\t        }\n\t    });\n\t    /**\n\t\t *  Populates the source list. Invokes the callback with an array of \n\t\t *  possible audio sources.\n\t\t *  @param  {function=} callback Callback to be executed after populating list \n\t\t *  @return {Tone.ExternalInput} this\n\t\t *  @static\n\t\t *  @example\n\t\t * var soundflower = new Tone.ExternalInput();\n\t\t * Tone.ExternalInput.getSources(selectSoundflower);\n\t\t *\n\t\t * function selectSoundflower(sources){\n\t\t * \tfor(var i = 0; i < sources.length; i++){\n\t\t * \t\tif(sources[i].label === \"soundflower\"){\n\t\t * \t\t\tsoundflower.inputNum = i;\n\t\t * \t\t\tsoundflower.open(function(){\n\t\t * \t\t\t\tsoundflower.start();\n\t\t * \t\t\t});\n\t\t * \t\t\tbreak;\n\t\t * \t\t}\n\t\t * \t}\n\t\t * };\n\t\t */\n\t    Tone.ExternalInput.getSources = function (callback) {\n\t        if (Tone.ExternalInput.sources.length === 0 && Tone.ExternalInput._canGetSources) {\n\t            MediaStreamTrack.getSources(function (media_sources) {\n\t                for (var i = 0; i < media_sources.length; i++) {\n\t                    if (media_sources[i].kind === 'audio') {\n\t                        Tone.ExternalInput.sources[i] = media_sources[i];\n\t                    }\n\t                }\n\t                callback(Tone.ExternalInput.sources);\n\t            });\n\t        } else {\n\t            callback(Tone.ExternalInput.sources);\n\t        }\n\t        return this;\n\t    };\n\t    return Tone.ExternalInput;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.MultiPlayer is well suited for one-shots, multi-sampled istruments\n\t\t *         or any time you need to play a bunch of audio buffers. \n\t\t *  @param  {Object|Array|Tone.Buffers}  buffers  The buffers which are available\n\t\t *                                                to the MultiPlayer\n\t\t *  @param {Function} onload The callback to invoke when all of the buffers are loaded.\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * var multiPlayer = new MultiPlayer({\n\t\t * \t\"kick\" : \"path/to/kick.mp3\",\n\t\t * \t\"snare\" : \"path/to/snare.mp3\",\n\t\t * }, function(){\n\t\t * \tmultiPlayer.start(\"kick\");\n\t\t * });\n\t\t *  @example\n\t\t * //can also store the values in an array\n\t\t * var multiPlayer = new MultiPlayer([\"path/to/kick.mp3\", \"path/to/snare.mp3\"], \n\t\t * function(){\n\t\t * \t//if an array is passed in, the samples are referenced to by index\n\t\t * \tmultiPlayer.start(1);\n\t\t * });\n\t\t */\n\t    Tone.MultiPlayer = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'urls',\n\t            'onload'\n\t        ], Tone.MultiPlayer.defaults);\n\t        if (options.urls instanceof Tone.Buffers) {\n\t            /**\n\t\t\t\t *  All the buffers belonging to the player.\n\t\t\t\t *  @type  {Tone.Buffers}\n\t\t\t\t */\n\t            this.buffers = options.urls;\n\t        } else {\n\t            this.buffers = new Tone.Buffers(options.urls, options.onload);\n\t        }\n\t        /**\n\t\t\t *  Keeps track of the currently playing sources.\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._activeSources = [];\n\t        /**\n\t\t\t *  The fade in envelope which is applied\n\t\t\t *  to the beginning of the BufferSource\n\t\t\t *  @type  {Time}\n\t\t\t */\n\t        this.fadeIn = options.fadeIn;\n\t        /**\n\t\t\t *  The fade out envelope which is applied\n\t\t\t *  to the end of the BufferSource\n\t\t\t *  @type  {Time}\n\t\t\t */\n\t        this.fadeOut = options.fadeOut;\n\t        /**\n\t\t\t *  The output volume node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t * The volume of the output in decibels.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t * @example\n\t\t\t * source.volume.value = -6;\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        this._readOnly('volume');\n\t        //make the output explicitly stereo\n\t        this._volume.output.output.channelCount = 2;\n\t        this._volume.output.output.channelCountMode = 'explicit';\n\t        //mute initially\n\t        this.mute = options.mute;\n\t    };\n\t    Tone.extend(Tone.MultiPlayer, Tone.Source);\n\t    /**\n\t\t *  The defaults\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.MultiPlayer.defaults = {\n\t        'onload': Tone.noOp,\n\t        'fadeIn': 0,\n\t        'fadeOut': 0\n\t    };\n\t    /**\n\t\t *  Get the given buffer.\n\t\t *  @param  {String|Number|AudioBuffer|Tone.Buffer}  buffer\n\t\t *  @return  {AudioBuffer}  The requested buffer.\n\t\t *  @private\n\t\t */\n\t    Tone.MultiPlayer.prototype._getBuffer = function (buffer) {\n\t        if (this.isNumber(buffer) || this.isString(buffer)) {\n\t            return this.buffers.get(buffer).get();\n\t        } else if (buffer instanceof Tone.Buffer) {\n\t            return buffer.get();\n\t        } else {\n\t            return buffer;\n\t        }\n\t    };\n\t    /**\n\t\t *  Start a buffer by name. The `start` method allows a number of options\n\t\t *  to be passed in such as offset, interval, and gain. This is good for multi-sampled \n\t\t *  instruments and sound sprites where samples are repitched played back at different velocities.\n\t\t *  @param  {String|AudioBuffer}  buffer    The name of the buffer to start.\n\t\t *                                          Or pass in a buffer which will be started.\n\t\t *  @param  {Time}  time      When to start the buffer.\n\t\t *  @param  {Time}  [offset=0]    The offset into the buffer to play from.\n\t\t *  @param  {Time=}  duration   How long to play the buffer for.\n\t\t *  @param  {Interval}  [pitch=0]  The interval to repitch the buffer.\n\t\t *  @param  {Gain}  [gain=1]      The gain to play the sample at.\n\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t */\n\t    Tone.MultiPlayer.prototype.start = function (buffer, time, offset, duration, pitch, gain) {\n\t        buffer = this._getBuffer(buffer);\n\t        var source = new Tone.BufferSource(buffer).connect(this.output);\n\t        this._activeSources.push(source);\n\t        time = this.toSeconds(time);\n\t        source.start(time, offset, duration, this.defaultArg(gain, 1), this.fadeIn);\n\t        if (duration) {\n\t            source.stop(time + this.toSeconds(duration), this.fadeOut);\n\t        }\n\t        source.onended = this._onended.bind(this);\n\t        pitch = this.defaultArg(pitch, 0);\n\t        source.playbackRate.value = this.intervalToFrequencyRatio(pitch);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start a looping buffer by name. Similar to `start`, but the buffer\n\t\t *  is looped instead of played straight through. Can still be stopped with `stop`. \n\t\t *  @param  {String|AudioBuffer}  buffer    The name of the buffer to start.\n\t\t *                                          Or pass in a buffer which will be started.\n\t\t *  @param  {Time}  time      When to start the buffer.\n\t\t *  @param  {Time}  [offset=0]    The offset into the buffer to play from.\n\t\t *  @param  {Time=}  loopStart   The start of the loop.\n\t\t *  @param  {Time=}  loopEnd\tThe end of the loop.\n\t\t *  @param  {Interval}  [pitch=0]  The interval to repitch the buffer.\n\t\t *  @param  {Gain}  [gain=1]      The gain to play the sample at.\n\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t */\n\t    Tone.MultiPlayer.prototype.startLoop = function (buffer, time, offset, loopStart, loopEnd, pitch, gain) {\n\t        buffer = this._getBuffer(buffer);\n\t        var source = new Tone.BufferSource(buffer).connect(this.output);\n\t        this._activeSources.push(source);\n\t        time = this.toSeconds(time);\n\t        source.loop = true;\n\t        source.loopStart = this.toSeconds(this.defaultArg(loopStart, 0));\n\t        source.loopEnd = this.toSeconds(this.defaultArg(loopEnd, 0));\n\t        source.start(time, offset, undefined, this.defaultArg(gain, 1), this.fadeIn);\n\t        source.onended = this._onended.bind(this);\n\t        pitch = this.defaultArg(pitch, 0);\n\t        source.playbackRate.value = this.intervalToFrequencyRatio(pitch);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Internal callback when a buffer is done playing.\n\t\t *  @param  {Tone.BufferSource}  source  The stopped source\n\t\t *  @private\n\t\t */\n\t    Tone.MultiPlayer.prototype._onended = function (source) {\n\t        var index = this._activeSources.indexOf(source);\n\t        this._activeSources.splice(index, 1);\n\t    };\n\t    /**\n\t\t *  Stop all instances of the currently playing buffer at the given time.\n\t\t *  @param  {String|AudioBuffer}  buffer  The buffer to stop.\n\t\t *  @param  {Time=}  time    When to stop the buffer\n\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t */\n\t    Tone.MultiPlayer.prototype.stop = function (buffer, time) {\n\t        buffer = this._getBuffer(buffer);\n\t        time = this.toSeconds(time);\n\t        for (var i = 0; i < this._activeSources.length; i++) {\n\t            if (this._activeSources[i].buffer === buffer) {\n\t                this._activeSources[i].stop(time, this.fadeOut);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop all currently playing buffers at the given time.\n\t\t *  @param  {Time=}  time  When to stop the buffers.\n\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t */\n\t    Tone.MultiPlayer.prototype.stopAll = function (time) {\n\t        time = this.toSeconds(time);\n\t        for (var i = 0; i < this._activeSources.length; i++) {\n\t            this._activeSources[i].stop(time, this.fadeOut);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Add another buffer to the available buffers.\n\t\t *  @param {String} name The name to that the buffer is refered\n\t\t *                       to in start/stop methods. \n\t\t *  @param {String|Tone.Buffer} url The url of the buffer to load\n\t\t *                                  or the buffer.\n\t\t *  @param {Function} callback The function to invoke after the buffer is loaded.\n\t\t */\n\t    Tone.MultiPlayer.prototype.add = function (name, url, callback) {\n\t        this.buffers.add(name, url, callback);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source. \"started\"\n\t\t *  if there are any buffers playing. \"stopped\" otherwise.\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.MultiPlayer#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.MultiPlayer.prototype, 'state', {\n\t        get: function () {\n\t            return this._activeSources.length > 0 ? Tone.State.Started : Tone.State.Stopped;\n\t        }\n\t    });\n\t    /**\n\t\t * Mute the output. \n\t\t * @memberOf Tone.MultiPlayer#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * source.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.MultiPlayer.prototype, 'mute', {\n\t        get: function () {\n\t            return this._volume.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._volume.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t */\n\t    Tone.MultiPlayer.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this._writable('volume');\n\t        this.volume = null;\n\t        this.buffers.dispose();\n\t        this.buffers = null;\n\t        for (var i = 0; i < this._activeSources.length; i++) {\n\t            this._activeSources[i].dispose();\n\t        }\n\t        this._activeSources = null;\n\t        return this;\n\t    };\n\t    return Tone.MultiPlayer;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t * @class Tone.GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).\n\t\t *        Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the \n\t\t *        amount of time each small chunk of audio is played for and the overlap is the \n\t\t *        amount of crossfading transition time between successive grains.\n\t\t * @extends {Tone}\n\t\t * @param {String|Tone.Buffer} url\tThe url to load, or the Tone.Buffer to play.\n\t\t * @param {Function=} callback The callback to invoke after the url is loaded.\n\t\t */\n\t    Tone.GrainPlayer = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'url',\n\t            'onload'\n\t        ], Tone.GrainPlayer.defaults);\n\t        Tone.Source.call(this);\n\t        /**\n\t\t\t *  The audio buffer belonging to the player.\n\t\t\t *  @type  {Tone.Buffer}\n\t\t\t */\n\t        this.buffer = new Tone.Buffer(options.url, options.onload);\n\t        /**\n\t\t\t *  Plays the buffer with a small envelope\n\t\t\t *  @type  {Tone.MultiPlayer}\n\t\t\t *  @private\n\t\t\t */\n\t        this._player = this.output = new Tone.MultiPlayer();\n\t        /**\n\t\t\t *  Create a repeating tick to schedule\n\t\t\t *  the grains.\n\t\t\t *  @type  {Tone.Clock}\n\t\t\t *  @private\n\t\t\t */\n\t        this._clock = new Tone.Clock(this._tick.bind(this), 1);\n\t        /**\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopStart = 0;\n\t        /**\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopEnd = 0;\n\t        /**\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._playbackRate = options.playbackRate;\n\t        /**\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._grainSize = options.grainSize;\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {Number}\n\t\t\t */\n\t        this._overlap = options.overlap;\n\t        /**\n\t\t\t *  Adjust the pitch independently of the playbackRate.\n\t\t\t *  @type  {Cents}\n\t\t\t */\n\t        this.detune = options.detune;\n\t        /**\n\t\t\t *  The amount of time randomly added\n\t\t\t *  or subtracted from the grain's offset\n\t\t\t *  @type  {Time}\n\t\t\t */\n\t        this.drift = options.drift;\n\t        //setup\n\t        this.overlap = options.overlap;\n\t        this.loop = options.loop;\n\t        this.playbackRate = options.playbackRate;\n\t        this.grainSize = options.grainSize;\n\t        this.loopStart = options.loopStart;\n\t        this.loopEnd = options.loopEnd;\n\t        this.reverse = options.reverse;\n\t    };\n\t    Tone.extend(Tone.GrainPlayer, Tone.Source);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.GrainPlayer.defaults = {\n\t        'onload': Tone.noOp,\n\t        'overlap': 0.1,\n\t        'grainSize': 0.2,\n\t        'drift': 0,\n\t        'playbackRate': 1,\n\t        'detune': 0,\n\t        'loop': false,\n\t        'loopStart': 0,\n\t        'loopEnd': 0,\n\t        'reverse': false\n\t    };\n\t    /**\n\t\t *  Play the buffer at the given startTime. Optionally add an offset\n\t\t *  from the start of the buffer to play from.\n\t\t *  \n\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t *                                 to start at. \n\t\t * @return {Tone.GrainPlayer} this\n\t\t */\n\t    /**\n\t\t *  Internal start method\n\t\t *  @param {Time} time\n\t\t *  @param {Time} offset\n\t\t *  @private\n\t\t */\n\t    Tone.GrainPlayer.prototype._start = function (time, offset) {\n\t        offset = this.defaultArg(offset, 0);\n\t        offset = this.toSeconds(offset);\n\t        time = this.toSeconds(time);\n\t        this._offset = offset;\n\t        this._clock.start(time);\n\t    };\n\t    /**\n\t\t *  Internal start method\n\t\t *  @param {Time} time\n\t\t *  @private\n\t\t */\n\t    Tone.GrainPlayer.prototype._stop = function (time) {\n\t        this._clock.stop(time);\n\t        this._player.stop(this.buffer, time);\n\t        this._offset = 0;\n\t    };\n\t    /**\n\t\t *  Invoked on each clock tick. scheduled a new\n\t\t *  grain at this time.\n\t\t *  @param  {Time}  time \n\t\t *  @private\n\t\t */\n\t    Tone.GrainPlayer.prototype._tick = function (time) {\n\t        var bufferDuration = this.buffer.duration;\n\t        if (this.loop && this._loopEnd > 0) {\n\t            bufferDuration = this._loopEnd;\n\t        }\n\t        var drift = (Math.random() * 2 - 1) * this.drift;\n\t        var offset = this._offset - this._overlap + drift;\n\t        var detune = this.detune / 100;\n\t        var originalFadeIn = this._player.fadeIn;\n\t        if (this.loop && this._offset > bufferDuration) {\n\t            //play the end\n\t            var endSegmentDuration = this._offset - bufferDuration;\n\t            this._player.start(this.buffer, time, offset, endSegmentDuration + this._overlap, detune);\n\t            //and play the beginning \n\t            offset = this._offset % bufferDuration;\n\t            this._offset = this._loopStart;\n\t            this._player.fadeIn = 0;\n\t            this._player.start(this.buffer, time + endSegmentDuration, this._offset, offset + this._overlap, detune);\n\t        } else if (this._offset > bufferDuration) {\n\t            //set the state to stopped. \n\t            this.stop(time);\n\t        } else {\n\t            if (offset < 0) {\n\t                this._player.fadeIn = Math.max(this._player.fadeIn + offset, 0);\n\t                offset = 0;\n\t            }\n\t            this._player.start(this.buffer, time, offset, this.grainSize + this._overlap, detune);\n\t        }\n\t        this._player.fadeIn = originalFadeIn;\n\t        //increment the offset\n\t        var duration = this._clock._nextTick - time;\n\t        this._offset += duration * this._playbackRate;\n\t    };\n\t    /**\n\t\t *  Jump to a specific time and play it.\n\t\t *  @param  {Time}  offset  The offset to jump to.\n\t\t *  @param {Time=} time When to make the jump.\n\t\t *  @return  {[type]}  [description]\n\t\t */\n\t    Tone.GrainPlayer.prototype.scrub = function (offset, time) {\n\t        this._offset = this.toSeconds(offset);\n\t        this._tick(this.toSeconds(time));\n\t        return this;\n\t    };\n\t    /**\n\t\t * The playback rate of the sample\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Positive}\n\t\t * @name playbackRate\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            this.grainSize = this._grainSize;\n\t        }\n\t    });\n\t    /**\n\t\t * The loop start time. \n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Time}\n\t\t * @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'loopStart', {\n\t        get: function () {\n\t            return this._loopStart;\n\t        },\n\t        set: function (time) {\n\t            this._loopStart = this.toSeconds(time);\n\t        }\n\t    });\n\t    /**\n\t\t * The loop end time. \n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Time}\n\t\t * @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return this._loopEnd;\n\t        },\n\t        set: function (time) {\n\t            this._loopEnd = this.toSeconds(time);\n\t        }\n\t    });\n\t    /**\n\t\t * The direction the buffer should play in\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {boolean}\n\t\t * @name reverse\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'reverse', {\n\t        get: function () {\n\t            return this.buffer.reverse;\n\t        },\n\t        set: function (rev) {\n\t            this.buffer.reverse = rev;\n\t        }\n\t    });\n\t    /**\n\t\t * The size of each chunk of audio that the \n\t\t * buffer is chopped into and played back at.\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Time}\n\t\t * @name grainSize\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'grainSize', {\n\t        get: function () {\n\t            return this._grainSize;\n\t        },\n\t        set: function (size) {\n\t            this._grainSize = this.toSeconds(size);\n\t            this._clock.frequency.value = this._playbackRate / this._grainSize;\n\t        }\n\t    });\n\t    /**\n\t\t * This is the duration of the cross-fade between \n\t\t * sucessive grains.\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Time}\n\t\t * @name overlap\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'overlap', {\n\t        get: function () {\n\t            return this._overlap;\n\t        },\n\t        set: function (time) {\n\t            time = this.toSeconds(time);\n\t            this._overlap = time;\n\t            if (this._overlap < 0) {\n\t                this._player.fadeIn = 0.01;\n\t                this._player.fadeOut = 0.01;\n\t            } else {\n\t                this._player.fadeIn = time;\n\t                this._player.fadeOut = time;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * Clean up\n\t\t * @return {Tone.GrainPlayer} this\n\t\t */\n\t    Tone.GrainPlayer.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this.buffer.dispose();\n\t        this.buffer = null;\n\t        this._player.dispose();\n\t        this._player = null;\n\t        this._clock.dispose();\n\t        this._clock = null;\n\t        return this;\n\t    };\n\t    return Tone.GrainPlayer;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Opens up the default source (typically the microphone).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.ExternalInput}\n\t\t *  @example\n\t\t *  //mic will feedback if played through master\n\t\t *  var mic = new Tone.Microphone();\n\t\t *  mic.open(function(){\n\t\t *  \t//start the mic at ten seconds\n\t\t *  \tmic.start(10);\n\t\t *  });\n\t\t *  //stop the mic\n\t\t *  mic.stop(20);\n\t\t */\n\t    Tone.Microphone = function () {\n\t        Tone.ExternalInput.call(this, 0);\n\t    };\n\t    Tone.extend(Tone.Microphone, Tone.ExternalInput);\n\t    /**\n\t\t *  If getUserMedia is supported by the browser.\n\t\t *  @type  {Boolean}\n\t\t *  @memberOf Tone.Microphone#\n\t\t *  @name supported\n\t\t *  @static\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Microphone, 'supported', {\n\t        get: function () {\n\t            return Tone.ExternalInput.supported;\n\t        }\n\t    });\n\t    return Tone.Microphone;\n\t});\n\t\n\treturn Tone;\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/tone/build/Tone.js\n ** module id = 175\n ** module chunks = 0\n **/"],"sourceRoot":""}